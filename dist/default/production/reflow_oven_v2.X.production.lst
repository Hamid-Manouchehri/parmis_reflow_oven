

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 24 13:39:48 2023

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,delta=2,group=1
    95                           	psect	text77,local,class=CODE,merge=1,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text79,local,class=CODE,merge=1,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,delta=2
    99                           	psect	intentry,global,class=CODE,delta=2
   100                           	psect	text82,local,class=CODE,merge=1,delta=2
   101                           	psect	text83,local,class=CODE,merge=1,delta=2
   102                           	psect	text84,local,class=CODE,merge=1,delta=2
   103                           	psect	text85,local,class=CODE,merge=1,delta=2
   104                           	psect	text86,local,class=CODE,merge=1,delta=2
   105                           	psect	text87,local,class=CODE,merge=1,delta=2
   106                           	psect	text88,local,class=CODE,merge=1,delta=2
   107                           	psect	text89,local,class=CODE,merge=1,delta=2
   108                           	psect	text90,local,class=CODE,merge=1,delta=2
   109                           	psect	text91,local,class=CODE,merge=1,delta=2
   110                           	psect	text92,local,class=CODE,merge=1,delta=2
   111                           	psect	text93,local,class=CODE,merge=1,delta=2
   112                           	psect	text94,local,class=CODE,merge=1,delta=2
   113                           	psect	text95,local,class=CODE,merge=1,delta=2
   114                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   115                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   116                           	dabs	1,0x7E,2
   117  0000                     
   118                           ; Version 2.40
   119                           ; Generated 17/11/2021 GMT
   120                           ; 
   121                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   122                           ; All rights reserved.
   123                           ; 
   124                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   125                           ; 
   126                           ; Redistribution and use in source and binary forms, with or without modification, are
   127                           ; permitted provided that the following conditions are met:
   128                           ; 
   129                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   130                           ;        conditions and the following disclaimer.
   131                           ; 
   132                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   133                           ;        of conditions and the following disclaimer in the documentation and/or other
   134                           ;        materials provided with the distribution. Publication is not required when
   135                           ;        this file is used in an embedded application.
   136                           ; 
   137                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   138                           ;        software without specific prior written permission.
   139                           ; 
   140                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   141                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   142                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   143                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   144                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   145                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   146                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   147                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   148                           ; 
   149                           ; 
   150                           ; Code-generator required, PIC16F1829 Definitions
   151                           ; 
   152                           ; SFR Addresses
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  0111                     	;# 
   205  0112                     	;# 
   206  0113                     	;# 
   207  0114                     	;# 
   208  0115                     	;# 
   209  0116                     	;# 
   210  0117                     	;# 
   211  0118                     	;# 
   212  0119                     	;# 
   213  011A                     	;# 
   214  011B                     	;# 
   215  011D                     	;# 
   216  011E                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  018E                     	;# 
   220  0191                     	;# 
   221  0191                     	;# 
   222  0192                     	;# 
   223  0193                     	;# 
   224  0193                     	;# 
   225  0193                     	;# 
   226  0194                     	;# 
   227  0195                     	;# 
   228  0196                     	;# 
   229  0199                     	;# 
   230  019A                     	;# 
   231  019B                     	;# 
   232  019B                     	;# 
   233  019C                     	;# 
   234  019D                     	;# 
   235  019E                     	;# 
   236  019F                     	;# 
   237  020C                     	;# 
   238  020D                     	;# 
   239  020E                     	;# 
   240  0211                     	;# 
   241  0211                     	;# 
   242  0212                     	;# 
   243  0212                     	;# 
   244  0213                     	;# 
   245  0213                     	;# 
   246  0214                     	;# 
   247  0214                     	;# 
   248  0215                     	;# 
   249  0215                     	;# 
   250  0215                     	;# 
   251  0216                     	;# 
   252  0216                     	;# 
   253  0217                     	;# 
   254  0217                     	;# 
   255  0219                     	;# 
   256  021A                     	;# 
   257  021B                     	;# 
   258  021C                     	;# 
   259  021D                     	;# 
   260  021E                     	;# 
   261  021F                     	;# 
   262  0291                     	;# 
   263  0291                     	;# 
   264  0292                     	;# 
   265  0293                     	;# 
   266  0294                     	;# 
   267  0295                     	;# 
   268  0295                     	;# 
   269  0296                     	;# 
   270  0298                     	;# 
   271  0298                     	;# 
   272  0299                     	;# 
   273  029A                     	;# 
   274  029B                     	;# 
   275  029C                     	;# 
   276  029D                     	;# 
   277  029E                     	;# 
   278  0311                     	;# 
   279  0311                     	;# 
   280  0312                     	;# 
   281  0313                     	;# 
   282  0318                     	;# 
   283  0318                     	;# 
   284  0319                     	;# 
   285  031A                     	;# 
   286  038C                     	;# 
   287  038D                     	;# 
   288  038E                     	;# 
   289  0391                     	;# 
   290  0392                     	;# 
   291  0393                     	;# 
   292  0394                     	;# 
   293  0395                     	;# 
   294  0396                     	;# 
   295  039A                     	;# 
   296  039C                     	;# 
   297  039D                     	;# 
   298  039E                     	;# 
   299  039F                     	;# 
   300  0415                     	;# 
   301  0416                     	;# 
   302  0417                     	;# 
   303  041C                     	;# 
   304  041D                     	;# 
   305  041E                     	;# 
   306  0FE4                     	;# 
   307  0FE5                     	;# 
   308  0FE6                     	;# 
   309  0FE7                     	;# 
   310  0FE8                     	;# 
   311  0FE9                     	;# 
   312  0FEA                     	;# 
   313  0FEB                     	;# 
   314  0FED                     	;# 
   315  0FEE                     	;# 
   316  0FEF                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  0008                     	;# 
   326  0009                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000D                     	;# 
   331  000E                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  0111                     	;# 
   369  0112                     	;# 
   370  0113                     	;# 
   371  0114                     	;# 
   372  0115                     	;# 
   373  0116                     	;# 
   374  0117                     	;# 
   375  0118                     	;# 
   376  0119                     	;# 
   377  011A                     	;# 
   378  011B                     	;# 
   379  011D                     	;# 
   380  011E                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  018E                     	;# 
   384  0191                     	;# 
   385  0191                     	;# 
   386  0192                     	;# 
   387  0193                     	;# 
   388  0193                     	;# 
   389  0193                     	;# 
   390  0194                     	;# 
   391  0195                     	;# 
   392  0196                     	;# 
   393  0199                     	;# 
   394  019A                     	;# 
   395  019B                     	;# 
   396  019B                     	;# 
   397  019C                     	;# 
   398  019D                     	;# 
   399  019E                     	;# 
   400  019F                     	;# 
   401  020C                     	;# 
   402  020D                     	;# 
   403  020E                     	;# 
   404  0211                     	;# 
   405  0211                     	;# 
   406  0212                     	;# 
   407  0212                     	;# 
   408  0213                     	;# 
   409  0213                     	;# 
   410  0214                     	;# 
   411  0214                     	;# 
   412  0215                     	;# 
   413  0215                     	;# 
   414  0215                     	;# 
   415  0216                     	;# 
   416  0216                     	;# 
   417  0217                     	;# 
   418  0217                     	;# 
   419  0219                     	;# 
   420  021A                     	;# 
   421  021B                     	;# 
   422  021C                     	;# 
   423  021D                     	;# 
   424  021E                     	;# 
   425  021F                     	;# 
   426  0291                     	;# 
   427  0291                     	;# 
   428  0292                     	;# 
   429  0293                     	;# 
   430  0294                     	;# 
   431  0295                     	;# 
   432  0295                     	;# 
   433  0296                     	;# 
   434  0298                     	;# 
   435  0298                     	;# 
   436  0299                     	;# 
   437  029A                     	;# 
   438  029B                     	;# 
   439  029C                     	;# 
   440  029D                     	;# 
   441  029E                     	;# 
   442  0311                     	;# 
   443  0311                     	;# 
   444  0312                     	;# 
   445  0313                     	;# 
   446  0318                     	;# 
   447  0318                     	;# 
   448  0319                     	;# 
   449  031A                     	;# 
   450  038C                     	;# 
   451  038D                     	;# 
   452  038E                     	;# 
   453  0391                     	;# 
   454  0392                     	;# 
   455  0393                     	;# 
   456  0394                     	;# 
   457  0395                     	;# 
   458  0396                     	;# 
   459  039A                     	;# 
   460  039C                     	;# 
   461  039D                     	;# 
   462  039E                     	;# 
   463  039F                     	;# 
   464  0415                     	;# 
   465  0416                     	;# 
   466  0417                     	;# 
   467  041C                     	;# 
   468  041D                     	;# 
   469  041E                     	;# 
   470  0FE4                     	;# 
   471  0FE5                     	;# 
   472  0FE6                     	;# 
   473  0FE7                     	;# 
   474  0FE8                     	;# 
   475  0FE9                     	;# 
   476  0FEA                     	;# 
   477  0FEB                     	;# 
   478  0FED                     	;# 
   479  0FEE                     	;# 
   480  0FEF                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  0011                     	;# 
   497  0012                     	;# 
   498  0013                     	;# 
   499  0014                     	;# 
   500  0015                     	;# 
   501  0016                     	;# 
   502  0016                     	;# 
   503  0017                     	;# 
   504  0018                     	;# 
   505  0019                     	;# 
   506  001A                     	;# 
   507  001B                     	;# 
   508  001C                     	;# 
   509  001E                     	;# 
   510  001F                     	;# 
   511  008C                     	;# 
   512  008D                     	;# 
   513  008E                     	;# 
   514  0091                     	;# 
   515  0092                     	;# 
   516  0093                     	;# 
   517  0094                     	;# 
   518  0095                     	;# 
   519  0096                     	;# 
   520  0097                     	;# 
   521  0098                     	;# 
   522  0099                     	;# 
   523  009A                     	;# 
   524  009B                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  010C                     	;# 
   530  010D                     	;# 
   531  010E                     	;# 
   532  0111                     	;# 
   533  0112                     	;# 
   534  0113                     	;# 
   535  0114                     	;# 
   536  0115                     	;# 
   537  0116                     	;# 
   538  0117                     	;# 
   539  0118                     	;# 
   540  0119                     	;# 
   541  011A                     	;# 
   542  011B                     	;# 
   543  011D                     	;# 
   544  011E                     	;# 
   545  018C                     	;# 
   546  018D                     	;# 
   547  018E                     	;# 
   548  0191                     	;# 
   549  0191                     	;# 
   550  0192                     	;# 
   551  0193                     	;# 
   552  0193                     	;# 
   553  0193                     	;# 
   554  0194                     	;# 
   555  0195                     	;# 
   556  0196                     	;# 
   557  0199                     	;# 
   558  019A                     	;# 
   559  019B                     	;# 
   560  019B                     	;# 
   561  019C                     	;# 
   562  019D                     	;# 
   563  019E                     	;# 
   564  019F                     	;# 
   565  020C                     	;# 
   566  020D                     	;# 
   567  020E                     	;# 
   568  0211                     	;# 
   569  0211                     	;# 
   570  0212                     	;# 
   571  0212                     	;# 
   572  0213                     	;# 
   573  0213                     	;# 
   574  0214                     	;# 
   575  0214                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0215                     	;# 
   579  0216                     	;# 
   580  0216                     	;# 
   581  0217                     	;# 
   582  0217                     	;# 
   583  0219                     	;# 
   584  021A                     	;# 
   585  021B                     	;# 
   586  021C                     	;# 
   587  021D                     	;# 
   588  021E                     	;# 
   589  021F                     	;# 
   590  0291                     	;# 
   591  0291                     	;# 
   592  0292                     	;# 
   593  0293                     	;# 
   594  0294                     	;# 
   595  0295                     	;# 
   596  0295                     	;# 
   597  0296                     	;# 
   598  0298                     	;# 
   599  0298                     	;# 
   600  0299                     	;# 
   601  029A                     	;# 
   602  029B                     	;# 
   603  029C                     	;# 
   604  029D                     	;# 
   605  029E                     	;# 
   606  0311                     	;# 
   607  0311                     	;# 
   608  0312                     	;# 
   609  0313                     	;# 
   610  0318                     	;# 
   611  0318                     	;# 
   612  0319                     	;# 
   613  031A                     	;# 
   614  038C                     	;# 
   615  038D                     	;# 
   616  038E                     	;# 
   617  0391                     	;# 
   618  0392                     	;# 
   619  0393                     	;# 
   620  0394                     	;# 
   621  0395                     	;# 
   622  0396                     	;# 
   623  039A                     	;# 
   624  039C                     	;# 
   625  039D                     	;# 
   626  039E                     	;# 
   627  039F                     	;# 
   628  0415                     	;# 
   629  0416                     	;# 
   630  0417                     	;# 
   631  041C                     	;# 
   632  041D                     	;# 
   633  041E                     	;# 
   634  0FE4                     	;# 
   635  0FE5                     	;# 
   636  0FE6                     	;# 
   637  0FE7                     	;# 
   638  0FE8                     	;# 
   639  0FE9                     	;# 
   640  0FEA                     	;# 
   641  0FEB                     	;# 
   642  0FED                     	;# 
   643  0FEE                     	;# 
   644  0FEF                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0008                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001E                     	;# 
   674  001F                     	;# 
   675  008C                     	;# 
   676  008D                     	;# 
   677  008E                     	;# 
   678  0091                     	;# 
   679  0092                     	;# 
   680  0093                     	;# 
   681  0094                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0097                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009A                     	;# 
   688  009B                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  010C                     	;# 
   694  010D                     	;# 
   695  010E                     	;# 
   696  0111                     	;# 
   697  0112                     	;# 
   698  0113                     	;# 
   699  0114                     	;# 
   700  0115                     	;# 
   701  0116                     	;# 
   702  0117                     	;# 
   703  0118                     	;# 
   704  0119                     	;# 
   705  011A                     	;# 
   706  011B                     	;# 
   707  011D                     	;# 
   708  011E                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  018E                     	;# 
   712  0191                     	;# 
   713  0191                     	;# 
   714  0192                     	;# 
   715  0193                     	;# 
   716  0193                     	;# 
   717  0193                     	;# 
   718  0194                     	;# 
   719  0195                     	;# 
   720  0196                     	;# 
   721  0199                     	;# 
   722  019A                     	;# 
   723  019B                     	;# 
   724  019B                     	;# 
   725  019C                     	;# 
   726  019D                     	;# 
   727  019E                     	;# 
   728  019F                     	;# 
   729  020C                     	;# 
   730  020D                     	;# 
   731  020E                     	;# 
   732  0211                     	;# 
   733  0211                     	;# 
   734  0212                     	;# 
   735  0212                     	;# 
   736  0213                     	;# 
   737  0213                     	;# 
   738  0214                     	;# 
   739  0214                     	;# 
   740  0215                     	;# 
   741  0215                     	;# 
   742  0215                     	;# 
   743  0216                     	;# 
   744  0216                     	;# 
   745  0217                     	;# 
   746  0217                     	;# 
   747  0219                     	;# 
   748  021A                     	;# 
   749  021B                     	;# 
   750  021C                     	;# 
   751  021D                     	;# 
   752  021E                     	;# 
   753  021F                     	;# 
   754  0291                     	;# 
   755  0291                     	;# 
   756  0292                     	;# 
   757  0293                     	;# 
   758  0294                     	;# 
   759  0295                     	;# 
   760  0295                     	;# 
   761  0296                     	;# 
   762  0298                     	;# 
   763  0298                     	;# 
   764  0299                     	;# 
   765  029A                     	;# 
   766  029B                     	;# 
   767  029C                     	;# 
   768  029D                     	;# 
   769  029E                     	;# 
   770  0311                     	;# 
   771  0311                     	;# 
   772  0312                     	;# 
   773  0313                     	;# 
   774  0318                     	;# 
   775  0318                     	;# 
   776  0319                     	;# 
   777  031A                     	;# 
   778  038C                     	;# 
   779  038D                     	;# 
   780  038E                     	;# 
   781  0391                     	;# 
   782  0392                     	;# 
   783  0393                     	;# 
   784  0394                     	;# 
   785  0395                     	;# 
   786  0396                     	;# 
   787  039A                     	;# 
   788  039C                     	;# 
   789  039D                     	;# 
   790  039E                     	;# 
   791  039F                     	;# 
   792  0415                     	;# 
   793  0416                     	;# 
   794  0417                     	;# 
   795  041C                     	;# 
   796  041D                     	;# 
   797  041E                     	;# 
   798  0FE4                     	;# 
   799  0FE5                     	;# 
   800  0FE6                     	;# 
   801  0FE7                     	;# 
   802  0FE8                     	;# 
   803  0FE9                     	;# 
   804  0FEA                     	;# 
   805  0FEB                     	;# 
   806  0FED                     	;# 
   807  0FEE                     	;# 
   808  0FEF                     	;# 
   809  0000                     	;# 
   810  0001                     	;# 
   811  0002                     	;# 
   812  0003                     	;# 
   813  0004                     	;# 
   814  0005                     	;# 
   815  0006                     	;# 
   816  0007                     	;# 
   817  0008                     	;# 
   818  0009                     	;# 
   819  000A                     	;# 
   820  000B                     	;# 
   821  000C                     	;# 
   822  000D                     	;# 
   823  000E                     	;# 
   824  0011                     	;# 
   825  0012                     	;# 
   826  0013                     	;# 
   827  0014                     	;# 
   828  0015                     	;# 
   829  0016                     	;# 
   830  0016                     	;# 
   831  0017                     	;# 
   832  0018                     	;# 
   833  0019                     	;# 
   834  001A                     	;# 
   835  001B                     	;# 
   836  001C                     	;# 
   837  001E                     	;# 
   838  001F                     	;# 
   839  008C                     	;# 
   840  008D                     	;# 
   841  008E                     	;# 
   842  0091                     	;# 
   843  0092                     	;# 
   844  0093                     	;# 
   845  0094                     	;# 
   846  0095                     	;# 
   847  0096                     	;# 
   848  0097                     	;# 
   849  0098                     	;# 
   850  0099                     	;# 
   851  009A                     	;# 
   852  009B                     	;# 
   853  009B                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  010C                     	;# 
   858  010D                     	;# 
   859  010E                     	;# 
   860  0111                     	;# 
   861  0112                     	;# 
   862  0113                     	;# 
   863  0114                     	;# 
   864  0115                     	;# 
   865  0116                     	;# 
   866  0117                     	;# 
   867  0118                     	;# 
   868  0119                     	;# 
   869  011A                     	;# 
   870  011B                     	;# 
   871  011D                     	;# 
   872  011E                     	;# 
   873  018C                     	;# 
   874  018D                     	;# 
   875  018E                     	;# 
   876  0191                     	;# 
   877  0191                     	;# 
   878  0192                     	;# 
   879  0193                     	;# 
   880  0193                     	;# 
   881  0193                     	;# 
   882  0194                     	;# 
   883  0195                     	;# 
   884  0196                     	;# 
   885  0199                     	;# 
   886  019A                     	;# 
   887  019B                     	;# 
   888  019B                     	;# 
   889  019C                     	;# 
   890  019D                     	;# 
   891  019E                     	;# 
   892  019F                     	;# 
   893  020C                     	;# 
   894  020D                     	;# 
   895  020E                     	;# 
   896  0211                     	;# 
   897  0211                     	;# 
   898  0212                     	;# 
   899  0212                     	;# 
   900  0213                     	;# 
   901  0213                     	;# 
   902  0214                     	;# 
   903  0214                     	;# 
   904  0215                     	;# 
   905  0215                     	;# 
   906  0215                     	;# 
   907  0216                     	;# 
   908  0216                     	;# 
   909  0217                     	;# 
   910  0217                     	;# 
   911  0219                     	;# 
   912  021A                     	;# 
   913  021B                     	;# 
   914  021C                     	;# 
   915  021D                     	;# 
   916  021E                     	;# 
   917  021F                     	;# 
   918  0291                     	;# 
   919  0291                     	;# 
   920  0292                     	;# 
   921  0293                     	;# 
   922  0294                     	;# 
   923  0295                     	;# 
   924  0295                     	;# 
   925  0296                     	;# 
   926  0298                     	;# 
   927  0298                     	;# 
   928  0299                     	;# 
   929  029A                     	;# 
   930  029B                     	;# 
   931  029C                     	;# 
   932  029D                     	;# 
   933  029E                     	;# 
   934  0311                     	;# 
   935  0311                     	;# 
   936  0312                     	;# 
   937  0313                     	;# 
   938  0318                     	;# 
   939  0318                     	;# 
   940  0319                     	;# 
   941  031A                     	;# 
   942  038C                     	;# 
   943  038D                     	;# 
   944  038E                     	;# 
   945  0391                     	;# 
   946  0392                     	;# 
   947  0393                     	;# 
   948  0394                     	;# 
   949  0395                     	;# 
   950  0396                     	;# 
   951  039A                     	;# 
   952  039C                     	;# 
   953  039D                     	;# 
   954  039E                     	;# 
   955  039F                     	;# 
   956  0415                     	;# 
   957  0416                     	;# 
   958  0417                     	;# 
   959  041C                     	;# 
   960  041D                     	;# 
   961  041E                     	;# 
   962  0FE4                     	;# 
   963  0FE5                     	;# 
   964  0FE6                     	;# 
   965  0FE7                     	;# 
   966  0FE8                     	;# 
   967  0FE9                     	;# 
   968  0FEA                     	;# 
   969  0FEB                     	;# 
   970  0FED                     	;# 
   971  0FEE                     	;# 
   972  0FEF                     	;# 
   973  0000                     	;# 
   974  0001                     	;# 
   975  0002                     	;# 
   976  0003                     	;# 
   977  0004                     	;# 
   978  0005                     	;# 
   979  0006                     	;# 
   980  0007                     	;# 
   981  0008                     	;# 
   982  0009                     	;# 
   983  000A                     	;# 
   984  000B                     	;# 
   985  000C                     	;# 
   986  000D                     	;# 
   987  000E                     	;# 
   988  0011                     	;# 
   989  0012                     	;# 
   990  0013                     	;# 
   991  0014                     	;# 
   992  0015                     	;# 
   993  0016                     	;# 
   994  0016                     	;# 
   995  0017                     	;# 
   996  0018                     	;# 
   997  0019                     	;# 
   998  001A                     	;# 
   999  001B                     	;# 
  1000  001C                     	;# 
  1001  001E                     	;# 
  1002  001F                     	;# 
  1003  008C                     	;# 
  1004  008D                     	;# 
  1005  008E                     	;# 
  1006  0091                     	;# 
  1007  0092                     	;# 
  1008  0093                     	;# 
  1009  0094                     	;# 
  1010  0095                     	;# 
  1011  0096                     	;# 
  1012  0097                     	;# 
  1013  0098                     	;# 
  1014  0099                     	;# 
  1015  009A                     	;# 
  1016  009B                     	;# 
  1017  009B                     	;# 
  1018  009C                     	;# 
  1019  009D                     	;# 
  1020  009E                     	;# 
  1021  010C                     	;# 
  1022  010D                     	;# 
  1023  010E                     	;# 
  1024  0111                     	;# 
  1025  0112                     	;# 
  1026  0113                     	;# 
  1027  0114                     	;# 
  1028  0115                     	;# 
  1029  0116                     	;# 
  1030  0117                     	;# 
  1031  0118                     	;# 
  1032  0119                     	;# 
  1033  011A                     	;# 
  1034  011B                     	;# 
  1035  011D                     	;# 
  1036  011E                     	;# 
  1037  018C                     	;# 
  1038  018D                     	;# 
  1039  018E                     	;# 
  1040  0191                     	;# 
  1041  0191                     	;# 
  1042  0192                     	;# 
  1043  0193                     	;# 
  1044  0193                     	;# 
  1045  0193                     	;# 
  1046  0194                     	;# 
  1047  0195                     	;# 
  1048  0196                     	;# 
  1049  0199                     	;# 
  1050  019A                     	;# 
  1051  019B                     	;# 
  1052  019B                     	;# 
  1053  019C                     	;# 
  1054  019D                     	;# 
  1055  019E                     	;# 
  1056  019F                     	;# 
  1057  020C                     	;# 
  1058  020D                     	;# 
  1059  020E                     	;# 
  1060  0211                     	;# 
  1061  0211                     	;# 
  1062  0212                     	;# 
  1063  0212                     	;# 
  1064  0213                     	;# 
  1065  0213                     	;# 
  1066  0214                     	;# 
  1067  0214                     	;# 
  1068  0215                     	;# 
  1069  0215                     	;# 
  1070  0215                     	;# 
  1071  0216                     	;# 
  1072  0216                     	;# 
  1073  0217                     	;# 
  1074  0217                     	;# 
  1075  0219                     	;# 
  1076  021A                     	;# 
  1077  021B                     	;# 
  1078  021C                     	;# 
  1079  021D                     	;# 
  1080  021E                     	;# 
  1081  021F                     	;# 
  1082  0291                     	;# 
  1083  0291                     	;# 
  1084  0292                     	;# 
  1085  0293                     	;# 
  1086  0294                     	;# 
  1087  0295                     	;# 
  1088  0295                     	;# 
  1089  0296                     	;# 
  1090  0298                     	;# 
  1091  0298                     	;# 
  1092  0299                     	;# 
  1093  029A                     	;# 
  1094  029B                     	;# 
  1095  029C                     	;# 
  1096  029D                     	;# 
  1097  029E                     	;# 
  1098  0311                     	;# 
  1099  0311                     	;# 
  1100  0312                     	;# 
  1101  0313                     	;# 
  1102  0318                     	;# 
  1103  0318                     	;# 
  1104  0319                     	;# 
  1105  031A                     	;# 
  1106  038C                     	;# 
  1107  038D                     	;# 
  1108  038E                     	;# 
  1109  0391                     	;# 
  1110  0392                     	;# 
  1111  0393                     	;# 
  1112  0394                     	;# 
  1113  0395                     	;# 
  1114  0396                     	;# 
  1115  039A                     	;# 
  1116  039C                     	;# 
  1117  039D                     	;# 
  1118  039E                     	;# 
  1119  039F                     	;# 
  1120  0415                     	;# 
  1121  0416                     	;# 
  1122  0417                     	;# 
  1123  041C                     	;# 
  1124  041D                     	;# 
  1125  041E                     	;# 
  1126  0FE4                     	;# 
  1127  0FE5                     	;# 
  1128  0FE6                     	;# 
  1129  0FE7                     	;# 
  1130  0FE8                     	;# 
  1131  0FE9                     	;# 
  1132  0FEA                     	;# 
  1133  0FEB                     	;# 
  1134  0FED                     	;# 
  1135  0FEE                     	;# 
  1136  0FEF                     	;# 
  1137  0000                     	;# 
  1138  0001                     	;# 
  1139  0002                     	;# 
  1140  0003                     	;# 
  1141  0004                     	;# 
  1142  0005                     	;# 
  1143  0006                     	;# 
  1144  0007                     	;# 
  1145  0008                     	;# 
  1146  0009                     	;# 
  1147  000A                     	;# 
  1148  000B                     	;# 
  1149  000C                     	;# 
  1150  000D                     	;# 
  1151  000E                     	;# 
  1152  0011                     	;# 
  1153  0012                     	;# 
  1154  0013                     	;# 
  1155  0014                     	;# 
  1156  0015                     	;# 
  1157  0016                     	;# 
  1158  0016                     	;# 
  1159  0017                     	;# 
  1160  0018                     	;# 
  1161  0019                     	;# 
  1162  001A                     	;# 
  1163  001B                     	;# 
  1164  001C                     	;# 
  1165  001E                     	;# 
  1166  001F                     	;# 
  1167  008C                     	;# 
  1168  008D                     	;# 
  1169  008E                     	;# 
  1170  0091                     	;# 
  1171  0092                     	;# 
  1172  0093                     	;# 
  1173  0094                     	;# 
  1174  0095                     	;# 
  1175  0096                     	;# 
  1176  0097                     	;# 
  1177  0098                     	;# 
  1178  0099                     	;# 
  1179  009A                     	;# 
  1180  009B                     	;# 
  1181  009B                     	;# 
  1182  009C                     	;# 
  1183  009D                     	;# 
  1184  009E                     	;# 
  1185  010C                     	;# 
  1186  010D                     	;# 
  1187  010E                     	;# 
  1188  0111                     	;# 
  1189  0112                     	;# 
  1190  0113                     	;# 
  1191  0114                     	;# 
  1192  0115                     	;# 
  1193  0116                     	;# 
  1194  0117                     	;# 
  1195  0118                     	;# 
  1196  0119                     	;# 
  1197  011A                     	;# 
  1198  011B                     	;# 
  1199  011D                     	;# 
  1200  011E                     	;# 
  1201  018C                     	;# 
  1202  018D                     	;# 
  1203  018E                     	;# 
  1204  0191                     	;# 
  1205  0191                     	;# 
  1206  0192                     	;# 
  1207  0193                     	;# 
  1208  0193                     	;# 
  1209  0193                     	;# 
  1210  0194                     	;# 
  1211  0195                     	;# 
  1212  0196                     	;# 
  1213  0199                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019C                     	;# 
  1218  019D                     	;# 
  1219  019E                     	;# 
  1220  019F                     	;# 
  1221  020C                     	;# 
  1222  020D                     	;# 
  1223  020E                     	;# 
  1224  0211                     	;# 
  1225  0211                     	;# 
  1226  0212                     	;# 
  1227  0212                     	;# 
  1228  0213                     	;# 
  1229  0213                     	;# 
  1230  0214                     	;# 
  1231  0214                     	;# 
  1232  0215                     	;# 
  1233  0215                     	;# 
  1234  0215                     	;# 
  1235  0216                     	;# 
  1236  0216                     	;# 
  1237  0217                     	;# 
  1238  0217                     	;# 
  1239  0219                     	;# 
  1240  021A                     	;# 
  1241  021B                     	;# 
  1242  021C                     	;# 
  1243  021D                     	;# 
  1244  021E                     	;# 
  1245  021F                     	;# 
  1246  0291                     	;# 
  1247  0291                     	;# 
  1248  0292                     	;# 
  1249  0293                     	;# 
  1250  0294                     	;# 
  1251  0295                     	;# 
  1252  0295                     	;# 
  1253  0296                     	;# 
  1254  0298                     	;# 
  1255  0298                     	;# 
  1256  0299                     	;# 
  1257  029A                     	;# 
  1258  029B                     	;# 
  1259  029C                     	;# 
  1260  029D                     	;# 
  1261  029E                     	;# 
  1262  0311                     	;# 
  1263  0311                     	;# 
  1264  0312                     	;# 
  1265  0313                     	;# 
  1266  0318                     	;# 
  1267  0318                     	;# 
  1268  0319                     	;# 
  1269  031A                     	;# 
  1270  038C                     	;# 
  1271  038D                     	;# 
  1272  038E                     	;# 
  1273  0391                     	;# 
  1274  0392                     	;# 
  1275  0393                     	;# 
  1276  0394                     	;# 
  1277  0395                     	;# 
  1278  0396                     	;# 
  1279  039A                     	;# 
  1280  039C                     	;# 
  1281  039D                     	;# 
  1282  039E                     	;# 
  1283  039F                     	;# 
  1284  0415                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  041C                     	;# 
  1288  041D                     	;# 
  1289  041E                     	;# 
  1290  0FE4                     	;# 
  1291  0FE5                     	;# 
  1292  0FE6                     	;# 
  1293  0FE7                     	;# 
  1294  0FE8                     	;# 
  1295  0FE9                     	;# 
  1296  0FEA                     	;# 
  1297  0FEB                     	;# 
  1298  0FED                     	;# 
  1299  0FEE                     	;# 
  1300  0FEF                     	;# 
  1301  0000                     	;# 
  1302  0001                     	;# 
  1303  0002                     	;# 
  1304  0003                     	;# 
  1305  0004                     	;# 
  1306  0005                     	;# 
  1307  0006                     	;# 
  1308  0007                     	;# 
  1309  0008                     	;# 
  1310  0009                     	;# 
  1311  000A                     	;# 
  1312  000B                     	;# 
  1313  000C                     	;# 
  1314  000D                     	;# 
  1315  000E                     	;# 
  1316  0011                     	;# 
  1317  0012                     	;# 
  1318  0013                     	;# 
  1319  0014                     	;# 
  1320  0015                     	;# 
  1321  0016                     	;# 
  1322  0016                     	;# 
  1323  0017                     	;# 
  1324  0018                     	;# 
  1325  0019                     	;# 
  1326  001A                     	;# 
  1327  001B                     	;# 
  1328  001C                     	;# 
  1329  001E                     	;# 
  1330  001F                     	;# 
  1331  008C                     	;# 
  1332  008D                     	;# 
  1333  008E                     	;# 
  1334  0091                     	;# 
  1335  0092                     	;# 
  1336  0093                     	;# 
  1337  0094                     	;# 
  1338  0095                     	;# 
  1339  0096                     	;# 
  1340  0097                     	;# 
  1341  0098                     	;# 
  1342  0099                     	;# 
  1343  009A                     	;# 
  1344  009B                     	;# 
  1345  009B                     	;# 
  1346  009C                     	;# 
  1347  009D                     	;# 
  1348  009E                     	;# 
  1349  010C                     	;# 
  1350  010D                     	;# 
  1351  010E                     	;# 
  1352  0111                     	;# 
  1353  0112                     	;# 
  1354  0113                     	;# 
  1355  0114                     	;# 
  1356  0115                     	;# 
  1357  0116                     	;# 
  1358  0117                     	;# 
  1359  0118                     	;# 
  1360  0119                     	;# 
  1361  011A                     	;# 
  1362  011B                     	;# 
  1363  011D                     	;# 
  1364  011E                     	;# 
  1365  018C                     	;# 
  1366  018D                     	;# 
  1367  018E                     	;# 
  1368  0191                     	;# 
  1369  0191                     	;# 
  1370  0192                     	;# 
  1371  0193                     	;# 
  1372  0193                     	;# 
  1373  0193                     	;# 
  1374  0194                     	;# 
  1375  0195                     	;# 
  1376  0196                     	;# 
  1377  0199                     	;# 
  1378  019A                     	;# 
  1379  019B                     	;# 
  1380  019B                     	;# 
  1381  019C                     	;# 
  1382  019D                     	;# 
  1383  019E                     	;# 
  1384  019F                     	;# 
  1385  020C                     	;# 
  1386  020D                     	;# 
  1387  020E                     	;# 
  1388  0211                     	;# 
  1389  0211                     	;# 
  1390  0212                     	;# 
  1391  0212                     	;# 
  1392  0213                     	;# 
  1393  0213                     	;# 
  1394  0214                     	;# 
  1395  0214                     	;# 
  1396  0215                     	;# 
  1397  0215                     	;# 
  1398  0215                     	;# 
  1399  0216                     	;# 
  1400  0216                     	;# 
  1401  0217                     	;# 
  1402  0217                     	;# 
  1403  0219                     	;# 
  1404  021A                     	;# 
  1405  021B                     	;# 
  1406  021C                     	;# 
  1407  021D                     	;# 
  1408  021E                     	;# 
  1409  021F                     	;# 
  1410  0291                     	;# 
  1411  0291                     	;# 
  1412  0292                     	;# 
  1413  0293                     	;# 
  1414  0294                     	;# 
  1415  0295                     	;# 
  1416  0295                     	;# 
  1417  0296                     	;# 
  1418  0298                     	;# 
  1419  0298                     	;# 
  1420  0299                     	;# 
  1421  029A                     	;# 
  1422  029B                     	;# 
  1423  029C                     	;# 
  1424  029D                     	;# 
  1425  029E                     	;# 
  1426  0311                     	;# 
  1427  0311                     	;# 
  1428  0312                     	;# 
  1429  0313                     	;# 
  1430  0318                     	;# 
  1431  0318                     	;# 
  1432  0319                     	;# 
  1433  031A                     	;# 
  1434  038C                     	;# 
  1435  038D                     	;# 
  1436  038E                     	;# 
  1437  0391                     	;# 
  1438  0392                     	;# 
  1439  0393                     	;# 
  1440  0394                     	;# 
  1441  0395                     	;# 
  1442  0396                     	;# 
  1443  039A                     	;# 
  1444  039C                     	;# 
  1445  039D                     	;# 
  1446  039E                     	;# 
  1447  039F                     	;# 
  1448  0415                     	;# 
  1449  0416                     	;# 
  1450  0417                     	;# 
  1451  041C                     	;# 
  1452  041D                     	;# 
  1453  041E                     	;# 
  1454  0FE4                     	;# 
  1455  0FE5                     	;# 
  1456  0FE6                     	;# 
  1457  0FE7                     	;# 
  1458  0FE8                     	;# 
  1459  0FE9                     	;# 
  1460  0FEA                     	;# 
  1461  0FEB                     	;# 
  1462  0FED                     	;# 
  1463  0FEE                     	;# 
  1464  0FEF                     	;# 
  1465  0000                     	;# 
  1466  0001                     	;# 
  1467  0002                     	;# 
  1468  0003                     	;# 
  1469  0004                     	;# 
  1470  0005                     	;# 
  1471  0006                     	;# 
  1472  0007                     	;# 
  1473  0008                     	;# 
  1474  0009                     	;# 
  1475  000A                     	;# 
  1476  000B                     	;# 
  1477  000C                     	;# 
  1478  000D                     	;# 
  1479  000E                     	;# 
  1480  0011                     	;# 
  1481  0012                     	;# 
  1482  0013                     	;# 
  1483  0014                     	;# 
  1484  0015                     	;# 
  1485  0016                     	;# 
  1486  0016                     	;# 
  1487  0017                     	;# 
  1488  0018                     	;# 
  1489  0019                     	;# 
  1490  001A                     	;# 
  1491  001B                     	;# 
  1492  001C                     	;# 
  1493  001E                     	;# 
  1494  001F                     	;# 
  1495  008C                     	;# 
  1496  008D                     	;# 
  1497  008E                     	;# 
  1498  0091                     	;# 
  1499  0092                     	;# 
  1500  0093                     	;# 
  1501  0094                     	;# 
  1502  0095                     	;# 
  1503  0096                     	;# 
  1504  0097                     	;# 
  1505  0098                     	;# 
  1506  0099                     	;# 
  1507  009A                     	;# 
  1508  009B                     	;# 
  1509  009B                     	;# 
  1510  009C                     	;# 
  1511  009D                     	;# 
  1512  009E                     	;# 
  1513  010C                     	;# 
  1514  010D                     	;# 
  1515  010E                     	;# 
  1516  0111                     	;# 
  1517  0112                     	;# 
  1518  0113                     	;# 
  1519  0114                     	;# 
  1520  0115                     	;# 
  1521  0116                     	;# 
  1522  0117                     	;# 
  1523  0118                     	;# 
  1524  0119                     	;# 
  1525  011A                     	;# 
  1526  011B                     	;# 
  1527  011D                     	;# 
  1528  011E                     	;# 
  1529  018C                     	;# 
  1530  018D                     	;# 
  1531  018E                     	;# 
  1532  0191                     	;# 
  1533  0191                     	;# 
  1534  0192                     	;# 
  1535  0193                     	;# 
  1536  0193                     	;# 
  1537  0193                     	;# 
  1538  0194                     	;# 
  1539  0195                     	;# 
  1540  0196                     	;# 
  1541  0199                     	;# 
  1542  019A                     	;# 
  1543  019B                     	;# 
  1544  019B                     	;# 
  1545  019C                     	;# 
  1546  019D                     	;# 
  1547  019E                     	;# 
  1548  019F                     	;# 
  1549  020C                     	;# 
  1550  020D                     	;# 
  1551  020E                     	;# 
  1552  0211                     	;# 
  1553  0211                     	;# 
  1554  0212                     	;# 
  1555  0212                     	;# 
  1556  0213                     	;# 
  1557  0213                     	;# 
  1558  0214                     	;# 
  1559  0214                     	;# 
  1560  0215                     	;# 
  1561  0215                     	;# 
  1562  0215                     	;# 
  1563  0216                     	;# 
  1564  0216                     	;# 
  1565  0217                     	;# 
  1566  0217                     	;# 
  1567  0219                     	;# 
  1568  021A                     	;# 
  1569  021B                     	;# 
  1570  021C                     	;# 
  1571  021D                     	;# 
  1572  021E                     	;# 
  1573  021F                     	;# 
  1574  0291                     	;# 
  1575  0291                     	;# 
  1576  0292                     	;# 
  1577  0293                     	;# 
  1578  0294                     	;# 
  1579  0295                     	;# 
  1580  0295                     	;# 
  1581  0296                     	;# 
  1582  0298                     	;# 
  1583  0298                     	;# 
  1584  0299                     	;# 
  1585  029A                     	;# 
  1586  029B                     	;# 
  1587  029C                     	;# 
  1588  029D                     	;# 
  1589  029E                     	;# 
  1590  0311                     	;# 
  1591  0311                     	;# 
  1592  0312                     	;# 
  1593  0313                     	;# 
  1594  0318                     	;# 
  1595  0318                     	;# 
  1596  0319                     	;# 
  1597  031A                     	;# 
  1598  038C                     	;# 
  1599  038D                     	;# 
  1600  038E                     	;# 
  1601  0391                     	;# 
  1602  0392                     	;# 
  1603  0393                     	;# 
  1604  0394                     	;# 
  1605  0395                     	;# 
  1606  0396                     	;# 
  1607  039A                     	;# 
  1608  039C                     	;# 
  1609  039D                     	;# 
  1610  039E                     	;# 
  1611  039F                     	;# 
  1612  0415                     	;# 
  1613  0416                     	;# 
  1614  0417                     	;# 
  1615  041C                     	;# 
  1616  041D                     	;# 
  1617  041E                     	;# 
  1618  0FE4                     	;# 
  1619  0FE5                     	;# 
  1620  0FE6                     	;# 
  1621  0FE7                     	;# 
  1622  0FE8                     	;# 
  1623  0FE9                     	;# 
  1624  0FEA                     	;# 
  1625  0FEB                     	;# 
  1626  0FED                     	;# 
  1627  0FEE                     	;# 
  1628  0FEF                     	;# 
  1629  0000                     	;# 
  1630  0001                     	;# 
  1631  0002                     	;# 
  1632  0003                     	;# 
  1633  0004                     	;# 
  1634  0005                     	;# 
  1635  0006                     	;# 
  1636  0007                     	;# 
  1637  0008                     	;# 
  1638  0009                     	;# 
  1639  000A                     	;# 
  1640  000B                     	;# 
  1641  000C                     	;# 
  1642  000D                     	;# 
  1643  000E                     	;# 
  1644  0011                     	;# 
  1645  0012                     	;# 
  1646  0013                     	;# 
  1647  0014                     	;# 
  1648  0015                     	;# 
  1649  0016                     	;# 
  1650  0016                     	;# 
  1651  0017                     	;# 
  1652  0018                     	;# 
  1653  0019                     	;# 
  1654  001A                     	;# 
  1655  001B                     	;# 
  1656  001C                     	;# 
  1657  001E                     	;# 
  1658  001F                     	;# 
  1659  008C                     	;# 
  1660  008D                     	;# 
  1661  008E                     	;# 
  1662  0091                     	;# 
  1663  0092                     	;# 
  1664  0093                     	;# 
  1665  0094                     	;# 
  1666  0095                     	;# 
  1667  0096                     	;# 
  1668  0097                     	;# 
  1669  0098                     	;# 
  1670  0099                     	;# 
  1671  009A                     	;# 
  1672  009B                     	;# 
  1673  009B                     	;# 
  1674  009C                     	;# 
  1675  009D                     	;# 
  1676  009E                     	;# 
  1677  010C                     	;# 
  1678  010D                     	;# 
  1679  010E                     	;# 
  1680  0111                     	;# 
  1681  0112                     	;# 
  1682  0113                     	;# 
  1683  0114                     	;# 
  1684  0115                     	;# 
  1685  0116                     	;# 
  1686  0117                     	;# 
  1687  0118                     	;# 
  1688  0119                     	;# 
  1689  011A                     	;# 
  1690  011B                     	;# 
  1691  011D                     	;# 
  1692  011E                     	;# 
  1693  018C                     	;# 
  1694  018D                     	;# 
  1695  018E                     	;# 
  1696  0191                     	;# 
  1697  0191                     	;# 
  1698  0192                     	;# 
  1699  0193                     	;# 
  1700  0193                     	;# 
  1701  0193                     	;# 
  1702  0194                     	;# 
  1703  0195                     	;# 
  1704  0196                     	;# 
  1705  0199                     	;# 
  1706  019A                     	;# 
  1707  019B                     	;# 
  1708  019B                     	;# 
  1709  019C                     	;# 
  1710  019D                     	;# 
  1711  019E                     	;# 
  1712  019F                     	;# 
  1713  020C                     	;# 
  1714  020D                     	;# 
  1715  020E                     	;# 
  1716  0211                     	;# 
  1717  0211                     	;# 
  1718  0212                     	;# 
  1719  0212                     	;# 
  1720  0213                     	;# 
  1721  0213                     	;# 
  1722  0214                     	;# 
  1723  0214                     	;# 
  1724  0215                     	;# 
  1725  0215                     	;# 
  1726  0215                     	;# 
  1727  0216                     	;# 
  1728  0216                     	;# 
  1729  0217                     	;# 
  1730  0217                     	;# 
  1731  0219                     	;# 
  1732  021A                     	;# 
  1733  021B                     	;# 
  1734  021C                     	;# 
  1735  021D                     	;# 
  1736  021E                     	;# 
  1737  021F                     	;# 
  1738  0291                     	;# 
  1739  0291                     	;# 
  1740  0292                     	;# 
  1741  0293                     	;# 
  1742  0294                     	;# 
  1743  0295                     	;# 
  1744  0295                     	;# 
  1745  0296                     	;# 
  1746  0298                     	;# 
  1747  0298                     	;# 
  1748  0299                     	;# 
  1749  029A                     	;# 
  1750  029B                     	;# 
  1751  029C                     	;# 
  1752  029D                     	;# 
  1753  029E                     	;# 
  1754  0311                     	;# 
  1755  0311                     	;# 
  1756  0312                     	;# 
  1757  0313                     	;# 
  1758  0318                     	;# 
  1759  0318                     	;# 
  1760  0319                     	;# 
  1761  031A                     	;# 
  1762  038C                     	;# 
  1763  038D                     	;# 
  1764  038E                     	;# 
  1765  0391                     	;# 
  1766  0392                     	;# 
  1767  0393                     	;# 
  1768  0394                     	;# 
  1769  0395                     	;# 
  1770  0396                     	;# 
  1771  039A                     	;# 
  1772  039C                     	;# 
  1773  039D                     	;# 
  1774  039E                     	;# 
  1775  039F                     	;# 
  1776  0415                     	;# 
  1777  0416                     	;# 
  1778  0417                     	;# 
  1779  041C                     	;# 
  1780  041D                     	;# 
  1781  041E                     	;# 
  1782  0FE4                     	;# 
  1783  0FE5                     	;# 
  1784  0FE6                     	;# 
  1785  0FE7                     	;# 
  1786  0FE8                     	;# 
  1787  0FE9                     	;# 
  1788  0FEA                     	;# 
  1789  0FEB                     	;# 
  1790  0FED                     	;# 
  1791  0FEE                     	;# 
  1792  0FEF                     	;# 
  1793  0000                     	;# 
  1794  0001                     	;# 
  1795  0002                     	;# 
  1796  0003                     	;# 
  1797  0004                     	;# 
  1798  0005                     	;# 
  1799  0006                     	;# 
  1800  0007                     	;# 
  1801  0008                     	;# 
  1802  0009                     	;# 
  1803  000A                     	;# 
  1804  000B                     	;# 
  1805  000C                     	;# 
  1806  000D                     	;# 
  1807  000E                     	;# 
  1808  0011                     	;# 
  1809  0012                     	;# 
  1810  0013                     	;# 
  1811  0014                     	;# 
  1812  0015                     	;# 
  1813  0016                     	;# 
  1814  0016                     	;# 
  1815  0017                     	;# 
  1816  0018                     	;# 
  1817  0019                     	;# 
  1818  001A                     	;# 
  1819  001B                     	;# 
  1820  001C                     	;# 
  1821  001E                     	;# 
  1822  001F                     	;# 
  1823  008C                     	;# 
  1824  008D                     	;# 
  1825  008E                     	;# 
  1826  0091                     	;# 
  1827  0092                     	;# 
  1828  0093                     	;# 
  1829  0094                     	;# 
  1830  0095                     	;# 
  1831  0096                     	;# 
  1832  0097                     	;# 
  1833  0098                     	;# 
  1834  0099                     	;# 
  1835  009A                     	;# 
  1836  009B                     	;# 
  1837  009B                     	;# 
  1838  009C                     	;# 
  1839  009D                     	;# 
  1840  009E                     	;# 
  1841  010C                     	;# 
  1842  010D                     	;# 
  1843  010E                     	;# 
  1844  0111                     	;# 
  1845  0112                     	;# 
  1846  0113                     	;# 
  1847  0114                     	;# 
  1848  0115                     	;# 
  1849  0116                     	;# 
  1850  0117                     	;# 
  1851  0118                     	;# 
  1852  0119                     	;# 
  1853  011A                     	;# 
  1854  011B                     	;# 
  1855  011D                     	;# 
  1856  011E                     	;# 
  1857  018C                     	;# 
  1858  018D                     	;# 
  1859  018E                     	;# 
  1860  0191                     	;# 
  1861  0191                     	;# 
  1862  0192                     	;# 
  1863  0193                     	;# 
  1864  0193                     	;# 
  1865  0193                     	;# 
  1866  0194                     	;# 
  1867  0195                     	;# 
  1868  0196                     	;# 
  1869  0199                     	;# 
  1870  019A                     	;# 
  1871  019B                     	;# 
  1872  019B                     	;# 
  1873  019C                     	;# 
  1874  019D                     	;# 
  1875  019E                     	;# 
  1876  019F                     	;# 
  1877  020C                     	;# 
  1878  020D                     	;# 
  1879  020E                     	;# 
  1880  0211                     	;# 
  1881  0211                     	;# 
  1882  0212                     	;# 
  1883  0212                     	;# 
  1884  0213                     	;# 
  1885  0213                     	;# 
  1886  0214                     	;# 
  1887  0214                     	;# 
  1888  0215                     	;# 
  1889  0215                     	;# 
  1890  0215                     	;# 
  1891  0216                     	;# 
  1892  0216                     	;# 
  1893  0217                     	;# 
  1894  0217                     	;# 
  1895  0219                     	;# 
  1896  021A                     	;# 
  1897  021B                     	;# 
  1898  021C                     	;# 
  1899  021D                     	;# 
  1900  021E                     	;# 
  1901  021F                     	;# 
  1902  0291                     	;# 
  1903  0291                     	;# 
  1904  0292                     	;# 
  1905  0293                     	;# 
  1906  0294                     	;# 
  1907  0295                     	;# 
  1908  0295                     	;# 
  1909  0296                     	;# 
  1910  0298                     	;# 
  1911  0298                     	;# 
  1912  0299                     	;# 
  1913  029A                     	;# 
  1914  029B                     	;# 
  1915  029C                     	;# 
  1916  029D                     	;# 
  1917  029E                     	;# 
  1918  0311                     	;# 
  1919  0311                     	;# 
  1920  0312                     	;# 
  1921  0313                     	;# 
  1922  0318                     	;# 
  1923  0318                     	;# 
  1924  0319                     	;# 
  1925  031A                     	;# 
  1926  038C                     	;# 
  1927  038D                     	;# 
  1928  038E                     	;# 
  1929  0391                     	;# 
  1930  0392                     	;# 
  1931  0393                     	;# 
  1932  0394                     	;# 
  1933  0395                     	;# 
  1934  0396                     	;# 
  1935  039A                     	;# 
  1936  039C                     	;# 
  1937  039D                     	;# 
  1938  039E                     	;# 
  1939  039F                     	;# 
  1940  0415                     	;# 
  1941  0416                     	;# 
  1942  0417                     	;# 
  1943  041C                     	;# 
  1944  041D                     	;# 
  1945  041E                     	;# 
  1946  0FE4                     	;# 
  1947  0FE5                     	;# 
  1948  0FE6                     	;# 
  1949  0FE7                     	;# 
  1950  0FE8                     	;# 
  1951  0FE9                     	;# 
  1952  0FEA                     	;# 
  1953  0FEB                     	;# 
  1954  0FED                     	;# 
  1955  0FEE                     	;# 
  1956  0FEF                     	;# 
  1957  0000                     	;# 
  1958  0001                     	;# 
  1959  0002                     	;# 
  1960  0003                     	;# 
  1961  0004                     	;# 
  1962  0005                     	;# 
  1963  0006                     	;# 
  1964  0007                     	;# 
  1965  0008                     	;# 
  1966  0009                     	;# 
  1967  000A                     	;# 
  1968  000B                     	;# 
  1969  000C                     	;# 
  1970  000D                     	;# 
  1971  000E                     	;# 
  1972  0011                     	;# 
  1973  0012                     	;# 
  1974  0013                     	;# 
  1975  0014                     	;# 
  1976  0015                     	;# 
  1977  0016                     	;# 
  1978  0016                     	;# 
  1979  0017                     	;# 
  1980  0018                     	;# 
  1981  0019                     	;# 
  1982  001A                     	;# 
  1983  001B                     	;# 
  1984  001C                     	;# 
  1985  001E                     	;# 
  1986  001F                     	;# 
  1987  008C                     	;# 
  1988  008D                     	;# 
  1989  008E                     	;# 
  1990  0091                     	;# 
  1991  0092                     	;# 
  1992  0093                     	;# 
  1993  0094                     	;# 
  1994  0095                     	;# 
  1995  0096                     	;# 
  1996  0097                     	;# 
  1997  0098                     	;# 
  1998  0099                     	;# 
  1999  009A                     	;# 
  2000  009B                     	;# 
  2001  009B                     	;# 
  2002  009C                     	;# 
  2003  009D                     	;# 
  2004  009E                     	;# 
  2005  010C                     	;# 
  2006  010D                     	;# 
  2007  010E                     	;# 
  2008  0111                     	;# 
  2009  0112                     	;# 
  2010  0113                     	;# 
  2011  0114                     	;# 
  2012  0115                     	;# 
  2013  0116                     	;# 
  2014  0117                     	;# 
  2015  0118                     	;# 
  2016  0119                     	;# 
  2017  011A                     	;# 
  2018  011B                     	;# 
  2019  011D                     	;# 
  2020  011E                     	;# 
  2021  018C                     	;# 
  2022  018D                     	;# 
  2023  018E                     	;# 
  2024  0191                     	;# 
  2025  0191                     	;# 
  2026  0192                     	;# 
  2027  0193                     	;# 
  2028  0193                     	;# 
  2029  0193                     	;# 
  2030  0194                     	;# 
  2031  0195                     	;# 
  2032  0196                     	;# 
  2033  0199                     	;# 
  2034  019A                     	;# 
  2035  019B                     	;# 
  2036  019B                     	;# 
  2037  019C                     	;# 
  2038  019D                     	;# 
  2039  019E                     	;# 
  2040  019F                     	;# 
  2041  020C                     	;# 
  2042  020D                     	;# 
  2043  020E                     	;# 
  2044  0211                     	;# 
  2045  0211                     	;# 
  2046  0212                     	;# 
  2047  0212                     	;# 
  2048  0213                     	;# 
  2049  0213                     	;# 
  2050  0214                     	;# 
  2051  0214                     	;# 
  2052  0215                     	;# 
  2053  0215                     	;# 
  2054  0215                     	;# 
  2055  0216                     	;# 
  2056  0216                     	;# 
  2057  0217                     	;# 
  2058  0217                     	;# 
  2059  0219                     	;# 
  2060  021A                     	;# 
  2061  021B                     	;# 
  2062  021C                     	;# 
  2063  021D                     	;# 
  2064  021E                     	;# 
  2065  021F                     	;# 
  2066  0291                     	;# 
  2067  0291                     	;# 
  2068  0292                     	;# 
  2069  0293                     	;# 
  2070  0294                     	;# 
  2071  0295                     	;# 
  2072  0295                     	;# 
  2073  0296                     	;# 
  2074  0298                     	;# 
  2075  0298                     	;# 
  2076  0299                     	;# 
  2077  029A                     	;# 
  2078  029B                     	;# 
  2079  029C                     	;# 
  2080  029D                     	;# 
  2081  029E                     	;# 
  2082  0311                     	;# 
  2083  0311                     	;# 
  2084  0312                     	;# 
  2085  0313                     	;# 
  2086  0318                     	;# 
  2087  0318                     	;# 
  2088  0319                     	;# 
  2089  031A                     	;# 
  2090  038C                     	;# 
  2091  038D                     	;# 
  2092  038E                     	;# 
  2093  0391                     	;# 
  2094  0392                     	;# 
  2095  0393                     	;# 
  2096  0394                     	;# 
  2097  0395                     	;# 
  2098  0396                     	;# 
  2099  039A                     	;# 
  2100  039C                     	;# 
  2101  039D                     	;# 
  2102  039E                     	;# 
  2103  039F                     	;# 
  2104  0415                     	;# 
  2105  0416                     	;# 
  2106  0417                     	;# 
  2107  041C                     	;# 
  2108  041D                     	;# 
  2109  041E                     	;# 
  2110  0FE4                     	;# 
  2111  0FE5                     	;# 
  2112  0FE6                     	;# 
  2113  0FE7                     	;# 
  2114  0FE8                     	;# 
  2115  0FE9                     	;# 
  2116  0FEA                     	;# 
  2117  0FEB                     	;# 
  2118  0FED                     	;# 
  2119  0FEE                     	;# 
  2120  0FEF                     	;# 
  2121  0000                     	;# 
  2122  0001                     	;# 
  2123  0002                     	;# 
  2124  0003                     	;# 
  2125  0004                     	;# 
  2126  0005                     	;# 
  2127  0006                     	;# 
  2128  0007                     	;# 
  2129  0008                     	;# 
  2130  0009                     	;# 
  2131  000A                     	;# 
  2132  000B                     	;# 
  2133  000C                     	;# 
  2134  000D                     	;# 
  2135  000E                     	;# 
  2136  0011                     	;# 
  2137  0012                     	;# 
  2138  0013                     	;# 
  2139  0014                     	;# 
  2140  0015                     	;# 
  2141  0016                     	;# 
  2142  0016                     	;# 
  2143  0017                     	;# 
  2144  0018                     	;# 
  2145  0019                     	;# 
  2146  001A                     	;# 
  2147  001B                     	;# 
  2148  001C                     	;# 
  2149  001E                     	;# 
  2150  001F                     	;# 
  2151  008C                     	;# 
  2152  008D                     	;# 
  2153  008E                     	;# 
  2154  0091                     	;# 
  2155  0092                     	;# 
  2156  0093                     	;# 
  2157  0094                     	;# 
  2158  0095                     	;# 
  2159  0096                     	;# 
  2160  0097                     	;# 
  2161  0098                     	;# 
  2162  0099                     	;# 
  2163  009A                     	;# 
  2164  009B                     	;# 
  2165  009B                     	;# 
  2166  009C                     	;# 
  2167  009D                     	;# 
  2168  009E                     	;# 
  2169  010C                     	;# 
  2170  010D                     	;# 
  2171  010E                     	;# 
  2172  0111                     	;# 
  2173  0112                     	;# 
  2174  0113                     	;# 
  2175  0114                     	;# 
  2176  0115                     	;# 
  2177  0116                     	;# 
  2178  0117                     	;# 
  2179  0118                     	;# 
  2180  0119                     	;# 
  2181  011A                     	;# 
  2182  011B                     	;# 
  2183  011D                     	;# 
  2184  011E                     	;# 
  2185  018C                     	;# 
  2186  018D                     	;# 
  2187  018E                     	;# 
  2188  0191                     	;# 
  2189  0191                     	;# 
  2190  0192                     	;# 
  2191  0193                     	;# 
  2192  0193                     	;# 
  2193  0193                     	;# 
  2194  0194                     	;# 
  2195  0195                     	;# 
  2196  0196                     	;# 
  2197  0199                     	;# 
  2198  019A                     	;# 
  2199  019B                     	;# 
  2200  019B                     	;# 
  2201  019C                     	;# 
  2202  019D                     	;# 
  2203  019E                     	;# 
  2204  019F                     	;# 
  2205  020C                     	;# 
  2206  020D                     	;# 
  2207  020E                     	;# 
  2208  0211                     	;# 
  2209  0211                     	;# 
  2210  0212                     	;# 
  2211  0212                     	;# 
  2212  0213                     	;# 
  2213  0213                     	;# 
  2214  0214                     	;# 
  2215  0214                     	;# 
  2216  0215                     	;# 
  2217  0215                     	;# 
  2218  0215                     	;# 
  2219  0216                     	;# 
  2220  0216                     	;# 
  2221  0217                     	;# 
  2222  0217                     	;# 
  2223  0219                     	;# 
  2224  021A                     	;# 
  2225  021B                     	;# 
  2226  021C                     	;# 
  2227  021D                     	;# 
  2228  021E                     	;# 
  2229  021F                     	;# 
  2230  0291                     	;# 
  2231  0291                     	;# 
  2232  0292                     	;# 
  2233  0293                     	;# 
  2234  0294                     	;# 
  2235  0295                     	;# 
  2236  0295                     	;# 
  2237  0296                     	;# 
  2238  0298                     	;# 
  2239  0298                     	;# 
  2240  0299                     	;# 
  2241  029A                     	;# 
  2242  029B                     	;# 
  2243  029C                     	;# 
  2244  029D                     	;# 
  2245  029E                     	;# 
  2246  0311                     	;# 
  2247  0311                     	;# 
  2248  0312                     	;# 
  2249  0313                     	;# 
  2250  0318                     	;# 
  2251  0318                     	;# 
  2252  0319                     	;# 
  2253  031A                     	;# 
  2254  038C                     	;# 
  2255  038D                     	;# 
  2256  038E                     	;# 
  2257  0391                     	;# 
  2258  0392                     	;# 
  2259  0393                     	;# 
  2260  0394                     	;# 
  2261  0395                     	;# 
  2262  0396                     	;# 
  2263  039A                     	;# 
  2264  039C                     	;# 
  2265  039D                     	;# 
  2266  039E                     	;# 
  2267  039F                     	;# 
  2268  0415                     	;# 
  2269  0416                     	;# 
  2270  0417                     	;# 
  2271  041C                     	;# 
  2272  041D                     	;# 
  2273  041E                     	;# 
  2274  0FE4                     	;# 
  2275  0FE5                     	;# 
  2276  0FE6                     	;# 
  2277  0FE7                     	;# 
  2278  0FE8                     	;# 
  2279  0FE9                     	;# 
  2280  0FEA                     	;# 
  2281  0FEB                     	;# 
  2282  0FED                     	;# 
  2283  0FEE                     	;# 
  2284  0FEF                     	;# 
  2285                           
  2286                           	psect	idataBANK1
  2287  15D5                     __pidataBANK1:
  2288                           
  2289                           ;initializer for _Button_StateMachine
  2290  15D5  34A8               	retlw	low _Button_State_Initializing
  2291  15D6  3409               	retlw	high _Button_State_Initializing
  2292  15D7  3400               	retlw	low _Button_State_NotPressed
  2293  15D8  340C               	retlw	high _Button_State_NotPressed
  2294  15D9  3449               	retlw	low _Button_State_Pressed
  2295  15DA  3409               	retlw	high _Button_State_Pressed
  2296                           
  2297                           ;initializer for _callback_notPressed
  2298  15DB  344B               	retlw	low _Button_DefaultCallback
  2299  15DC  3412               	retlw	high _Button_DefaultCallback
  2300                           
  2301                           ;initializer for _callback_pressed
  2302  15DD  344B               	retlw	low _Button_DefaultCallback
  2303  15DE  3412               	retlw	high _Button_DefaultCallback
  2304                           
  2305                           ;initializer for _Sensor_scanB
  2306  15DF  3494               	retlw	low _MTOUCH_CVD_ScanB_0
  2307  15E0  3415               	retlw	high _MTOUCH_CVD_ScanB_0
  2308                           
  2309                           ;initializer for _Sensor_scanA
  2310  15E1  3454               	retlw	low _MTOUCH_CVD_ScanA_0
  2311  15E2  3415               	retlw	high _MTOUCH_CVD_ScanA_0
  2312                           
  2313                           ;initializer for _callback_sampled
  2314  15E3  344C               	retlw	low _Sensor_DefaultCallback
  2315  15E4  3412               	retlw	high _Sensor_DefaultCallback
  2316                           
  2317                           ;initializer for _mtouch_sensor
  2318  15E5  3400               	retlw	0
  2319  15E6  3454               	retlw	low _MTOUCH_CVD_ScanA_0
  2320  15E7  3415               	retlw	high _MTOUCH_CVD_ScanA_0
  2321  15E8  3494               	retlw	low _MTOUCH_CVD_ScanB_0
  2322  15E9  3415               	retlw	high _MTOUCH_CVD_ScanB_0
  2323  15EA  3420               	retlw	32
  2324  15EB  3400               	retlw	0
  2325  15EC  3400               	retlw	0
  2326  15ED  3400               	retlw	0
  2327  15EE  3401               	retlw	1
  2328  15EF  3434               	retlw	low _MTOUCH_CVD_ScanA_1
  2329  15F0  3415               	retlw	high _MTOUCH_CVD_ScanA_1
  2330  15F1  3474               	retlw	low _MTOUCH_CVD_ScanB_1
  2331  15F2  3415               	retlw	high _MTOUCH_CVD_ScanB_1
  2332  15F3  3420               	retlw	32
  2333  15F4  3400               	retlw	0
  2334  15F5  3400               	retlw	0
  2335  15F6  3400               	retlw	0
  2336                           
  2337                           	psect	stringtext1
  2338  1820                     __pstringtext1:
  2339  1820                     _TMR2_Timer_Period_const:
  2340  1820  3400               	retlw	0
  2341  1821  3400               	retlw	0
  2342  1822  34C8               	retlw	200
  2343  1823  3442               	retlw	66
  2344  1824                     __end_of_TMR2_Timer_Period_const:
  2345                           
  2346                           	psect	stringtext2
  2347  1800                     __pstringtext2:
  2348  1800                     _mtouch_button_init:
  2349  1800  3400               	retlw	0
  2350  1801  3400               	retlw	0
  2351  1802  3400               	retlw	0
  2352  1803  3400               	retlw	0
  2353  1804  3400               	retlw	0
  2354  1805  3400               	retlw	0
  2355  1806  3400               	retlw	0
  2356  1807  3400               	retlw	0
  2357  1808  3400               	retlw	0
  2358  1809  3400               	retlw	0
  2359  180A  3400               	retlw	0
  2360  180B  3400               	retlw	0
  2361  180C  3400               	retlw	0
  2362  180D  3400               	retlw	0
  2363  180E  347D               	retlw	125
  2364  180F  3401               	retlw	1
  2365  1810  3401               	retlw	1
  2366  1811  3401               	retlw	1
  2367  1812  3400               	retlw	0
  2368  1813  3400               	retlw	0
  2369  1814  3400               	retlw	0
  2370  1815  3400               	retlw	0
  2371  1816  3400               	retlw	0
  2372  1817  3400               	retlw	0
  2373  1818  3400               	retlw	0
  2374  1819  3400               	retlw	0
  2375  181A  3400               	retlw	0
  2376  181B  3400               	retlw	0
  2377  181C  3400               	retlw	0
  2378  181D  3400               	retlw	0
  2379  181E  347D               	retlw	125
  2380  181F  3401               	retlw	1
  2381  1820                     __end_of_mtouch_button_init:
  2382                           
  2383                           	psect	stringtext3
  2384  1824                     __pstringtext3:
  2385  1824                     _HalfCycleACDuration_const:
  2386  1824  3400               	retlw	0
  2387  1825  3400               	retlw	0
  2388  1826  3420               	retlw	32
  2389  1827  3441               	retlw	65
  2390  1828                     __end_of_HalfCycleACDuration_const:
  2391                           
  2392                           	psect	nvBANK1
  2393  00CD                     __pnvBANK1:
  2394  00CD                     _TMR6_InterruptHandler:
  2395  00CD                     	ds	2
  2396  00CF                     _TMR4_InterruptHandler:
  2397  00CF                     	ds	2
  2398  00D1                     _TMR2_InterruptHandler:
  2399  00D1                     	ds	2
  2400  00D3                     _IOCAF2_InterruptHandler:
  2401  00D3                     	ds	2
  2402  000E                     _PORTCbits	set	14
  2403  001C                     _T2CONbits	set	28
  2404  001C                     _T2CON	set	28
  2405  001A                     _TMR2	set	26
  2406  001B                     _PR2	set	27
  2407  0011                     _PIR1bits	set	17
  2408  0013                     _PIR3bits	set	19
  2409  000B                     _INTCONbits	set	11
  2410  005F                     _GIE	set	95
  2411  009B                     _ADRES	set	155
  2412  0091                     _PIE1bits	set	145
  2413  0093                     _PIE3bits	set	147
  2414  0095                     _OPTION_REGbits	set	149
  2415  008E                     _TRISC	set	142
  2416  008D                     _TRISB	set	141
  2417  008C                     _TRISA	set	140
  2418  0097                     _WDTCON	set	151
  2419  0098                     _OSCTUNE	set	152
  2420  0099                     _OSCCON	set	153
  2421  009D                     _ADCON0bits	set	157
  2422  009E                     _ADCON1	set	158
  2423  009D                     _ADCON0	set	157
  2424  010E                     _LATCbits	set	270
  2425  011E                     _APFCON1	set	286
  2426  011D                     _APFCON0	set	285
  2427  010E                     _LATC	set	270
  2428  010D                     _LATB	set	269
  2429  010C                     _LATA	set	268
  2430  0116                     _BORCON	set	278
  2431  018C                     _ANSELA	set	396
  2432  018D                     _ANSELB	set	397
  2433  018E                     _ANSELC	set	398
  2434  020E                     _WPUC	set	526
  2435  020C                     _WPUA	set	524
  2436  020D                     _WPUB	set	525
  2437  0391                     _IOCAPbits	set	913
  2438  0392                     _IOCANbits	set	914
  2439  0393                     _IOCAFbits	set	915
  2440  041E                     _T6CON	set	1054
  2441  041C                     _TMR6	set	1052
  2442  041D                     _PR6	set	1053
  2443  0417                     _T4CONbits	set	1047
  2444  0417                     _T4CON	set	1047
  2445  0415                     _TMR4	set	1045
  2446  0416                     _PR4	set	1046
  2447                           
  2448                           	psect	cinit
  2449  002F                     start_initialization:	
  2450                           ; #config settings
  2451                           
  2452  002F                     __initialization:
  2453                           
  2454                           ; Initialize objects allocated to BANK1
  2455  002F  30D5               	movlw	low __pidataBANK1
  2456  0030  0084               	movwf	4
  2457  0031  3095               	movlw	(high __pidataBANK1)| (0+128)
  2458  0032  0085               	movwf	5
  2459  0033  30A0               	movlw	low __pdataBANK1
  2460  0034  0086               	movwf	6
  2461  0035  3000               	movlw	high __pdataBANK1
  2462  0036  0087               	movwf	7
  2463  0037  3022               	movlw	34
  2464  0038  3192  228D  3180   	fcall	init_ram
  2465                           
  2466                           ; Clear objects allocated to BANK0
  2467  003B  01EA               	clrf	__pbssBANK0& (0+127)
  2468  003C  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  2469  003D  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  2470  003E  01ED               	clrf	(__pbssBANK0+3)& (0+127)
  2471  003F  01EE               	clrf	(__pbssBANK0+4)& (0+127)
  2472  0040  01EF               	clrf	(__pbssBANK0+5)& (0+127)
  2473                           
  2474                           ; Clear objects allocated to BANK1
  2475  0041  30C2               	movlw	low __pbssBANK1
  2476  0042  0084               	movwf	4
  2477  0043  3000               	movlw	high __pbssBANK1
  2478  0044  0085               	movwf	5
  2479  0045  300B               	movlw	11
  2480  0046  3192  2287  3180   	fcall	clear_ram0
  2481                           
  2482                           ; Clear objects allocated to BANK2
  2483  0049  3020               	movlw	low __pbssBANK2
  2484  004A  0084               	movwf	4
  2485  004B  3001               	movlw	high __pbssBANK2
  2486  004C  0085               	movwf	5
  2487  004D  3020               	movlw	32
  2488  004E  3192  2287         	fcall	clear_ram0
  2489  0050                     end_of_initialization:	
  2490                           ;End of C runtime variable initialization code
  2491                           
  2492  0050                     __end_of__initialization:
  2493  0050  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2494  0051  0020               	movlb	0
  2495  0052  3195  2DB4         	ljmp	_main	;jump to C main() function
  2496                           
  2497                           	psect	bssBANK0
  2498  006A                     __pbssBANK0:
  2499  006A                     _DimmerStatusFlag_g:
  2500  006A                     	ds	1
  2501  006B                     _sample_delay:
  2502  006B                     	ds	1
  2503  006C                     _packet_counter:
  2504  006C                     	ds	1
  2505  006D                     _currentScannSensor:
  2506  006D                     	ds	1
  2507  006E                     _sensor_globalFlags:
  2508  006E                     	ds	1
  2509  006F                     MTOUCH_Random@seed:
  2510  006F                     	ds	1
  2511                           
  2512                           	psect	bssBANK1
  2513  00C2                     __pbssBANK1:
  2514  00C2                     TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4:
  2515  00C2                     	ds	2
  2516  00C4                     TMR2_Drive_TRIAC_isr@counter_tmr2:
  2517  00C4                     	ds	2
  2518  00C6                     _tmr2_required_counter_steps_g:
  2519  00C6                     	ds	2
  2520  00C8                     _packet_sample:
  2521  00C8                     	ds	2
  2522  00CA                     _mtouch_request_init:
  2523  00CA                     	ds	1
  2524  00CB                     _mtouch_time_toScan:
  2525  00CB                     	ds	1
  2526  00CC                     _lowpowerActivated:
  2527  00CC                     	ds	1
  2528                           
  2529                           	psect	dataBANK1
  2530  00A0                     __pdataBANK1:
  2531  00A0                     _Button_StateMachine:
  2532  00A0                     	ds	6
  2533  00A6                     _callback_notPressed:
  2534  00A6                     	ds	2
  2535  00A8                     _callback_pressed:
  2536  00A8                     	ds	2
  2537  00AA                     _Sensor_scanB:
  2538  00AA                     	ds	2
  2539  00AC                     _Sensor_scanA:
  2540  00AC                     	ds	2
  2541  00AE                     _callback_sampled:
  2542  00AE                     	ds	2
  2543  00B0                     _mtouch_sensor:
  2544  00B0                     	ds	18
  2545                           
  2546                           	psect	bssBANK2
  2547  0120                     __pbssBANK2:
  2548  0120                     _mtouch_button:
  2549  0120                     	ds	32
  2550                           
  2551                           	psect	inittext
  2552  128D                     init_ram:
  2553  128D  00FE               	movwf	126
  2554  128E                     initloop:
  2555  128E  0012               	moviw fsr0++
  2556  128F  001E               	movwi fsr1++
  2557  1290  0BFE               	decfsz	126,f
  2558  1291  2A8E               	goto	initloop
  2559  1292  3400               	retlw	0
  2560                           
  2561                           	psect	clrtext
  2562  1287                     clear_ram0:	
  2563                           ;	Called with FSR0 containing the base address, and
  2564                           ;	WREG with the size to clear
  2565                           
  2566  1287  0064               	clrwdt	;clear the watchdog before getting into this loop
  2567  1288                     clrloop0:
  2568  1288  0180               	clrf	0	;clear RAM location pointed to by FSR
  2569  1289  3101               	addfsr 0,1
  2570  128A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2571  128B  2A88               	goto	clrloop0	;have we reached the end yet?
  2572  128C  3400               	retlw	0	;all done for this memory range, return
  2573                           
  2574                           	psect	cstackCOMMON
  2575  0070                     __pcstackCOMMON:
  2576  0070                     ?_Sensor_DefaultCallback:
  2577  0070                     ?_MTOUCH_CVD_ScanA_0:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580  0070                     ??_MTOUCH_CVD_ScanA_0:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583  0070                     ?_MTOUCH_CVD_ScanB_0:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586  0070                     ??_MTOUCH_CVD_ScanB_0:	
  2587                           ; 1 bytes @ 0x0
  2588                           
  2589  0070                     ?_MTOUCH_CVD_ScanA_1:	
  2590                           ; 1 bytes @ 0x0
  2591                           
  2592  0070                     ??_MTOUCH_CVD_ScanA_1:	
  2593                           ; 1 bytes @ 0x0
  2594                           
  2595  0070                     ?_MTOUCH_CVD_ScanB_1:	
  2596                           ; 1 bytes @ 0x0
  2597                           
  2598  0070                     ??_MTOUCH_CVD_ScanB_1:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601  0070                     ?_MTOUCH_Sensor_Enable:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604  0070                     ?_Sensor_Sampled_Reset:	
  2605                           ; 1 bytes @ 0x0
  2606                           
  2607  0070                     ??_Sensor_Sampled_Reset:	
  2608                           ; 1 bytes @ 0x0
  2609                           
  2610  0070                     ?_Sensor_Service:	
  2611                           ; 1 bytes @ 0x0
  2612                           
  2613  0070                     ?_Sensor_Acquisition:	
  2614                           ; 1 bytes @ 0x0
  2615                           
  2616  0070                     ?_Sensor_isEnabled:	
  2617                           ; 1 bytes @ 0x0
  2618                           
  2619  0070                     ??_Sensor_isEnabled:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622  0070                     ?_Sensor_RawSample_Update:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625  0070                     ??_Sensor_RawSample_Update:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628  0070                     ?_Sensor_setSampled:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631  0070                     ??_Sensor_setSampled:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634  0070                     ?_Sensor_Acq_ExecutePacket:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637  0070                     ?_Sensor_setActive:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640  0070                     ??_Sensor_setActive:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643  0070                     ?_Sensor_setInactive:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646  0070                     ??_Sensor_setInactive:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649  0070                     ?_Sensor_setScanFunction:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652  0070                     ??_Sensor_setScanFunction:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655  0070                     ?_Sensor_Acq_ExecuteScan:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658  0070                     ?_MTOUCH_Delay:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661  0070                     ??_MTOUCH_Delay:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664  0070                     ?_MTOUCH_Service_Mainloop:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667  0070                     ?_MTOUCH_Button_isPressed:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670  0070                     ??_MTOUCH_Button_isPressed:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673  0070                     ?_Button_DefaultCallback:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676  0070                     ?_memcpy:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679  0070                     ?_Button_Service:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682  0070                     ?_Button_Reading_Update:	
  2683                           ; 1 bytes @ 0x0
  2684                           
  2685  0070                     ?_Button_Deviation_Update:	
  2686                           ; 1 bytes @ 0x0
  2687                           
  2688  0070                     ??_Button_Deviation_Update:	
  2689                           ; 1 bytes @ 0x0
  2690                           
  2691  0070                     ?_Button_Baseline_Initialize:	
  2692                           ; 1 bytes @ 0x0
  2693                           
  2694  0070                     ?_Button_Baseline_Update:	
  2695                           ; 1 bytes @ 0x0
  2696                           
  2697  0070                     ??_Button_Baseline_Update:	
  2698                           ; 1 bytes @ 0x0
  2699                           
  2700  0070                     ?_Button_Tick_helper:	
  2701                           ; 1 bytes @ 0x0
  2702                           
  2703  0070                     ??_Button_Tick_helper:	
  2704                           ; 1 bytes @ 0x0
  2705                           
  2706  0070                     ?_Button_Reading_Update_Helper:	
  2707                           ; 1 bytes @ 0x0
  2708                           
  2709  0070                     ?_MTOUCH_needReburst:	
  2710                           ; 1 bytes @ 0x0
  2711                           
  2712  0070                     ??_MTOUCH_needReburst:	
  2713                           ; 1 bytes @ 0x0
  2714                           
  2715  0070                     ?_MTOUCH_Tick:	
  2716                           ; 1 bytes @ 0x0
  2717                           
  2718  0070                     ?_PIN_MANAGER_Initialize:	
  2719                           ; 1 bytes @ 0x0
  2720                           
  2721  0070                     ?_OSCILLATOR_Initialize:	
  2722                           ; 1 bytes @ 0x0
  2723                           
  2724  0070                     ??_OSCILLATOR_Initialize:	
  2725                           ; 1 bytes @ 0x0
  2726                           
  2727  0070                     ?_WDT_Initialize:	
  2728                           ; 1 bytes @ 0x0
  2729                           
  2730  0070                     ??_WDT_Initialize:	
  2731                           ; 1 bytes @ 0x0
  2732                           
  2733  0070                     ?_TMR6_Initialize:	
  2734                           ; 1 bytes @ 0x0
  2735                           
  2736  0070                     ?_TMR4_Initialize:	
  2737                           ; 1 bytes @ 0x0
  2738                           
  2739  0070                     ?_TMR2_Initialize:	
  2740                           ; 1 bytes @ 0x0
  2741                           
  2742  0070                     ?_IOCAF2_SetInterruptHandler:	
  2743                           ; 1 bytes @ 0x0
  2744                           
  2745  0070                     ?_IOCAF2_DefaultInterruptHandler:	
  2746                           ; 1 bytes @ 0x0
  2747                           
  2748  0070                     ??_IOCAF2_DefaultInterruptHandler:	
  2749                           ; 1 bytes @ 0x0
  2750                           
  2751  0070                     ?_IOCAF2_ISR:	
  2752                           ; 1 bytes @ 0x0
  2753                           
  2754  0070                     ??_IOCAF2_ISR:	
  2755                           ; 1 bytes @ 0x0
  2756                           
  2757  0070                     ?_TMR6_ISR:	
  2758                           ; 1 bytes @ 0x0
  2759                           
  2760  0070                     ??_TMR6_ISR:	
  2761                           ; 1 bytes @ 0x0
  2762                           
  2763  0070                     ?_TMR4_ISR:	
  2764                           ; 1 bytes @ 0x0
  2765                           
  2766  0070                     ??_TMR4_ISR:	
  2767                           ; 1 bytes @ 0x0
  2768                           
  2769  0070                     ?_TMR2_ISR:	
  2770                           ; 1 bytes @ 0x0
  2771                           
  2772  0070                     ??_TMR2_ISR:	
  2773                           ; 1 bytes @ 0x0
  2774                           
  2775  0070                     ?_TMR2_SetInterruptHandler:	
  2776                           ; 1 bytes @ 0x0
  2777                           
  2778  0070                     ?_TMR2_DefaultInterruptHandler:	
  2779                           ; 1 bytes @ 0x0
  2780                           
  2781  0070                     ??_TMR2_DefaultInterruptHandler:	
  2782                           ; 1 bytes @ 0x0
  2783                           
  2784  0070                     ?_TMR4_SetInterruptHandler:	
  2785                           ; 1 bytes @ 0x0
  2786                           
  2787  0070                     ?_TMR4_DefaultInterruptHandler:	
  2788                           ; 1 bytes @ 0x0
  2789                           
  2790  0070                     ??_TMR4_DefaultInterruptHandler:	
  2791                           ; 1 bytes @ 0x0
  2792                           
  2793  0070                     ?_TMR6_SetInterruptHandler:	
  2794                           ; 1 bytes @ 0x0
  2795                           
  2796  0070                     ?_TMR6_DefaultInterruptHandler:	
  2797                           ; 1 bytes @ 0x0
  2798                           
  2799  0070                     ??_TMR6_DefaultInterruptHandler:	
  2800                           ; 1 bytes @ 0x0
  2801                           
  2802  0070                     ?_Init_Function:	
  2803                           ; 1 bytes @ 0x0
  2804                           
  2805  0070                     ?_Zero_Detection_isr:	
  2806                           ; 1 bytes @ 0x0
  2807                           
  2808  0070                     ??_Zero_Detection_isr:	
  2809                           ; 1 bytes @ 0x0
  2810                           
  2811  0070                     ?_TMR2_Drive_TRIAC_isr:	
  2812                           ; 1 bytes @ 0x0
  2813                           
  2814  0070                     ??_TMR2_Drive_TRIAC_isr:	
  2815                           ; 1 bytes @ 0x0
  2816                           
  2817  0070                     ?_TMR4_Wroking_Blink_AlarmLED_isr:	
  2818                           ; 1 bytes @ 0x0
  2819                           
  2820  0070                     ??_TMR4_Wroking_Blink_AlarmLED_isr:	
  2821                           ; 1 bytes @ 0x0
  2822                           
  2823  0070                     ?_StartTouchDetection:	
  2824                           ; 1 bytes @ 0x0
  2825                           
  2826  0070                     ?_StartStop_AlarmLED:	
  2827                           ; 1 bytes @ 0x0
  2828                           
  2829  0070                     ??_StartStop_AlarmLED:	
  2830                           ; 1 bytes @ 0x0
  2831                           
  2832  0070                     ?_StartStop_AlarmLED_Blink:	
  2833                           ; 1 bytes @ 0x0
  2834                           
  2835  0070                     ??_StartStop_AlarmLED_Blink:	
  2836                           ; 1 bytes @ 0x0
  2837                           
  2838  0070                     ?_StartStop_Fan:	
  2839                           ; 1 bytes @ 0x0
  2840                           
  2841  0070                     ??_StartStop_Fan:	
  2842                           ; 1 bytes @ 0x0
  2843                           
  2844  0070                     ?_StartStop_Buzzer:	
  2845                           ; 1 bytes @ 0x0
  2846                           
  2847  0070                     ??_StartStop_Buzzer:	
  2848                           ; 1 bytes @ 0x0
  2849                           
  2850  0070                     ?_StartStop_Dimmer:	
  2851                           ; 1 bytes @ 0x0
  2852                           
  2853  0070                     ?_StopTouchDetection:	
  2854                           ; 1 bytes @ 0x0
  2855                           
  2856  0070                     ?_StartHeater:	
  2857                           ; 1 bytes @ 0x0
  2858                           
  2859  0070                     ?_MTOUCH_Random:	
  2860                           ; 1 bytes @ 0x0
  2861                           
  2862  0070                     ??_MTOUCH_Random:	
  2863                           ; 1 bytes @ 0x0
  2864                           
  2865  0070                     ?_MTOUCH_Sensor_Initialize:	
  2866                           ; 1 bytes @ 0x0
  2867                           
  2868  0070                     ?_MTOUCH_Sensor_InitializeAll:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  0070                     ??_MTOUCH_Sensor_Scan_Initialize:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877  0070                     ?_MTOUCH_Sensor_SampleAll:	
  2878                           ; 1 bytes @ 0x0
  2879                           
  2880  0070                     ?_MTOUCH_Sensor_isCalibrated:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883  0070                     ??_MTOUCH_Sensor_isCalibrated:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0070                     ?_MTOUCH_Sensor_Calibrate:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  0070                     ??_MTOUCH_Sensor_Calibrate:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  0070                     ?_MTOUCH_Sensor_wasSampled:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0070                     ?_MTOUCH_Button_Initialize:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0070                     ??_MTOUCH_Button_Initialize:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0070                     ?_MTOUCH_Button_InitializeAll:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0070                     ?_MTOUCH_Button_ServiceAll:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0070                     ?_MTOUCH_Button_Tick:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0070                     ?_MTOUCH_Initialize:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0070                     ?_SYSTEM_Initialize:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0070                     ?_PIN_MANAGER_IOC:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0070                     ??_PIN_MANAGER_IOC:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0070                     ?_INTERRUPT_InterruptManager:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0070                     ??_INTERRUPT_InterruptManager:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0070                     ?_TMR2_StartTimer:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0070                     ??_TMR2_StartTimer:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0070                     ?_TMR2_StopTimer:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0070                     ??_TMR2_StopTimer:	
  2941                           ; 1 bytes @ 0x0
  2942                           
  2943  0070                     ?_TMR4_StartTimer:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946  0070                     ??_TMR4_StartTimer:	
  2947                           ; 1 bytes @ 0x0
  2948                           
  2949  0070                     ?_TMR4_StopTimer:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952  0070                     ??_TMR4_StopTimer:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955  0070                     ?_main:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958  0070                     ?___bmul:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961  0070                     ?_abs:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964  0070                     ?__Umul8_16:	
  2965                           ; 2 bytes @ 0x0
  2966                           
  2967  0070                     ?___fladd:	
  2968                           ; 2 bytes @ 0x0
  2969                           
  2970  0070                     Sensor_RawSample_Update@sensor:	
  2971                           ; 4 bytes @ 0x0
  2972                           
  2973  0070                     Sensor_DefaultCallback@sensor:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976  0070                     Sensor_setScanFunction@sensor:	
  2977                           ; 1 bytes @ 0x0
  2978                           
  2979  0070                     Sensor_isEnabled@sensor:	
  2980                           ; 1 bytes @ 0x0
  2981                           
  2982  0070                     Sensor_setActive@sensor:	
  2983                           ; 1 bytes @ 0x0
  2984                           
  2985  0070                     Sensor_setInactive@sensor:	
  2986                           ; 1 bytes @ 0x0
  2987                           
  2988  0070                     MTOUCH_Sensor_isCalibrated@sensor:	
  2989                           ; 1 bytes @ 0x0
  2990                           
  2991  0070                     MTOUCH_Sensor_Calibrate@sensor:	
  2992                           ; 1 bytes @ 0x0
  2993                           
  2994  0070                     Sensor_Sampled_Reset@sensor:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997  0070                     Sensor_setSampled@sensor:	
  2998                           ; 1 bytes @ 0x0
  2999                           
  3000  0070                     Button_DefaultCallback@button:	
  3001                           ; 1 bytes @ 0x0
  3002                           
  3003  0070                     StartStop_AlarmLED@OnOff:	
  3004                           ; 1 bytes @ 0x0
  3005                           
  3006  0070                     StartStop_AlarmLED_Blink@OnOff:	
  3007                           ; 1 bytes @ 0x0
  3008                           
  3009  0070                     StartStop_Fan@OnOff:	
  3010                           ; 1 bytes @ 0x0
  3011                           
  3012  0070                     StartStop_Buzzer@OnOff:	
  3013                           ; 1 bytes @ 0x0
  3014                           
  3015  0070                     ___bmul@multiplicand:	
  3016                           ; 1 bytes @ 0x0
  3017                           
  3018  0070                     __Umul8_16@multiplicand:	
  3019                           ; 1 bytes @ 0x0
  3020                           
  3021  0070                     IOCAF2_SetInterruptHandler@InterruptHandler:	
  3022                           ; 1 bytes @ 0x0
  3023                           
  3024  0070                     TMR2_SetInterruptHandler@InterruptHandler:	
  3025                           ; 2 bytes @ 0x0
  3026                           
  3027  0070                     TMR4_SetInterruptHandler@InterruptHandler:	
  3028                           ; 2 bytes @ 0x0
  3029                           
  3030  0070                     TMR6_SetInterruptHandler@InterruptHandler:	
  3031                           ; 2 bytes @ 0x0
  3032                           
  3033  0070                     abs@a:	
  3034                           ; 2 bytes @ 0x0
  3035                           
  3036  0070                     memcpy@s1:	
  3037                           ; 2 bytes @ 0x0
  3038                           
  3039  0070                     ___fladd@b:	
  3040                           ; 2 bytes @ 0x0
  3041                           
  3042                           
  3043                           ; 4 bytes @ 0x0
  3044  0070                     	ds	1
  3045  0071                     ??_Sensor_DefaultCallback:
  3046  0071                     ??_Button_DefaultCallback:	
  3047                           ; 1 bytes @ 0x1
  3048                           
  3049  0071                     ??_MTOUCH_Sensor_Sampled_ResetAll:	
  3050                           ; 1 bytes @ 0x1
  3051                           
  3052  0071                     ??___bmul:	
  3053                           ; 1 bytes @ 0x1
  3054                           
  3055  0071                     MTOUCH_Delay@i:	
  3056                           ; 1 bytes @ 0x1
  3057                           
  3058  0071                     MTOUCH_Button_isPressed@name:	
  3059                           ; 1 bytes @ 0x1
  3060                           
  3061                           
  3062                           ; 1 bytes @ 0x1
  3063  0071                     	ds	1
  3064  0072                     ??_abs:
  3065  0072                     ??_PIN_MANAGER_Initialize:	
  3066                           ; 1 bytes @ 0x2
  3067                           
  3068  0072                     ??_TMR6_Initialize:	
  3069                           ; 1 bytes @ 0x2
  3070                           
  3071  0072                     ??_TMR4_Initialize:	
  3072                           ; 1 bytes @ 0x2
  3073                           
  3074  0072                     ??_TMR2_Initialize:	
  3075                           ; 1 bytes @ 0x2
  3076                           
  3077  0072                     ??_IOCAF2_SetInterruptHandler:	
  3078                           ; 1 bytes @ 0x2
  3079                           
  3080  0072                     ??_TMR2_SetInterruptHandler:	
  3081                           ; 1 bytes @ 0x2
  3082                           
  3083  0072                     ??_TMR4_SetInterruptHandler:	
  3084                           ; 1 bytes @ 0x2
  3085                           
  3086  0072                     ??_TMR6_SetInterruptHandler:	
  3087                           ; 1 bytes @ 0x2
  3088                           
  3089  0072                     ??__Umul8_16:	
  3090                           ; 1 bytes @ 0x2
  3091                           
  3092  0072                     MTOUCH_Sensor_Sampled_ResetAll@sensor:	
  3093                           ; 1 bytes @ 0x2
  3094                           
  3095  0072                     MTOUCH_Button_Initialize@name:	
  3096                           ; 1 bytes @ 0x2
  3097                           
  3098  0072                     Button_Tick_helper@button:	
  3099                           ; 1 bytes @ 0x2
  3100                           
  3101  0072                     ___bmul@product:	
  3102                           ; 1 bytes @ 0x2
  3103                           
  3104  0072                     memcpy@n:	
  3105                           ; 1 bytes @ 0x2
  3106                           
  3107                           
  3108                           ; 2 bytes @ 0x2
  3109  0072                     	ds	1
  3110  0073                     ??_MTOUCH_Button_Tick:
  3111  0073                     MTOUCH_Button_Initialize@button:	
  3112                           ; 1 bytes @ 0x3
  3113                           
  3114  0073                     ___bmul@multiplier:	
  3115                           ; 1 bytes @ 0x3
  3116                           
  3117                           
  3118                           ; 1 bytes @ 0x3
  3119  0073                     	ds	1
  3120  0074                     ??_MTOUCH_Sensor_Enable:
  3121  0074                     ??_Sensor_Acq_ExecuteScan:	
  3122                           ; 1 bytes @ 0x4
  3123                           
  3124  0074                     ??_memcpy:	
  3125                           ; 1 bytes @ 0x4
  3126                           
  3127  0074                     ??_MTOUCH_Sensor_wasSampled:	
  3128                           ; 1 bytes @ 0x4
  3129                           
  3130  0074                     ?_MTOUCH_Sensor_RawSample_Get:	
  3131                           ; 1 bytes @ 0x4
  3132                           
  3133  0074                     MTOUCH_Button_Tick@i:	
  3134                           ; 2 bytes @ 0x4
  3135                           
  3136  0074                     __Umul8_16@product:	
  3137                           ; 1 bytes @ 0x4
  3138                           
  3139  0074                     ___fladd@a:	
  3140                           ; 2 bytes @ 0x4
  3141                           
  3142                           
  3143                           ; 4 bytes @ 0x4
  3144  0074                     	ds	1
  3145  0075                     ??_MTOUCH_Tick:
  3146  0075                     MTOUCH_Sensor_Enable@sensor:	
  3147                           ; 1 bytes @ 0x5
  3148                           
  3149  0075                     MTOUCH_Sensor_wasSampled@sensor:	
  3150                           ; 1 bytes @ 0x5
  3151                           
  3152  0075                     memcpy@s:	
  3153                           ; 1 bytes @ 0x5
  3154                           
  3155                           
  3156                           ; 2 bytes @ 0x5
  3157  0075                     	ds	1
  3158  0076                     ??_MTOUCH_Sensor_Initialize:
  3159  0076                     ??_MTOUCH_Sensor_RawSample_Get:	
  3160                           ; 1 bytes @ 0x6
  3161                           
  3162  0076                     Button_Baseline_Update@button:	
  3163                           ; 1 bytes @ 0x6
  3164                           
  3165  0076                     Sensor_Acq_ExecuteScan@result:	
  3166                           ; 1 bytes @ 0x6
  3167                           
  3168  0076                     __Umul8_16@word_mpld:	
  3169                           ; 2 bytes @ 0x6
  3170                           
  3171                           
  3172                           ; 2 bytes @ 0x6
  3173  0076                     	ds	1
  3174  0077                     MTOUCH_Sensor_Initialize@sensor:
  3175  0077                     MTOUCH_Sensor_RawSample_Get@name:	
  3176                           ; 1 bytes @ 0x7
  3177                           
  3178  0077                     memcpy@tmp:	
  3179                           ; 1 bytes @ 0x7
  3180                           
  3181                           
  3182                           ; 1 bytes @ 0x7
  3183  0077                     	ds	1
  3184  0078                     ??_Sensor_Acq_ExecutePacket:
  3185  0078                     ??_Button_Baseline_Initialize:	
  3186                           ; 1 bytes @ 0x8
  3187                           
  3188  0078                     ??_Button_Reading_Update_Helper:	
  3189                           ; 1 bytes @ 0x8
  3190                           
  3191  0078                     ??_MTOUCH_Sensor_InitializeAll:	
  3192                           ; 1 bytes @ 0x8
  3193                           
  3194  0078                     ___fladd@signs:	
  3195                           ; 1 bytes @ 0x8
  3196                           
  3197  0078                     __Umul8_16@multiplier:	
  3198                           ; 1 bytes @ 0x8
  3199                           
  3200  0078                     memcpy@d1:	
  3201                           ; 1 bytes @ 0x8
  3202                           
  3203                           
  3204                           ; 1 bytes @ 0x8
  3205  0078                     	ds	1
  3206  0079                     ??___flmul:
  3207  0079                     MTOUCH_Sensor_InitializeAll@sensor:	
  3208                           ; 1 bytes @ 0x9
  3209                           
  3210  0079                     Sensor_Acq_ExecutePacket@ADCON0_temp:	
  3211                           ; 1 bytes @ 0x9
  3212                           
  3213  0079                     ___fladd@aexp:	
  3214                           ; 1 bytes @ 0x9
  3215                           
  3216  0079                     memcpy@d:	
  3217                           ; 1 bytes @ 0x9
  3218                           
  3219                           
  3220                           ; 1 bytes @ 0x9
  3221  0079                     	ds	1
  3222  007A                     ??_MTOUCH_Button_InitializeAll:
  3223  007A                     Sensor_Acq_ExecutePacket@ADCON1_temp:	
  3224                           ; 1 bytes @ 0xA
  3225                           
  3226  007A                     Button_Reading_Update_Helper@button:	
  3227                           ; 1 bytes @ 0xA
  3228                           
  3229  007A                     ___fladd@bexp:	
  3230                           ; 1 bytes @ 0xA
  3231                           
  3232                           
  3233                           ; 1 bytes @ 0xA
  3234  007A                     	ds	1
  3235  007B                     ??_Button_Reading_Update:
  3236  007B                     Sensor_Acq_ExecutePacket@GIE_state:	
  3237                           ; 1 bytes @ 0xB
  3238                           
  3239  007B                     MTOUCH_Button_InitializeAll@button:	
  3240                           ; 1 bytes @ 0xB
  3241                           
  3242  007B                     Button_Reading_Update@button:	
  3243                           ; 1 bytes @ 0xB
  3244                           
  3245  007B                     ___fladd@grs:	
  3246                           ; 1 bytes @ 0xB
  3247                           
  3248                           
  3249                           ; 1 bytes @ 0xB
  3250  007B                     	ds	1
  3251  007C                     ??_MTOUCH_Initialize:
  3252  007C                     ??_SYSTEM_Initialize:	
  3253                           ; 1 bytes @ 0xC
  3254                           
  3255  007C                     Sensor_Acq_ExecutePacket@error:	
  3256                           ; 1 bytes @ 0xC
  3257                           
  3258  007C                     Button_Baseline_Initialize@button:	
  3259                           ; 1 bytes @ 0xC
  3260                           
  3261                           
  3262                           ; 1 bytes @ 0xC
  3263  007C                     	ds	1
  3264  007D                     ?_Button_State_Initializing:
  3265  007D                     ?_Button_State_NotPressed:	
  3266                           ; 1 bytes @ 0xD
  3267                           
  3268  007D                     ?_Button_State_Pressed:	
  3269                           ; 1 bytes @ 0xD
  3270                           
  3271  007D                     Sensor_Acq_ExecutePacket@sensor:	
  3272                           ; 1 bytes @ 0xD
  3273                           
  3274  007D                     Button_State_Initializing@button:	
  3275                           ; 1 bytes @ 0xD
  3276                           
  3277  007D                     Button_State_NotPressed@button:	
  3278                           ; 1 bytes @ 0xD
  3279                           
  3280  007D                     Button_State_Pressed@button:	
  3281                           ; 1 bytes @ 0xD
  3282                           
  3283                           
  3284                           ; 1 bytes @ 0xD
  3285  007D                     	ds	1
  3286  007E                     ??_Init_Function:
  3287  007E                     ??_StartStop_Dimmer:	
  3288                           ; 1 bytes @ 0xE
  3289                           
  3290  007E                     ??_SetDimmer:	
  3291                           ; 1 bytes @ 0xE
  3292                           
  3293  007E                     ??_main:	
  3294                           ; 1 bytes @ 0xE
  3295                           
  3296  007E                     ??___flsub:	
  3297                           ; 1 bytes @ 0xE
  3298                           
  3299                           
  3300                           	psect	cstackBANK0
  3301  0020                     __pcstackBANK0:	
  3302                           ; 1 bytes @ 0xE
  3303                           
  3304  0020                     ??_Sensor_Acquisition:
  3305  0020                     ??_Button_State_Initializing:	
  3306                           ; 1 bytes @ 0x0
  3307                           
  3308  0020                     ??_Button_State_NotPressed:	
  3309                           ; 1 bytes @ 0x0
  3310                           
  3311  0020                     ??_Button_State_Pressed:	
  3312                           ; 1 bytes @ 0x0
  3313                           
  3314  0020                     ??___fladd:	
  3315                           ; 1 bytes @ 0x0
  3316                           
  3317  0020                     ?___flmul:	
  3318                           ; 1 bytes @ 0x0
  3319                           
  3320  0020                     Button_Deviation_Update@button:	
  3321                           ; 4 bytes @ 0x0
  3322                           
  3323  0020                     ___flmul@b:	
  3324                           ; 1 bytes @ 0x0
  3325                           
  3326                           
  3327                           ; 4 bytes @ 0x0
  3328  0020                     	ds	1
  3329  0021                     Sensor_Acquisition@retry:
  3330  0021                     Button_Deviation_Update@deviation:	
  3331                           ; 1 bytes @ 0x1
  3332                           
  3333                           
  3334                           ; 4 bytes @ 0x1
  3335  0021                     	ds	1
  3336  0022                     Sensor_Acquisition@sensor:
  3337                           
  3338                           ; 1 bytes @ 0x2
  3339  0022                     	ds	1
  3340  0023                     ??_Sensor_Service:
  3341                           
  3342                           ; 1 bytes @ 0x3
  3343  0023                     	ds	1
  3344  0024                     ___flmul@a:
  3345                           
  3346                           ; 4 bytes @ 0x4
  3347  0024                     	ds	1
  3348  0025                     ??_Button_Service:
  3349  0025                     Sensor_Service@name:	
  3350                           ; 1 bytes @ 0x5
  3351                           
  3352                           
  3353                           ; 1 bytes @ 0x5
  3354  0025                     	ds	1
  3355  0026                     Sensor_Service@error:
  3356                           
  3357                           ; 1 bytes @ 0x6
  3358  0026                     	ds	1
  3359  0027                     Sensor_Service@sensor:
  3360  0027                     Button_Service@name:	
  3361                           ; 1 bytes @ 0x7
  3362                           
  3363                           
  3364                           ; 1 bytes @ 0x7
  3365  0027                     	ds	1
  3366  0028                     ??_MTOUCH_Sensor_SampleAll:
  3367  0028                     Button_Service@button:	
  3368                           ; 1 bytes @ 0x8
  3369                           
  3370  0028                     ___flmul@sign:	
  3371                           ; 1 bytes @ 0x8
  3372                           
  3373                           
  3374                           ; 1 bytes @ 0x8
  3375  0028                     	ds	1
  3376  0029                     ??_MTOUCH_Button_ServiceAll:
  3377  0029                     MTOUCH_Sensor_SampleAll@sensor:	
  3378                           ; 1 bytes @ 0x9
  3379                           
  3380  0029                     ___flmul@aexp:	
  3381                           ; 1 bytes @ 0x9
  3382                           
  3383                           
  3384                           ; 1 bytes @ 0x9
  3385  0029                     	ds	1
  3386  002A                     MTOUCH_Button_ServiceAll@button:
  3387  002A                     ___flmul@grs:	
  3388                           ; 1 bytes @ 0xA
  3389                           
  3390                           
  3391                           ; 4 bytes @ 0xA
  3392  002A                     	ds	1
  3393  002B                     ??_MTOUCH_Service_Mainloop:
  3394                           
  3395                           ; 1 bytes @ 0xB
  3396  002B                     	ds	3
  3397  002E                     ___flmul@bexp:
  3398                           
  3399                           ; 1 bytes @ 0xE
  3400  002E                     	ds	1
  3401  002F                     ___flmul@prod:
  3402                           
  3403                           ; 4 bytes @ 0xF
  3404  002F                     	ds	4
  3405  0033                     ___flmul@temp:
  3406                           
  3407                           ; 2 bytes @ 0x13
  3408  0033                     	ds	2
  3409  0035                     ?___fldiv:
  3410  0035                     ___fldiv@a:	
  3411                           ; 4 bytes @ 0x15
  3412                           
  3413                           
  3414                           ; 4 bytes @ 0x15
  3415  0035                     	ds	4
  3416  0039                     ___fldiv@b:
  3417                           
  3418                           ; 4 bytes @ 0x19
  3419  0039                     	ds	4
  3420  003D                     ??___fldiv:
  3421                           
  3422                           ; 1 bytes @ 0x1D
  3423  003D                     	ds	5
  3424  0042                     ___fldiv@rem:
  3425                           
  3426                           ; 4 bytes @ 0x22
  3427  0042                     	ds	4
  3428  0046                     ___fldiv@sign:
  3429                           
  3430                           ; 1 bytes @ 0x26
  3431  0046                     	ds	1
  3432  0047                     ___fldiv@new_exp:
  3433                           
  3434                           ; 2 bytes @ 0x27
  3435  0047                     	ds	2
  3436  0049                     ___fldiv@grs:
  3437                           
  3438                           ; 4 bytes @ 0x29
  3439  0049                     	ds	4
  3440  004D                     ___fldiv@bexp:
  3441                           
  3442                           ; 1 bytes @ 0x2D
  3443  004D                     	ds	1
  3444  004E                     ___fldiv@aexp:
  3445                           
  3446                           ; 1 bytes @ 0x2E
  3447  004E                     	ds	1
  3448  004F                     ?___fltol:
  3449  004F                     ?___flsub:	
  3450                           ; 4 bytes @ 0x2F
  3451                           
  3452  004F                     ___fltol@f1:	
  3453                           ; 4 bytes @ 0x2F
  3454                           
  3455  004F                     ___flsub@a:	
  3456                           ; 4 bytes @ 0x2F
  3457                           
  3458                           
  3459                           ; 4 bytes @ 0x2F
  3460  004F                     	ds	4
  3461  0053                     ??___fltol:
  3462  0053                     ___flsub@b:	
  3463                           ; 1 bytes @ 0x33
  3464                           
  3465                           
  3466                           ; 4 bytes @ 0x33
  3467  0053                     	ds	5
  3468  0058                     ___fltol@sign1:
  3469                           
  3470                           ; 1 bytes @ 0x38
  3471  0058                     	ds	1
  3472  0059                     ___fltol@exp1:
  3473                           
  3474                           ; 1 bytes @ 0x39
  3475  0059                     	ds	1
  3476  005A                     ?_SetDimmer:
  3477  005A                     SetDimmer@dim_percentage:	
  3478                           ; 1 bytes @ 0x3A
  3479                           
  3480                           
  3481                           ; 4 bytes @ 0x3A
  3482  005A                     	ds	4
  3483  005E                     SetDimmer@TRIAC_off_duration_ms:
  3484                           
  3485                           ; 4 bytes @ 0x3E
  3486  005E                     	ds	4
  3487  0062                     StartStop_Dimmer@OnOff:
  3488                           
  3489                           ; 1 bytes @ 0x42
  3490  0062                     	ds	1
  3491  0063                     ??_StopTouchDetection:
  3492                           
  3493                           ; 1 bytes @ 0x43
  3494  0063                     	ds	2
  3495  0065                     ??_StartHeater:
  3496                           
  3497                           ; 1 bytes @ 0x45
  3498  0065                     	ds	2
  3499  0067                     StartHeater@i:
  3500                           
  3501                           ; 1 bytes @ 0x47
  3502  0067                     	ds	1
  3503  0068                     ??_StartTouchDetection:
  3504                           
  3505                           ; 1 bytes @ 0x48
  3506  0068                     	ds	2
  3507                           
  3508                           	psect	maintext
  3509  15B4                     __pmaintext:	
  3510 ;;
  3511 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3512 ;;
  3513 ;; *************** function _main *****************
  3514 ;; Defined at:
  3515 ;;		line 49 in file "main.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : B1F/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3533 ;;Total ram usage:        0 bytes
  3534 ;; Hardware stack levels required when called:   15
  3535 ;; This function calls:
  3536 ;;		_IOCAF2_SetInterruptHandler
  3537 ;;		_Init_Function
  3538 ;;		_SYSTEM_Initialize
  3539 ;;		_StartTouchDetection
  3540 ;;		_TMR2_SetInterruptHandler
  3541 ;;		_TMR4_SetInterruptHandler
  3542 ;; This function is called by:
  3543 ;;		Startup code after reset
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           
  3548                           ;psect for function _main
  3549  15B4                     _main:
  3550                           
  3551                           ;main.c: 51:     SYSTEM_Initialize();
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3555  15B4  3193  23F7  3195   	fcall	_SYSTEM_Initialize
  3556                           
  3557                           ;main.c: 52:     Init_Function();
  3558  15B7  3194  2436  3195   	fcall	_Init_Function
  3559                           
  3560                           ;main.c: 54:     (INTCONbits.GIE = 1);
  3561  15BA  178B               	bsf	11,7	;volatile
  3562                           
  3563                           ;main.c: 55:     (INTCONbits.PEIE = 1);
  3564  15BB  170B               	bsf	11,6	;volatile
  3565                           
  3566                           ;main.c: 57:     IOCAF2_SetInterruptHandler(Zero_Detection_isr);
  3567  15BC  3093               	movlw	low _Zero_Detection_isr
  3568  15BD  00F0               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
  3569  15BE  3012               	movlw	high _Zero_Detection_isr
  3570  15BF  00F1               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
  3571  15C0  3192  2281  3195   	fcall	_IOCAF2_SetInterruptHandler
  3572                           
  3573                           ;main.c: 58:     TMR2_SetInterruptHandler(TMR2_Drive_TRIAC_isr);
  3574  15C3  301A               	movlw	low _TMR2_Drive_TRIAC_isr
  3575  15C4  00F0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3576  15C5  3016               	movlw	high _TMR2_Drive_TRIAC_isr
  3577  15C6  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3578  15C7  3192  2266  3195   	fcall	_TMR2_SetInterruptHandler
  3579                           
  3580                           ;main.c: 59:     TMR4_SetInterruptHandler(TMR4_Wroking_Blink_AlarmLED_isr);
  3581  15CA  3090               	movlw	low _TMR4_Wroking_Blink_AlarmLED_isr
  3582  15CB  00F0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  3583  15CC  3014               	movlw	high _TMR4_Wroking_Blink_AlarmLED_isr
  3584  15CD  00F1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  3585  15CE  3192  226B  3195   	fcall	_TMR4_SetInterruptHandler
  3586  15D1                     l839:	
  3587                           ;main.c: 62:     while(1){
  3588                           
  3589                           
  3590                           ;main.c: 64:         StartTouchDetection();
  3591  15D1  3196  2664  3195   	fcall	_StartTouchDetection
  3592  15D4  2DD1               	goto	l839
  3593  15D5                     __end_of_main:
  3594                           
  3595                           	psect	text1
  3596  1664                     __ptext1:	
  3597 ;; *************** function _StartTouchDetection *****************
  3598 ;; Defined at:
  3599 ;;		line 221 in file "main.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/1
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3615 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3616 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3617 ;;Total ram usage:        2 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:   14
  3620 ;; This function calls:
  3621 ;;		_MTOUCH_Button_isPressed
  3622 ;;		_MTOUCH_Service_Mainloop
  3623 ;;		_StartHeater
  3624 ;;		_StartStop_Buzzer
  3625 ;; This function is called by:
  3626 ;;		_main
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           
  3631                           ;psect for function _StartTouchDetection
  3632  1664                     _StartTouchDetection:
  3633                           
  3634                           ;main.c: 224:     if (1 == MTOUCH_Service_Mainloop()) {
  3635                           
  3636                           ;incstack = 0
  3637                           ; Regs used in _StartTouchDetection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3638  1664  3195  25F7  3196   	fcall	_MTOUCH_Service_Mainloop
  3639  1667  3A01               	xorlw	1
  3640  1668  1D03               	skipz
  3641  1669  0008               	return
  3642                           
  3643                           ;main.c: 226:         if (1 == MTOUCH_Button_isPressed(T_start)){
  3644  166A  3000               	movlw	0
  3645  166B  3194  24DC  3196   	fcall	_MTOUCH_Button_isPressed
  3646  166E  3A01               	xorlw	1
  3647  166F  1D03               	skipz
  3648  1670  0008               	return
  3649                           
  3650                           ;main.c: 228:             StartStop_Buzzer(1);
  3651  1671  3001               	movlw	1
  3652  1672  3192  22B9  3196   	fcall	_StartStop_Buzzer
  3653                           
  3654                           ;main.c: 229:             _delay((unsigned long)((100)*(8000000/4000.0)));
  3655  1675  3002               	movlw	2
  3656  1676  0020               	movlb	0	; select bank0
  3657  1677  00E9               	movwf	??_StartTouchDetection+1
  3658  1678  3004               	movlw	4
  3659  1679  00E8               	movwf	??_StartTouchDetection
  3660  167A  30BA               	movlw	186
  3661  167B                     u4137:
  3662  167B  0B89               	decfsz	9,f
  3663  167C  2E7B               	goto	u4137
  3664  167D  0BE8               	decfsz	??_StartTouchDetection,f
  3665  167E  2E7B               	goto	u4137
  3666  167F  0BE9               	decfsz	??_StartTouchDetection+1,f
  3667  1680  2E7B               	goto	u4137
  3668  1681  0000               	nop
  3669                           
  3670                           ;main.c: 230:             StartStop_Buzzer(0);
  3671  1682  3000               	movlw	0
  3672  1683  3192  22B9  3196   	fcall	_StartStop_Buzzer
  3673                           
  3674                           ;main.c: 232:             StartHeater();
  3675  1686  3180  2054         	fcall	_StartHeater
  3676                           
  3677                           ;main.c: 234:         }
  3678  1688  0008               	return
  3679  1689                     __end_of_StartTouchDetection:
  3680                           
  3681                           	psect	text2
  3682  0054                     __ptext2:	
  3683 ;; *************** function _StartHeater *****************
  3684 ;; Defined at:
  3685 ;;		line 281 in file "main.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  i               1   71[BANK0 ] unsigned char 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 1F/2
  3696 ;;		On exit  : 1F/2
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3700 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3701 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3702 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3703 ;;Total ram usage:        3 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; Hardware stack levels required when called:   13
  3706 ;; This function calls:
  3707 ;;		_SetDimmer
  3708 ;;		_StartStop_AlarmLED_Blink
  3709 ;;		_StartStop_Buzzer
  3710 ;;		_StartStop_Dimmer
  3711 ;;		_StartStop_Fan
  3712 ;;		_StopTouchDetection
  3713 ;; This function is called by:
  3714 ;;		_StartTouchDetection
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           
  3719                           ;psect for function _StartHeater
  3720  0054                     _StartHeater:
  3721                           
  3722                           ;main.c: 283:     StartStop_AlarmLED_Blink(1);
  3723                           
  3724                           ;incstack = 0
  3725                           ; Regs used in _StartHeater: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3726  0054  3001               	movlw	1
  3727  0055  3193  2307  3180   	fcall	_StartStop_AlarmLED_Blink
  3728                           
  3729                           ;main.c: 284:     StartStop_Dimmer(1);
  3730  0058  3001               	movlw	1
  3731  0059  3194  240C  3180   	fcall	_StartStop_Dimmer
  3732                           
  3733                           ;main.c: 286:     SetDimmer(10);
  3734  005C  3041               	movlw	65
  3735  005D  00DD               	movwf	SetDimmer@dim_percentage+3
  3736  005E  3020               	movlw	32
  3737  005F  00DC               	movwf	SetDimmer@dim_percentage+2
  3738  0060  3000               	movlw	0
  3739  0061  00DB               	movwf	SetDimmer@dim_percentage+1
  3740  0062  3000               	movlw	0
  3741  0063  00DA               	movwf	SetDimmer@dim_percentage
  3742  0064  318A  226E  3180   	fcall	_SetDimmer
  3743                           
  3744                           ;main.c: 287:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  3745  0067  3015               	movlw	21
  3746  0068  0020               	movlb	0	; select bank0
  3747  0069  00E6               	movwf	??_StartHeater+1
  3748  006A  304B               	movlw	75
  3749  006B  00E5               	movwf	??_StartHeater
  3750  006C  30BE               	movlw	190
  3751  006D                     u4147:
  3752  006D  0B89               	decfsz	9,f
  3753  006E  286D               	goto	u4147
  3754  006F  0BE5               	decfsz	??_StartHeater,f
  3755  0070  286D               	goto	u4147
  3756  0071  0BE6               	decfsz	??_StartHeater+1,f
  3757  0072  286D               	goto	u4147
  3758  0073  0000               	nop
  3759                           
  3760                           ;main.c: 288:     StopTouchDetection();
  3761  0074  3196  263F  3180   	fcall	_StopTouchDetection
  3762                           
  3763                           ;main.c: 290:     SetDimmer(11);
  3764  0077  3041               	movlw	65
  3765  0078  0020               	movlb	0	; select bank0
  3766  0079  00DD               	movwf	SetDimmer@dim_percentage+3
  3767  007A  3030               	movlw	48
  3768  007B  00DC               	movwf	SetDimmer@dim_percentage+2
  3769  007C  3000               	movlw	0
  3770  007D  00DB               	movwf	SetDimmer@dim_percentage+1
  3771  007E  3000               	movlw	0
  3772  007F  00DA               	movwf	SetDimmer@dim_percentage
  3773  0080  318A  226E  3180   	fcall	_SetDimmer
  3774                           
  3775                           ;main.c: 291:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  3776  0083  3015               	movlw	21
  3777  0084  0020               	movlb	0	; select bank0
  3778  0085  00E6               	movwf	??_StartHeater+1
  3779  0086  304B               	movlw	75
  3780  0087  00E5               	movwf	??_StartHeater
  3781  0088  30BE               	movlw	190
  3782  0089                     u4157:
  3783  0089  0B89               	decfsz	9,f
  3784  008A  2889               	goto	u4157
  3785  008B  0BE5               	decfsz	??_StartHeater,f
  3786  008C  2889               	goto	u4157
  3787  008D  0BE6               	decfsz	??_StartHeater+1,f
  3788  008E  2889               	goto	u4157
  3789  008F  0000               	nop
  3790                           
  3791                           ;main.c: 292:     StopTouchDetection();
  3792  0090  3196  263F  3180   	fcall	_StopTouchDetection
  3793                           
  3794                           ;main.c: 294:     SetDimmer(12);
  3795  0093  3041               	movlw	65
  3796  0094  0020               	movlb	0	; select bank0
  3797  0095  00DD               	movwf	SetDimmer@dim_percentage+3
  3798  0096  3040               	movlw	64
  3799  0097  00DC               	movwf	SetDimmer@dim_percentage+2
  3800  0098  3000               	movlw	0
  3801  0099  00DB               	movwf	SetDimmer@dim_percentage+1
  3802  009A  3000               	movlw	0
  3803  009B  00DA               	movwf	SetDimmer@dim_percentage
  3804  009C  318A  226E  3180   	fcall	_SetDimmer
  3805                           
  3806                           ;main.c: 295:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  3807  009F  3015               	movlw	21
  3808  00A0  0020               	movlb	0	; select bank0
  3809  00A1  00E6               	movwf	??_StartHeater+1
  3810  00A2  304B               	movlw	75
  3811  00A3  00E5               	movwf	??_StartHeater
  3812  00A4  30BE               	movlw	190
  3813  00A5                     u4167:
  3814  00A5  0B89               	decfsz	9,f
  3815  00A6  28A5               	goto	u4167
  3816  00A7  0BE5               	decfsz	??_StartHeater,f
  3817  00A8  28A5               	goto	u4167
  3818  00A9  0BE6               	decfsz	??_StartHeater+1,f
  3819  00AA  28A5               	goto	u4167
  3820  00AB  0000               	nop
  3821                           
  3822                           ;main.c: 296:     StopTouchDetection();
  3823  00AC  3196  263F  3180   	fcall	_StopTouchDetection
  3824                           
  3825                           ;main.c: 298:     SetDimmer(13);
  3826  00AF  3041               	movlw	65
  3827  00B0  0020               	movlb	0	; select bank0
  3828  00B1  00DD               	movwf	SetDimmer@dim_percentage+3
  3829  00B2  3050               	movlw	80
  3830  00B3  00DC               	movwf	SetDimmer@dim_percentage+2
  3831  00B4  3000               	movlw	0
  3832  00B5  00DB               	movwf	SetDimmer@dim_percentage+1
  3833  00B6  3000               	movlw	0
  3834  00B7  00DA               	movwf	SetDimmer@dim_percentage
  3835  00B8  318A  226E  3180   	fcall	_SetDimmer
  3836                           
  3837                           ;main.c: 299:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  3838  00BB  3015               	movlw	21
  3839  00BC  0020               	movlb	0	; select bank0
  3840  00BD  00E6               	movwf	??_StartHeater+1
  3841  00BE  304B               	movlw	75
  3842  00BF  00E5               	movwf	??_StartHeater
  3843  00C0  30BE               	movlw	190
  3844  00C1                     u4177:
  3845  00C1  0B89               	decfsz	9,f
  3846  00C2  28C1               	goto	u4177
  3847  00C3  0BE5               	decfsz	??_StartHeater,f
  3848  00C4  28C1               	goto	u4177
  3849  00C5  0BE6               	decfsz	??_StartHeater+1,f
  3850  00C6  28C1               	goto	u4177
  3851  00C7  0000               	nop
  3852                           
  3853                           ;main.c: 300:     StopTouchDetection();
  3854  00C8  3196  263F  3180   	fcall	_StopTouchDetection
  3855                           
  3856                           ;main.c: 302:     SetDimmer(14);
  3857  00CB  3041               	movlw	65
  3858  00CC  0020               	movlb	0	; select bank0
  3859  00CD  00DD               	movwf	SetDimmer@dim_percentage+3
  3860  00CE  3060               	movlw	96
  3861  00CF  00DC               	movwf	SetDimmer@dim_percentage+2
  3862  00D0  3000               	movlw	0
  3863  00D1  00DB               	movwf	SetDimmer@dim_percentage+1
  3864  00D2  3000               	movlw	0
  3865  00D3  00DA               	movwf	SetDimmer@dim_percentage
  3866  00D4  318A  226E  3180   	fcall	_SetDimmer
  3867                           
  3868                           ;main.c: 303:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  3869  00D7  3015               	movlw	21
  3870  00D8  0020               	movlb	0	; select bank0
  3871  00D9  00E6               	movwf	??_StartHeater+1
  3872  00DA  304B               	movlw	75
  3873  00DB  00E5               	movwf	??_StartHeater
  3874  00DC  30BE               	movlw	190
  3875  00DD                     u4187:
  3876  00DD  0B89               	decfsz	9,f
  3877  00DE  28DD               	goto	u4187
  3878  00DF  0BE5               	decfsz	??_StartHeater,f
  3879  00E0  28DD               	goto	u4187
  3880  00E1  0BE6               	decfsz	??_StartHeater+1,f
  3881  00E2  28DD               	goto	u4187
  3882  00E3  0000               	nop
  3883                           
  3884                           ;main.c: 304:     StopTouchDetection();
  3885  00E4  3196  263F  3180   	fcall	_StopTouchDetection
  3886                           
  3887                           ;main.c: 306:     SetDimmer(15);
  3888  00E7  3041               	movlw	65
  3889  00E8  0020               	movlb	0	; select bank0
  3890  00E9  00DD               	movwf	SetDimmer@dim_percentage+3
  3891  00EA  3070               	movlw	112
  3892  00EB  00DC               	movwf	SetDimmer@dim_percentage+2
  3893  00EC  3000               	movlw	0
  3894  00ED  00DB               	movwf	SetDimmer@dim_percentage+1
  3895  00EE  3000               	movlw	0
  3896  00EF  00DA               	movwf	SetDimmer@dim_percentage
  3897  00F0  318A  226E  3180   	fcall	_SetDimmer
  3898                           
  3899                           ;main.c: 307:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  3900  00F3  3015               	movlw	21
  3901  00F4  0020               	movlb	0	; select bank0
  3902  00F5  00E6               	movwf	??_StartHeater+1
  3903  00F6  304B               	movlw	75
  3904  00F7  00E5               	movwf	??_StartHeater
  3905  00F8  30BE               	movlw	190
  3906  00F9                     u4197:
  3907  00F9  0B89               	decfsz	9,f
  3908  00FA  28F9               	goto	u4197
  3909  00FB  0BE5               	decfsz	??_StartHeater,f
  3910  00FC  28F9               	goto	u4197
  3911  00FD  0BE6               	decfsz	??_StartHeater+1,f
  3912  00FE  28F9               	goto	u4197
  3913  00FF  0000               	nop
  3914                           
  3915                           ;main.c: 308:     StopTouchDetection();
  3916  0100  3196  263F  3180   	fcall	_StopTouchDetection
  3917                           
  3918                           ;main.c: 310:     SetDimmer(16);
  3919  0103  3041               	movlw	65
  3920  0104  0020               	movlb	0	; select bank0
  3921  0105  00DD               	movwf	SetDimmer@dim_percentage+3
  3922  0106  3080               	movlw	128
  3923  0107  00DC               	movwf	SetDimmer@dim_percentage+2
  3924  0108  3000               	movlw	0
  3925  0109  00DB               	movwf	SetDimmer@dim_percentage+1
  3926  010A  3000               	movlw	0
  3927  010B  00DA               	movwf	SetDimmer@dim_percentage
  3928  010C  318A  226E  3180   	fcall	_SetDimmer
  3929                           
  3930                           ;main.c: 311:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  3931  010F  3015               	movlw	21
  3932  0110  0020               	movlb	0	; select bank0
  3933  0111  00E6               	movwf	??_StartHeater+1
  3934  0112  304B               	movlw	75
  3935  0113  00E5               	movwf	??_StartHeater
  3936  0114  30BE               	movlw	190
  3937  0115                     u4207:
  3938  0115  0B89               	decfsz	9,f
  3939  0116  2915               	goto	u4207
  3940  0117  0BE5               	decfsz	??_StartHeater,f
  3941  0118  2915               	goto	u4207
  3942  0119  0BE6               	decfsz	??_StartHeater+1,f
  3943  011A  2915               	goto	u4207
  3944  011B  0000               	nop
  3945                           
  3946                           ;main.c: 312:     StopTouchDetection();
  3947  011C  3196  263F  3180   	fcall	_StopTouchDetection
  3948                           
  3949                           ;main.c: 314:     SetDimmer(17);
  3950  011F  3041               	movlw	65
  3951  0120  0020               	movlb	0	; select bank0
  3952  0121  00DD               	movwf	SetDimmer@dim_percentage+3
  3953  0122  3088               	movlw	136
  3954  0123  00DC               	movwf	SetDimmer@dim_percentage+2
  3955  0124  3000               	movlw	0
  3956  0125  00DB               	movwf	SetDimmer@dim_percentage+1
  3957  0126  3000               	movlw	0
  3958  0127  00DA               	movwf	SetDimmer@dim_percentage
  3959  0128  318A  226E  3180   	fcall	_SetDimmer
  3960                           
  3961                           ;main.c: 315:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  3962  012B  3015               	movlw	21
  3963  012C  0020               	movlb	0	; select bank0
  3964  012D  00E6               	movwf	??_StartHeater+1
  3965  012E  304B               	movlw	75
  3966  012F  00E5               	movwf	??_StartHeater
  3967  0130  30BE               	movlw	190
  3968  0131                     u4217:
  3969  0131  0B89               	decfsz	9,f
  3970  0132  2931               	goto	u4217
  3971  0133  0BE5               	decfsz	??_StartHeater,f
  3972  0134  2931               	goto	u4217
  3973  0135  0BE6               	decfsz	??_StartHeater+1,f
  3974  0136  2931               	goto	u4217
  3975  0137  0000               	nop
  3976                           
  3977                           ;main.c: 316:     StopTouchDetection();
  3978  0138  3196  263F  3180   	fcall	_StopTouchDetection
  3979                           
  3980                           ;main.c: 318:     SetDimmer(18);
  3981  013B  3041               	movlw	65
  3982  013C  0020               	movlb	0	; select bank0
  3983  013D  00DD               	movwf	SetDimmer@dim_percentage+3
  3984  013E  3090               	movlw	144
  3985  013F  00DC               	movwf	SetDimmer@dim_percentage+2
  3986  0140  3000               	movlw	0
  3987  0141  00DB               	movwf	SetDimmer@dim_percentage+1
  3988  0142  3000               	movlw	0
  3989  0143  00DA               	movwf	SetDimmer@dim_percentage
  3990  0144  318A  226E  3180   	fcall	_SetDimmer
  3991                           
  3992                           ;main.c: 319:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  3993  0147  3015               	movlw	21
  3994  0148  0020               	movlb	0	; select bank0
  3995  0149  00E6               	movwf	??_StartHeater+1
  3996  014A  304B               	movlw	75
  3997  014B  00E5               	movwf	??_StartHeater
  3998  014C  30BE               	movlw	190
  3999  014D                     u4227:
  4000  014D  0B89               	decfsz	9,f
  4001  014E  294D               	goto	u4227
  4002  014F  0BE5               	decfsz	??_StartHeater,f
  4003  0150  294D               	goto	u4227
  4004  0151  0BE6               	decfsz	??_StartHeater+1,f
  4005  0152  294D               	goto	u4227
  4006  0153  0000               	nop
  4007                           
  4008                           ;main.c: 320:     StopTouchDetection();
  4009  0154  3196  263F  3180   	fcall	_StopTouchDetection
  4010                           
  4011                           ;main.c: 322:     SetDimmer(19);
  4012  0157  3041               	movlw	65
  4013  0158  0020               	movlb	0	; select bank0
  4014  0159  00DD               	movwf	SetDimmer@dim_percentage+3
  4015  015A  3098               	movlw	152
  4016  015B  00DC               	movwf	SetDimmer@dim_percentage+2
  4017  015C  3000               	movlw	0
  4018  015D  00DB               	movwf	SetDimmer@dim_percentage+1
  4019  015E  3000               	movlw	0
  4020  015F  00DA               	movwf	SetDimmer@dim_percentage
  4021  0160  318A  226E  3180   	fcall	_SetDimmer
  4022                           
  4023                           ;main.c: 323:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4024  0163  3015               	movlw	21
  4025  0164  0020               	movlb	0	; select bank0
  4026  0165  00E6               	movwf	??_StartHeater+1
  4027  0166  304B               	movlw	75
  4028  0167  00E5               	movwf	??_StartHeater
  4029  0168  30BE               	movlw	190
  4030  0169                     u4237:
  4031  0169  0B89               	decfsz	9,f
  4032  016A  2969               	goto	u4237
  4033  016B  0BE5               	decfsz	??_StartHeater,f
  4034  016C  2969               	goto	u4237
  4035  016D  0BE6               	decfsz	??_StartHeater+1,f
  4036  016E  2969               	goto	u4237
  4037  016F  0000               	nop
  4038                           
  4039                           ;main.c: 324:     StopTouchDetection();
  4040  0170  3196  263F  3180   	fcall	_StopTouchDetection
  4041                           
  4042                           ;main.c: 326:     SetDimmer(20);
  4043  0173  3041               	movlw	65
  4044  0174  0020               	movlb	0	; select bank0
  4045  0175  00DD               	movwf	SetDimmer@dim_percentage+3
  4046  0176  30A0               	movlw	160
  4047  0177  00DC               	movwf	SetDimmer@dim_percentage+2
  4048  0178  3000               	movlw	0
  4049  0179  00DB               	movwf	SetDimmer@dim_percentage+1
  4050  017A  3000               	movlw	0
  4051  017B  00DA               	movwf	SetDimmer@dim_percentage
  4052  017C  318A  226E  3180   	fcall	_SetDimmer
  4053                           
  4054                           ;main.c: 327:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4055  017F  3015               	movlw	21
  4056  0180  0020               	movlb	0	; select bank0
  4057  0181  00E6               	movwf	??_StartHeater+1
  4058  0182  304B               	movlw	75
  4059  0183  00E5               	movwf	??_StartHeater
  4060  0184  30BE               	movlw	190
  4061  0185                     u4247:
  4062  0185  0B89               	decfsz	9,f
  4063  0186  2985               	goto	u4247
  4064  0187  0BE5               	decfsz	??_StartHeater,f
  4065  0188  2985               	goto	u4247
  4066  0189  0BE6               	decfsz	??_StartHeater+1,f
  4067  018A  2985               	goto	u4247
  4068  018B  0000               	nop
  4069                           
  4070                           ;main.c: 328:     StopTouchDetection();
  4071  018C  3196  263F  3180   	fcall	_StopTouchDetection
  4072                           
  4073                           ;main.c: 330:     SetDimmer(21);
  4074  018F  3041               	movlw	65
  4075  0190  0020               	movlb	0	; select bank0
  4076  0191  00DD               	movwf	SetDimmer@dim_percentage+3
  4077  0192  30A8               	movlw	168
  4078  0193  00DC               	movwf	SetDimmer@dim_percentage+2
  4079  0194  3000               	movlw	0
  4080  0195  00DB               	movwf	SetDimmer@dim_percentage+1
  4081  0196  3000               	movlw	0
  4082  0197  00DA               	movwf	SetDimmer@dim_percentage
  4083  0198  318A  226E  3180   	fcall	_SetDimmer
  4084                           
  4085                           ;main.c: 331:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4086  019B  3015               	movlw	21
  4087  019C  0020               	movlb	0	; select bank0
  4088  019D  00E6               	movwf	??_StartHeater+1
  4089  019E  304B               	movlw	75
  4090  019F  00E5               	movwf	??_StartHeater
  4091  01A0  30BE               	movlw	190
  4092  01A1                     u4257:
  4093  01A1  0B89               	decfsz	9,f
  4094  01A2  29A1               	goto	u4257
  4095  01A3  0BE5               	decfsz	??_StartHeater,f
  4096  01A4  29A1               	goto	u4257
  4097  01A5  0BE6               	decfsz	??_StartHeater+1,f
  4098  01A6  29A1               	goto	u4257
  4099  01A7  0000               	nop
  4100                           
  4101                           ;main.c: 332:     StopTouchDetection();
  4102  01A8  3196  263F  3180   	fcall	_StopTouchDetection
  4103                           
  4104                           ;main.c: 334:     SetDimmer(22);
  4105  01AB  3041               	movlw	65
  4106  01AC  0020               	movlb	0	; select bank0
  4107  01AD  00DD               	movwf	SetDimmer@dim_percentage+3
  4108  01AE  30B0               	movlw	176
  4109  01AF  00DC               	movwf	SetDimmer@dim_percentage+2
  4110  01B0  3000               	movlw	0
  4111  01B1  00DB               	movwf	SetDimmer@dim_percentage+1
  4112  01B2  3000               	movlw	0
  4113  01B3  00DA               	movwf	SetDimmer@dim_percentage
  4114  01B4  318A  226E  3180   	fcall	_SetDimmer
  4115                           
  4116                           ;main.c: 335:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4117  01B7  3015               	movlw	21
  4118  01B8  0020               	movlb	0	; select bank0
  4119  01B9  00E6               	movwf	??_StartHeater+1
  4120  01BA  304B               	movlw	75
  4121  01BB  00E5               	movwf	??_StartHeater
  4122  01BC  30BE               	movlw	190
  4123  01BD                     u4267:
  4124  01BD  0B89               	decfsz	9,f
  4125  01BE  29BD               	goto	u4267
  4126  01BF  0BE5               	decfsz	??_StartHeater,f
  4127  01C0  29BD               	goto	u4267
  4128  01C1  0BE6               	decfsz	??_StartHeater+1,f
  4129  01C2  29BD               	goto	u4267
  4130  01C3  0000               	nop
  4131                           
  4132                           ;main.c: 336:     StopTouchDetection();
  4133  01C4  3196  263F  3180   	fcall	_StopTouchDetection
  4134                           
  4135                           ;main.c: 338:     SetDimmer(23);
  4136  01C7  3041               	movlw	65
  4137  01C8  0020               	movlb	0	; select bank0
  4138  01C9  00DD               	movwf	SetDimmer@dim_percentage+3
  4139  01CA  30B8               	movlw	184
  4140  01CB  00DC               	movwf	SetDimmer@dim_percentage+2
  4141  01CC  3000               	movlw	0
  4142  01CD  00DB               	movwf	SetDimmer@dim_percentage+1
  4143  01CE  3000               	movlw	0
  4144  01CF  00DA               	movwf	SetDimmer@dim_percentage
  4145  01D0  318A  226E  3180   	fcall	_SetDimmer
  4146                           
  4147                           ;main.c: 339:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4148  01D3  3015               	movlw	21
  4149  01D4  0020               	movlb	0	; select bank0
  4150  01D5  00E6               	movwf	??_StartHeater+1
  4151  01D6  304B               	movlw	75
  4152  01D7  00E5               	movwf	??_StartHeater
  4153  01D8  30BE               	movlw	190
  4154  01D9                     u4277:
  4155  01D9  0B89               	decfsz	9,f
  4156  01DA  29D9               	goto	u4277
  4157  01DB  0BE5               	decfsz	??_StartHeater,f
  4158  01DC  29D9               	goto	u4277
  4159  01DD  0BE6               	decfsz	??_StartHeater+1,f
  4160  01DE  29D9               	goto	u4277
  4161  01DF  0000               	nop
  4162                           
  4163                           ;main.c: 340:     StopTouchDetection();
  4164  01E0  3196  263F  3180   	fcall	_StopTouchDetection
  4165                           
  4166                           ;main.c: 342:     SetDimmer(24);
  4167  01E3  3041               	movlw	65
  4168  01E4  0020               	movlb	0	; select bank0
  4169  01E5  00DD               	movwf	SetDimmer@dim_percentage+3
  4170  01E6  30C0               	movlw	192
  4171  01E7  00DC               	movwf	SetDimmer@dim_percentage+2
  4172  01E8  3000               	movlw	0
  4173  01E9  00DB               	movwf	SetDimmer@dim_percentage+1
  4174  01EA  3000               	movlw	0
  4175  01EB  00DA               	movwf	SetDimmer@dim_percentage
  4176  01EC  318A  226E  3180   	fcall	_SetDimmer
  4177                           
  4178                           ;main.c: 343:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4179  01EF  3015               	movlw	21
  4180  01F0  0020               	movlb	0	; select bank0
  4181  01F1  00E6               	movwf	??_StartHeater+1
  4182  01F2  304B               	movlw	75
  4183  01F3  00E5               	movwf	??_StartHeater
  4184  01F4  30BE               	movlw	190
  4185  01F5                     u4287:
  4186  01F5  0B89               	decfsz	9,f
  4187  01F6  29F5               	goto	u4287
  4188  01F7  0BE5               	decfsz	??_StartHeater,f
  4189  01F8  29F5               	goto	u4287
  4190  01F9  0BE6               	decfsz	??_StartHeater+1,f
  4191  01FA  29F5               	goto	u4287
  4192  01FB  0000               	nop
  4193                           
  4194                           ;main.c: 344:     StopTouchDetection();
  4195  01FC  3196  263F  3180   	fcall	_StopTouchDetection
  4196                           
  4197                           ;main.c: 346:     SetDimmer(25);
  4198  01FF  3041               	movlw	65
  4199  0200  0020               	movlb	0	; select bank0
  4200  0201  00DD               	movwf	SetDimmer@dim_percentage+3
  4201  0202  30C8               	movlw	200
  4202  0203  00DC               	movwf	SetDimmer@dim_percentage+2
  4203  0204  3000               	movlw	0
  4204  0205  00DB               	movwf	SetDimmer@dim_percentage+1
  4205  0206  3000               	movlw	0
  4206  0207  00DA               	movwf	SetDimmer@dim_percentage
  4207  0208  318A  226E  3180   	fcall	_SetDimmer
  4208                           
  4209                           ;main.c: 347:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4210  020B  3015               	movlw	21
  4211  020C  0020               	movlb	0	; select bank0
  4212  020D  00E6               	movwf	??_StartHeater+1
  4213  020E  304B               	movlw	75
  4214  020F  00E5               	movwf	??_StartHeater
  4215  0210  30BE               	movlw	190
  4216  0211                     u4297:
  4217  0211  0B89               	decfsz	9,f
  4218  0212  2A11               	goto	u4297
  4219  0213  0BE5               	decfsz	??_StartHeater,f
  4220  0214  2A11               	goto	u4297
  4221  0215  0BE6               	decfsz	??_StartHeater+1,f
  4222  0216  2A11               	goto	u4297
  4223  0217  0000               	nop
  4224                           
  4225                           ;main.c: 348:     StopTouchDetection();
  4226  0218  3196  263F  3180   	fcall	_StopTouchDetection
  4227                           
  4228                           ;main.c: 350:     SetDimmer(26);
  4229  021B  3041               	movlw	65
  4230  021C  0020               	movlb	0	; select bank0
  4231  021D  00DD               	movwf	SetDimmer@dim_percentage+3
  4232  021E  30D0               	movlw	208
  4233  021F  00DC               	movwf	SetDimmer@dim_percentage+2
  4234  0220  3000               	movlw	0
  4235  0221  00DB               	movwf	SetDimmer@dim_percentage+1
  4236  0222  3000               	movlw	0
  4237  0223  00DA               	movwf	SetDimmer@dim_percentage
  4238  0224  318A  226E  3180   	fcall	_SetDimmer
  4239                           
  4240                           ;main.c: 351:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4241  0227  3015               	movlw	21
  4242  0228  0020               	movlb	0	; select bank0
  4243  0229  00E6               	movwf	??_StartHeater+1
  4244  022A  304B               	movlw	75
  4245  022B  00E5               	movwf	??_StartHeater
  4246  022C  30BE               	movlw	190
  4247  022D                     u4307:
  4248  022D  0B89               	decfsz	9,f
  4249  022E  2A2D               	goto	u4307
  4250  022F  0BE5               	decfsz	??_StartHeater,f
  4251  0230  2A2D               	goto	u4307
  4252  0231  0BE6               	decfsz	??_StartHeater+1,f
  4253  0232  2A2D               	goto	u4307
  4254  0233  0000               	nop
  4255                           
  4256                           ;main.c: 352:     StopTouchDetection();
  4257  0234  3196  263F  3180   	fcall	_StopTouchDetection
  4258                           
  4259                           ;main.c: 354:     SetDimmer(27);
  4260  0237  3041               	movlw	65
  4261  0238  0020               	movlb	0	; select bank0
  4262  0239  00DD               	movwf	SetDimmer@dim_percentage+3
  4263  023A  30D8               	movlw	216
  4264  023B  00DC               	movwf	SetDimmer@dim_percentage+2
  4265  023C  3000               	movlw	0
  4266  023D  00DB               	movwf	SetDimmer@dim_percentage+1
  4267  023E  3000               	movlw	0
  4268  023F  00DA               	movwf	SetDimmer@dim_percentage
  4269  0240  318A  226E  3180   	fcall	_SetDimmer
  4270                           
  4271                           ;main.c: 355:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4272  0243  3015               	movlw	21
  4273  0244  0020               	movlb	0	; select bank0
  4274  0245  00E6               	movwf	??_StartHeater+1
  4275  0246  304B               	movlw	75
  4276  0247  00E5               	movwf	??_StartHeater
  4277  0248  30BE               	movlw	190
  4278  0249                     u4317:
  4279  0249  0B89               	decfsz	9,f
  4280  024A  2A49               	goto	u4317
  4281  024B  0BE5               	decfsz	??_StartHeater,f
  4282  024C  2A49               	goto	u4317
  4283  024D  0BE6               	decfsz	??_StartHeater+1,f
  4284  024E  2A49               	goto	u4317
  4285  024F  0000               	nop
  4286                           
  4287                           ;main.c: 356:     StopTouchDetection();
  4288  0250  3196  263F  3180   	fcall	_StopTouchDetection
  4289                           
  4290                           ;main.c: 358:     SetDimmer(28);
  4291  0253  3041               	movlw	65
  4292  0254  0020               	movlb	0	; select bank0
  4293  0255  00DD               	movwf	SetDimmer@dim_percentage+3
  4294  0256  30E0               	movlw	224
  4295  0257  00DC               	movwf	SetDimmer@dim_percentage+2
  4296  0258  3000               	movlw	0
  4297  0259  00DB               	movwf	SetDimmer@dim_percentage+1
  4298  025A  3000               	movlw	0
  4299  025B  00DA               	movwf	SetDimmer@dim_percentage
  4300  025C  318A  226E  3180   	fcall	_SetDimmer
  4301                           
  4302                           ;main.c: 359:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4303  025F  3015               	movlw	21
  4304  0260  0020               	movlb	0	; select bank0
  4305  0261  00E6               	movwf	??_StartHeater+1
  4306  0262  304B               	movlw	75
  4307  0263  00E5               	movwf	??_StartHeater
  4308  0264  30BE               	movlw	190
  4309  0265                     u4327:
  4310  0265  0B89               	decfsz	9,f
  4311  0266  2A65               	goto	u4327
  4312  0267  0BE5               	decfsz	??_StartHeater,f
  4313  0268  2A65               	goto	u4327
  4314  0269  0BE6               	decfsz	??_StartHeater+1,f
  4315  026A  2A65               	goto	u4327
  4316  026B  0000               	nop
  4317                           
  4318                           ;main.c: 360:     StopTouchDetection();
  4319  026C  3196  263F  3180   	fcall	_StopTouchDetection
  4320                           
  4321                           ;main.c: 362:     SetDimmer(29);
  4322  026F  3041               	movlw	65
  4323  0270  0020               	movlb	0	; select bank0
  4324  0271  00DD               	movwf	SetDimmer@dim_percentage+3
  4325  0272  30E8               	movlw	232
  4326  0273  00DC               	movwf	SetDimmer@dim_percentage+2
  4327  0274  3000               	movlw	0
  4328  0275  00DB               	movwf	SetDimmer@dim_percentage+1
  4329  0276  3000               	movlw	0
  4330  0277  00DA               	movwf	SetDimmer@dim_percentage
  4331  0278  318A  226E  3180   	fcall	_SetDimmer
  4332                           
  4333                           ;main.c: 363:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4334  027B  3015               	movlw	21
  4335  027C  0020               	movlb	0	; select bank0
  4336  027D  00E6               	movwf	??_StartHeater+1
  4337  027E  304B               	movlw	75
  4338  027F  00E5               	movwf	??_StartHeater
  4339  0280  30BE               	movlw	190
  4340  0281                     u4337:
  4341  0281  0B89               	decfsz	9,f
  4342  0282  2A81               	goto	u4337
  4343  0283  0BE5               	decfsz	??_StartHeater,f
  4344  0284  2A81               	goto	u4337
  4345  0285  0BE6               	decfsz	??_StartHeater+1,f
  4346  0286  2A81               	goto	u4337
  4347  0287  0000               	nop
  4348                           
  4349                           ;main.c: 364:     StopTouchDetection();
  4350  0288  3196  263F  3180   	fcall	_StopTouchDetection
  4351                           
  4352                           ;main.c: 366:     SetDimmer(30);
  4353  028B  3041               	movlw	65
  4354  028C  0020               	movlb	0	; select bank0
  4355  028D  00DD               	movwf	SetDimmer@dim_percentage+3
  4356  028E  30F0               	movlw	240
  4357  028F  00DC               	movwf	SetDimmer@dim_percentage+2
  4358  0290  3000               	movlw	0
  4359  0291  00DB               	movwf	SetDimmer@dim_percentage+1
  4360  0292  3000               	movlw	0
  4361  0293  00DA               	movwf	SetDimmer@dim_percentage
  4362  0294  318A  226E  3180   	fcall	_SetDimmer
  4363                           
  4364                           ;main.c: 367:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4365  0297  3015               	movlw	21
  4366  0298  0020               	movlb	0	; select bank0
  4367  0299  00E6               	movwf	??_StartHeater+1
  4368  029A  304B               	movlw	75
  4369  029B  00E5               	movwf	??_StartHeater
  4370  029C  30BE               	movlw	190
  4371  029D                     u4347:
  4372  029D  0B89               	decfsz	9,f
  4373  029E  2A9D               	goto	u4347
  4374  029F  0BE5               	decfsz	??_StartHeater,f
  4375  02A0  2A9D               	goto	u4347
  4376  02A1  0BE6               	decfsz	??_StartHeater+1,f
  4377  02A2  2A9D               	goto	u4347
  4378  02A3  0000               	nop
  4379                           
  4380                           ;main.c: 368:     StopTouchDetection();
  4381  02A4  3196  263F  3180   	fcall	_StopTouchDetection
  4382                           
  4383                           ;main.c: 372:     SetDimmer(30.5);
  4384  02A7  3041               	movlw	65
  4385  02A8  0020               	movlb	0	; select bank0
  4386  02A9  00DD               	movwf	SetDimmer@dim_percentage+3
  4387  02AA  30F4               	movlw	244
  4388  02AB  00DC               	movwf	SetDimmer@dim_percentage+2
  4389  02AC  3000               	movlw	0
  4390  02AD  00DB               	movwf	SetDimmer@dim_percentage+1
  4391  02AE  3000               	movlw	0
  4392  02AF  00DA               	movwf	SetDimmer@dim_percentage
  4393  02B0  318A  226E  3180   	fcall	_SetDimmer
  4394                           
  4395                           ;main.c: 373:     _delay((unsigned long)((8000)*(8000000/4000.0)));
  4396  02B3  3052               	movlw	82
  4397  02B4  0020               	movlb	0	; select bank0
  4398  02B5  00E6               	movwf	??_StartHeater+1
  4399  02B6  302B               	movlw	43
  4400  02B7  00E5               	movwf	??_StartHeater
  4401  02B8  3000               	movlw	0
  4402  02B9                     u4357:
  4403  02B9  0B89               	decfsz	9,f
  4404  02BA  2AB9               	goto	u4357
  4405  02BB  0BE5               	decfsz	??_StartHeater,f
  4406  02BC  2AB9               	goto	u4357
  4407  02BD  0BE6               	decfsz	??_StartHeater+1,f
  4408  02BE  2AB9               	goto	u4357
  4409  02BF  0000               	nop
  4410                           
  4411                           ;main.c: 374:     StopTouchDetection();
  4412  02C0  3196  263F  3180   	fcall	_StopTouchDetection
  4413                           
  4414                           ;main.c: 376:     SetDimmer(31);
  4415  02C3  3041               	movlw	65
  4416  02C4  0020               	movlb	0	; select bank0
  4417  02C5  00DD               	movwf	SetDimmer@dim_percentage+3
  4418  02C6  30F8               	movlw	248
  4419  02C7  00DC               	movwf	SetDimmer@dim_percentage+2
  4420  02C8  3000               	movlw	0
  4421  02C9  00DB               	movwf	SetDimmer@dim_percentage+1
  4422  02CA  3000               	movlw	0
  4423  02CB  00DA               	movwf	SetDimmer@dim_percentage
  4424  02CC  318A  226E  3180   	fcall	_SetDimmer
  4425                           
  4426                           ;main.c: 377:     _delay((unsigned long)((8000)*(8000000/4000.0)));
  4427  02CF  3052               	movlw	82
  4428  02D0  0020               	movlb	0	; select bank0
  4429  02D1  00E6               	movwf	??_StartHeater+1
  4430  02D2  302B               	movlw	43
  4431  02D3  00E5               	movwf	??_StartHeater
  4432  02D4  3000               	movlw	0
  4433  02D5                     u4367:
  4434  02D5  0B89               	decfsz	9,f
  4435  02D6  2AD5               	goto	u4367
  4436  02D7  0BE5               	decfsz	??_StartHeater,f
  4437  02D8  2AD5               	goto	u4367
  4438  02D9  0BE6               	decfsz	??_StartHeater+1,f
  4439  02DA  2AD5               	goto	u4367
  4440  02DB  0000               	nop
  4441                           
  4442                           ;main.c: 378:     StopTouchDetection();
  4443  02DC  3196  263F  3180   	fcall	_StopTouchDetection
  4444                           
  4445                           ;main.c: 380:     SetDimmer(31.5);
  4446  02DF  3041               	movlw	65
  4447  02E0  0020               	movlb	0	; select bank0
  4448  02E1  00DD               	movwf	SetDimmer@dim_percentage+3
  4449  02E2  30FC               	movlw	252
  4450  02E3  00DC               	movwf	SetDimmer@dim_percentage+2
  4451  02E4  3000               	movlw	0
  4452  02E5  00DB               	movwf	SetDimmer@dim_percentage+1
  4453  02E6  3000               	movlw	0
  4454  02E7  00DA               	movwf	SetDimmer@dim_percentage
  4455  02E8  318A  226E  3180   	fcall	_SetDimmer
  4456                           
  4457                           ;main.c: 381:     _delay((unsigned long)((8000)*(8000000/4000.0)));
  4458  02EB  3052               	movlw	82
  4459  02EC  0020               	movlb	0	; select bank0
  4460  02ED  00E6               	movwf	??_StartHeater+1
  4461  02EE  302B               	movlw	43
  4462  02EF  00E5               	movwf	??_StartHeater
  4463  02F0  3000               	movlw	0
  4464  02F1                     u4377:
  4465  02F1  0B89               	decfsz	9,f
  4466  02F2  2AF1               	goto	u4377
  4467  02F3  0BE5               	decfsz	??_StartHeater,f
  4468  02F4  2AF1               	goto	u4377
  4469  02F5  0BE6               	decfsz	??_StartHeater+1,f
  4470  02F6  2AF1               	goto	u4377
  4471  02F7  0000               	nop
  4472                           
  4473                           ;main.c: 382:     StopTouchDetection();
  4474  02F8  3196  263F  3180   	fcall	_StopTouchDetection
  4475                           
  4476                           ;main.c: 384:     SetDimmer(32);
  4477  02FB  3042               	movlw	66
  4478  02FC  0020               	movlb	0	; select bank0
  4479  02FD  00DD               	movwf	SetDimmer@dim_percentage+3
  4480  02FE  3000               	movlw	0
  4481  02FF  00DC               	movwf	SetDimmer@dim_percentage+2
  4482  0300  3000               	movlw	0
  4483  0301  00DB               	movwf	SetDimmer@dim_percentage+1
  4484  0302  3000               	movlw	0
  4485  0303  00DA               	movwf	SetDimmer@dim_percentage
  4486  0304  318A  226E  3180   	fcall	_SetDimmer
  4487                           
  4488                           ;main.c: 385:     _delay((unsigned long)((8000)*(8000000/4000.0)));
  4489  0307  3052               	movlw	82
  4490  0308  0020               	movlb	0	; select bank0
  4491  0309  00E6               	movwf	??_StartHeater+1
  4492  030A  302B               	movlw	43
  4493  030B  00E5               	movwf	??_StartHeater
  4494  030C  3000               	movlw	0
  4495  030D                     u4387:
  4496  030D  0B89               	decfsz	9,f
  4497  030E  2B0D               	goto	u4387
  4498  030F  0BE5               	decfsz	??_StartHeater,f
  4499  0310  2B0D               	goto	u4387
  4500  0311  0BE6               	decfsz	??_StartHeater+1,f
  4501  0312  2B0D               	goto	u4387
  4502  0313  0000               	nop
  4503                           
  4504                           ;main.c: 386:     StopTouchDetection();
  4505  0314  3196  263F  3180   	fcall	_StopTouchDetection
  4506                           
  4507                           ;main.c: 388:     SetDimmer(32.5);
  4508  0317  3042               	movlw	66
  4509  0318  0020               	movlb	0	; select bank0
  4510  0319  00DD               	movwf	SetDimmer@dim_percentage+3
  4511  031A  3002               	movlw	2
  4512  031B  00DC               	movwf	SetDimmer@dim_percentage+2
  4513  031C  3000               	movlw	0
  4514  031D  00DB               	movwf	SetDimmer@dim_percentage+1
  4515  031E  3000               	movlw	0
  4516  031F  00DA               	movwf	SetDimmer@dim_percentage
  4517  0320  318A  226E  3180   	fcall	_SetDimmer
  4518                           
  4519                           ;main.c: 389:     _delay((unsigned long)((8000)*(8000000/4000.0)));
  4520  0323  3052               	movlw	82
  4521  0324  0020               	movlb	0	; select bank0
  4522  0325  00E6               	movwf	??_StartHeater+1
  4523  0326  302B               	movlw	43
  4524  0327  00E5               	movwf	??_StartHeater
  4525  0328  3000               	movlw	0
  4526  0329                     u4397:
  4527  0329  0B89               	decfsz	9,f
  4528  032A  2B29               	goto	u4397
  4529  032B  0BE5               	decfsz	??_StartHeater,f
  4530  032C  2B29               	goto	u4397
  4531  032D  0BE6               	decfsz	??_StartHeater+1,f
  4532  032E  2B29               	goto	u4397
  4533  032F  0000               	nop
  4534                           
  4535                           ;main.c: 390:     StopTouchDetection();
  4536  0330  3196  263F  3180   	fcall	_StopTouchDetection
  4537                           
  4538                           ;main.c: 392:     SetDimmer(33);
  4539  0333  3042               	movlw	66
  4540  0334  0020               	movlb	0	; select bank0
  4541  0335  00DD               	movwf	SetDimmer@dim_percentage+3
  4542  0336  3004               	movlw	4
  4543  0337  00DC               	movwf	SetDimmer@dim_percentage+2
  4544  0338  3000               	movlw	0
  4545  0339  00DB               	movwf	SetDimmer@dim_percentage+1
  4546  033A  3000               	movlw	0
  4547  033B  00DA               	movwf	SetDimmer@dim_percentage
  4548  033C  318A  226E  3180   	fcall	_SetDimmer
  4549                           
  4550                           ;main.c: 393:     _delay((unsigned long)((8000)*(8000000/4000.0)));
  4551  033F  3052               	movlw	82
  4552  0340  0020               	movlb	0	; select bank0
  4553  0341  00E6               	movwf	??_StartHeater+1
  4554  0342  302B               	movlw	43
  4555  0343  00E5               	movwf	??_StartHeater
  4556  0344  3000               	movlw	0
  4557  0345                     u4407:
  4558  0345  0B89               	decfsz	9,f
  4559  0346  2B45               	goto	u4407
  4560  0347  0BE5               	decfsz	??_StartHeater,f
  4561  0348  2B45               	goto	u4407
  4562  0349  0BE6               	decfsz	??_StartHeater+1,f
  4563  034A  2B45               	goto	u4407
  4564  034B  0000               	nop
  4565                           
  4566                           ;main.c: 394:     StopTouchDetection();
  4567  034C  3196  263F  3180   	fcall	_StopTouchDetection
  4568                           
  4569                           ;main.c: 396:     SetDimmer(33.5);
  4570  034F  3042               	movlw	66
  4571  0350  0020               	movlb	0	; select bank0
  4572  0351  00DD               	movwf	SetDimmer@dim_percentage+3
  4573  0352  3006               	movlw	6
  4574  0353  00DC               	movwf	SetDimmer@dim_percentage+2
  4575  0354  3000               	movlw	0
  4576  0355  00DB               	movwf	SetDimmer@dim_percentage+1
  4577  0356  3000               	movlw	0
  4578  0357  00DA               	movwf	SetDimmer@dim_percentage
  4579  0358  318A  226E  3180   	fcall	_SetDimmer
  4580                           
  4581                           ;main.c: 397:     _delay((unsigned long)((8000)*(8000000/4000.0)));
  4582  035B  3052               	movlw	82
  4583  035C  0020               	movlb	0	; select bank0
  4584  035D  00E6               	movwf	??_StartHeater+1
  4585  035E  302B               	movlw	43
  4586  035F  00E5               	movwf	??_StartHeater
  4587  0360  3000               	movlw	0
  4588  0361                     u4417:
  4589  0361  0B89               	decfsz	9,f
  4590  0362  2B61               	goto	u4417
  4591  0363  0BE5               	decfsz	??_StartHeater,f
  4592  0364  2B61               	goto	u4417
  4593  0365  0BE6               	decfsz	??_StartHeater+1,f
  4594  0366  2B61               	goto	u4417
  4595  0367  0000               	nop
  4596                           
  4597                           ;main.c: 398:     StopTouchDetection();
  4598  0368  3196  263F  3180   	fcall	_StopTouchDetection
  4599                           
  4600                           ;main.c: 400:     SetDimmer(34);
  4601  036B  3042               	movlw	66
  4602  036C  0020               	movlb	0	; select bank0
  4603  036D  00DD               	movwf	SetDimmer@dim_percentage+3
  4604  036E  3008               	movlw	8
  4605  036F  00DC               	movwf	SetDimmer@dim_percentage+2
  4606  0370  3000               	movlw	0
  4607  0371  00DB               	movwf	SetDimmer@dim_percentage+1
  4608  0372  3000               	movlw	0
  4609  0373  00DA               	movwf	SetDimmer@dim_percentage
  4610  0374  318A  226E  3180   	fcall	_SetDimmer
  4611                           
  4612                           ;main.c: 401:     _delay((unsigned long)((8000)*(8000000/4000.0)));
  4613  0377  3052               	movlw	82
  4614  0378  0020               	movlb	0	; select bank0
  4615  0379  00E6               	movwf	??_StartHeater+1
  4616  037A  302B               	movlw	43
  4617  037B  00E5               	movwf	??_StartHeater
  4618  037C  3000               	movlw	0
  4619  037D                     u4427:
  4620  037D  0B89               	decfsz	9,f
  4621  037E  2B7D               	goto	u4427
  4622  037F  0BE5               	decfsz	??_StartHeater,f
  4623  0380  2B7D               	goto	u4427
  4624  0381  0BE6               	decfsz	??_StartHeater+1,f
  4625  0382  2B7D               	goto	u4427
  4626  0383  0000               	nop
  4627                           
  4628                           ;main.c: 402:     StopTouchDetection();
  4629  0384  3196  263F  3180   	fcall	_StopTouchDetection
  4630                           
  4631                           ;main.c: 404:     SetDimmer(34.5);
  4632  0387  3042               	movlw	66
  4633  0388  0020               	movlb	0	; select bank0
  4634  0389  00DD               	movwf	SetDimmer@dim_percentage+3
  4635  038A  300A               	movlw	10
  4636  038B  00DC               	movwf	SetDimmer@dim_percentage+2
  4637  038C  3000               	movlw	0
  4638  038D  00DB               	movwf	SetDimmer@dim_percentage+1
  4639  038E  3000               	movlw	0
  4640  038F  00DA               	movwf	SetDimmer@dim_percentage
  4641  0390  318A  226E  3180   	fcall	_SetDimmer
  4642                           
  4643                           ;main.c: 405:     _delay((unsigned long)((8000)*(8000000/4000.0)));
  4644  0393  3052               	movlw	82
  4645  0394  0020               	movlb	0	; select bank0
  4646  0395  00E6               	movwf	??_StartHeater+1
  4647  0396  302B               	movlw	43
  4648  0397  00E5               	movwf	??_StartHeater
  4649  0398  3000               	movlw	0
  4650  0399                     u4437:
  4651  0399  0B89               	decfsz	9,f
  4652  039A  2B99               	goto	u4437
  4653  039B  0BE5               	decfsz	??_StartHeater,f
  4654  039C  2B99               	goto	u4437
  4655  039D  0BE6               	decfsz	??_StartHeater+1,f
  4656  039E  2B99               	goto	u4437
  4657  039F  0000               	nop
  4658                           
  4659                           ;main.c: 406:     StopTouchDetection();
  4660  03A0  3196  263F  3180   	fcall	_StopTouchDetection
  4661                           
  4662                           ;main.c: 408:     SetDimmer(35);
  4663  03A3  3042               	movlw	66
  4664  03A4  0020               	movlb	0	; select bank0
  4665  03A5  00DD               	movwf	SetDimmer@dim_percentage+3
  4666  03A6  300C               	movlw	12
  4667  03A7  00DC               	movwf	SetDimmer@dim_percentage+2
  4668  03A8  3000               	movlw	0
  4669  03A9  00DB               	movwf	SetDimmer@dim_percentage+1
  4670  03AA  3000               	movlw	0
  4671  03AB  00DA               	movwf	SetDimmer@dim_percentage
  4672  03AC  318A  226E  3180   	fcall	_SetDimmer
  4673                           
  4674                           ;main.c: 409:     _delay((unsigned long)((8000)*(8000000/4000.0)));
  4675  03AF  3052               	movlw	82
  4676  03B0  0020               	movlb	0	; select bank0
  4677  03B1  00E6               	movwf	??_StartHeater+1
  4678  03B2  302B               	movlw	43
  4679  03B3  00E5               	movwf	??_StartHeater
  4680  03B4  3000               	movlw	0
  4681  03B5                     u4447:
  4682  03B5  0B89               	decfsz	9,f
  4683  03B6  2BB5               	goto	u4447
  4684  03B7  0BE5               	decfsz	??_StartHeater,f
  4685  03B8  2BB5               	goto	u4447
  4686  03B9  0BE6               	decfsz	??_StartHeater+1,f
  4687  03BA  2BB5               	goto	u4447
  4688  03BB  0000               	nop
  4689                           
  4690                           ;main.c: 410:     StopTouchDetection();
  4691  03BC  3196  263F  3180   	fcall	_StopTouchDetection
  4692                           
  4693                           ;main.c: 414:     SetDimmer(37);
  4694  03BF  3042               	movlw	66
  4695  03C0  0020               	movlb	0	; select bank0
  4696  03C1  00DD               	movwf	SetDimmer@dim_percentage+3
  4697  03C2  3014               	movlw	20
  4698  03C3  00DC               	movwf	SetDimmer@dim_percentage+2
  4699  03C4  3000               	movlw	0
  4700  03C5  00DB               	movwf	SetDimmer@dim_percentage+1
  4701  03C6  3000               	movlw	0
  4702  03C7  00DA               	movwf	SetDimmer@dim_percentage
  4703  03C8  318A  226E  3180   	fcall	_SetDimmer
  4704                           
  4705                           ;main.c: 415:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  4706  03CB  302E               	movlw	46
  4707  03CC  0020               	movlb	0	; select bank0
  4708  03CD  00E6               	movwf	??_StartHeater+1
  4709  03CE  30A9               	movlw	169
  4710  03CF  00E5               	movwf	??_StartHeater
  4711  03D0  302F               	movlw	47
  4712  03D1                     u4457:
  4713  03D1  0B89               	decfsz	9,f
  4714  03D2  2BD1               	goto	u4457
  4715  03D3  0BE5               	decfsz	??_StartHeater,f
  4716  03D4  2BD1               	goto	u4457
  4717  03D5  0BE6               	decfsz	??_StartHeater+1,f
  4718  03D6  2BD1               	goto	u4457
  4719                           
  4720                           ;main.c: 416:     StopTouchDetection();
  4721  03D7  3196  263F  3180   	fcall	_StopTouchDetection
  4722                           
  4723                           ;main.c: 418:     SetDimmer(39);
  4724  03DA  3042               	movlw	66
  4725  03DB  0020               	movlb	0	; select bank0
  4726  03DC  00DD               	movwf	SetDimmer@dim_percentage+3
  4727  03DD  301C               	movlw	28
  4728  03DE  00DC               	movwf	SetDimmer@dim_percentage+2
  4729  03DF  3000               	movlw	0
  4730  03E0  00DB               	movwf	SetDimmer@dim_percentage+1
  4731  03E1  3000               	movlw	0
  4732  03E2  00DA               	movwf	SetDimmer@dim_percentage
  4733  03E3  318A  226E  3180   	fcall	_SetDimmer
  4734                           
  4735                           ;main.c: 419:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  4736  03E6  302E               	movlw	46
  4737  03E7  0020               	movlb	0	; select bank0
  4738  03E8  00E6               	movwf	??_StartHeater+1
  4739  03E9  30A9               	movlw	169
  4740  03EA  00E5               	movwf	??_StartHeater
  4741  03EB  302F               	movlw	47
  4742  03EC                     u4467:
  4743  03EC  0B89               	decfsz	9,f
  4744  03ED  2BEC               	goto	u4467
  4745  03EE  0BE5               	decfsz	??_StartHeater,f
  4746  03EF  2BEC               	goto	u4467
  4747  03F0  0BE6               	decfsz	??_StartHeater+1,f
  4748  03F1  2BEC               	goto	u4467
  4749                           
  4750                           ;main.c: 420:     StopTouchDetection();
  4751  03F2  3196  263F  3180   	fcall	_StopTouchDetection
  4752                           
  4753                           ;main.c: 422:     SetDimmer(41);
  4754  03F5  3042               	movlw	66
  4755  03F6  0020               	movlb	0	; select bank0
  4756  03F7  00DD               	movwf	SetDimmer@dim_percentage+3
  4757  03F8  3024               	movlw	36
  4758  03F9  00DC               	movwf	SetDimmer@dim_percentage+2
  4759  03FA  3000               	movlw	0
  4760  03FB  00DB               	movwf	SetDimmer@dim_percentage+1
  4761  03FC  3000               	movlw	0
  4762  03FD  00DA               	movwf	SetDimmer@dim_percentage
  4763  03FE  318A  226E  3180   	fcall	_SetDimmer
  4764                           
  4765                           ;main.c: 423:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  4766  0401  302E               	movlw	46
  4767  0402  0020               	movlb	0	; select bank0
  4768  0403  00E6               	movwf	??_StartHeater+1
  4769  0404  30A9               	movlw	169
  4770  0405  00E5               	movwf	??_StartHeater
  4771  0406  302F               	movlw	47
  4772  0407                     u4477:
  4773  0407  0B89               	decfsz	9,f
  4774  0408  2C07               	goto	u4477
  4775  0409  0BE5               	decfsz	??_StartHeater,f
  4776  040A  2C07               	goto	u4477
  4777  040B  0BE6               	decfsz	??_StartHeater+1,f
  4778  040C  2C07               	goto	u4477
  4779                           
  4780                           ;main.c: 424:     StopTouchDetection();
  4781  040D  3196  263F  3180   	fcall	_StopTouchDetection
  4782                           
  4783                           ;main.c: 426:     SetDimmer(43);
  4784  0410  3042               	movlw	66
  4785  0411  0020               	movlb	0	; select bank0
  4786  0412  00DD               	movwf	SetDimmer@dim_percentage+3
  4787  0413  302C               	movlw	44
  4788  0414  00DC               	movwf	SetDimmer@dim_percentage+2
  4789  0415  3000               	movlw	0
  4790  0416  00DB               	movwf	SetDimmer@dim_percentage+1
  4791  0417  3000               	movlw	0
  4792  0418  00DA               	movwf	SetDimmer@dim_percentage
  4793  0419  318A  226E  3180   	fcall	_SetDimmer
  4794                           
  4795                           ;main.c: 427:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  4796  041C  302E               	movlw	46
  4797  041D  0020               	movlb	0	; select bank0
  4798  041E  00E6               	movwf	??_StartHeater+1
  4799  041F  30A9               	movlw	169
  4800  0420  00E5               	movwf	??_StartHeater
  4801  0421  302F               	movlw	47
  4802  0422                     u4487:
  4803  0422  0B89               	decfsz	9,f
  4804  0423  2C22               	goto	u4487
  4805  0424  0BE5               	decfsz	??_StartHeater,f
  4806  0425  2C22               	goto	u4487
  4807  0426  0BE6               	decfsz	??_StartHeater+1,f
  4808  0427  2C22               	goto	u4487
  4809                           
  4810                           ;main.c: 428:     StopTouchDetection();
  4811  0428  3196  263F  3180   	fcall	_StopTouchDetection
  4812                           
  4813                           ;main.c: 430:     SetDimmer(45);
  4814  042B  3042               	movlw	66
  4815  042C  0020               	movlb	0	; select bank0
  4816  042D  00DD               	movwf	SetDimmer@dim_percentage+3
  4817  042E  3034               	movlw	52
  4818  042F  00DC               	movwf	SetDimmer@dim_percentage+2
  4819  0430  3000               	movlw	0
  4820  0431  00DB               	movwf	SetDimmer@dim_percentage+1
  4821  0432  3000               	movlw	0
  4822  0433  00DA               	movwf	SetDimmer@dim_percentage
  4823  0434  318A  226E  3180   	fcall	_SetDimmer
  4824                           
  4825                           ;main.c: 431:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  4826  0437  302E               	movlw	46
  4827  0438  0020               	movlb	0	; select bank0
  4828  0439  00E6               	movwf	??_StartHeater+1
  4829  043A  30A9               	movlw	169
  4830  043B  00E5               	movwf	??_StartHeater
  4831  043C  302F               	movlw	47
  4832  043D                     u4497:
  4833  043D  0B89               	decfsz	9,f
  4834  043E  2C3D               	goto	u4497
  4835  043F  0BE5               	decfsz	??_StartHeater,f
  4836  0440  2C3D               	goto	u4497
  4837  0441  0BE6               	decfsz	??_StartHeater+1,f
  4838  0442  2C3D               	goto	u4497
  4839                           
  4840                           ;main.c: 432:     StopTouchDetection();
  4841  0443  3196  263F  3180   	fcall	_StopTouchDetection
  4842                           
  4843                           ;main.c: 434:     SetDimmer(47);
  4844  0446  3042               	movlw	66
  4845  0447  0020               	movlb	0	; select bank0
  4846  0448  00DD               	movwf	SetDimmer@dim_percentage+3
  4847  0449  303C               	movlw	60
  4848  044A  00DC               	movwf	SetDimmer@dim_percentage+2
  4849  044B  3000               	movlw	0
  4850  044C  00DB               	movwf	SetDimmer@dim_percentage+1
  4851  044D  3000               	movlw	0
  4852  044E  00DA               	movwf	SetDimmer@dim_percentage
  4853  044F  318A  226E  3180   	fcall	_SetDimmer
  4854                           
  4855                           ;main.c: 435:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  4856  0452  302E               	movlw	46
  4857  0453  0020               	movlb	0	; select bank0
  4858  0454  00E6               	movwf	??_StartHeater+1
  4859  0455  30A9               	movlw	169
  4860  0456  00E5               	movwf	??_StartHeater
  4861  0457  302F               	movlw	47
  4862  0458                     u4507:
  4863  0458  0B89               	decfsz	9,f
  4864  0459  2C58               	goto	u4507
  4865  045A  0BE5               	decfsz	??_StartHeater,f
  4866  045B  2C58               	goto	u4507
  4867  045C  0BE6               	decfsz	??_StartHeater+1,f
  4868  045D  2C58               	goto	u4507
  4869                           
  4870                           ;main.c: 436:     StopTouchDetection();
  4871  045E  3196  263F  3180   	fcall	_StopTouchDetection
  4872                           
  4873                           ;main.c: 438:     SetDimmer(49);
  4874  0461  3042               	movlw	66
  4875  0462  0020               	movlb	0	; select bank0
  4876  0463  00DD               	movwf	SetDimmer@dim_percentage+3
  4877  0464  3044               	movlw	68
  4878  0465  00DC               	movwf	SetDimmer@dim_percentage+2
  4879  0466  3000               	movlw	0
  4880  0467  00DB               	movwf	SetDimmer@dim_percentage+1
  4881  0468  3000               	movlw	0
  4882  0469  00DA               	movwf	SetDimmer@dim_percentage
  4883  046A  318A  226E  3180   	fcall	_SetDimmer
  4884                           
  4885                           ;main.c: 439:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  4886  046D  302E               	movlw	46
  4887  046E  0020               	movlb	0	; select bank0
  4888  046F  00E6               	movwf	??_StartHeater+1
  4889  0470  30A9               	movlw	169
  4890  0471  00E5               	movwf	??_StartHeater
  4891  0472  302F               	movlw	47
  4892  0473                     u4517:
  4893  0473  0B89               	decfsz	9,f
  4894  0474  2C73               	goto	u4517
  4895  0475  0BE5               	decfsz	??_StartHeater,f
  4896  0476  2C73               	goto	u4517
  4897  0477  0BE6               	decfsz	??_StartHeater+1,f
  4898  0478  2C73               	goto	u4517
  4899                           
  4900                           ;main.c: 440:     StopTouchDetection();
  4901  0479  3196  263F  3180   	fcall	_StopTouchDetection
  4902                           
  4903                           ;main.c: 442:     SetDimmer(51);
  4904  047C  3042               	movlw	66
  4905  047D  0020               	movlb	0	; select bank0
  4906  047E  00DD               	movwf	SetDimmer@dim_percentage+3
  4907  047F  304C               	movlw	76
  4908  0480  00DC               	movwf	SetDimmer@dim_percentage+2
  4909  0481  3000               	movlw	0
  4910  0482  00DB               	movwf	SetDimmer@dim_percentage+1
  4911  0483  3000               	movlw	0
  4912  0484  00DA               	movwf	SetDimmer@dim_percentage
  4913  0485  318A  226E  3180   	fcall	_SetDimmer
  4914                           
  4915                           ;main.c: 443:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  4916  0488  302E               	movlw	46
  4917  0489  0020               	movlb	0	; select bank0
  4918  048A  00E6               	movwf	??_StartHeater+1
  4919  048B  30A9               	movlw	169
  4920  048C  00E5               	movwf	??_StartHeater
  4921  048D  302F               	movlw	47
  4922  048E                     u4527:
  4923  048E  0B89               	decfsz	9,f
  4924  048F  2C8E               	goto	u4527
  4925  0490  0BE5               	decfsz	??_StartHeater,f
  4926  0491  2C8E               	goto	u4527
  4927  0492  0BE6               	decfsz	??_StartHeater+1,f
  4928  0493  2C8E               	goto	u4527
  4929                           
  4930                           ;main.c: 444:     StopTouchDetection();
  4931  0494  3196  263F  3180   	fcall	_StopTouchDetection
  4932                           
  4933                           ;main.c: 446:     SetDimmer(53);
  4934  0497  3042               	movlw	66
  4935  0498  0020               	movlb	0	; select bank0
  4936  0499  00DD               	movwf	SetDimmer@dim_percentage+3
  4937  049A  3054               	movlw	84
  4938  049B  00DC               	movwf	SetDimmer@dim_percentage+2
  4939  049C  3000               	movlw	0
  4940  049D  00DB               	movwf	SetDimmer@dim_percentage+1
  4941  049E  3000               	movlw	0
  4942  049F  00DA               	movwf	SetDimmer@dim_percentage
  4943  04A0  318A  226E  3180   	fcall	_SetDimmer
  4944                           
  4945                           ;main.c: 447:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  4946  04A3  302E               	movlw	46
  4947  04A4  0020               	movlb	0	; select bank0
  4948  04A5  00E6               	movwf	??_StartHeater+1
  4949  04A6  30A9               	movlw	169
  4950  04A7  00E5               	movwf	??_StartHeater
  4951  04A8  302F               	movlw	47
  4952  04A9                     u4537:
  4953  04A9  0B89               	decfsz	9,f
  4954  04AA  2CA9               	goto	u4537
  4955  04AB  0BE5               	decfsz	??_StartHeater,f
  4956  04AC  2CA9               	goto	u4537
  4957  04AD  0BE6               	decfsz	??_StartHeater+1,f
  4958  04AE  2CA9               	goto	u4537
  4959                           
  4960                           ;main.c: 448:     StopTouchDetection();
  4961  04AF  3196  263F  3180   	fcall	_StopTouchDetection
  4962                           
  4963                           ;main.c: 450:     SetDimmer(55);
  4964  04B2  3042               	movlw	66
  4965  04B3  0020               	movlb	0	; select bank0
  4966  04B4  00DD               	movwf	SetDimmer@dim_percentage+3
  4967  04B5  305C               	movlw	92
  4968  04B6  00DC               	movwf	SetDimmer@dim_percentage+2
  4969  04B7  3000               	movlw	0
  4970  04B8  00DB               	movwf	SetDimmer@dim_percentage+1
  4971  04B9  3000               	movlw	0
  4972  04BA  00DA               	movwf	SetDimmer@dim_percentage
  4973  04BB  318A  226E  3180   	fcall	_SetDimmer
  4974                           
  4975                           ;main.c: 451:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  4976  04BE  302E               	movlw	46
  4977  04BF  0020               	movlb	0	; select bank0
  4978  04C0  00E6               	movwf	??_StartHeater+1
  4979  04C1  30A9               	movlw	169
  4980  04C2  00E5               	movwf	??_StartHeater
  4981  04C3  302F               	movlw	47
  4982  04C4                     u4547:
  4983  04C4  0B89               	decfsz	9,f
  4984  04C5  2CC4               	goto	u4547
  4985  04C6  0BE5               	decfsz	??_StartHeater,f
  4986  04C7  2CC4               	goto	u4547
  4987  04C8  0BE6               	decfsz	??_StartHeater+1,f
  4988  04C9  2CC4               	goto	u4547
  4989                           
  4990                           ;main.c: 452:     StopTouchDetection();
  4991  04CA  3196  263F  3180   	fcall	_StopTouchDetection
  4992                           
  4993                           ;main.c: 454:     SetDimmer(57);
  4994  04CD  3042               	movlw	66
  4995  04CE  0020               	movlb	0	; select bank0
  4996  04CF  00DD               	movwf	SetDimmer@dim_percentage+3
  4997  04D0  3064               	movlw	100
  4998  04D1  00DC               	movwf	SetDimmer@dim_percentage+2
  4999  04D2  3000               	movlw	0
  5000  04D3  00DB               	movwf	SetDimmer@dim_percentage+1
  5001  04D4  3000               	movlw	0
  5002  04D5  00DA               	movwf	SetDimmer@dim_percentage
  5003  04D6  318A  226E  3180   	fcall	_SetDimmer
  5004                           
  5005                           ;main.c: 455:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  5006  04D9  302E               	movlw	46
  5007  04DA  0020               	movlb	0	; select bank0
  5008  04DB  00E6               	movwf	??_StartHeater+1
  5009  04DC  30A9               	movlw	169
  5010  04DD  00E5               	movwf	??_StartHeater
  5011  04DE  302F               	movlw	47
  5012  04DF                     u4557:
  5013  04DF  0B89               	decfsz	9,f
  5014  04E0  2CDF               	goto	u4557
  5015  04E1  0BE5               	decfsz	??_StartHeater,f
  5016  04E2  2CDF               	goto	u4557
  5017  04E3  0BE6               	decfsz	??_StartHeater+1,f
  5018  04E4  2CDF               	goto	u4557
  5019                           
  5020                           ;main.c: 456:     StopTouchDetection();
  5021  04E5  3196  263F  3180   	fcall	_StopTouchDetection
  5022                           
  5023                           ;main.c: 458:     SetDimmer(59);
  5024  04E8  3042               	movlw	66
  5025  04E9  0020               	movlb	0	; select bank0
  5026  04EA  00DD               	movwf	SetDimmer@dim_percentage+3
  5027  04EB  306C               	movlw	108
  5028  04EC  00DC               	movwf	SetDimmer@dim_percentage+2
  5029  04ED  3000               	movlw	0
  5030  04EE  00DB               	movwf	SetDimmer@dim_percentage+1
  5031  04EF  3000               	movlw	0
  5032  04F0  00DA               	movwf	SetDimmer@dim_percentage
  5033  04F1  318A  226E  3180   	fcall	_SetDimmer
  5034                           
  5035                           ;main.c: 459:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  5036  04F4  302E               	movlw	46
  5037  04F5  0020               	movlb	0	; select bank0
  5038  04F6  00E6               	movwf	??_StartHeater+1
  5039  04F7  30A9               	movlw	169
  5040  04F8  00E5               	movwf	??_StartHeater
  5041  04F9  302F               	movlw	47
  5042  04FA                     u4567:
  5043  04FA  0B89               	decfsz	9,f
  5044  04FB  2CFA               	goto	u4567
  5045  04FC  0BE5               	decfsz	??_StartHeater,f
  5046  04FD  2CFA               	goto	u4567
  5047  04FE  0BE6               	decfsz	??_StartHeater+1,f
  5048  04FF  2CFA               	goto	u4567
  5049                           
  5050                           ;main.c: 460:     StopTouchDetection();
  5051  0500  3196  263F  3180   	fcall	_StopTouchDetection
  5052                           
  5053                           ;main.c: 462:     SetDimmer(61);
  5054  0503  3042               	movlw	66
  5055  0504  0020               	movlb	0	; select bank0
  5056  0505  00DD               	movwf	SetDimmer@dim_percentage+3
  5057  0506  3074               	movlw	116
  5058  0507  00DC               	movwf	SetDimmer@dim_percentage+2
  5059  0508  3000               	movlw	0
  5060  0509  00DB               	movwf	SetDimmer@dim_percentage+1
  5061  050A  3000               	movlw	0
  5062  050B  00DA               	movwf	SetDimmer@dim_percentage
  5063  050C  318A  226E  3180   	fcall	_SetDimmer
  5064                           
  5065                           ;main.c: 463:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  5066  050F  302E               	movlw	46
  5067  0510  0020               	movlb	0	; select bank0
  5068  0511  00E6               	movwf	??_StartHeater+1
  5069  0512  30A9               	movlw	169
  5070  0513  00E5               	movwf	??_StartHeater
  5071  0514  302F               	movlw	47
  5072  0515                     u4577:
  5073  0515  0B89               	decfsz	9,f
  5074  0516  2D15               	goto	u4577
  5075  0517  0BE5               	decfsz	??_StartHeater,f
  5076  0518  2D15               	goto	u4577
  5077  0519  0BE6               	decfsz	??_StartHeater+1,f
  5078  051A  2D15               	goto	u4577
  5079                           
  5080                           ;main.c: 464:     StopTouchDetection();
  5081  051B  3196  263F  3180   	fcall	_StopTouchDetection
  5082                           
  5083                           ;main.c: 466:     SetDimmer(63);
  5084  051E  3042               	movlw	66
  5085  051F  0020               	movlb	0	; select bank0
  5086  0520  00DD               	movwf	SetDimmer@dim_percentage+3
  5087  0521  307C               	movlw	124
  5088  0522  00DC               	movwf	SetDimmer@dim_percentage+2
  5089  0523  3000               	movlw	0
  5090  0524  00DB               	movwf	SetDimmer@dim_percentage+1
  5091  0525  3000               	movlw	0
  5092  0526  00DA               	movwf	SetDimmer@dim_percentage
  5093  0527  318A  226E  3180   	fcall	_SetDimmer
  5094                           
  5095                           ;main.c: 467:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  5096  052A  302E               	movlw	46
  5097  052B  0020               	movlb	0	; select bank0
  5098  052C  00E6               	movwf	??_StartHeater+1
  5099  052D  30A9               	movlw	169
  5100  052E  00E5               	movwf	??_StartHeater
  5101  052F  302F               	movlw	47
  5102  0530                     u4587:
  5103  0530  0B89               	decfsz	9,f
  5104  0531  2D30               	goto	u4587
  5105  0532  0BE5               	decfsz	??_StartHeater,f
  5106  0533  2D30               	goto	u4587
  5107  0534  0BE6               	decfsz	??_StartHeater+1,f
  5108  0535  2D30               	goto	u4587
  5109                           
  5110                           ;main.c: 468:     StopTouchDetection();
  5111  0536  3196  263F  3180   	fcall	_StopTouchDetection
  5112                           
  5113                           ;main.c: 470:     SetDimmer(65);
  5114  0539  3042               	movlw	66
  5115  053A  0020               	movlb	0	; select bank0
  5116  053B  00DD               	movwf	SetDimmer@dim_percentage+3
  5117  053C  3082               	movlw	130
  5118  053D  00DC               	movwf	SetDimmer@dim_percentage+2
  5119  053E  3000               	movlw	0
  5120  053F  00DB               	movwf	SetDimmer@dim_percentage+1
  5121  0540  3000               	movlw	0
  5122  0541  00DA               	movwf	SetDimmer@dim_percentage
  5123  0542  318A  226E  3180   	fcall	_SetDimmer
  5124                           
  5125                           ;main.c: 471:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  5126  0545  302E               	movlw	46
  5127  0546  0020               	movlb	0	; select bank0
  5128  0547  00E6               	movwf	??_StartHeater+1
  5129  0548  30A9               	movlw	169
  5130  0549  00E5               	movwf	??_StartHeater
  5131  054A  302F               	movlw	47
  5132  054B                     u4597:
  5133  054B  0B89               	decfsz	9,f
  5134  054C  2D4B               	goto	u4597
  5135  054D  0BE5               	decfsz	??_StartHeater,f
  5136  054E  2D4B               	goto	u4597
  5137  054F  0BE6               	decfsz	??_StartHeater+1,f
  5138  0550  2D4B               	goto	u4597
  5139                           
  5140                           ;main.c: 472:     StopTouchDetection();
  5141  0551  3196  263F  3180   	fcall	_StopTouchDetection
  5142                           
  5143                           ;main.c: 474:     SetDimmer(67);
  5144  0554  3042               	movlw	66
  5145  0555  0020               	movlb	0	; select bank0
  5146  0556  00DD               	movwf	SetDimmer@dim_percentage+3
  5147  0557  3086               	movlw	134
  5148  0558  00DC               	movwf	SetDimmer@dim_percentage+2
  5149  0559  3000               	movlw	0
  5150  055A  00DB               	movwf	SetDimmer@dim_percentage+1
  5151  055B  3000               	movlw	0
  5152  055C  00DA               	movwf	SetDimmer@dim_percentage
  5153  055D  318A  226E  3180   	fcall	_SetDimmer
  5154                           
  5155                           ;main.c: 475:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  5156  0560  302E               	movlw	46
  5157  0561  0020               	movlb	0	; select bank0
  5158  0562  00E6               	movwf	??_StartHeater+1
  5159  0563  30A9               	movlw	169
  5160  0564  00E5               	movwf	??_StartHeater
  5161  0565  302F               	movlw	47
  5162  0566                     u4607:
  5163  0566  0B89               	decfsz	9,f
  5164  0567  2D66               	goto	u4607
  5165  0568  0BE5               	decfsz	??_StartHeater,f
  5166  0569  2D66               	goto	u4607
  5167  056A  0BE6               	decfsz	??_StartHeater+1,f
  5168  056B  2D66               	goto	u4607
  5169                           
  5170                           ;main.c: 476:     StopTouchDetection();
  5171  056C  3196  263F  3180   	fcall	_StopTouchDetection
  5172                           
  5173                           ;main.c: 478:     SetDimmer(69);
  5174  056F  3042               	movlw	66
  5175  0570  0020               	movlb	0	; select bank0
  5176  0571  00DD               	movwf	SetDimmer@dim_percentage+3
  5177  0572  308A               	movlw	138
  5178  0573  00DC               	movwf	SetDimmer@dim_percentage+2
  5179  0574  3000               	movlw	0
  5180  0575  00DB               	movwf	SetDimmer@dim_percentage+1
  5181  0576  3000               	movlw	0
  5182  0577  00DA               	movwf	SetDimmer@dim_percentage
  5183  0578  318A  226E  3180   	fcall	_SetDimmer
  5184                           
  5185                           ;main.c: 479:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  5186  057B  302E               	movlw	46
  5187  057C  0020               	movlb	0	; select bank0
  5188  057D  00E6               	movwf	??_StartHeater+1
  5189  057E  30A9               	movlw	169
  5190  057F  00E5               	movwf	??_StartHeater
  5191  0580  302F               	movlw	47
  5192  0581                     u4617:
  5193  0581  0B89               	decfsz	9,f
  5194  0582  2D81               	goto	u4617
  5195  0583  0BE5               	decfsz	??_StartHeater,f
  5196  0584  2D81               	goto	u4617
  5197  0585  0BE6               	decfsz	??_StartHeater+1,f
  5198  0586  2D81               	goto	u4617
  5199                           
  5200                           ;main.c: 480:     StopTouchDetection();
  5201  0587  3196  263F  3180   	fcall	_StopTouchDetection
  5202                           
  5203                           ;main.c: 482:     SetDimmer(71);
  5204  058A  3042               	movlw	66
  5205  058B  0020               	movlb	0	; select bank0
  5206  058C  00DD               	movwf	SetDimmer@dim_percentage+3
  5207  058D  308E               	movlw	142
  5208  058E  00DC               	movwf	SetDimmer@dim_percentage+2
  5209  058F  3000               	movlw	0
  5210  0590  00DB               	movwf	SetDimmer@dim_percentage+1
  5211  0591  3000               	movlw	0
  5212  0592  00DA               	movwf	SetDimmer@dim_percentage
  5213  0593  318A  226E  3180   	fcall	_SetDimmer
  5214                           
  5215                           ;main.c: 483:     _delay((unsigned long)((4500)*(8000000/4000.0)));
  5216  0596  302E               	movlw	46
  5217  0597  0020               	movlb	0	; select bank0
  5218  0598  00E6               	movwf	??_StartHeater+1
  5219  0599  30A9               	movlw	169
  5220  059A  00E5               	movwf	??_StartHeater
  5221  059B  302F               	movlw	47
  5222  059C                     u4627:
  5223  059C  0B89               	decfsz	9,f
  5224  059D  2D9C               	goto	u4627
  5225  059E  0BE5               	decfsz	??_StartHeater,f
  5226  059F  2D9C               	goto	u4627
  5227  05A0  0BE6               	decfsz	??_StartHeater+1,f
  5228  05A1  2D9C               	goto	u4627
  5229                           
  5230                           ;main.c: 484:     StopTouchDetection();
  5231  05A2  3196  263F  3180   	fcall	_StopTouchDetection
  5232                           
  5233                           ;main.c: 488:     StartStop_AlarmLED_Blink(0);
  5234  05A5  3000               	movlw	0
  5235  05A6  3193  2307  3180   	fcall	_StartStop_AlarmLED_Blink
  5236                           
  5237                           ;main.c: 489:     StartStop_Dimmer(0);
  5238  05A9  3000               	movlw	0
  5239  05AA  3194  240C  3180   	fcall	_StartStop_Dimmer
  5240                           
  5241                           ;main.c: 490:     StartStop_Fan(1);
  5242  05AD  3001               	movlw	1
  5243  05AE  3192  22C3  3180   	fcall	_StartStop_Fan
  5244                           
  5245                           ;main.c: 491:     for (uint8_t i = 0; i < 18; i++){
  5246  05B1  0020               	movlb	0	; select bank0
  5247  05B2  01E7               	clrf	StartHeater@i
  5248  05B3                     l4688:
  5249                           
  5250                           ;main.c: 493:         _delay((unsigned long)((10000)*(8000000/4000.0)));
  5251  05B3  3066               	movlw	102
  5252  05B4  0020               	movlb	0	; select bank0
  5253  05B5  00E6               	movwf	??_StartHeater+1
  5254  05B6  3076               	movlw	118
  5255  05B7  00E5               	movwf	??_StartHeater
  5256  05B8  30C1               	movlw	193
  5257  05B9                     u4637:
  5258  05B9  0B89               	decfsz	9,f
  5259  05BA  2DB9               	goto	u4637
  5260  05BB  0BE5               	decfsz	??_StartHeater,f
  5261  05BC  2DB9               	goto	u4637
  5262  05BD  0BE6               	decfsz	??_StartHeater+1,f
  5263  05BE  2DB9               	goto	u4637
  5264                           
  5265                           ;main.c: 494:     }
  5266  05BF  3001               	movlw	1
  5267  05C0  0020               	movlb	0	; select bank0
  5268  05C1  00E5               	movwf	??_StartHeater
  5269  05C2  0865               	movf	??_StartHeater,w
  5270  05C3  07E7               	addwf	StartHeater@i,f
  5271  05C4  3012               	movlw	18
  5272  05C5  0267               	subwf	StartHeater@i,w
  5273  05C6  1C03               	skipc
  5274  05C7  2DB3               	goto	l4688
  5275                           
  5276                           ;main.c: 495:     StartStop_Fan(0);
  5277  05C8  3000               	movlw	0
  5278  05C9  3192  22C3  3180   	fcall	_StartStop_Fan
  5279                           
  5280                           ;main.c: 496:     StartStop_Buzzer(1);
  5281  05CC  3001               	movlw	1
  5282  05CD  3192  22B9  3180   	fcall	_StartStop_Buzzer
  5283                           
  5284                           ;main.c: 497:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  5285  05D0  300B               	movlw	11
  5286  05D1  0020               	movlb	0	; select bank0
  5287  05D2  00E6               	movwf	??_StartHeater+1
  5288  05D3  3026               	movlw	38
  5289  05D4  00E5               	movwf	??_StartHeater
  5290  05D5  305D               	movlw	93
  5291  05D6                     u4647:
  5292  05D6  0B89               	decfsz	9,f
  5293  05D7  2DD6               	goto	u4647
  5294  05D8  0BE5               	decfsz	??_StartHeater,f
  5295  05D9  2DD6               	goto	u4647
  5296  05DA  0BE6               	decfsz	??_StartHeater+1,f
  5297  05DB  2DD6               	goto	u4647
  5298  05DC  3200               	nop2
  5299                           
  5300                           ;main.c: 498:     StartStop_Buzzer(0);
  5301  05DD  3000               	movlw	0
  5302  05DE  3192  22B9         	fcall	_StartStop_Buzzer
  5303  05E0  0008               	return
  5304  05E1                     __end_of_StartHeater:
  5305                           
  5306                           	psect	text3
  5307  163F                     __ptext3:	
  5308 ;; *************** function _StopTouchDetection *****************
  5309 ;; Defined at:
  5310 ;;		line 245 in file "main.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;		None
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;		None
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  1    wreg      void 
  5317 ;; Registers used:
  5318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/1
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5327 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5328 ;;Total ram usage:        2 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:   12
  5331 ;; This function calls:
  5332 ;;		_Init_Function
  5333 ;;		_MTOUCH_Button_isPressed
  5334 ;;		_MTOUCH_Service_Mainloop
  5335 ;;		_StartStop_Buzzer
  5336 ;; This function is called by:
  5337 ;;		_StartHeater
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           
  5342                           ;psect for function _StopTouchDetection
  5343  163F                     _StopTouchDetection:
  5344                           
  5345                           ;main.c: 248:     if (1 == MTOUCH_Service_Mainloop()) {
  5346                           
  5347                           ;incstack = 0
  5348                           ; Regs used in _StopTouchDetection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5349  163F  3195  25F7  3196   	fcall	_MTOUCH_Service_Mainloop
  5350  1642  3A01               	xorlw	1
  5351  1643  1D03               	skipz
  5352  1644  0008               	return
  5353                           
  5354                           ;main.c: 250:         if (1 == MTOUCH_Button_isPressed(T_stop)){
  5355  1645  3001               	movlw	1
  5356  1646  3194  24DC  3196   	fcall	_MTOUCH_Button_isPressed
  5357  1649  3A01               	xorlw	1
  5358  164A  1D03               	skipz
  5359  164B  0008               	return
  5360                           
  5361                           ;main.c: 252:             StartStop_Buzzer(1);
  5362  164C  3001               	movlw	1
  5363  164D  3192  22B9  3196   	fcall	_StartStop_Buzzer
  5364                           
  5365                           ;main.c: 253:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  5366  1650  300B               	movlw	11
  5367  1651  0020               	movlb	0	; select bank0
  5368  1652  00E4               	movwf	??_StopTouchDetection+1
  5369  1653  3026               	movlw	38
  5370  1654  00E3               	movwf	??_StopTouchDetection
  5371  1655  305D               	movlw	93
  5372  1656                     u4657:
  5373  1656  0B89               	decfsz	9,f
  5374  1657  2E56               	goto	u4657
  5375  1658  0BE3               	decfsz	??_StopTouchDetection,f
  5376  1659  2E56               	goto	u4657
  5377  165A  0BE4               	decfsz	??_StopTouchDetection+1,f
  5378  165B  2E56               	goto	u4657
  5379  165C  3200               	nop2
  5380                           
  5381                           ;main.c: 254:             StartStop_Buzzer(0);
  5382  165D  3000               	movlw	0
  5383  165E  3192  22B9  3196   	fcall	_StartStop_Buzzer
  5384                           
  5385                           ;main.c: 256:             Init_Function();
  5386  1661  3194  2436         	fcall	_Init_Function
  5387                           
  5388                           ;main.c: 258:         }
  5389  1663  0008               	return
  5390  1664                     __end_of_StopTouchDetection:
  5391                           
  5392                           	psect	text4
  5393  15F7                     __ptext4:	
  5394 ;; *************** function _MTOUCH_Service_Mainloop *****************
  5395 ;; Defined at:
  5396 ;;		line 96 in file "mcc_generated_files/mtouch/mtouch.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;		None
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;		None
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      _Bool 
  5403 ;; Registers used:
  5404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/1
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5412 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5413 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5414 ;;Total ram usage:        1 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:   11
  5417 ;; This function calls:
  5418 ;;		_MTOUCH_Button_ServiceAll
  5419 ;;		_MTOUCH_Initialize
  5420 ;;		_MTOUCH_Sensor_SampleAll
  5421 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  5422 ;;		_MTOUCH_Tick
  5423 ;;		_MTOUCH_needReburst
  5424 ;; This function is called by:
  5425 ;;		_StartTouchDetection
  5426 ;;		_StopTouchDetection
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           
  5431                           ;psect for function _MTOUCH_Service_Mainloop
  5432  15F7                     _MTOUCH_Service_Mainloop:
  5433                           
  5434                           ;mcc_generated_files/mtouch/mtouch.c: 99:     if(mtouch_request_init)
  5435                           
  5436                           ;incstack = 0
  5437                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5438  15F7  0021               	movlb	1	; select bank1
  5439  15F8  084A               	movf	_mtouch_request_init^(0+128),w
  5440  15F9  1903               	btfsc	3,2
  5441  15FA  2DFF               	goto	l4270
  5442                           
  5443                           ;mcc_generated_files/mtouch/mtouch.c: 100:     {;mcc_generated_files/mtouch/mtouch.c: 10
      +                          1:         MTOUCH_Initialize();
  5444  15FB  3192  22FB  3195   	fcall	_MTOUCH_Initialize
  5445                           
  5446                           ;mcc_generated_files/mtouch/mtouch.c: 102:         mtouch_request_init = 0;
  5447  15FE  01CA               	clrf	_mtouch_request_init^(0+128)
  5448  15FF                     l4270:
  5449                           
  5450                           ;mcc_generated_files/mtouch/mtouch.c: 106:     mtouch_time_toScan = 1;
  5451  15FF  01CB               	clrf	_mtouch_time_toScan^(0+128)
  5452  1600  0ACB               	incf	_mtouch_time_toScan^(0+128),f
  5453                           
  5454                           ;mcc_generated_files/mtouch/mtouch.c: 109:     {;mcc_generated_files/mtouch/mtouch.c: 11
      +                          0:         if(MTOUCH_Sensor_SampleAll() == 0)
  5455                           
  5456                           ;mcc_generated_files/mtouch/mtouch.c: 108:     if(mtouch_time_toScan)
  5457  1601  3194  2421  3195   	fcall	_MTOUCH_Sensor_SampleAll
  5458  1604  3A00               	xorlw	0
  5459  1605  1D03               	skipz
  5460  1606  2E09               	goto	l4280
  5461                           
  5462                           ;mcc_generated_files/mtouch/mtouch.c: 111:             return 0;
  5463  1607  3000               	movlw	0
  5464  1608  0008               	return
  5465  1609                     l4280:
  5466                           
  5467                           ;mcc_generated_files/mtouch/mtouch.c: 113:             MTOUCH_Button_ServiceAll();
  5468  1609  3193  233A  3195   	fcall	_MTOUCH_Button_ServiceAll
  5469                           
  5470                           ;mcc_generated_files/mtouch/mtouch.c: 114:             mtouch_time_toScan = MTOUCH_needR
      +                          eburst();
  5471  160C  3180  2002  3195   	fcall	_MTOUCH_needReburst
  5472  160F  00AB               	movwf	??_MTOUCH_Service_Mainloop
  5473  1610  082B               	movf	??_MTOUCH_Service_Mainloop,w
  5474  1611  0021               	movlb	1	; select bank1
  5475  1612  00CB               	movwf	_mtouch_time_toScan^(0+128)
  5476                           
  5477                           ;mcc_generated_files/mtouch/mtouch.c: 115:             MTOUCH_Sensor_Sampled_ResetAll();
  5478  1613  3193  23D0  3195   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  5479                           
  5480                           ;mcc_generated_files/mtouch/mtouch.c: 116:             MTOUCH_Tick();
  5481  1616  3192  225A         	fcall	_MTOUCH_Tick
  5482                           
  5483                           ;mcc_generated_files/mtouch/mtouch.c: 117:             return 1;
  5484  1618  3001               	movlw	1
  5485  1619  0008               	return
  5486  161A                     __end_of_MTOUCH_Service_Mainloop:
  5487                           
  5488                           	psect	text5
  5489  0002                     __ptext5:	
  5490 ;; *************** function _MTOUCH_needReburst *****************
  5491 ;; Defined at:
  5492 ;;		line 140 in file "mcc_generated_files/mtouch/mtouch.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;		None
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  needReburst     1    0        _Bool 
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      _Bool 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2
  5501 ;; Tracked objects:
  5502 ;;		On entry : 1F/0
  5503 ;;		On exit  : 1F/0
  5504 ;;		Unchanged: 1F/0
  5505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5509 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5510 ;;Total ram usage:        1 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    5
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_MTOUCH_Service_Mainloop
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           
  5521                           ;psect for function _MTOUCH_needReburst
  5522  0002                     _MTOUCH_needReburst:
  5523                           
  5524                           ;mcc_generated_files/mtouch/mtouch.c: 144:     return needReburst;
  5525                           
  5526                           ;incstack = 0
  5527                           ; Regs used in _MTOUCH_needReburst: [wreg+status,2]
  5528  0002  3000               	movlw	0
  5529  0003  0008               	return
  5530  0004                     __end_of_MTOUCH_needReburst:
  5531                           
  5532                           	psect	text6
  5533  125A                     __ptext6:	
  5534 ;; *************** function _MTOUCH_Tick *****************
  5535 ;; Defined at:
  5536 ;;		line 130 in file "mcc_generated_files/mtouch/mtouch.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;		None
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;		None
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/1
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5554 ;;Total ram usage:        0 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    7
  5557 ;; This function calls:
  5558 ;;		_MTOUCH_Button_Tick
  5559 ;; This function is called by:
  5560 ;;		_MTOUCH_Service_Mainloop
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           
  5565                           ;psect for function _MTOUCH_Tick
  5566  125A                     _MTOUCH_Tick:
  5567                           
  5568                           ;mcc_generated_files/mtouch/mtouch.c: 132:     MTOUCH_Button_Tick();
  5569                           
  5570                           ;incstack = 0
  5571                           ; Regs used in _MTOUCH_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5572  125A  3194  244C         	fcall	_MTOUCH_Button_Tick
  5573  125C  0008               	return
  5574  125D                     __end_of_MTOUCH_Tick:
  5575                           
  5576                           	psect	text7
  5577  144C                     __ptext7:	
  5578 ;; *************** function _MTOUCH_Button_Tick *****************
  5579 ;; Defined at:
  5580 ;;		line 289 in file "mcc_generated_files/mtouch/mtouch_button.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;		None
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  i               1    4[COMMON] unsigned char 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  1    wreg      void 
  5587 ;; Registers used:
  5588 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/1
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;Total ram usage:        2 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:    6
  5601 ;; This function calls:
  5602 ;;		_Button_Tick_helper
  5603 ;; This function is called by:
  5604 ;;		_MTOUCH_Tick
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           
  5609                           ;psect for function _MTOUCH_Button_Tick
  5610  144C                     _MTOUCH_Button_Tick:
  5611                           
  5612                           ;mcc_generated_files/mtouch/mtouch_button.c: 291:     uint8_t i;;mcc_generated_files/mto
      +                          uch/mtouch_button.c: 292:     for (i = 0; i < 2u; i++)
  5613                           
  5614                           ;incstack = 0
  5615                           ; Regs used in _MTOUCH_Button_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5616  144C  01F4               	clrf	MTOUCH_Button_Tick@i
  5617  144D                     l4178:
  5618                           
  5619                           ;mcc_generated_files/mtouch/mtouch_button.c: 293:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 294:         Button_Tick_helper(&mtouch_button[i]);
  5620  144D  0874               	movf	MTOUCH_Button_Tick@i,w
  5621  144E  00F3               	movwf	??_MTOUCH_Button_Tick
  5622  144F  3003               	movlw	3
  5623  1450                     u3715:
  5624  1450  35F3               	lslf	??_MTOUCH_Button_Tick,f
  5625  1451  3EFF               	addlw	-1
  5626  1452  1D03               	skipz
  5627  1453  2C50               	goto	u3715
  5628  1454  3573               	lslf	??_MTOUCH_Button_Tick,w
  5629  1455  3E20               	addlw	(low (_mtouch_button| (0+256)))& (0+255)
  5630  1456  3196  2689  3194   	fcall	_Button_Tick_helper
  5631                           
  5632                           ;mcc_generated_files/mtouch/mtouch_button.c: 295:     }
  5633  1459  3001               	movlw	1
  5634  145A  00F3               	movwf	??_MTOUCH_Button_Tick
  5635  145B  0873               	movf	??_MTOUCH_Button_Tick,w
  5636  145C  07F4               	addwf	MTOUCH_Button_Tick@i,f
  5637  145D  3002               	movlw	2
  5638  145E  0274               	subwf	MTOUCH_Button_Tick@i,w
  5639  145F  1803               	btfsc	3,0
  5640  1460  0008               	return
  5641  1461  2C4D               	goto	l4178
  5642  1462                     __end_of_MTOUCH_Button_Tick:
  5643                           
  5644                           	psect	text8
  5645  1689                     __ptext8:	
  5646 ;; *************** function _Button_Tick_helper *****************
  5647 ;; Defined at:
  5648 ;;		line 297 in file "mcc_generated_files/mtouch/mtouch_button.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  button          1    wreg     PTR struct .
  5651 ;;		 -> mtouch_button(32), 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  button          1    2[COMMON] PTR struct .
  5654 ;;		 -> mtouch_button(32), 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      void 
  5657 ;; Registers used:
  5658 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/1
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5667 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5668 ;;Total ram usage:        3 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:    5
  5671 ;; This function calls:
  5672 ;;		Nothing
  5673 ;; This function is called by:
  5674 ;;		_MTOUCH_Button_Tick
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           
  5679                           ;psect for function _Button_Tick_helper
  5680  1689                     _Button_Tick_helper:
  5681                           
  5682                           ;incstack = 0
  5683                           ; Regs used in _Button_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
  5684                           ;Button_Tick_helper@button stored from wreg
  5685  1689  00F2               	movwf	Button_Tick_helper@button
  5686                           
  5687                           ;mcc_generated_files/mtouch/mtouch_button.c: 297: static void Button_Tick_helper(mtouch_
      +                          button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 298: {;mcc_generated_files
      +                          /mtouch/mtouch_button.c: 300:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  5688  168A  0872               	movf	Button_Tick_helper@button,w
  5689  168B  3E02               	addlw	2
  5690  168C  0086               	movwf	6
  5691  168D  3001               	movlw	1	; select bank2/3
  5692  168E  0087               	movwf	7
  5693  168F  3002               	movlw	2
  5694  1690  0601               	xorwf	1,w
  5695  1691  1D03               	btfss	3,2
  5696  1692  0008               	return
  5697                           
  5698                           ;mcc_generated_files/mtouch/mtouch_button.c: 301:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 302:         (button->counter)++;
  5699  1693  0872               	movf	Button_Tick_helper@button,w
  5700  1694  3E0A               	addlw	10
  5701  1695  0086               	movwf	6
  5702  1696  3001               	movlw	1	; select bank2/3
  5703  1697  0087               	movwf	7
  5704  1698  3001               	movlw	1
  5705  1699  0781               	addwf	1,f
  5706  169A  3141               	addfsr 1,1
  5707  169B  1803               	skipnc
  5708  169C  0A81               	incf	1,f
  5709                           
  5710                           ;mcc_generated_files/mtouch/mtouch_button.c: 303:         if (button->counter == (mtouch
      +                          _button_statecounter_t)0)
  5711  169D  0872               	movf	Button_Tick_helper@button,w
  5712  169E  3E0A               	addlw	10
  5713  169F  0086               	movwf	6
  5714  16A0  3001               	movlw	1	; select bank2/3
  5715  16A1  0087               	movwf	7
  5716  16A2  0016               	moviw fsr1++
  5717  16A3  0401               	iorwf	1,w
  5718  16A4  1D03               	btfss	3,2
  5719  16A5  0008               	return
  5720                           
  5721                           ;mcc_generated_files/mtouch/mtouch_button.c: 304:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 305:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
  5722  16A6  0872               	movf	Button_Tick_helper@button,w
  5723  16A7  3E0A               	addlw	10
  5724  16A8  0086               	movwf	6
  5725  16A9  3001               	movlw	1	; select bank2/3
  5726  16AA  0087               	movwf	7
  5727  16AB  30FF               	movlw	255
  5728  16AC  3FC0               	movwi [0]fsr1
  5729  16AD  30FF               	movlw	255
  5730  16AE  3FC1               	movwi [1]fsr1
  5731  16AF  0008               	return
  5732  16B0                     __end_of_Button_Tick_helper:
  5733                           
  5734                           	psect	text9
  5735  1421                     __ptext9:	
  5736 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  5737 ;; Defined at:
  5738 ;;		line 187 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;		None
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;  sensor          1    9[BANK0 ] enum E2661
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      _Bool 
  5745 ;; Registers used:
  5746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5747 ;; Tracked objects:
  5748 ;;		On entry : 1F/1
  5749 ;;		On exit  : 1F/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5753 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;Total ram usage:        2 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:   10
  5759 ;; This function calls:
  5760 ;;		_Sensor_Service
  5761 ;; This function is called by:
  5762 ;;		_MTOUCH_Service_Mainloop
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           
  5767                           ;psect for function _MTOUCH_Sensor_SampleAll
  5768  1421                     _MTOUCH_Sensor_SampleAll:
  5769                           
  5770                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 189:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 190:     for (sensor = 0; sensor < (2u); sens
      +                          or++)
  5771                           
  5772                           ;incstack = 0
  5773                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5774  1421  0020               	movlb	0	; select bank0
  5775  1422  01A9               	clrf	MTOUCH_Sensor_SampleAll@sensor
  5776  1423                     l4200:
  5777                           
  5778                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 191:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 192:         if(Sensor_Service(sensor)!= MTOUCH_SENSOR_ERROR_none)
  5779  1423  0829               	movf	MTOUCH_Sensor_SampleAll@sensor,w
  5780  1424  3197  27B3  3194   	fcall	_Sensor_Service
  5781  1427  3A00               	xorlw	0
  5782  1428  1903               	skipnz
  5783  1429  2C2C               	goto	l4206
  5784                           
  5785                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 193:             return 0;
  5786  142A  3000               	movlw	0
  5787  142B  0008               	return
  5788  142C                     l4206:
  5789                           
  5790                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 194:     }
  5791  142C  3001               	movlw	1
  5792  142D  00A8               	movwf	??_MTOUCH_Sensor_SampleAll
  5793  142E  0828               	movf	??_MTOUCH_Sensor_SampleAll,w
  5794  142F  07A9               	addwf	MTOUCH_Sensor_SampleAll@sensor,f
  5795  1430  3002               	movlw	2
  5796  1431  0229               	subwf	MTOUCH_Sensor_SampleAll@sensor,w
  5797  1432  1C03               	skipc
  5798  1433  2C23               	goto	l4200
  5799                           
  5800                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 195:     return 1;
  5801  1434  3001               	movlw	1
  5802  1435  0008               	return
  5803  1436                     __end_of_MTOUCH_Sensor_SampleAll:
  5804                           
  5805                           	psect	text10
  5806  17B3                     __ptext10:	
  5807 ;; *************** function _Sensor_Service *****************
  5808 ;; Defined at:
  5809 ;;		line 233 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  name            1    wreg     enum E2661
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  name            1    5[BANK0 ] enum E2661
  5814 ;;  sensor          1    7[BANK0 ] PTR struct .
  5815 ;;		 -> mtouch_sensor(18), 
  5816 ;;  error           1    6[BANK0 ] enum E2664
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  1    wreg      enum E2664
  5819 ;; Registers used:
  5820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5821 ;; Tracked objects:
  5822 ;;		On entry : 1F/0
  5823 ;;		On exit  : 1F/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5828 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5830 ;;Total ram usage:        5 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; Hardware stack levels required when called:    9
  5833 ;; This function calls:
  5834 ;;		_Sensor_Acquisition
  5835 ;;		_Sensor_DefaultCallback
  5836 ;;		_Sensor_RawSample_Update
  5837 ;;		_Sensor_isEnabled
  5838 ;;		_Sensor_setSampled
  5839 ;;		___bmul
  5840 ;; This function is called by:
  5841 ;;		_MTOUCH_Sensor_SampleAll
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           
  5846                           ;psect for function _Sensor_Service
  5847  17B3                     _Sensor_Service:
  5848                           
  5849                           ;incstack = 0
  5850                           ; Regs used in _Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5851                           ;Sensor_Service@name stored from wreg
  5852  17B3  00A5               	movwf	Sensor_Service@name
  5853                           
  5854                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 233: static enum mtouch_sensor_error Sensor
      +                          _Service(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 234:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 235:     mtouch_sensor_t* sensor = &mtouc
      +                          h_sensor[name];
  5855  17B4  3009               	movlw	9
  5856  17B5  00A3               	movwf	??_Sensor_Service
  5857  17B6  0823               	movf	??_Sensor_Service,w
  5858  17B7  00F0               	movwf	___bmul@multiplicand
  5859  17B8  0825               	movf	Sensor_Service@name,w
  5860  17B9  3193  2369  3197   	fcall	___bmul
  5861  17BC  3EB0               	addlw	(low (_mtouch_sensor| 0))& (0+255)
  5862  17BD  0020               	movlb	0	; select bank0
  5863  17BE  00A4               	movwf	??_Sensor_Service+1
  5864  17BF  0824               	movf	??_Sensor_Service+1,w
  5865  17C0  00A7               	movwf	Sensor_Service@sensor
  5866                           
  5867                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 236:     enum mtouch_sensor_error error = S
      +                          ensor_Acquisition(sensor);
  5868  17C1  0827               	movf	Sensor_Service@sensor,w
  5869  17C2  3188  200E  3197   	fcall	_Sensor_Acquisition
  5870  17C5  00A3               	movwf	??_Sensor_Service
  5871  17C6  0823               	movf	??_Sensor_Service,w
  5872  17C7  00A6               	movwf	Sensor_Service@error
  5873                           
  5874                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 239:     switch(error)
  5875  17C8  2FE1               	goto	l4120
  5876  17C9                     l4112:
  5877                           
  5878                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 244:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 249:                 if(!lowpowerActivated)
  5879  17C9  0827               	movf	Sensor_Service@sensor,w
  5880  17CA  3193  232D  3197   	fcall	_Sensor_isEnabled
  5881  17CD  3A00               	xorlw	0
  5882  17CE  1903               	skipnz
  5883  17CF  2FFE               	goto	l4122
  5884                           
  5885                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 250:                 {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 251:                     Sensor_RawSample_Update(sensor);
  5886  17D0  0827               	movf	Sensor_Service@sensor,w
  5887  17D1  3194  24A9  3197   	fcall	_Sensor_RawSample_Update
  5888                           
  5889                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 253:                 Sensor_setSampled(sens
      +                          or);
  5890                           
  5891                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 252:                 }
  5892  17D4  0020               	movlb	0	; select bank0
  5893  17D5  0827               	movf	Sensor_Service@sensor,w
  5894  17D6  3187  27F9  3197   	fcall	_Sensor_setSampled
  5895                           
  5896                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 254:                 callback_sampled(name)
      +                          ;
  5897  17D9  0825               	movf	Sensor_Service@name,w
  5898  17DA  00A3               	movwf	??_Sensor_Service
  5899  17DB  0823               	movf	??_Sensor_Service,w
  5900  17DC  00F0               	movwf	Sensor_DefaultCallback@sensor
  5901  17DD  3192  224C  3197   	fcall	_Sensor_DefaultCallback
  5902  17E0  2FFE               	goto	l4122
  5903  17E1                     l4120:
  5904  17E1  0826               	movf	Sensor_Service@error,w
  5905  17E2  00A3               	movwf	??_Sensor_Service
  5906  17E3  01A4               	clrf	??_Sensor_Service+1
  5907  17E4  1BA3               	btfsc	??_Sensor_Service,7
  5908  17E5  03A4               	decf	??_Sensor_Service+1,f
  5909                           
  5910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5911                           ; Switch size 1, requested type "simple"
  5912                           ; Number of cases is 2, Range of values is 0 to 255
  5913                           ; switch strategies available:
  5914                           ; Name         Instructions Cycles
  5915                           ; simple_byte            7     4 (average)
  5916                           ; jumptable            260     6 (fixed)
  5917                           ;	Chosen strategy is simple_byte
  5918  17E6  0824               	movf	??_Sensor_Service+1,w
  5919  17E7  3A00               	xorlw	0	; case 0
  5920  17E8  1903               	skipnz
  5921  17E9  2FEE               	goto	l4832
  5922  17EA  3AFF               	xorlw	255	; case 255
  5923  17EB  1903               	skipnz
  5924  17EC  2FF3               	goto	l4834
  5925  17ED  2FFE               	goto	l4122
  5926  17EE                     l4832:
  5927                           
  5928                           ; Switch size 1, requested type "simple"
  5929                           ; Number of cases is 1, Range of values is 0 to 0
  5930                           ; switch strategies available:
  5931                           ; Name         Instructions Cycles
  5932                           ; simple_byte            4     3 (average)
  5933                           ; direct_byte            8     6 (fixed)
  5934                           ; jumptable            260     6 (fixed)
  5935                           ;	Chosen strategy is simple_byte
  5936  17EE  0823               	movf	??_Sensor_Service,w
  5937  17EF  3A00               	xorlw	0	; case 0
  5938  17F0  1903               	skipnz
  5939  17F1  2FC9               	goto	l4112
  5940  17F2  2FFE               	goto	l4122
  5941  17F3                     l4834:
  5942                           
  5943                           ; Switch size 1, requested type "simple"
  5944                           ; Number of cases is 3, Range of values is 253 to 255
  5945                           ; switch strategies available:
  5946                           ; Name         Instructions Cycles
  5947                           ; simple_byte           10     6 (average)
  5948                           ; direct_byte           11     5 (fixed)
  5949                           ; jumptable            263     9 (fixed)
  5950                           ;	Chosen strategy is simple_byte
  5951  17F3  0823               	movf	??_Sensor_Service,w
  5952  17F4  3AFD               	xorlw	253	; case 253
  5953  17F5  1903               	skipnz
  5954  17F6  2FFE               	goto	l4122
  5955  17F7  3A03               	xorlw	3	; case 254
  5956  17F8  1903               	skipnz
  5957  17F9  2FFE               	goto	l4122
  5958  17FA  3A01               	xorlw	1	; case 255
  5959  17FB  1903               	skipnz
  5960  17FC  2FFE               	goto	l4122
  5961  17FD  2FFE               	goto	l4122
  5962  17FE                     l4122:
  5963                           
  5964                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 266:     return error;
  5965  17FE  0826               	movf	Sensor_Service@error,w
  5966  17FF  0008               	return
  5967  1800                     __end_of_Sensor_Service:
  5968                           
  5969                           	psect	text11
  5970  07F9                     __ptext11:	
  5971 ;; *************** function _Sensor_setSampled *****************
  5972 ;; Defined at:
  5973 ;;		line 569 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  sensor          1    wreg     PTR struct .
  5976 ;;		 -> mtouch_sensor(18), 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  sensor          1    0[COMMON] PTR struct .
  5979 ;;		 -> mtouch_sensor(18), 
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  1    wreg      void 
  5982 ;; Registers used:
  5983 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5984 ;; Tracked objects:
  5985 ;;		On entry : 1F/0
  5986 ;;		On exit  : 1F/0
  5987 ;;		Unchanged: 1F/0
  5988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5993 ;;Total ram usage:        1 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:    5
  5996 ;; This function calls:
  5997 ;;		Nothing
  5998 ;; This function is called by:
  5999 ;;		_Sensor_Service
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003                           
  6004                           ;psect for function _Sensor_setSampled
  6005  07F9                     _Sensor_setSampled:
  6006                           
  6007                           ;incstack = 0
  6008                           ; Regs used in _Sensor_setSampled: [wreg+fsr1l+fsr1h+status,2+status,0]
  6009                           ;Sensor_setSampled@sensor stored from wreg
  6010  07F9  00F0               	movwf	Sensor_setSampled@sensor
  6011                           
  6012                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 569: static __attribute__((inline)) void Se
      +                          nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 570
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 571:     sensor->sampled = 1;
  6013  07FA  0870               	movf	Sensor_setSampled@sensor,w
  6014  07FB  3E08               	addlw	8
  6015  07FC  0086               	movwf	6
  6016  07FD  0187               	clrf	7
  6017  07FE  1481               	bsf	1,1
  6018  07FF  0008               	return
  6019  0800                     __end_of_Sensor_setSampled:
  6020                           
  6021                           	psect	text12
  6022  14A9                     __ptext12:	
  6023 ;; *************** function _Sensor_RawSample_Update *****************
  6024 ;; Defined at:
  6025 ;;		line 430 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  sensor          1    wreg     PTR struct .
  6028 ;;		 -> mtouch_sensor(18), 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  sensor          1    0[COMMON] PTR struct .
  6031 ;;		 -> mtouch_sensor(18), 
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1    wreg      void 
  6034 ;; Registers used:
  6035 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6036 ;; Tracked objects:
  6037 ;;		On entry : 1F/0
  6038 ;;		On exit  : 1F/1
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6044 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6045 ;;Total ram usage:        1 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:    5
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_Sensor_Service
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           
  6056                           ;psect for function _Sensor_RawSample_Update
  6057  14A9                     _Sensor_RawSample_Update:
  6058                           
  6059                           ;incstack = 0
  6060                           ; Regs used in _Sensor_RawSample_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  6061                           ;Sensor_RawSample_Update@sensor stored from wreg
  6062  14A9  00F0               	movwf	Sensor_RawSample_Update@sensor
  6063  14AA  1F8B               	btfss	11,7	;volatile
  6064  14AB  2CB8               	goto	l3672
  6065  14AC  138B               	bcf	11,7	;volatile
  6066  14AD  0870               	movf	Sensor_RawSample_Update@sensor,w
  6067  14AE  3E06               	addlw	6
  6068  14AF  0086               	movwf	6
  6069  14B0  0187               	clrf	7
  6070  14B1  0021               	movlb	1	; select bank1
  6071  14B2  0848               	movf	_packet_sample^(0+128),w
  6072  14B3  3FC0               	movwi [0]fsr1
  6073  14B4  0849               	movf	(_packet_sample+1)^(0+128),w
  6074  14B5  3FC1               	movwi [1]fsr1
  6075  14B6  178B               	bsf	11,7	;volatile
  6076  14B7  0008               	return
  6077  14B8                     l3672:
  6078  14B8  0870               	movf	Sensor_RawSample_Update@sensor,w
  6079  14B9  3E06               	addlw	6
  6080  14BA  0086               	movwf	6
  6081  14BB  0187               	clrf	7
  6082  14BC  0021               	movlb	1	; select bank1
  6083  14BD  0848               	movf	_packet_sample^(0+128),w
  6084  14BE  3FC0               	movwi [0]fsr1
  6085  14BF  0849               	movf	(_packet_sample+1)^(0+128),w
  6086  14C0  3FC1               	movwi [1]fsr1
  6087  14C1  0008               	return
  6088  14C2                     __end_of_Sensor_RawSample_Update:
  6089                           
  6090                           	psect	text13
  6091  124C                     __ptext13:	
  6092 ;; *************** function _Sensor_DefaultCallback *****************
  6093 ;; Defined at:
  6094 ;;		line 450 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  sensor          1    0[COMMON] enum E2661
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1    wreg      void 
  6101 ;; Registers used:
  6102 ;;		None
  6103 ;; Tracked objects:
  6104 ;;		On entry : 1F/0
  6105 ;;		On exit  : 1F/0
  6106 ;;		Unchanged: 1F/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6108 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6112 ;;Total ram usage:        1 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    5
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_Sensor_Service
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           
  6123                           ;psect for function _Sensor_DefaultCallback
  6124  124C                     _Sensor_DefaultCallback:
  6125                           
  6126                           ;incstack = 0
  6127                           ; Regs used in _Sensor_DefaultCallback: []
  6128  124C  0008               	return
  6129  124D                     __end_of_Sensor_DefaultCallback:
  6130                           
  6131                           	psect	text14
  6132  080E                     __ptext14:	
  6133 ;; *************** function _Sensor_Acquisition *****************
  6134 ;; Defined at:
  6135 ;;		line 280 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  sensor          1    wreg     PTR struct .
  6138 ;;		 -> mtouch_sensor(18), 
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;  sensor          1    2[BANK0 ] PTR struct .
  6141 ;;		 -> mtouch_sensor(18), 
  6142 ;;  retry           1    1[BANK0 ] unsigned char 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      enum E2664
  6145 ;; Registers used:
  6146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 1F/0
  6149 ;;		On exit  : 1F/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6153 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;Total ram usage:        3 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    8
  6159 ;; This function calls:
  6160 ;;		_Sensor_Acq_ExecutePacket
  6161 ;;		_Sensor_isEnabled
  6162 ;;		_Sensor_setActive
  6163 ;;		_Sensor_setInactive
  6164 ;;		_abs
  6165 ;; This function is called by:
  6166 ;;		_Sensor_Service
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           
  6171                           ;psect for function _Sensor_Acquisition
  6172  080E                     _Sensor_Acquisition:
  6173                           
  6174                           ;incstack = 0
  6175                           ; Regs used in _Sensor_Acquisition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6176                           ;Sensor_Acquisition@sensor stored from wreg
  6177  080E  00A2               	movwf	Sensor_Acquisition@sensor
  6178                           
  6179                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 280: static enum mtouch_sensor_error Sensor
      +                          _Acquisition(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 281: {
      +                          ;mcc_generated_files/mtouch/mtouch_sensor.c: 283:     uint8_t retry = (uint8_t)5u;
  6180  080F  3005               	movlw	5
  6181  0810  00A0               	movwf	??_Sensor_Acquisition
  6182  0811  0820               	movf	??_Sensor_Acquisition,w
  6183  0812  00A1               	movwf	Sensor_Acquisition@retry
  6184                           
  6185                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 285:     if(!Sensor_isEnabled(sensor))
  6186  0813  0822               	movf	Sensor_Acquisition@sensor,w
  6187  0814  3193  232D  3188   	fcall	_Sensor_isEnabled
  6188  0817  3A00               	xorlw	0
  6189  0818  1D03               	skipz
  6190  0819  2823               	goto	l3652
  6191  081A                     l3642:
  6192                           
  6193                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 286:         return MTOUCH_SENSOR_ERROR_non
      +                          e;
  6194  081A  3000               	movlw	0
  6195  081B  0008               	return
  6196  081C                     l3646:
  6197                           
  6198                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 289:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 290:         retry--;
  6199  081C  3001               	movlw	1
  6200  081D  02A1               	subwf	Sensor_Acquisition@retry,f
  6201                           
  6202                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 291:         if(retry == 0)
  6203  081E  0821               	movf	Sensor_Acquisition@retry,w
  6204  081F  1D03               	btfss	3,2
  6205  0820  2823               	goto	l3652
  6206                           
  6207                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 292:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 293:             return MTOUCH_SENSOR_ERROR_tooManyRetries;
  6208  0821  30FC               	movlw	252
  6209  0822  0008               	return
  6210  0823                     l3652:
  6211                           
  6212                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 288:     while(Sensor_Acq_ExecutePacket(sen
      +                          sor))
  6213  0823  0822               	movf	Sensor_Acquisition@sensor,w
  6214  0824  3188  209D  3188   	fcall	_Sensor_Acq_ExecutePacket
  6215  0827  3A00               	xorlw	0
  6216  0828  1D03               	skipz
  6217  0829  281C               	goto	l3646
  6218                           
  6219                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 297:     if((mtouch_sensor_packetsample_t)a
      +                          bs(packet_sample - sensor->rawSample) > 100u)
  6220  082A  0822               	movf	Sensor_Acquisition@sensor,w
  6221  082B  3E06               	addlw	6
  6222  082C  0086               	movwf	6
  6223  082D  0187               	clrf	7
  6224  082E  3F40               	moviw [0]fsr1
  6225  082F  0021               	movlb	1	; select bank1
  6226  0830  0248               	subwf	_packet_sample^(0+128),w
  6227  0831  00F0               	movwf	abs@a
  6228  0832  3F41               	moviw [1]fsr1
  6229  0833  3B49               	subwfb	(_packet_sample+1)^(0+128),w
  6230  0834  00F1               	movwf	abs@a+1
  6231  0835  3194  2479  3188   	fcall	_abs
  6232  0838  3000               	movlw	0
  6233  0839  0271               	subwf	?_abs+1,w
  6234  083A  3065               	movlw	101
  6235  083B  1903               	skipnz
  6236  083C  0270               	subwf	?_abs,w
  6237  083D  1C03               	skipc
  6238  083E  2845               	goto	l3658
  6239                           
  6240                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 298:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 299:         Sensor_setActive(sensor);
  6241  083F  0020               	movlb	0	; select bank0
  6242  0840  0822               	movf	Sensor_Acquisition@sensor,w
  6243  0841  3192  22A1  3188   	fcall	_Sensor_setActive
  6244                           
  6245                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 300:     }
  6246  0844  281A               	goto	l3642
  6247  0845                     l3658:
  6248                           
  6249                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 302:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 303:         Sensor_setInactive(sensor);
  6250  0845  0020               	movlb	0	; select bank0
  6251  0846  0822               	movf	Sensor_Acquisition@sensor,w
  6252  0847  3192  22A8  3188   	fcall	_Sensor_setInactive
  6253  084A  281A               	goto	l3642
  6254  084B                     __end_of_Sensor_Acquisition:
  6255                           
  6256                           	psect	text15
  6257  1479                     __ptext15:	
  6258 ;; *************** function _abs *****************
  6259 ;; Defined at:
  6260 ;;		line 1 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/abs.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;  a               2    0[COMMON] int 
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;		None
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  2    0[COMMON] int 
  6267 ;; Registers used:
  6268 ;;		wreg, status,2, status,0
  6269 ;; Tracked objects:
  6270 ;;		On entry : 1F/1
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6278 ;;Total ram usage:        4 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    5
  6281 ;; This function calls:
  6282 ;;		Nothing
  6283 ;; This function is called by:
  6284 ;;		_Sensor_Acquisition
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           
  6289                           ;psect for function _abs
  6290  1479                     _abs:
  6291                           
  6292                           ;incstack = 0
  6293                           ; Regs used in _abs: [wreg+status,2+status,0]
  6294  1479  0871               	movf	abs@a+1,w
  6295  147A  3A80               	xorlw	128
  6296  147B  00F2               	movwf	??_abs
  6297  147C  3080               	movlw	128
  6298  147D  0272               	subwf	??_abs,w
  6299  147E  1D03               	skipz
  6300  147F  2C82               	goto	u2225
  6301  1480  3001               	movlw	1
  6302  1481  0270               	subwf	abs@a,w
  6303  1482                     u2225:
  6304  1482  1803               	skipnc
  6305  1483  0008               	return
  6306  1484  0970               	comf	abs@a,w
  6307  1485  00F2               	movwf	??_abs
  6308  1486  0971               	comf	abs@a+1,w
  6309  1487  00F3               	movwf	??_abs+1
  6310  1488  0AF2               	incf	??_abs,f
  6311  1489  1903               	skipnz
  6312  148A  0AF3               	incf	??_abs+1,f
  6313  148B  0872               	movf	??_abs,w
  6314  148C  00F0               	movwf	?_abs
  6315  148D  0873               	movf	??_abs+1,w
  6316  148E  00F1               	movwf	?_abs+1
  6317  148F  0008               	return
  6318  1490                     __end_of_abs:
  6319                           
  6320                           	psect	text16
  6321  12A8                     __ptext16:	
  6322 ;; *************** function _Sensor_setInactive *****************
  6323 ;; Defined at:
  6324 ;;		line 515 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  sensor          1    wreg     PTR struct .
  6327 ;;		 -> mtouch_sensor(18), 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  sensor          1    0[COMMON] PTR struct .
  6330 ;;		 -> mtouch_sensor(18), 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      void 
  6333 ;; Registers used:
  6334 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6335 ;; Tracked objects:
  6336 ;;		On entry : 1F/0
  6337 ;;		On exit  : 1F/0
  6338 ;;		Unchanged: 1F/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6344 ;;Total ram usage:        1 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; Hardware stack levels required when called:    5
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_Sensor_Acquisition
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           
  6355                           ;psect for function _Sensor_setInactive
  6356  12A8                     _Sensor_setInactive:
  6357                           
  6358                           ;incstack = 0
  6359                           ; Regs used in _Sensor_setInactive: [wreg+fsr1l+fsr1h+status,2+status,0]
  6360                           ;Sensor_setInactive@sensor stored from wreg
  6361  12A8  00F0               	movwf	Sensor_setInactive@sensor
  6362                           
  6363                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 515: static __attribute__((inline)) void Se
      +                          nsor_setInactive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 51
      +                          6: {;mcc_generated_files/mtouch/mtouch_sensor.c: 517:     sensor->active = 0;
  6364  12A9  0870               	movf	Sensor_setInactive@sensor,w
  6365  12AA  3E08               	addlw	8
  6366  12AB  0086               	movwf	6
  6367  12AC  0187               	clrf	7
  6368  12AD  1101               	bcf	1,2
  6369  12AE  0008               	return
  6370  12AF                     __end_of_Sensor_setInactive:
  6371                           
  6372                           	psect	text17
  6373  12A1                     __ptext17:	
  6374 ;; *************** function _Sensor_setActive *****************
  6375 ;; Defined at:
  6376 ;;		line 510 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  sensor          1    wreg     PTR struct .
  6379 ;;		 -> mtouch_sensor(18), 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  sensor          1    0[COMMON] PTR struct .
  6382 ;;		 -> mtouch_sensor(18), 
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  1    wreg      void 
  6385 ;; Registers used:
  6386 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6387 ;; Tracked objects:
  6388 ;;		On entry : 1F/0
  6389 ;;		On exit  : 1F/0
  6390 ;;		Unchanged: 1F/0
  6391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;Total ram usage:        1 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    5
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_Sensor_Acquisition
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           
  6407                           ;psect for function _Sensor_setActive
  6408  12A1                     _Sensor_setActive:
  6409                           
  6410                           ;incstack = 0
  6411                           ; Regs used in _Sensor_setActive: [wreg+fsr1l+fsr1h+status,2+status,0]
  6412                           ;Sensor_setActive@sensor stored from wreg
  6413  12A1  00F0               	movwf	Sensor_setActive@sensor
  6414                           
  6415                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 510: static __attribute__((inline)) void Se
      +                          nsor_setActive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 511:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 512:     sensor->active = 1;
  6416  12A2  0870               	movf	Sensor_setActive@sensor,w
  6417  12A3  3E08               	addlw	8
  6418  12A4  0086               	movwf	6
  6419  12A5  0187               	clrf	7
  6420  12A6  1501               	bsf	1,2
  6421  12A7  0008               	return
  6422  12A8                     __end_of_Sensor_setActive:
  6423                           
  6424                           	psect	text18
  6425  132D                     __ptext18:	
  6426 ;; *************** function _Sensor_isEnabled *****************
  6427 ;; Defined at:
  6428 ;;		line 495 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  sensor          1    wreg     PTR struct .
  6431 ;;		 -> mtouch_sensor(18), 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;  sensor          1    0[COMMON] PTR struct .
  6434 ;;		 -> mtouch_sensor(18), 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      _Bool 
  6437 ;; Registers used:
  6438 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6439 ;; Tracked objects:
  6440 ;;		On entry : 1F/0
  6441 ;;		On exit  : 1F/0
  6442 ;;		Unchanged: 1F/0
  6443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6447 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6448 ;;Total ram usage:        1 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    5
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_Sensor_Service
  6455 ;;		_Sensor_Acquisition
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           
  6460                           ;psect for function _Sensor_isEnabled
  6461  132D                     _Sensor_isEnabled:
  6462                           
  6463                           ;incstack = 0
  6464                           ; Regs used in _Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0]
  6465                           ;Sensor_isEnabled@sensor stored from wreg
  6466  132D  00F0               	movwf	Sensor_isEnabled@sensor
  6467                           
  6468                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 495: static _Bool Sensor_isEnabled(mtouch_s
      +                          ensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 496: {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 497:     if(sensor!=((void*)0))
  6469  132E  0870               	movf	Sensor_isEnabled@sensor,w
  6470  132F  1903               	btfsc	3,2
  6471  1330  2B38               	goto	l3342
  6472                           
  6473                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 498:         return (_Bool)sensor->enabled;
  6474  1331  0870               	movf	Sensor_isEnabled@sensor,w
  6475  1332  3E08               	addlw	8
  6476  1333  0086               	movwf	6
  6477  1334  0187               	clrf	7
  6478  1335  0801               	movf	1,w
  6479  1336  3901               	andlw	1
  6480  1337  0008               	return
  6481  1338                     l3342:
  6482                           
  6483                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 500:         return 0;
  6484  1338  3000               	movlw	0
  6485  1339  0008               	return
  6486  133A                     __end_of_Sensor_isEnabled:
  6487                           
  6488                           	psect	text19
  6489  089D                     __ptext19:	
  6490 ;; *************** function _Sensor_Acq_ExecutePacket *****************
  6491 ;; Defined at:
  6492 ;;		line 315 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  sensor          1    wreg     PTR struct .
  6495 ;;		 -> mtouch_sensor(18), 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  sensor          1   13[COMMON] PTR struct .
  6498 ;;		 -> mtouch_sensor(18), 
  6499 ;;  error           1   12[COMMON] enum E2664
  6500 ;;  GIE_state       1   11[COMMON] unsigned char 
  6501 ;;  ADCON1_temp     1   10[COMMON] unsigned char 
  6502 ;;  ADCON0_temp     1    9[COMMON] unsigned char 
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1    wreg      enum E2664
  6505 ;; Registers used:
  6506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6507 ;; Tracked objects:
  6508 ;;		On entry : 1F/0
  6509 ;;		On exit  : 1F/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6513 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6515 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6516 ;;Total ram usage:        6 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:    7
  6519 ;; This function calls:
  6520 ;;		_MTOUCH_Delay
  6521 ;;		_MTOUCH_Random
  6522 ;;		_MTOUCH_Sensor_Scan_Initialize
  6523 ;;		_Sensor_Acq_ExecuteScan
  6524 ;;		_Sensor_setScanFunction
  6525 ;; This function is called by:
  6526 ;;		_Sensor_Acquisition
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           
  6531                           ;psect for function _Sensor_Acq_ExecutePacket
  6532  089D                     _Sensor_Acq_ExecutePacket:
  6533                           
  6534                           ;incstack = 0
  6535                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6536                           ;Sensor_Acq_ExecutePacket@sensor stored from wreg
  6537  089D  00FD               	movwf	Sensor_Acq_ExecutePacket@sensor
  6538                           
  6539                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 315: static enum mtouch_sensor_error Sensor
      +                          _Acq_ExecutePacket(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          316: {;mcc_generated_files/mtouch/mtouch_sensor.c: 318:     enum mtouch_sensor_error err
      +                          or = MTOUCH_SENSOR_ERROR_none;
  6540  089E  01FC               	clrf	Sensor_Acq_ExecutePacket@error
  6541                           
  6542                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 319:     uint8_t ADCON0_temp;;mcc_generated
      +                          _files/mtouch/mtouch_sensor.c: 320:     uint8_t ADCON1_temp;;mcc_generated_files/mtouch/
      +                          mtouch_sensor.c: 322:     uint8_t GIE_state;;mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           324:     ADCON0_temp = ADCON0;
  6543  089F  0021               	movlb	1	; select bank1
  6544  08A0  081D               	movf	29,w	;volatile
  6545  08A1  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  6546  08A2  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  6547  08A3  00F9               	movwf	Sensor_Acq_ExecutePacket@ADCON0_temp
  6548                           
  6549                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 325:     ADCON1_temp = ADCON1;
  6550  08A4  081E               	movf	30,w	;volatile
  6551  08A5  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  6552  08A6  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  6553  08A7  00FA               	movwf	Sensor_Acq_ExecutePacket@ADCON1_temp
  6554                           
  6555                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 326:     MTOUCH_Sensor_Scan_Initialize();
  6556  08A8  3192  2261  3188   	fcall	_MTOUCH_Sensor_Scan_Initialize
  6557                           
  6558                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 328:     GIE_state = INTCONbits.GIE;
  6559  08AB  3000               	movlw	0
  6560  08AC  1B8B               	btfsc	11,7	;volatile
  6561  08AD  3001               	movlw	1
  6562  08AE  00FB               	movwf	Sensor_Acq_ExecutePacket@GIE_state
  6563                           
  6564                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 330:     Sensor_setScanFunction(sensor);
  6565  08AF  087D               	movf	Sensor_Acq_ExecutePacket@sensor,w
  6566  08B0  3193  23AD  3188   	fcall	_Sensor_setScanFunction
  6567                           
  6568                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 332:     currentScannSensor = sensor->senso
      +                          r_name;
  6569  08B3  087D               	movf	Sensor_Acq_ExecutePacket@sensor,w
  6570  08B4  0086               	movwf	6
  6571  08B5  0187               	clrf	7
  6572  08B6  0801               	movf	1,w
  6573  08B7  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  6574  08B8  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  6575  08B9  0020               	movlb	0	; select bank0
  6576  08BA  00ED               	movwf	_currentScannSensor
  6577                           
  6578                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 333:     packet_counter = sensor->oversampl
      +                          ing;
  6579  08BB  087D               	movf	Sensor_Acq_ExecutePacket@sensor,w
  6580  08BC  0086               	movwf	6
  6581  08BD  0187               	clrf	7
  6582  08BE  3F45               	moviw [5]fsr1
  6583  08BF  00EC               	movwf	_packet_counter
  6584                           
  6585                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 334:     packet_sample = 0;
  6586  08C0  0021               	movlb	1	; select bank1
  6587  08C1  01C8               	clrf	_packet_sample^(0+128)
  6588  08C2  01C9               	clrf	(_packet_sample+1)^(0+128)
  6589                           
  6590                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 335:     sensor_globalFlags.packet_done = 0
      +                          ;
  6591  08C3  0020               	movlb	0	; select bank0
  6592  08C4  106E               	bcf	_sensor_globalFlags,0	;volatile
  6593                           
  6594                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 336:     sample_delay = MTOUCH_Random();
  6595  08C5  3193  2359  3188   	fcall	_MTOUCH_Random
  6596  08C8  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  6597  08C9  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  6598  08CA  00EB               	movwf	_sample_delay
  6599                           
  6600                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 337:     packet_sample = 0;
  6601  08CB  0021               	movlb	1	; select bank1
  6602  08CC  01C8               	clrf	_packet_sample^(0+128)
  6603  08CD  01C9               	clrf	(_packet_sample+1)^(0+128)
  6604                           
  6605                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 339:     sensor_globalFlags.interrupted = 0
      +                          ;
  6606  08CE  0020               	movlb	0	; select bank0
  6607  08CF  10EE               	bcf	_sensor_globalFlags,1	;volatile
  6608  08D0                     l3368:
  6609                           
  6610                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 343:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 344:         INTCONbits.GIE = (uint8_t)0;
  6611  08D0  138B               	bcf	11,7	;volatile
  6612                           
  6613                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 345:         Sensor_Acq_ExecuteScan();
  6614  08D1  3188  20F0  3188   	fcall	_Sensor_Acq_ExecuteScan
  6615                           
  6616                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 346:         INTCONbits.GIE = GIE_state;
  6617  08D4  0C7B               	rrf	Sensor_Acq_ExecutePacket@GIE_state,w
  6618  08D5  1C03               	skipc
  6619  08D6  138B               	bcf	11,7	;volatile
  6620  08D7  1803               	skipnc
  6621  08D8  178B               	bsf	11,7	;volatile
  6622                           
  6623                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 347:         MTOUCH_Delay();
  6624  08D9  3192  22CD  3188   	fcall	_MTOUCH_Delay
  6625  08DC                     l136:	
  6626                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 348:         while(ADCON0bits.GO_nDONE == 1
      +                          );
  6627                           
  6628  08DC  0021               	movlb	1	; select bank1
  6629  08DD  189D               	btfsc	29,1	;volatile
  6630  08DE  28DC               	goto	l136
  6631                           
  6632                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 349:     } while(sensor_globalFlags.packet_
      +                          done == 0);
  6633  08DF  0020               	movlb	0	; select bank0
  6634  08E0  1C6E               	btfss	_sensor_globalFlags,0	;volatile
  6635  08E1  28D0               	goto	l3368
  6636                           
  6637                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 352:     ADCON0 = ADCON0_temp;
  6638  08E2  0879               	movf	Sensor_Acq_ExecutePacket@ADCON0_temp,w
  6639  08E3  0021               	movlb	1	; select bank1
  6640  08E4  009D               	movwf	29	;volatile
  6641                           
  6642                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 353:     ADCON1 = ADCON1_temp;
  6643  08E5  087A               	movf	Sensor_Acq_ExecutePacket@ADCON1_temp,w
  6644  08E6  009E               	movwf	30	;volatile
  6645                           
  6646                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 355:     if(sensor_globalFlags.interrupted)
  6647  08E7  0020               	movlb	0	; select bank0
  6648  08E8  1CEE               	btfss	_sensor_globalFlags,1	;volatile
  6649  08E9  28EE               	goto	l140
  6650                           
  6651                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 356:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 357:         error = MTOUCH_SENSOR_ERROR_interruptedScan;
  6652  08EA  30FA               	movlw	250
  6653  08EB  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  6654  08EC  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  6655  08ED  00FC               	movwf	Sensor_Acq_ExecutePacket@error
  6656  08EE                     l140:	
  6657                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 358:     }
  6658                           
  6659                           
  6660                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 360:     return error;
  6661  08EE  087C               	movf	Sensor_Acq_ExecutePacket@error,w
  6662  08EF  0008               	return
  6663  08F0                     __end_of_Sensor_Acq_ExecutePacket:
  6664                           
  6665                           	psect	text20
  6666  13AD                     __ptext20:	
  6667 ;; *************** function _Sensor_setScanFunction *****************
  6668 ;; Defined at:
  6669 ;;		line 462 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  sensor          1    wreg     PTR struct .
  6672 ;;		 -> mtouch_sensor(18), 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;  sensor          1    0[COMMON] PTR struct .
  6675 ;;		 -> mtouch_sensor(18), 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  1    wreg      void 
  6678 ;; Registers used:
  6679 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6680 ;; Tracked objects:
  6681 ;;		On entry : 1F/1
  6682 ;;		On exit  : 1F/1
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;Total ram usage:        1 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    5
  6692 ;; This function calls:
  6693 ;;		Nothing
  6694 ;; This function is called by:
  6695 ;;		_Sensor_Acq_ExecutePacket
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           
  6700                           ;psect for function _Sensor_setScanFunction
  6701  13AD                     _Sensor_setScanFunction:
  6702                           
  6703                           ;incstack = 0
  6704                           ; Regs used in _Sensor_setScanFunction: [wreg+fsr1l+fsr1h+status,2+status,0]
  6705                           ;Sensor_setScanFunction@sensor stored from wreg
  6706  13AD  00F0               	movwf	Sensor_setScanFunction@sensor
  6707  13AE  0A70               	incf	Sensor_setScanFunction@sensor,w
  6708  13AF  0086               	movwf	6
  6709  13B0  0187               	clrf	7
  6710  13B1  3F40               	moviw [0]fsr1
  6711  13B2  00AC               	movwf	_Sensor_scanA^(0+128)
  6712  13B3  3F41               	moviw [1]fsr1
  6713  13B4  00AD               	movwf	(_Sensor_scanA+1)^(0+128)
  6714  13B5  0870               	movf	Sensor_setScanFunction@sensor,w
  6715  13B6  3E03               	addlw	3
  6716  13B7  0086               	movwf	6
  6717  13B8  0187               	clrf	7
  6718  13B9  3F40               	moviw [0]fsr1
  6719  13BA  00AA               	movwf	_Sensor_scanB^(0+128)
  6720  13BB  3F41               	moviw [1]fsr1
  6721  13BC  00AB               	movwf	(_Sensor_scanB+1)^(0+128)
  6722  13BD  0008               	return
  6723  13BE                     __end_of_Sensor_setScanFunction:
  6724                           
  6725                           	psect	text21
  6726  08F0                     __ptext21:	
  6727 ;; *************** function _Sensor_Acq_ExecuteScan *****************
  6728 ;; Defined at:
  6729 ;;		line 379 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;		None
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  result          2    6[COMMON] unsigned short 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6738 ;; Tracked objects:
  6739 ;;		On entry : 1F/0
  6740 ;;		On exit  : 1F/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6745 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6746 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6747 ;;Total ram usage:        4 bytes
  6748 ;; Hardware stack levels used:    1
  6749 ;; Hardware stack levels required when called:    6
  6750 ;; This function calls:
  6751 ;;		_MTOUCH_CVD_ScanA_0
  6752 ;;		_MTOUCH_CVD_ScanA_1
  6753 ;;		_MTOUCH_CVD_ScanB_0
  6754 ;;		_MTOUCH_CVD_ScanB_1
  6755 ;;		___bmul
  6756 ;; This function is called by:
  6757 ;;		_Sensor_Acq_ExecutePacket
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           
  6762                           ;psect for function _Sensor_Acq_ExecuteScan
  6763  08F0                     _Sensor_Acq_ExecuteScan:
  6764                           
  6765                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 382:     mtouch_sensor_adcsample_t result =
      +                           ADRES;
  6766                           
  6767                           ;incstack = 0
  6768                           ; Regs used in _Sensor_Acq_ExecuteScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6769  08F0  0021               	movlb	1	; select bank1
  6770  08F1  081C               	movf	28,w	;volatile
  6771  08F2  00F7               	movwf	Sensor_Acq_ExecuteScan@result+1
  6772  08F3  081B               	movf	27,w	;volatile
  6773  08F4  00F6               	movwf	Sensor_Acq_ExecuteScan@result
  6774                           
  6775                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 384:     if(sensor_globalFlags.packet_done)
  6776  08F5  0020               	movlb	0	; select bank0
  6777  08F6  186E               	btfsc	_sensor_globalFlags,0	;volatile
  6778  08F7  0008               	return
  6779                           
  6780                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 387:     if (packet_counter != (uint8_t)0)
  6781  08F8  086C               	movf	_packet_counter,w
  6782  08F9  1D03               	btfss	3,2
  6783  08FA  290A               	goto	l3286
  6784  08FB  2941               	goto	l3298
  6785  08FC                     l3280:
  6786  08FC  0021               	movlb	1	; select bank1
  6787  08FD  082D               	movf	(_Sensor_scanA+1)^(0+128),w
  6788  08FE  008A               	movwf	10
  6789  08FF  082C               	movf	_Sensor_scanA^(0+128),w
  6790  0900  000A               	callw
  6791  0901  3188               	pagesel	$
  6792  0902  291B               	goto	l3288
  6793  0903                     l3282:
  6794  0903  0021               	movlb	1	; select bank1
  6795  0904  082B               	movf	(_Sensor_scanB+1)^(0+128),w
  6796  0905  008A               	movwf	10
  6797  0906  082A               	movf	_Sensor_scanB^(0+128),w
  6798  0907  000A               	callw
  6799  0908  3188               	pagesel	$
  6800  0909  291B               	goto	l3288
  6801  090A                     l3286:
  6802  090A  086C               	movf	_packet_counter,w
  6803  090B  3901               	andlw	1
  6804  090C  00F4               	movwf	??_Sensor_Acq_ExecuteScan
  6805  090D  01F5               	clrf	??_Sensor_Acq_ExecuteScan+1
  6806                           
  6807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6808                           ; Switch size 1, requested type "simple"
  6809                           ; Number of cases is 1, Range of values is 0 to 0
  6810                           ; switch strategies available:
  6811                           ; Name         Instructions Cycles
  6812                           ; simple_byte            4     3 (average)
  6813                           ; direct_byte            8     6 (fixed)
  6814                           ; jumptable            260     6 (fixed)
  6815                           ;	Chosen strategy is simple_byte
  6816  090E  0875               	movf	??_Sensor_Acq_ExecuteScan+1,w
  6817  090F  3A00               	xorlw	0	; case 0
  6818  0910  1903               	skipnz
  6819  0911  2913               	goto	l4836
  6820  0912  291B               	goto	l3288
  6821  0913                     l4836:
  6822                           
  6823                           ; Switch size 1, requested type "simple"
  6824                           ; Number of cases is 2, Range of values is 0 to 1
  6825                           ; switch strategies available:
  6826                           ; Name         Instructions Cycles
  6827                           ; simple_byte            7     4 (average)
  6828                           ; direct_byte           10     6 (fixed)
  6829                           ; jumptable            260     6 (fixed)
  6830                           ;	Chosen strategy is simple_byte
  6831  0913  0874               	movf	??_Sensor_Acq_ExecuteScan,w
  6832  0914  3A00               	xorlw	0	; case 0
  6833  0915  1903               	skipnz
  6834  0916  28FC               	goto	l3280
  6835  0917  3A01               	xorlw	1	; case 1
  6836  0918  1903               	skipnz
  6837  0919  2903               	goto	l3282
  6838  091A  291B               	goto	l3288
  6839  091B                     l3288:
  6840  091B  3009               	movlw	9
  6841  091C  00F4               	movwf	??_Sensor_Acq_ExecuteScan
  6842  091D  0874               	movf	??_Sensor_Acq_ExecuteScan,w
  6843  091E  00F0               	movwf	___bmul@multiplicand
  6844  091F  0020               	movlb	0	; select bank0
  6845  0920  086D               	movf	_currentScannSensor,w
  6846  0921  3193  2369  3188   	fcall	___bmul
  6847  0924  3EB5               	addlw	(low ((_mtouch_sensor| 0+5)))& (0+255)
  6848  0925  0086               	movwf	6
  6849  0926  0187               	clrf	7
  6850  0927  0801               	movf	1,w
  6851  0928  0020               	movlb	0	; select bank0
  6852  0929  066C               	xorwf	_packet_counter,w
  6853  092A  1903               	skipnz
  6854  092B  293D               	goto	l3296
  6855  092C  1C6C               	btfss	_packet_counter,0
  6856  092D  2938               	goto	l3294
  6857  092E  3000               	movlw	0
  6858  092F  00F4               	movwf	??_Sensor_Acq_ExecuteScan
  6859  0930  3004               	movlw	4
  6860  0931  00F5               	movwf	??_Sensor_Acq_ExecuteScan+1
  6861  0932  0876               	movf	Sensor_Acq_ExecuteScan@result,w
  6862  0933  0274               	subwf	??_Sensor_Acq_ExecuteScan,w
  6863  0934  00F6               	movwf	Sensor_Acq_ExecuteScan@result
  6864  0935  0877               	movf	Sensor_Acq_ExecuteScan@result+1,w
  6865  0936  3B75               	subwfb	??_Sensor_Acq_ExecuteScan+1,w
  6866  0937  00F7               	movwf	Sensor_Acq_ExecuteScan@result+1
  6867  0938                     l3294:
  6868  0938  0876               	movf	Sensor_Acq_ExecuteScan@result,w
  6869  0939  0021               	movlb	1	; select bank1
  6870  093A  07C8               	addwf	_packet_sample^(0+128),f
  6871  093B  0877               	movf	Sensor_Acq_ExecuteScan@result+1,w
  6872  093C  3DC9               	addwfc	(_packet_sample+1)^(0+128),f
  6873  093D                     l3296:
  6874  093D  3001               	movlw	1
  6875  093E  0020               	movlb	0	; select bank0
  6876  093F  02EC               	subwf	_packet_counter,f
  6877  0940  0008               	return
  6878  0941                     l3298:
  6879  0941  0876               	movf	Sensor_Acq_ExecuteScan@result,w
  6880  0942  0021               	movlb	1	; select bank1
  6881  0943  07C8               	addwf	_packet_sample^(0+128),f
  6882  0944  0877               	movf	Sensor_Acq_ExecuteScan@result+1,w
  6883  0945  3DC9               	addwfc	(_packet_sample+1)^(0+128),f
  6884  0946  0020               	movlb	0	; select bank0
  6885  0947  146E               	bsf	_sensor_globalFlags,0	;volatile
  6886  0948  0008               	return
  6887  0949                     __end_of_Sensor_Acq_ExecuteScan:
  6888                           
  6889                           	psect	text22
  6890  1594                     __ptext22:	
  6891 ;; *************** function _MTOUCH_CVD_ScanB_0 *****************
  6892 ;; Defined at:
  6893 ;;		line 113 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;		None
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;		None
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  1    wreg      void 
  6900 ;; Registers used:
  6901 ;;		wreg
  6902 ;; Tracked objects:
  6903 ;;		On entry : 1F/1
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;Total ram usage:        0 bytes
  6912 ;; Hardware stack levels used:    1
  6913 ;; Hardware stack levels required when called:    5
  6914 ;; This function calls:
  6915 ;;		Nothing
  6916 ;; This function is called by:
  6917 ;;		_Sensor_Acq_ExecuteScan
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           
  6922                           ;psect for function _MTOUCH_CVD_ScanB_0
  6923  1594                     _MTOUCH_CVD_ScanB_0:
  6924                           
  6925                           ;incstack = 0
  6926                           ; Regs used in _MTOUCH_CVD_ScanB_0: [wreg]
  6927  1594  0022               	banksel	270	;# 
  6928  1595  138E               	bcf	14,7	;# 
  6929  1596  0021               	banksel	157	;# 
  6930  1597  3025               	movlw	37	;# 
  6931  1598  009D               	movwf	29	;# 
  6932                           
  6933                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 125:     _delay(16u);
  6934  1599  3005               	movlw	5
  6935  159A                     u4667:
  6936  159A  0B89               	decfsz	9,f
  6937  159B  2D9A               	goto	u4667
  6938  159C  0000               	nop
  6939  159D  308E               	movlw	142	;# 
  6940  159E  0084               	movwf	4	;# 
  6941  159F  3000               	movlw	0	;# 
  6942  15A0  0085               	movwf	5	;# 
  6943  15A1  300E               	movlw	14	;# 
  6944  15A2  0086               	movwf	6	;# 
  6945  15A3  3001               	movlw	1	;# 
  6946  15A4  0087               	movwf	7	;# 
  6947  15A5  3021               	movlw	33	;# 
  6948  15A6  1700               	bsf	0,6	;# 
  6949                           
  6950                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 143:     _delay(0u);
  6951  15A7  009D               	movwf	29	;# 
  6952                           
  6953                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 150:     _delay(8u);
  6954  15A8  3200               	nop2	;2 cycle nop
  6955  15A9  3200               	nop2	;2 cycle nop
  6956  15AA  3200               	nop2	;2 cycle nop
  6957  15AB  3200               	nop2	;2 cycle nop
  6958  15AC  0021               	banksel	157	;# 
  6959  15AD  149D               	bsf	29,1	;# 
  6960                           
  6961                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 157:     _delay(3u);
  6962  15AE  3200               	nop2	;2 cycle nop
  6963  15AF  0000               	nop
  6964  15B0  0022               	banksel	270	;# 
  6965  15B1  130E               	bcf	14,6	;# 
  6966  15B2  1300               	bcf	0,6	;# 
  6967  15B3  0008               	return
  6968  15B4                     __end_of_MTOUCH_CVD_ScanB_0:
  6969                           
  6970                           	psect	text23
  6971  1574                     __ptext23:	
  6972 ;; *************** function _MTOUCH_CVD_ScanB_1 *****************
  6973 ;; Defined at:
  6974 ;;		line 240 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;		None
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;		None
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  1    wreg      void 
  6981 ;; Registers used:
  6982 ;;		wreg
  6983 ;; Tracked objects:
  6984 ;;		On entry : 1F/1
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;Total ram usage:        0 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:    5
  6995 ;; This function calls:
  6996 ;;		Nothing
  6997 ;; This function is called by:
  6998 ;;		_Sensor_Acq_ExecuteScan
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           
  7003                           ;psect for function _MTOUCH_CVD_ScanB_1
  7004  1574                     _MTOUCH_CVD_ScanB_1:
  7005                           
  7006                           ;incstack = 0
  7007                           ; Regs used in _MTOUCH_CVD_ScanB_1: [wreg]
  7008  1574  0022               	banksel	270	;# 
  7009  1575  130E               	bcf	14,6	;# 
  7010  1576  0021               	banksel	157	;# 
  7011  1577  3021               	movlw	33	;# 
  7012  1578  009D               	movwf	29	;# 
  7013                           
  7014                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 252:     _delay(16u);
  7015  1579  3005               	movlw	5
  7016  157A                     u4677:
  7017  157A  0B89               	decfsz	9,f
  7018  157B  2D7A               	goto	u4677
  7019  157C  0000               	nop
  7020  157D  308E               	movlw	142	;# 
  7021  157E  0084               	movwf	4	;# 
  7022  157F  3000               	movlw	0	;# 
  7023  1580  0085               	movwf	5	;# 
  7024  1581  300E               	movlw	14	;# 
  7025  1582  0086               	movwf	6	;# 
  7026  1583  3001               	movlw	1	;# 
  7027  1584  0087               	movwf	7	;# 
  7028  1585  3025               	movlw	37	;# 
  7029  1586  1780               	bsf	0,7	;# 
  7030                           
  7031                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 270:     _delay(0u);
  7032  1587  009D               	movwf	29	;# 
  7033                           
  7034                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 277:     _delay(8u);
  7035  1588  3200               	nop2	;2 cycle nop
  7036  1589  3200               	nop2	;2 cycle nop
  7037  158A  3200               	nop2	;2 cycle nop
  7038  158B  3200               	nop2	;2 cycle nop
  7039  158C  0021               	banksel	157	;# 
  7040  158D  149D               	bsf	29,1	;# 
  7041                           
  7042                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 284:     _delay(3u);
  7043  158E  3200               	nop2	;2 cycle nop
  7044  158F  0000               	nop
  7045  1590  0022               	banksel	270	;# 
  7046  1591  138E               	bcf	14,7	;# 
  7047  1592  1380               	bcf	0,7	;# 
  7048  1593  0008               	return
  7049  1594                     __end_of_MTOUCH_CVD_ScanB_1:
  7050                           
  7051                           	psect	text24
  7052  1554                     __ptext24:	
  7053 ;; *************** function _MTOUCH_CVD_ScanA_0 *****************
  7054 ;; Defined at:
  7055 ;;		line 50 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;		None
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;		None
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  1    wreg      void 
  7062 ;; Registers used:
  7063 ;;		wreg
  7064 ;; Tracked objects:
  7065 ;;		On entry : 1F/1
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7073 ;;Total ram usage:        0 bytes
  7074 ;; Hardware stack levels used:    1
  7075 ;; Hardware stack levels required when called:    5
  7076 ;; This function calls:
  7077 ;;		Nothing
  7078 ;; This function is called by:
  7079 ;;		_Sensor_Acq_ExecuteScan
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083                           
  7084                           ;psect for function _MTOUCH_CVD_ScanA_0
  7085  1554                     _MTOUCH_CVD_ScanA_0:
  7086                           
  7087                           ;incstack = 0
  7088                           ; Regs used in _MTOUCH_CVD_ScanA_0: [wreg]
  7089  1554  0022               	banksel	270	;# 
  7090  1555  178E               	bsf	14,7	;# 
  7091  1556  0021               	banksel	157	;# 
  7092  1557  3025               	movlw	37	;# 
  7093  1558  009D               	movwf	29	;# 
  7094                           
  7095                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 62:     _delay(16u);
  7096  1559  3005               	movlw	5
  7097  155A                     u4687:
  7098  155A  0B89               	decfsz	9,f
  7099  155B  2D5A               	goto	u4687
  7100  155C  0000               	nop
  7101  155D  308E               	movlw	142	;# 
  7102  155E  0084               	movwf	4	;# 
  7103  155F  3000               	movlw	0	;# 
  7104  1560  0085               	movwf	5	;# 
  7105  1561  300E               	movlw	14	;# 
  7106  1562  0086               	movwf	6	;# 
  7107  1563  3001               	movlw	1	;# 
  7108  1564  0087               	movwf	7	;# 
  7109  1565  3021               	movlw	33	;# 
  7110  1566  1700               	bsf	0,6	;# 
  7111                           
  7112                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 80:     _delay(0u);
  7113  1567  009D               	movwf	29	;# 
  7114                           
  7115                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 86:     _delay(8u);
  7116  1568  3200               	nop2	;2 cycle nop
  7117  1569  3200               	nop2	;2 cycle nop
  7118  156A  3200               	nop2	;2 cycle nop
  7119  156B  3200               	nop2	;2 cycle nop
  7120  156C  0021               	banksel	157	;# 
  7121  156D  149D               	bsf	29,1	;# 
  7122                           
  7123                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 93:     _delay(3u);
  7124  156E  3200               	nop2	;2 cycle nop
  7125  156F  0000               	nop
  7126  1570  0022               	banksel	270	;# 
  7127  1571  170E               	bsf	14,6	;# 
  7128  1572  1300               	bcf	0,6	;# 
  7129  1573  0008               	return
  7130  1574                     __end_of_MTOUCH_CVD_ScanA_0:
  7131                           
  7132                           	psect	text25
  7133  1534                     __ptext25:	
  7134 ;; *************** function _MTOUCH_CVD_ScanA_1 *****************
  7135 ;; Defined at:
  7136 ;;		line 177 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;		None
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg
  7145 ;; Tracked objects:
  7146 ;;		On entry : 1F/1
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7154 ;;Total ram usage:        0 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    5
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_Sensor_Acq_ExecuteScan
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           
  7165                           ;psect for function _MTOUCH_CVD_ScanA_1
  7166  1534                     _MTOUCH_CVD_ScanA_1:
  7167                           
  7168                           ;incstack = 0
  7169                           ; Regs used in _MTOUCH_CVD_ScanA_1: [wreg]
  7170  1534  0022               	banksel	270	;# 
  7171  1535  170E               	bsf	14,6	;# 
  7172  1536  0021               	banksel	157	;# 
  7173  1537  3021               	movlw	33	;# 
  7174  1538  009D               	movwf	29	;# 
  7175                           
  7176                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 189:     _delay(16u);
  7177  1539  3005               	movlw	5
  7178  153A                     u4697:
  7179  153A  0B89               	decfsz	9,f
  7180  153B  2D3A               	goto	u4697
  7181  153C  0000               	nop
  7182  153D  308E               	movlw	142	;# 
  7183  153E  0084               	movwf	4	;# 
  7184  153F  3000               	movlw	0	;# 
  7185  1540  0085               	movwf	5	;# 
  7186  1541  300E               	movlw	14	;# 
  7187  1542  0086               	movwf	6	;# 
  7188  1543  3001               	movlw	1	;# 
  7189  1544  0087               	movwf	7	;# 
  7190  1545  3025               	movlw	37	;# 
  7191  1546  1780               	bsf	0,7	;# 
  7192                           
  7193                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 207:     _delay(0u);
  7194  1547  009D               	movwf	29	;# 
  7195                           
  7196                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 213:     _delay(8u);
  7197  1548  3200               	nop2	;2 cycle nop
  7198  1549  3200               	nop2	;2 cycle nop
  7199  154A  3200               	nop2	;2 cycle nop
  7200  154B  3200               	nop2	;2 cycle nop
  7201  154C  0021               	banksel	157	;# 
  7202  154D  149D               	bsf	29,1	;# 
  7203                           
  7204                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 220:     _delay(3u);
  7205  154E  3200               	nop2	;2 cycle nop
  7206  154F  0000               	nop
  7207  1550  0022               	banksel	270	;# 
  7208  1551  178E               	bsf	14,7	;# 
  7209  1552  1380               	bcf	0,7	;# 
  7210  1553  0008               	return
  7211  1554                     __end_of_MTOUCH_CVD_ScanA_1:
  7212                           
  7213                           	psect	text26
  7214  1359                     __ptext26:	
  7215 ;; *************** function _MTOUCH_Random *****************
  7216 ;; Defined at:
  7217 ;;		line 66 in file "mcc_generated_files/mtouch/mtouch_random.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;		None
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;		None
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  1    wreg      unsigned char 
  7224 ;; Registers used:
  7225 ;;		wreg, status,2, status,0
  7226 ;; Tracked objects:
  7227 ;;		On entry : 1F/0
  7228 ;;		On exit  : 1F/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7235 ;;Total ram usage:        1 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    5
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		_Sensor_Acq_ExecutePacket
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           
  7246                           ;psect for function _MTOUCH_Random
  7247  1359                     _MTOUCH_Random:
  7248                           
  7249                           ;mcc_generated_files/mtouch/mtouch_random.c: 68:     static MTOUCH_RANDOM_t seed = (MTOU
      +                          CH_RANDOM_t)0;;mcc_generated_files/mtouch/mtouch_random.c: 70:     if ((seed & (MTOUCH_R
      +                          ANDOM_t)1) != (MTOUCH_RANDOM_t)0)
  7250                           
  7251                           ;incstack = 0
  7252                           ; Regs used in _MTOUCH_Random: [wreg+status,2+status,0]
  7253  1359  1C6F               	btfss	MTOUCH_Random@seed,0
  7254  135A  2B5D               	goto	l3256
  7255                           
  7256                           ;mcc_generated_files/mtouch/mtouch_random.c: 71:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 73:         seed = seed >> (uint8_t)1;
  7257  135B  366F               	lsrf	MTOUCH_Random@seed,w
  7258  135C  2B63               	goto	L1
  7259  135D                     l3256:	
  7260                           ;mcc_generated_files/mtouch/mtouch_random.c: 74:     }
  7261                           
  7262                           
  7263                           ;mcc_generated_files/mtouch/mtouch_random.c: 76:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 81:         seed = seed >> (uint8_t)1;
  7264  135D  366F               	lsrf	MTOUCH_Random@seed,w
  7265  135E  00F0               	movwf	??_MTOUCH_Random
  7266  135F  0870               	movf	??_MTOUCH_Random,w
  7267  1360  00EF               	movwf	MTOUCH_Random@seed
  7268                           
  7269                           ;mcc_generated_files/mtouch/mtouch_random.c: 82:         seed = seed ^ (MTOUCH_RANDOM_t)
      +                          0xB4;
  7270  1361  086F               	movf	MTOUCH_Random@seed,w
  7271  1362  3AB4               	xorlw	180
  7272  1363                     L1:
  7273  1363  00F0               	movwf	??_MTOUCH_Random
  7274  1364  0870               	movf	??_MTOUCH_Random,w
  7275  1365  00EF               	movwf	MTOUCH_Random@seed
  7276                           
  7277                           ;mcc_generated_files/mtouch/mtouch_random.c: 85:     return (uint8_t)seed & 0x0F;
  7278  1366  086F               	movf	MTOUCH_Random@seed,w
  7279  1367  390F               	andlw	15
  7280  1368  0008               	return
  7281  1369                     __end_of_MTOUCH_Random:
  7282                           
  7283                           	psect	text27
  7284  12CD                     __ptext27:	
  7285 ;; *************** function _MTOUCH_Delay *****************
  7286 ;; Defined at:
  7287 ;;		line 363 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;		None
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  i               1    1[COMMON] unsigned char 
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  1    wreg      void 
  7294 ;; Registers used:
  7295 ;;		wreg, status,2, status,0
  7296 ;; Tracked objects:
  7297 ;;		On entry : 1F/0
  7298 ;;		On exit  : 1F/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;Total ram usage:        2 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:    5
  7308 ;; This function calls:
  7309 ;;		Nothing
  7310 ;; This function is called by:
  7311 ;;		_Sensor_Acq_ExecutePacket
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           
  7316                           ;psect for function _MTOUCH_Delay
  7317  12CD                     _MTOUCH_Delay:
  7318                           
  7319                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 365:     for(uint8_t i = sample_delay;i>0;i
      +                          --)
  7320                           
  7321                           ;incstack = 0
  7322                           ; Regs used in _MTOUCH_Delay: [wreg+status,2+status,0]
  7323  12CD  086B               	movf	_sample_delay,w
  7324  12CE  00F0               	movwf	??_MTOUCH_Delay
  7325  12CF  0870               	movf	??_MTOUCH_Delay,w
  7326  12D0  00F1               	movwf	MTOUCH_Delay@i
  7327  12D1                     L2:
  7328  12D1  0871               	movf	MTOUCH_Delay@i,w
  7329  12D2  1903               	btfsc	3,2
  7330  12D3  0008               	return
  7331                           
  7332                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 366:     { }
  7333  12D4  3001               	movlw	1
  7334  12D5  02F1               	subwf	MTOUCH_Delay@i,f
  7335  12D6  2AD1               	goto	L2
  7336  12D7                     __end_of_MTOUCH_Delay:
  7337                           
  7338                           	psect	text28
  7339  133A                     __ptext28:	
  7340 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  7341 ;; Defined at:
  7342 ;;		line 181 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;		None
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  button          1   10[BANK0 ] enum E2819
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      void 
  7349 ;; Registers used:
  7350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7351 ;; Tracked objects:
  7352 ;;		On entry : 1F/0
  7353 ;;		On exit  : 1F/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7357 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7358 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;Total ram usage:        2 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:   10
  7363 ;; This function calls:
  7364 ;;		_Button_Service
  7365 ;; This function is called by:
  7366 ;;		_MTOUCH_Service_Mainloop
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           
  7371                           ;psect for function _MTOUCH_Button_ServiceAll
  7372  133A                     _MTOUCH_Button_ServiceAll:
  7373                           
  7374                           ;mcc_generated_files/mtouch/mtouch_button.c: 183:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 186:     for (button = 0; button < 2u; button
      +                          ++)
  7375                           
  7376                           ;incstack = 0
  7377                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7378  133A  01AA               	clrf	MTOUCH_Button_ServiceAll@button
  7379  133B                     l4220:
  7380                           
  7381                           ;mcc_generated_files/mtouch/mtouch_button.c: 187:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 188:         Button_Service(button);
  7382  133B  082A               	movf	MTOUCH_Button_ServiceAll@button,w
  7383  133C  3188  204B  3193   	fcall	_Button_Service
  7384                           
  7385                           ;mcc_generated_files/mtouch/mtouch_button.c: 189:     }
  7386  133F  3001               	movlw	1
  7387  1340  0020               	movlb	0	; select bank0
  7388  1341  00A9               	movwf	??_MTOUCH_Button_ServiceAll
  7389  1342  0829               	movf	??_MTOUCH_Button_ServiceAll,w
  7390  1343  07AA               	addwf	MTOUCH_Button_ServiceAll@button,f
  7391  1344  3002               	movlw	2
  7392  1345  022A               	subwf	MTOUCH_Button_ServiceAll@button,w
  7393  1346  1803               	btfsc	3,0
  7394  1347  0008               	return
  7395  1348  2B3B               	goto	l4220
  7396  1349                     __end_of_MTOUCH_Button_ServiceAll:
  7397                           
  7398                           	psect	text29
  7399  084B                     __ptext29:	
  7400 ;; *************** function _Button_Service *****************
  7401 ;; Defined at:
  7402 ;;		line 192 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;  name            1    wreg     enum E2819
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;  name            1    7[BANK0 ] enum E2819
  7407 ;;  button          1    8[BANK0 ] PTR struct .
  7408 ;;		 -> mtouch_button(32), 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  1    wreg      void 
  7411 ;; Registers used:
  7412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7413 ;; Tracked objects:
  7414 ;;		On entry : 1F/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7422 ;;Total ram usage:        4 bytes
  7423 ;; Hardware stack levels used:    1
  7424 ;; Hardware stack levels required when called:    9
  7425 ;; This function calls:
  7426 ;;		_Button_Deviation_Update
  7427 ;;		_Button_Reading_Update
  7428 ;;		_Button_State_Initializing
  7429 ;;		_Button_State_NotPressed
  7430 ;;		_Button_State_Pressed
  7431 ;;		_MTOUCH_Button_Initialize
  7432 ;;		_MTOUCH_Sensor_isCalibrated
  7433 ;;		_MTOUCH_Sensor_wasSampled
  7434 ;; This function is called by:
  7435 ;;		_MTOUCH_Button_ServiceAll
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           
  7440                           ;psect for function _Button_Service
  7441  084B                     _Button_Service:
  7442                           
  7443                           ;incstack = 0
  7444                           ; Regs used in _Button_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7445                           ;Button_Service@name stored from wreg
  7446  084B  00A7               	movwf	Button_Service@name
  7447                           
  7448                           ;mcc_generated_files/mtouch/mtouch_button.c: 192: static void Button_Service(enum mtouch
      +                          _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 193: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 194:     mtouch_button_t* button = &mtouch_button[name];
  7449  084C  0827               	movf	Button_Service@name,w
  7450  084D  00A5               	movwf	??_Button_Service
  7451  084E  3003               	movlw	3
  7452  084F                     u3675:
  7453  084F  35A5               	lslf	??_Button_Service,f
  7454  0850  3EFF               	addlw	-1
  7455  0851  1D03               	skipz
  7456  0852  284F               	goto	u3675
  7457  0853  3525               	lslf	??_Button_Service,w
  7458  0854  3E20               	addlw	(low (_mtouch_button| (0+256)))& (0+255)
  7459  0855  00A6               	movwf	??_Button_Service+1
  7460  0856  0826               	movf	??_Button_Service+1,w
  7461  0857  00A8               	movwf	Button_Service@button
  7462                           
  7463                           ;mcc_generated_files/mtouch/mtouch_button.c: 196:     if (MTOUCH_Sensor_wasSampled(butto
      +                          n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
  7464  0858  0A28               	incf	Button_Service@button,w
  7465  0859  0086               	movwf	6
  7466  085A  3001               	movlw	1	; select bank2/3
  7467  085B  0087               	movwf	7
  7468  085C  0801               	movf	1,w
  7469  085D  3193  23E3  3188   	fcall	_MTOUCH_Sensor_wasSampled
  7470  0860  3A00               	xorlw	0
  7471  0861  1903               	skipnz
  7472  0862  0008               	return
  7473  0863  0020               	movlb	0	; select bank0
  7474  0864  0A28               	incf	Button_Service@button,w
  7475  0865  0086               	movwf	6
  7476  0866  3001               	movlw	1	; select bank2/3
  7477  0867  0087               	movwf	7
  7478  0868  0801               	movf	1,w
  7479  0869  3192  224F  3188   	fcall	_MTOUCH_Sensor_isCalibrated
  7480  086C  3A00               	xorlw	0
  7481  086D  1903               	skipnz
  7482  086E  0008               	return
  7483                           
  7484                           ;mcc_generated_files/mtouch/mtouch_button.c: 197:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 198:         Button_Reading_Update(button);
  7485  086F  0828               	movf	Button_Service@button,w
  7486  0870  3193  2320  3188   	fcall	_Button_Reading_Update
  7487                           
  7488                           ;mcc_generated_files/mtouch/mtouch_button.c: 199:         Button_Deviation_Update(button
      +                          );
  7489  0873  0020               	movlb	0	; select bank0
  7490  0874  0828               	movf	Button_Service@button,w
  7491  0875  318A  22E7  3188   	fcall	_Button_Deviation_Update
  7492                           
  7493                           ;mcc_generated_files/mtouch/mtouch_button.c: 201:         if (button->state >= (uint8_t)
      +                          (sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
  7494  0878  0828               	movf	Button_Service@button,w
  7495  0879  3E02               	addlw	2
  7496  087A  0086               	movwf	6
  7497  087B  3001               	movlw	1	; select bank2/3
  7498  087C  0087               	movwf	7
  7499  087D  3003               	movlw	3
  7500  087E  0201               	subwf	1,w
  7501  087F  1C03               	skipc
  7502  0880  2889               	goto	l4170
  7503                           
  7504                           ;mcc_generated_files/mtouch/mtouch_button.c: 202:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 203:             MTOUCH_Button_Initialize(button->name);
  7505  0881  0828               	movf	Button_Service@button,w
  7506  0882  0086               	movwf	6
  7507  0883  3001               	movlw	1	; select bank2/3
  7508  0884  0087               	movwf	7
  7509  0885  0801               	movf	1,w
  7510  0886  3197  2730  3188   	fcall	_MTOUCH_Button_Initialize
  7511  0889                     l4170:
  7512                           
  7513                           ;mcc_generated_files/mtouch/mtouch_button.c: 205:         Button_StateMachine[(uint8_t)b
      +                          utton->state](button);
  7514  0889  0020               	movlb	0	; select bank0
  7515  088A  0828               	movf	Button_Service@button,w
  7516  088B  00A5               	movwf	??_Button_Service
  7517  088C  0825               	movf	??_Button_Service,w
  7518  088D  00FD               	movwf	Button_State_Pressed@button
  7519  088E  0828               	movf	Button_Service@button,w
  7520  088F  3E02               	addlw	2
  7521  0890  0086               	movwf	6
  7522  0891  3001               	movlw	1	; select bank2/3
  7523  0892  0087               	movwf	7
  7524  0893  3501               	lslf	1,w
  7525  0894  3EA0               	addlw	(low (_Button_StateMachine| 0))& (0+255)
  7526  0895  0086               	movwf	6
  7527  0896  0187               	clrf	7
  7528  0897  3F41               	moviw [1]fsr1
  7529  0898  008A               	movwf	10
  7530  0899  3F40               	moviw [0]fsr1
  7531  089A  000A               	callw
  7532  089B  3188               	pagesel	$
  7533  089C  0008               	return
  7534  089D                     __end_of_Button_Service:
  7535                           
  7536                           	psect	text30
  7537  13E3                     __ptext30:	
  7538 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  7539 ;; Defined at:
  7540 ;;		line 556 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;  sensor          1    wreg     enum E2661
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  sensor          1    5[COMMON] enum E2661
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      _Bool 
  7547 ;; Registers used:
  7548 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7549 ;; Tracked objects:
  7550 ;;		On entry : 1F/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;Total ram usage:        2 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:    6
  7561 ;; This function calls:
  7562 ;;		___bmul
  7563 ;; This function is called by:
  7564 ;;		_Button_Service
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           
  7569                           ;psect for function _MTOUCH_Sensor_wasSampled
  7570  13E3                     _MTOUCH_Sensor_wasSampled:
  7571                           
  7572                           ;incstack = 0
  7573                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  7574                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  7575  13E3  00F5               	movwf	MTOUCH_Sensor_wasSampled@sensor
  7576                           
  7577                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 556: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 557: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 558:     if(sensor < (2u))
  7578  13E4  3002               	movlw	2
  7579  13E5  0275               	subwf	MTOUCH_Sensor_wasSampled@sensor,w
  7580  13E6  1803               	skipnc
  7581  13E7  2BF5               	goto	l3688
  7582                           
  7583                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 559:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
  7584  13E8  3009               	movlw	9
  7585  13E9  00F4               	movwf	??_MTOUCH_Sensor_wasSampled
  7586  13EA  0874               	movf	??_MTOUCH_Sensor_wasSampled,w
  7587  13EB  00F0               	movwf	___bmul@multiplicand
  7588  13EC  0875               	movf	MTOUCH_Sensor_wasSampled@sensor,w
  7589  13ED  3193  2369         	fcall	___bmul
  7590  13EF  3EB8               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
  7591  13F0  0086               	movwf	6
  7592  13F1  0187               	clrf	7
  7593  13F2  0C01               	rrf	1,w
  7594  13F3  3901               	andlw	1
  7595  13F4  0008               	return
  7596  13F5                     l3688:
  7597                           
  7598                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 561:         return 0;
  7599  13F5  3000               	movlw	0
  7600  13F6  0008               	return
  7601  13F7                     __end_of_MTOUCH_Sensor_wasSampled:
  7602                           
  7603                           	psect	text31
  7604  124F                     __ptext31:	
  7605 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  7606 ;; Defined at:
  7607 ;;		line 529 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;  sensor          1    wreg     enum E2661
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;  sensor          1    0[COMMON] enum E2661
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  1    wreg      _Bool 
  7614 ;; Registers used:
  7615 ;;		wreg
  7616 ;; Tracked objects:
  7617 ;;		On entry : 1F/0
  7618 ;;		On exit  : 1F/0
  7619 ;;		Unchanged: 1F/0
  7620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;Total ram usage:        0 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; Hardware stack levels required when called:    5
  7628 ;; This function calls:
  7629 ;;		Nothing
  7630 ;; This function is called by:
  7631 ;;		_Button_Service
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           
  7636                           ;psect for function _MTOUCH_Sensor_isCalibrated
  7637  124F                     _MTOUCH_Sensor_isCalibrated:
  7638                           
  7639                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 529: _Bool MTOUCH_Sensor_isCalibrated(enum 
      +                          mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 530: {;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 532:     return 1;
  7640                           
  7641                           ;incstack = 0
  7642                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg]
  7643  124F  3001               	movlw	1
  7644  1250  0008               	return
  7645  1251                     __end_of_MTOUCH_Sensor_isCalibrated:
  7646                           
  7647                           	psect	text32
  7648  0C00                     __ptext32:	
  7649 ;; *************** function _Button_State_NotPressed *****************
  7650 ;; Defined at:
  7651 ;;		line 229 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  button          1   13[COMMON] PTR struct .
  7654 ;;		 -> mtouch_button(32), 
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;		None
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  1    wreg      void 
  7659 ;; Registers used:
  7660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7661 ;; Tracked objects:
  7662 ;;		On entry : 1F/0
  7663 ;;		On exit  : 1F/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7666 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7669 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7670 ;;Total ram usage:        3 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    7
  7673 ;; This function calls:
  7674 ;;		_Button_Baseline_Update
  7675 ;;		_Button_DefaultCallback
  7676 ;;		_MTOUCH_Button_Initialize
  7677 ;; This function is called by:
  7678 ;;		_Button_Service
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           
  7683                           ;psect for function _Button_State_NotPressed
  7684  0C00                     _Button_State_NotPressed:
  7685                           
  7686                           ;mcc_generated_files/mtouch/mtouch_button.c: 229: static void Button_State_NotPressed(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 230: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 232:     if ((button->deviation) < (mtouch_button_deviatio
      +                          n_t)(-button->threshold))
  7687                           
  7688                           ;incstack = 0
  7689                           ; Regs used in _Button_State_NotPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7690  0C00  087D               	movf	Button_State_NotPressed@button,w
  7691  0C01  3E09               	addlw	9
  7692  0C02  0086               	movwf	6
  7693  0C03  3001               	movlw	1	; select bank2/3
  7694  0C04  0087               	movwf	7
  7695  0C05  0801               	movf	1,w
  7696  0C06  3A80               	xorlw	128
  7697  0C07  00A0               	movwf	??_Button_State_NotPressed
  7698  0C08  087D               	movf	Button_State_NotPressed@button,w
  7699  0C09  3E0E               	addlw	14
  7700  0C0A  0086               	movwf	6
  7701  0C0B  3001               	movlw	1	; select bank2/3
  7702  0C0C  0087               	movwf	7
  7703  0C0D  0301               	decf	1,w
  7704  0C0E  3AFF               	xorlw	255
  7705  0C0F  3A80               	xorlw	128
  7706  0C10  02A0               	subwf	??_Button_State_NotPressed,f
  7707  0C11  1803               	skipnc
  7708  0C12  2C3E               	goto	l3746
  7709                           
  7710                           ;mcc_generated_files/mtouch/mtouch_button.c: 233:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 234:         (button->counter)++;
  7711  0C13  087D               	movf	Button_State_NotPressed@button,w
  7712  0C14  3E0A               	addlw	10
  7713  0C15  0086               	movwf	6
  7714  0C16  3001               	movlw	1	; select bank2/3
  7715  0C17  0087               	movwf	7
  7716  0C18  3001               	movlw	1
  7717  0C19  0781               	addwf	1,f
  7718  0C1A  3141               	addfsr 1,1
  7719  0C1B  1803               	skipnc
  7720  0C1C  0A81               	incf	1,f
  7721                           
  7722                           ;mcc_generated_files/mtouch/mtouch_button.c: 235:         if ((button->counter) > (mtouc
      +                          h_button_statecounter_t)((mtouch_button_statecounter_t)64u))
  7723  0C1D  087D               	movf	Button_State_NotPressed@button,w
  7724  0C1E  3E0A               	addlw	10
  7725  0C1F  0086               	movwf	6
  7726  0C20  3001               	movlw	1	; select bank2/3
  7727  0C21  0087               	movwf	7
  7728  0C22  3F40               	moviw [0]fsr1
  7729  0C23  00A0               	movwf	??_Button_State_NotPressed
  7730  0C24  3F41               	moviw [1]fsr1
  7731  0C25  00A1               	movwf	??_Button_State_NotPressed+1
  7732  0C26  3000               	movlw	0
  7733  0C27  0221               	subwf	??_Button_State_NotPressed+1,w
  7734  0C28  3041               	movlw	65
  7735  0C29  1903               	skipnz
  7736  0C2A  0220               	subwf	??_Button_State_NotPressed,w
  7737  0C2B  1C03               	skipc
  7738  0C2C  2C7C               	goto	l340
  7739                           
  7740                           ;mcc_generated_files/mtouch/mtouch_button.c: 236:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 237:             button->counter = (mtouch_button_statecounter_t)0;
  7741  0C2D  087D               	movf	Button_State_NotPressed@button,w
  7742  0C2E  3E0A               	addlw	10
  7743  0C2F  0086               	movwf	6
  7744  0C30  3001               	movlw	1	; select bank2/3
  7745  0C31  0087               	movwf	7
  7746  0C32  3000               	movlw	0
  7747  0C33  3FC0               	movwi [0]fsr1
  7748  0C34  3FC1               	movwi [1]fsr1
  7749                           
  7750                           ;mcc_generated_files/mtouch/mtouch_button.c: 238:             MTOUCH_Button_Initialize(b
      +                          utton->name);
  7751  0C35  087D               	movf	Button_State_NotPressed@button,w
  7752  0C36  0086               	movwf	6
  7753  0C37  3001               	movlw	1	; select bank2/3
  7754  0C38  0087               	movwf	7
  7755  0C39  0801               	movf	1,w
  7756  0C3A  3197  2730  318C   	fcall	_MTOUCH_Button_Initialize
  7757  0C3D  2C7C               	goto	l340
  7758  0C3E                     l3746:
  7759  0C3E  087D               	movf	Button_State_NotPressed@button,w
  7760  0C3F  3E09               	addlw	9
  7761  0C40  0086               	movwf	6
  7762  0C41  3001               	movlw	1	; select bank2/3
  7763  0C42  0087               	movwf	7
  7764  0C43  0801               	movf	1,w
  7765  0C44  00A0               	movwf	??_Button_State_NotPressed
  7766  0C45  01A1               	clrf	??_Button_State_NotPressed+1
  7767  0C46  1BA0               	btfsc	??_Button_State_NotPressed,7
  7768  0C47  03A1               	decf	??_Button_State_NotPressed+1,f
  7769  0C48  087D               	movf	Button_State_NotPressed@button,w
  7770  0C49  3E0E               	addlw	14
  7771  0C4A  0086               	movwf	6
  7772  0C4B  3001               	movlw	1	; select bank2/3
  7773  0C4C  0087               	movwf	7
  7774  0C4D  0821               	movf	??_Button_State_NotPressed+1,w
  7775  0C4E  3A80               	xorlw	128
  7776  0C4F  3C80               	sublw	128
  7777  0C50  1D03               	skipz
  7778  0C51  2C54               	goto	u2925
  7779  0C52  0820               	movf	??_Button_State_NotPressed,w
  7780  0C53  0201               	subwf	1,w
  7781  0C54                     u2925:
  7782  0C54  1803               	skipnc
  7783  0C55  2C74               	goto	l3752
  7784                           
  7785                           ;mcc_generated_files/mtouch/mtouch_button.c: 243:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 245:         button->state = MTOUCH_BUTTON_STATE_pressed;
  7786  0C56  3002               	movlw	2
  7787  0C57  0020               	movlb	0	; select bank0
  7788  0C58  00A0               	movwf	??_Button_State_NotPressed
  7789  0C59  087D               	movf	Button_State_NotPressed@button,w
  7790  0C5A  3E02               	addlw	2
  7791  0C5B  0086               	movwf	6
  7792  0C5C  3001               	movlw	1	; select bank2/3
  7793  0C5D  0087               	movwf	7
  7794  0C5E  0820               	movf	??_Button_State_NotPressed,w
  7795  0C5F  0081               	movwf	1
  7796                           
  7797                           ;mcc_generated_files/mtouch/mtouch_button.c: 246:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  7798  0C60  087D               	movf	Button_State_NotPressed@button,w
  7799  0C61  3E0A               	addlw	10
  7800  0C62  0086               	movwf	6
  7801  0C63  3001               	movlw	1	; select bank2/3
  7802  0C64  0087               	movwf	7
  7803  0C65  3000               	movlw	0
  7804  0C66  3FC0               	movwi [0]fsr1
  7805  0C67  3FC1               	movwi [1]fsr1
  7806                           
  7807                           ;mcc_generated_files/mtouch/mtouch_button.c: 247:         callback_pressed(button->name)
      +                          ;
  7808  0C68  087D               	movf	Button_State_NotPressed@button,w
  7809  0C69  0086               	movwf	6
  7810  0C6A  3001               	movlw	1	; select bank2/3
  7811  0C6B  0087               	movwf	7
  7812  0C6C  0801               	movf	1,w
  7813  0C6D  00A0               	movwf	??_Button_State_NotPressed
  7814  0C6E  0820               	movf	??_Button_State_NotPressed,w
  7815  0C6F  00F0               	movwf	Button_DefaultCallback@button
  7816  0C70  3192  224B  318C   	fcall	_Button_DefaultCallback
  7817                           
  7818                           ;mcc_generated_files/mtouch/mtouch_button.c: 248:     }
  7819  0C73  2C7C               	goto	l340
  7820  0C74                     l3752:
  7821                           
  7822                           ;mcc_generated_files/mtouch/mtouch_button.c: 250:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 252:         button->counter = (mtouch_button_statecounter_t)0;
  7823  0C74  087D               	movf	Button_State_NotPressed@button,w
  7824  0C75  3E0A               	addlw	10
  7825  0C76  0086               	movwf	6
  7826  0C77  3001               	movlw	1	; select bank2/3
  7827  0C78  0087               	movwf	7
  7828  0C79  3000               	movlw	0
  7829  0C7A  3FC0               	movwi [0]fsr1
  7830  0C7B  3FC1               	movwi [1]fsr1
  7831  0C7C                     l340:
  7832                           
  7833                           ;mcc_generated_files/mtouch/mtouch_button.c: 257:     (button->baseline_count)++;
  7834  0C7C  087D               	movf	Button_State_NotPressed@button,w
  7835  0C7D  3E0C               	addlw	12
  7836  0C7E  0086               	movwf	6
  7837  0C7F  3001               	movlw	1	; select bank2/3
  7838  0C80  0087               	movwf	7
  7839  0C81  3001               	movlw	1
  7840  0C82  0781               	addwf	1,f
  7841  0C83  3141               	addfsr 1,1
  7842  0C84  1803               	skipnc
  7843  0C85  0A81               	incf	1,f
  7844                           
  7845                           ;mcc_generated_files/mtouch/mtouch_button.c: 258:     if ((button->baseline_count) == ((
      +                          mtouch_button_baselinecounter_t)64u))
  7846  0C86  087D               	movf	Button_State_NotPressed@button,w
  7847  0C87  3E0C               	addlw	12
  7848  0C88  0086               	movwf	6
  7849  0C89  3001               	movlw	1	; select bank2/3
  7850  0C8A  0087               	movwf	7
  7851  0C8B  0016               	moviw fsr1++
  7852  0C8C  3A40               	xorlw	64
  7853  0C8D  0020               	movlb	0	; select bank0
  7854  0C8E  00A0               	movwf	??_Button_State_NotPressed
  7855  0C8F  0016               	moviw fsr1++
  7856  0C90  04A0               	iorwf	??_Button_State_NotPressed,f
  7857  0C91  1D03               	btfss	3,2
  7858  0C92  0008               	return
  7859                           
  7860                           ;mcc_generated_files/mtouch/mtouch_button.c: 259:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 260:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
  7861  0C93  087D               	movf	Button_State_NotPressed@button,w
  7862  0C94  3E0C               	addlw	12
  7863  0C95  0086               	movwf	6
  7864  0C96  3001               	movlw	1	; select bank2/3
  7865  0C97  0087               	movwf	7
  7866  0C98  3000               	movlw	0
  7867  0C99  3FC0               	movwi [0]fsr1
  7868  0C9A  3FC1               	movwi [1]fsr1
  7869                           
  7870                           ;mcc_generated_files/mtouch/mtouch_button.c: 261:         Button_Baseline_Update(button)
      +                          ;
  7871  0C9B  087D               	movf	Button_State_NotPressed@button,w
  7872  0C9C  318B  2371         	fcall	_Button_Baseline_Update
  7873  0C9E  0008               	return
  7874  0C9F                     __end_of_Button_State_NotPressed:
  7875                           
  7876                           	psect	text33
  7877  09A8                     __ptext33:	
  7878 ;; *************** function _Button_State_Initializing *****************
  7879 ;; Defined at:
  7880 ;;		line 209 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  button          1   13[COMMON] PTR struct .
  7883 ;;		 -> mtouch_button(32), 
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      void 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 1F/0
  7892 ;;		On exit  : 1F/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7895 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7897 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7898 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7899 ;;Total ram usage:        5 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:    8
  7902 ;; This function calls:
  7903 ;;		_Button_Baseline_Initialize
  7904 ;;		_Button_Baseline_Update
  7905 ;; This function is called by:
  7906 ;;		_Button_Service
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           
  7911                           ;psect for function _Button_State_Initializing
  7912  09A8                     _Button_State_Initializing:
  7913                           
  7914                           ;mcc_generated_files/mtouch/mtouch_button.c: 209: static void Button_State_Initializing(
      +                          mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 210: {;mcc_generate
      +                          d_files/mtouch/mtouch_button.c: 212:     if ((button->counter) <= (mtouch_button_stateco
      +                          unter_t)((mtouch_button_baselinecounter_t)16u)/2)
  7915                           
  7916                           ;incstack = 0
  7917                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7918  09A8  087D               	movf	Button_State_Initializing@button,w
  7919  09A9  3E0A               	addlw	10
  7920  09AA  0086               	movwf	6
  7921  09AB  3001               	movlw	1	; select bank2/3
  7922  09AC  0087               	movwf	7
  7923  09AD  3F40               	moviw [0]fsr1
  7924  09AE  00A0               	movwf	??_Button_State_Initializing
  7925  09AF  3F41               	moviw [1]fsr1
  7926  09B0  00A1               	movwf	??_Button_State_Initializing+1
  7927  09B1  3000               	movlw	0
  7928  09B2  0221               	subwf	??_Button_State_Initializing+1,w
  7929  09B3  3009               	movlw	9
  7930  09B4  1903               	skipnz
  7931  09B5  0220               	subwf	??_Button_State_Initializing,w
  7932  09B6  1803               	skipnc
  7933  09B7  29BD               	goto	l3730
  7934                           
  7935                           ;mcc_generated_files/mtouch/mtouch_button.c: 213:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 214:         Button_Baseline_Initialize(button);
  7936  09B8  087D               	movf	Button_State_Initializing@button,w
  7937  09B9  3197  2703  3189   	fcall	_Button_Baseline_Initialize
  7938                           
  7939                           ;mcc_generated_files/mtouch/mtouch_button.c: 215:     } else {
  7940  09BC  29C1               	goto	l3732
  7941  09BD                     l3730:
  7942                           
  7943                           ;mcc_generated_files/mtouch/mtouch_button.c: 216:         Button_Baseline_Update(button)
      +                          ;
  7944  09BD  087D               	movf	Button_State_Initializing@button,w
  7945  09BE  318B  2371  3189   	fcall	_Button_Baseline_Update
  7946  09C1                     l3732:
  7947                           
  7948                           ;mcc_generated_files/mtouch/mtouch_button.c: 220:     (button->counter)++;
  7949  09C1  087D               	movf	Button_State_Initializing@button,w
  7950  09C2  3E0A               	addlw	10
  7951  09C3  0086               	movwf	6
  7952  09C4  3001               	movlw	1	; select bank2/3
  7953  09C5  0087               	movwf	7
  7954  09C6  3001               	movlw	1
  7955  09C7  0781               	addwf	1,f
  7956  09C8  3141               	addfsr 1,1
  7957  09C9  1803               	skipnc
  7958  09CA  0A81               	incf	1,f
  7959                           
  7960                           ;mcc_generated_files/mtouch/mtouch_button.c: 221:     if ((button->counter) >= (mtouch_b
      +                          utton_statecounter_t)((mtouch_button_baselinecounter_t)16u))
  7961  09CB  087D               	movf	Button_State_Initializing@button,w
  7962  09CC  3E0A               	addlw	10
  7963  09CD  0086               	movwf	6
  7964  09CE  3001               	movlw	1	; select bank2/3
  7965  09CF  0087               	movwf	7
  7966  09D0  3F40               	moviw [0]fsr1
  7967  09D1  0020               	movlb	0	; select bank0
  7968  09D2  00A0               	movwf	??_Button_State_Initializing
  7969  09D3  3F41               	moviw [1]fsr1
  7970  09D4  00A1               	movwf	??_Button_State_Initializing+1
  7971  09D5  3000               	movlw	0
  7972  09D6  0221               	subwf	??_Button_State_Initializing+1,w
  7973  09D7  3010               	movlw	16
  7974  09D8  1903               	skipnz
  7975  09D9  0220               	subwf	??_Button_State_Initializing,w
  7976  09DA  1C03               	skipc
  7977  09DB  0008               	return
  7978                           
  7979                           ;mcc_generated_files/mtouch/mtouch_button.c: 222:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 223:         button->reading = (mtouch_button_reading_t)((button->baseline)>
      +                          >((uint8_t)4u));
  7980  09DC  087D               	movf	Button_State_Initializing@button,w
  7981  09DD  3E05               	addlw	5
  7982  09DE  0086               	movwf	6
  7983  09DF  3001               	movlw	1	; select bank2/3
  7984  09E0  0087               	movwf	7
  7985  09E1  3F40               	moviw [0]fsr1
  7986  09E2  00A0               	movwf	??_Button_State_Initializing
  7987  09E3  3F41               	moviw [1]fsr1
  7988  09E4  00A1               	movwf	??_Button_State_Initializing+1
  7989  09E5  3F42               	moviw [2]fsr1
  7990  09E6  00A2               	movwf	??_Button_State_Initializing+2
  7991  09E7  3F43               	moviw [3]fsr1
  7992  09E8  00A3               	movwf	??_Button_State_Initializing+3
  7993  09E9  3004               	movlw	4
  7994  09EA                     u2895:
  7995  09EA  36A3               	lsrf	??_Button_State_Initializing+3,f
  7996  09EB  0CA2               	rrf	??_Button_State_Initializing+2,f
  7997  09EC  0CA1               	rrf	??_Button_State_Initializing+1,f
  7998  09ED  0CA0               	rrf	??_Button_State_Initializing,f
  7999  09EE  0B89               	decfsz	9,f
  8000  09EF  29EA               	goto	u2895
  8001  09F0  087D               	movf	Button_State_Initializing@button,w
  8002  09F1  3E03               	addlw	3
  8003  09F2  0086               	movwf	6
  8004  09F3  3001               	movlw	1	; select bank2/3
  8005  09F4  0087               	movwf	7
  8006  09F5  0820               	movf	??_Button_State_Initializing,w
  8007  09F6  3FC0               	movwi [0]fsr1
  8008  09F7  0821               	movf	??_Button_State_Initializing+1,w
  8009  09F8  3FC1               	movwi [1]fsr1
  8010                           
  8011                           ;mcc_generated_files/mtouch/mtouch_button.c: 224:         button->state = MTOUCH_BUTTON_
      +                          STATE_notPressed;
  8012  09F9  087D               	movf	Button_State_Initializing@button,w
  8013  09FA  3E02               	addlw	2
  8014  09FB  0086               	movwf	6
  8015  09FC  3001               	movlw	1	; select bank2/3
  8016  09FD  0087               	movwf	7
  8017  09FE  0181               	clrf	1
  8018  09FF  0A81               	incf	1,f
  8019                           
  8020                           ;mcc_generated_files/mtouch/mtouch_button.c: 225:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  8021  0A00  087D               	movf	Button_State_Initializing@button,w
  8022  0A01  3E0A               	addlw	10
  8023  0A02  0086               	movwf	6
  8024  0A03  3001               	movlw	1	; select bank2/3
  8025  0A04  0087               	movwf	7
  8026  0A05  3000               	movlw	0
  8027  0A06  3FC0               	movwi [0]fsr1
  8028  0A07  3FC1               	movwi [1]fsr1
  8029  0A08  0008               	return
  8030  0A09                     __end_of_Button_State_Initializing:
  8031                           
  8032                           	psect	text34
  8033  0949                     __ptext34:	
  8034 ;; *************** function _Button_State_Pressed *****************
  8035 ;; Defined at:
  8036 ;;		line 265 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  button          1   13[COMMON] PTR struct .
  8039 ;;		 -> mtouch_button(32), 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;		None
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  1    wreg      void 
  8044 ;; Registers used:
  8045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8046 ;; Tracked objects:
  8047 ;;		On entry : 1F/0
  8048 ;;		On exit  : 1F/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8051 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8053 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;Total ram usage:        3 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; Hardware stack levels required when called:    7
  8058 ;; This function calls:
  8059 ;;		_Button_DefaultCallback
  8060 ;;		_MTOUCH_Button_Initialize
  8061 ;; This function is called by:
  8062 ;;		_Button_Service
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           
  8067                           ;psect for function _Button_State_Pressed
  8068  0949                     _Button_State_Pressed:
  8069                           
  8070                           ;mcc_generated_files/mtouch/mtouch_button.c: 265: static void Button_State_Pressed(mtouc
      +                          h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 266: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 268:     if ((button->counter) >= ((mtouch_button_statecounte
      +                          r_t)1000u))
  8071                           
  8072                           ;incstack = 0
  8073                           ; Regs used in _Button_State_Pressed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8074  0949  087D               	movf	Button_State_Pressed@button,w
  8075  094A  3E0A               	addlw	10
  8076  094B  0086               	movwf	6
  8077  094C  3001               	movlw	1	; select bank2/3
  8078  094D  0087               	movwf	7
  8079  094E  3F40               	moviw [0]fsr1
  8080  094F  00A0               	movwf	??_Button_State_Pressed
  8081  0950  3F41               	moviw [1]fsr1
  8082  0951  00A1               	movwf	??_Button_State_Pressed+1
  8083  0952  3003               	movlw	3
  8084  0953  0221               	subwf	??_Button_State_Pressed+1,w
  8085  0954  30E8               	movlw	232
  8086  0955  1903               	skipnz
  8087  0956  0220               	subwf	??_Button_State_Pressed,w
  8088  0957  1C03               	skipc
  8089  0958  296D               	goto	l3762
  8090                           
  8091                           ;mcc_generated_files/mtouch/mtouch_button.c: 269:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 270:         MTOUCH_Button_Initialize(button->name);
  8092  0959  087D               	movf	Button_State_Pressed@button,w
  8093  095A  0086               	movwf	6
  8094  095B  3001               	movlw	1	; select bank2/3
  8095  095C  0087               	movwf	7
  8096  095D  0801               	movf	1,w
  8097  095E  3197  2730  3189   	fcall	_MTOUCH_Button_Initialize
  8098                           
  8099                           ;mcc_generated_files/mtouch/mtouch_button.c: 271:         callback_notPressed(button->na
      +                          me);
  8100  0961  087D               	movf	Button_State_Pressed@button,w
  8101  0962  0086               	movwf	6
  8102  0963  3001               	movlw	1	; select bank2/3
  8103  0964  0087               	movwf	7
  8104  0965  0801               	movf	1,w
  8105  0966  0020               	movlb	0	; select bank0
  8106  0967  00A0               	movwf	??_Button_State_Pressed
  8107  0968  0820               	movf	??_Button_State_Pressed,w
  8108  0969  00F0               	movwf	Button_DefaultCallback@button
  8109  096A  3192  224B         	fcall	_Button_DefaultCallback
  8110                           
  8111                           ;mcc_generated_files/mtouch/mtouch_button.c: 272:     }
  8112  096C  0008               	return
  8113  096D                     l3762:
  8114  096D  087D               	movf	Button_State_Pressed@button,w
  8115  096E  3E09               	addlw	9
  8116  096F  0086               	movwf	6
  8117  0970  3001               	movlw	1	; select bank2/3
  8118  0971  0087               	movwf	7
  8119  0972  0801               	movf	1,w
  8120  0973  3A80               	xorlw	128
  8121  0974  00A0               	movwf	??_Button_State_Pressed
  8122  0975  087D               	movf	Button_State_Pressed@button,w
  8123  0976  3E0E               	addlw	14
  8124  0977  0086               	movwf	6
  8125  0978  3001               	movlw	1	; select bank2/3
  8126  0979  0087               	movwf	7
  8127  097A  087D               	movf	Button_State_Pressed@button,w
  8128  097B  3E0E               	addlw	14
  8129  097C  0084               	movwf	4
  8130  097D  3001               	movlw	1	; select bank2/3
  8131  097E  0085               	movwf	5
  8132  097F  3600               	lsrf	0,w
  8133  0980  0201               	subwf	1,w
  8134  0981  3A80               	xorlw	128
  8135  0982  02A0               	subwf	??_Button_State_Pressed,f
  8136  0983  1803               	skipnc
  8137  0984  0008               	return
  8138                           
  8139                           ;mcc_generated_files/mtouch/mtouch_button.c: 276:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 277:         button->state = MTOUCH_BUTTON_STATE_notPressed;
  8140  0985  087D               	movf	Button_State_Pressed@button,w
  8141  0986  3E02               	addlw	2
  8142  0987  0086               	movwf	6
  8143  0988  3001               	movlw	1	; select bank2/3
  8144  0989  0087               	movwf	7
  8145  098A  0181               	clrf	1
  8146  098B  0A81               	incf	1,f
  8147                           
  8148                           ;mcc_generated_files/mtouch/mtouch_button.c: 278:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  8149  098C  087D               	movf	Button_State_Pressed@button,w
  8150  098D  3E0A               	addlw	10
  8151  098E  0086               	movwf	6
  8152  098F  3001               	movlw	1	; select bank2/3
  8153  0990  0087               	movwf	7
  8154  0991  3000               	movlw	0
  8155  0992  3FC0               	movwi [0]fsr1
  8156  0993  3FC1               	movwi [1]fsr1
  8157                           
  8158                           ;mcc_generated_files/mtouch/mtouch_button.c: 279:         button->baseline_count = (mtou
      +                          ch_button_baselinecounter_t)((0xffff))-((mtouch_button_baselinecounter_t)1024u);
  8159  0994  087D               	movf	Button_State_Pressed@button,w
  8160  0995  3E0C               	addlw	12
  8161  0996  0086               	movwf	6
  8162  0997  3001               	movlw	1	; select bank2/3
  8163  0998  0087               	movwf	7
  8164  0999  30FF               	movlw	255
  8165  099A  3FC0               	movwi [0]fsr1
  8166  099B  30FB               	movlw	251
  8167  099C  3FC1               	movwi [1]fsr1
  8168                           
  8169                           ;mcc_generated_files/mtouch/mtouch_button.c: 280:         callback_notPressed(button->na
      +                          me);
  8170  099D  087D               	movf	Button_State_Pressed@button,w
  8171  099E  0086               	movwf	6
  8172  099F  3001               	movlw	1	; select bank2/3
  8173  09A0  0087               	movwf	7
  8174  09A1  0801               	movf	1,w
  8175  09A2  00A0               	movwf	??_Button_State_Pressed
  8176  09A3  0820               	movf	??_Button_State_Pressed,w
  8177  09A4  00F0               	movwf	Button_DefaultCallback@button
  8178  09A5  3192  224B         	fcall	_Button_DefaultCallback
  8179  09A7  0008               	return
  8180  09A8                     __end_of_Button_State_Pressed:
  8181                           
  8182                           	psect	text35
  8183  124B                     __ptext35:	
  8184 ;; *************** function _Button_DefaultCallback *****************
  8185 ;; Defined at:
  8186 ;;		line 519 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;  button          1    0[COMMON] enum E2819
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;		None
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  1    wreg      void 
  8193 ;; Registers used:
  8194 ;;		None
  8195 ;; Tracked objects:
  8196 ;;		On entry : 1F/0
  8197 ;;		On exit  : 1F/0
  8198 ;;		Unchanged: 1F/0
  8199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8200 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8203 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8204 ;;Total ram usage:        1 bytes
  8205 ;; Hardware stack levels used:    1
  8206 ;; Hardware stack levels required when called:    5
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_Button_State_NotPressed
  8211 ;;		_Button_State_Pressed
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           
  8216                           ;psect for function _Button_DefaultCallback
  8217  124B                     _Button_DefaultCallback:
  8218                           
  8219                           ;incstack = 0
  8220                           ; Regs used in _Button_DefaultCallback: []
  8221  124B  0008               	return
  8222  124C                     __end_of_Button_DefaultCallback:
  8223                           
  8224                           	psect	text36
  8225  0B71                     __ptext36:	
  8226 ;; *************** function _Button_Baseline_Update *****************
  8227 ;; Defined at:
  8228 ;;		line 473 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  button          1    wreg     PTR struct .
  8231 ;;		 -> mtouch_button(32), 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  button          1    6[COMMON] PTR struct .
  8234 ;;		 -> mtouch_button(32), 
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      void 
  8237 ;; Registers used:
  8238 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8239 ;; Tracked objects:
  8240 ;;		On entry : 1F/0
  8241 ;;		On exit  : 1F/0
  8242 ;;		Unchanged: 1F/0
  8243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8247 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8248 ;;Total ram usage:        7 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:    5
  8251 ;; This function calls:
  8252 ;;		Nothing
  8253 ;; This function is called by:
  8254 ;;		_Button_State_Initializing
  8255 ;;		_Button_State_NotPressed
  8256 ;; This function uses a non-reentrant model
  8257 ;;
  8258                           
  8259                           
  8260                           ;psect for function _Button_Baseline_Update
  8261  0B71                     _Button_Baseline_Update:
  8262                           
  8263                           ;incstack = 0
  8264                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  8265                           ;Button_Baseline_Update@button stored from wreg
  8266  0B71  00F6               	movwf	Button_Baseline_Update@button
  8267                           
  8268                           ;mcc_generated_files/mtouch/mtouch_button.c: 473: static void Button_Baseline_Update(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 474: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 475:     if (GIE == (uint8_t)1)
  8269  0B72  1F8B               	btfss	11,7	;volatile
  8270  0B73  2BBB               	goto	l3416
  8271                           
  8272                           ;mcc_generated_files/mtouch/mtouch_button.c: 476:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 477:         GIE = (uint8_t)0;
  8273  0B74  138B               	bcf	11,7	;volatile
  8274                           
  8275                           ;mcc_generated_files/mtouch/mtouch_button.c: 478:         button->baseline -= (button->b
      +                          aseline) >> ((uint8_t)4u);
  8276  0B75  0876               	movf	Button_Baseline_Update@button,w
  8277  0B76  3E05               	addlw	5
  8278  0B77  0086               	movwf	6
  8279  0B78  3001               	movlw	1	; select bank2/3
  8280  0B79  0087               	movwf	7
  8281  0B7A  3F40               	moviw [0]fsr1
  8282  0B7B  00F0               	movwf	??_Button_Baseline_Update
  8283  0B7C  3F41               	moviw [1]fsr1
  8284  0B7D  00F1               	movwf	??_Button_Baseline_Update+1
  8285  0B7E  3F42               	moviw [2]fsr1
  8286  0B7F  00F2               	movwf	??_Button_Baseline_Update+2
  8287  0B80  3F43               	moviw [3]fsr1
  8288  0B81  00F3               	movwf	??_Button_Baseline_Update+3
  8289  0B82  3004               	movlw	4
  8290  0B83                     u2265:
  8291  0B83  36F3               	lsrf	??_Button_Baseline_Update+3,f
  8292  0B84  0CF2               	rrf	??_Button_Baseline_Update+2,f
  8293  0B85  0CF1               	rrf	??_Button_Baseline_Update+1,f
  8294  0B86  0CF0               	rrf	??_Button_Baseline_Update,f
  8295  0B87  0B89               	decfsz	9,f
  8296  0B88  2B83               	goto	u2265
  8297  0B89  0876               	movf	Button_Baseline_Update@button,w
  8298  0B8A  3E05               	addlw	5
  8299  0B8B  0086               	movwf	6
  8300  0B8C  3001               	movlw	1	; select bank2/3
  8301  0B8D  0087               	movwf	7
  8302  0B8E  0870               	movf	??_Button_Baseline_Update,w
  8303  0B8F  0281               	subwf	1,f
  8304  0B90  3141               	addfsr 1,1
  8305  0B91  0871               	movf	??_Button_Baseline_Update+1,w
  8306  0B92  3B81               	subwfb	1,f
  8307  0B93  3141               	addfsr 1,1
  8308  0B94  0872               	movf	??_Button_Baseline_Update+2,w
  8309  0B95  3B81               	subwfb	1,f
  8310  0B96  3141               	addfsr 1,1
  8311  0B97  0873               	movf	??_Button_Baseline_Update+3,w
  8312  0B98  3B81               	subwfb	1,f
  8313  0B99  317D               	addfsr 1,-3
  8314                           
  8315                           ;mcc_generated_files/mtouch/mtouch_button.c: 479:         button->baseline += button->re
      +                          ading;
  8316  0B9A  0876               	movf	Button_Baseline_Update@button,w
  8317  0B9B  3E03               	addlw	3
  8318  0B9C  0086               	movwf	6
  8319  0B9D  3001               	movlw	1	; select bank2/3
  8320  0B9E  0087               	movwf	7
  8321  0B9F  3F40               	moviw [0]fsr1
  8322  0BA0  00F0               	movwf	??_Button_Baseline_Update
  8323  0BA1  3F41               	moviw [1]fsr1
  8324  0BA2  00F1               	movwf	??_Button_Baseline_Update+1
  8325  0BA3  0870               	movf	??_Button_Baseline_Update,w
  8326  0BA4  00F2               	movwf	??_Button_Baseline_Update+2
  8327  0BA5  0871               	movf	??_Button_Baseline_Update+1,w
  8328  0BA6  00F3               	movwf	??_Button_Baseline_Update+3
  8329  0BA7  01F4               	clrf	??_Button_Baseline_Update+4
  8330  0BA8  01F5               	clrf	??_Button_Baseline_Update+5
  8331  0BA9  0876               	movf	Button_Baseline_Update@button,w
  8332  0BAA  3E05               	addlw	5
  8333  0BAB  0086               	movwf	6
  8334  0BAC  3001               	movlw	1	; select bank2/3
  8335  0BAD  0087               	movwf	7
  8336  0BAE  0872               	movf	??_Button_Baseline_Update+2,w
  8337  0BAF  0781               	addwf	1,f
  8338  0BB0  3141               	addfsr 1,1
  8339  0BB1  0873               	movf	??_Button_Baseline_Update+3,w
  8340  0BB2  3D81               	addwfc	1,f
  8341  0BB3  3141               	addfsr 1,1
  8342  0BB4  0874               	movf	??_Button_Baseline_Update+4,w
  8343  0BB5  3D81               	addwfc	1,f
  8344  0BB6  3141               	addfsr 1,1
  8345  0BB7  0875               	movf	??_Button_Baseline_Update+5,w
  8346  0BB8  3D81               	addwfc	1,f
  8347                           
  8348                           ;mcc_generated_files/mtouch/mtouch_button.c: 480:         GIE = (uint8_t)1;
  8349  0BB9  178B               	bsf	11,7	;volatile
  8350                           
  8351                           ;mcc_generated_files/mtouch/mtouch_button.c: 481:     }
  8352  0BBA  0008               	return
  8353  0BBB                     l3416:
  8354                           
  8355                           ;mcc_generated_files/mtouch/mtouch_button.c: 483:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 484:         button->baseline -= (button->baseline) >> ((uint8_t)4u);
  8356  0BBB  0876               	movf	Button_Baseline_Update@button,w
  8357  0BBC  3E05               	addlw	5
  8358  0BBD  0086               	movwf	6
  8359  0BBE  3001               	movlw	1	; select bank2/3
  8360  0BBF  0087               	movwf	7
  8361  0BC0  3F40               	moviw [0]fsr1
  8362  0BC1  00F0               	movwf	??_Button_Baseline_Update
  8363  0BC2  3F41               	moviw [1]fsr1
  8364  0BC3  00F1               	movwf	??_Button_Baseline_Update+1
  8365  0BC4  3F42               	moviw [2]fsr1
  8366  0BC5  00F2               	movwf	??_Button_Baseline_Update+2
  8367  0BC6  3F43               	moviw [3]fsr1
  8368  0BC7  00F3               	movwf	??_Button_Baseline_Update+3
  8369  0BC8  3004               	movlw	4
  8370  0BC9                     u2275:
  8371  0BC9  36F3               	lsrf	??_Button_Baseline_Update+3,f
  8372  0BCA  0CF2               	rrf	??_Button_Baseline_Update+2,f
  8373  0BCB  0CF1               	rrf	??_Button_Baseline_Update+1,f
  8374  0BCC  0CF0               	rrf	??_Button_Baseline_Update,f
  8375  0BCD  0B89               	decfsz	9,f
  8376  0BCE  2BC9               	goto	u2275
  8377  0BCF  0876               	movf	Button_Baseline_Update@button,w
  8378  0BD0  3E05               	addlw	5
  8379  0BD1  0086               	movwf	6
  8380  0BD2  3001               	movlw	1	; select bank2/3
  8381  0BD3  0087               	movwf	7
  8382  0BD4  0870               	movf	??_Button_Baseline_Update,w
  8383  0BD5  0281               	subwf	1,f
  8384  0BD6  3141               	addfsr 1,1
  8385  0BD7  0871               	movf	??_Button_Baseline_Update+1,w
  8386  0BD8  3B81               	subwfb	1,f
  8387  0BD9  3141               	addfsr 1,1
  8388  0BDA  0872               	movf	??_Button_Baseline_Update+2,w
  8389  0BDB  3B81               	subwfb	1,f
  8390  0BDC  3141               	addfsr 1,1
  8391  0BDD  0873               	movf	??_Button_Baseline_Update+3,w
  8392  0BDE  3B81               	subwfb	1,f
  8393  0BDF  317D               	addfsr 1,-3
  8394                           
  8395                           ;mcc_generated_files/mtouch/mtouch_button.c: 485:         button->baseline += button->re
      +                          ading;
  8396  0BE0  0876               	movf	Button_Baseline_Update@button,w
  8397  0BE1  3E03               	addlw	3
  8398  0BE2  0086               	movwf	6
  8399  0BE3  3001               	movlw	1	; select bank2/3
  8400  0BE4  0087               	movwf	7
  8401  0BE5  3F40               	moviw [0]fsr1
  8402  0BE6  00F0               	movwf	??_Button_Baseline_Update
  8403  0BE7  3F41               	moviw [1]fsr1
  8404  0BE8  00F1               	movwf	??_Button_Baseline_Update+1
  8405  0BE9  0870               	movf	??_Button_Baseline_Update,w
  8406  0BEA  00F2               	movwf	??_Button_Baseline_Update+2
  8407  0BEB  0871               	movf	??_Button_Baseline_Update+1,w
  8408  0BEC  00F3               	movwf	??_Button_Baseline_Update+3
  8409  0BED  01F4               	clrf	??_Button_Baseline_Update+4
  8410  0BEE  01F5               	clrf	??_Button_Baseline_Update+5
  8411  0BEF  0876               	movf	Button_Baseline_Update@button,w
  8412  0BF0  3E05               	addlw	5
  8413  0BF1  0086               	movwf	6
  8414  0BF2  3001               	movlw	1	; select bank2/3
  8415  0BF3  0087               	movwf	7
  8416  0BF4  0872               	movf	??_Button_Baseline_Update+2,w
  8417  0BF5  0781               	addwf	1,f
  8418  0BF6  3141               	addfsr 1,1
  8419  0BF7  0873               	movf	??_Button_Baseline_Update+3,w
  8420  0BF8  3D81               	addwfc	1,f
  8421  0BF9  3141               	addfsr 1,1
  8422  0BFA  0874               	movf	??_Button_Baseline_Update+4,w
  8423  0BFB  3D81               	addwfc	1,f
  8424  0BFC  3141               	addfsr 1,1
  8425  0BFD  0875               	movf	??_Button_Baseline_Update+5,w
  8426  0BFE  3D81               	addwfc	1,f
  8427  0BFF  0008               	return
  8428  0C00                     __end_of_Button_Baseline_Update:
  8429                           
  8430                           	psect	text37
  8431  1703                     __ptext37:	
  8432 ;; *************** function _Button_Baseline_Initialize *****************
  8433 ;; Defined at:
  8434 ;;		line 467 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;  button          1    wreg     PTR struct .
  8437 ;;		 -> mtouch_button(32), 
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;  button          1   12[COMMON] PTR struct .
  8440 ;;		 -> mtouch_button(32), 
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  1    wreg      void 
  8443 ;; Registers used:
  8444 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8445 ;; Tracked objects:
  8446 ;;		On entry : 1F/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8452 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;Total ram usage:        5 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; Hardware stack levels required when called:    7
  8457 ;; This function calls:
  8458 ;;		_MTOUCH_Sensor_RawSample_Get
  8459 ;; This function is called by:
  8460 ;;		_Button_State_Initializing
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           
  8465                           ;psect for function _Button_Baseline_Initialize
  8466  1703                     _Button_Baseline_Initialize:
  8467                           
  8468                           ;incstack = 0
  8469                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8470                           ;Button_Baseline_Initialize@button stored from wreg
  8471  1703  00FC               	movwf	Button_Baseline_Initialize@button
  8472                           
  8473                           ;mcc_generated_files/mtouch/mtouch_button.c: 467: static void Button_Baseline_Initialize
      +                          (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 468: {;mcc_generat
      +                          ed_files/mtouch/mtouch_button.c: 469:     button->baseline = MTOUCH_Sensor_RawSample_Get
      +                          (button->sensor);
  8474  1704  0A7C               	incf	Button_Baseline_Initialize@button,w
  8475  1705  0086               	movwf	6
  8476  1706  3001               	movlw	1	; select bank2/3
  8477  1707  0087               	movwf	7
  8478  1708  0801               	movf	1,w
  8479  1709  3194  2462  3197   	fcall	_MTOUCH_Sensor_RawSample_Get
  8480  170C  0874               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8481  170D  00F8               	movwf	??_Button_Baseline_Initialize
  8482  170E  0875               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8483  170F  00F9               	movwf	??_Button_Baseline_Initialize+1
  8484  1710  01FA               	clrf	??_Button_Baseline_Initialize+2
  8485  1711  01FB               	clrf	??_Button_Baseline_Initialize+3
  8486  1712  087C               	movf	Button_Baseline_Initialize@button,w
  8487  1713  3E05               	addlw	5
  8488  1714  0086               	movwf	6
  8489  1715  3001               	movlw	1	; select bank2/3
  8490  1716  0087               	movwf	7
  8491  1717  0878               	movf	??_Button_Baseline_Initialize,w
  8492  1718  3FC0               	movwi [0]fsr1
  8493  1719  0879               	movf	??_Button_Baseline_Initialize+1,w
  8494  171A  3FC1               	movwi [1]fsr1
  8495  171B  087A               	movf	??_Button_Baseline_Initialize+2,w
  8496  171C  3FC2               	movwi [2]fsr1
  8497  171D  087B               	movf	??_Button_Baseline_Initialize+3,w
  8498  171E  3FC3               	movwi [3]fsr1
  8499                           
  8500                           ;mcc_generated_files/mtouch/mtouch_button.c: 470:     button->baseline <<= ((uint8_t)4u)
      +                          ;
  8501  171F  087C               	movf	Button_Baseline_Initialize@button,w
  8502  1720  3E05               	addlw	5
  8503  1721  0086               	movwf	6
  8504  1722  3001               	movlw	1	; select bank2/3
  8505  1723  0087               	movwf	7
  8506  1724  3004               	movlw	4
  8507  1725                     u2245:
  8508  1725  3581               	lslf	1,f
  8509  1726  3141               	addfsr 1,1
  8510  1727  0D81               	rlf	1,f
  8511  1728  3141               	addfsr 1,1
  8512  1729  0D81               	rlf	1,f
  8513  172A  3141               	addfsr 1,1
  8514  172B  0D81               	rlf	1,f
  8515  172C  317D               	addfsr 1,-3
  8516  172D  0B89               	decfsz	9,f
  8517  172E  2F25               	goto	u2245
  8518  172F  0008               	return
  8519  1730                     __end_of_Button_Baseline_Initialize:
  8520                           
  8521                           	psect	text38
  8522  1320                     __ptext38:	
  8523 ;; *************** function _Button_Reading_Update *****************
  8524 ;; Defined at:
  8525 ;;		line 440 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;  button          1    wreg     PTR struct .
  8528 ;;		 -> mtouch_button(32), 
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  button          1   11[COMMON] PTR struct .
  8531 ;;		 -> mtouch_button(32), 
  8532 ;; Return value:  Size  Location     Type
  8533 ;;                  1    wreg      void 
  8534 ;; Registers used:
  8535 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8536 ;; Tracked objects:
  8537 ;;		On entry : 1F/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8545 ;;Total ram usage:        1 bytes
  8546 ;; Hardware stack levels used:    1
  8547 ;; Hardware stack levels required when called:    8
  8548 ;; This function calls:
  8549 ;;		_Button_Reading_Update_Helper
  8550 ;; This function is called by:
  8551 ;;		_Button_Service
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           
  8556                           ;psect for function _Button_Reading_Update
  8557  1320                     _Button_Reading_Update:
  8558                           
  8559                           ;incstack = 0
  8560                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8561                           ;Button_Reading_Update@button stored from wreg
  8562  1320  00FB               	movwf	Button_Reading_Update@button
  8563                           
  8564                           ;mcc_generated_files/mtouch/mtouch_button.c: 440: static void Button_Reading_Update(mtou
      +                          ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 441: {;mcc_generated_fi
      +                          les/mtouch/mtouch_button.c: 442:     if (GIE == (uint8_t) 1)
  8565  1321  1F8B               	btfss	11,7	;volatile
  8566  1322  2B29               	goto	l3712
  8567                           
  8568                           ;mcc_generated_files/mtouch/mtouch_button.c: 443:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 444:         GIE = (uint8_t) 0;
  8569  1323  138B               	bcf	11,7	;volatile
  8570                           
  8571                           ;mcc_generated_files/mtouch/mtouch_button.c: 445:         Button_Reading_Update_Helper(b
      +                          utton);
  8572  1324  087B               	movf	Button_Reading_Update@button,w
  8573  1325  3197  2766         	fcall	_Button_Reading_Update_Helper
  8574                           
  8575                           ;mcc_generated_files/mtouch/mtouch_button.c: 446:         GIE = (uint8_t) 1;
  8576  1327  178B               	bsf	11,7	;volatile
  8577                           
  8578                           ;mcc_generated_files/mtouch/mtouch_button.c: 447:     }
  8579  1328  0008               	return
  8580  1329                     l3712:
  8581                           
  8582                           ;mcc_generated_files/mtouch/mtouch_button.c: 449:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 450:         Button_Reading_Update_Helper(button);
  8583  1329  087B               	movf	Button_Reading_Update@button,w
  8584  132A  3197  2766         	fcall	_Button_Reading_Update_Helper
  8585  132C  0008               	return
  8586  132D                     __end_of_Button_Reading_Update:
  8587                           
  8588                           	psect	text39
  8589  1766                     __ptext39:	
  8590 ;; *************** function _Button_Reading_Update_Helper *****************
  8591 ;; Defined at:
  8592 ;;		line 454 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;  button          1    wreg     PTR struct .
  8595 ;;		 -> mtouch_button(32), 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;  button          1   10[COMMON] PTR struct .
  8598 ;;		 -> mtouch_button(32), 
  8599 ;; Return value:  Size  Location     Type
  8600 ;;                  1    wreg      void 
  8601 ;; Registers used:
  8602 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8603 ;; Tracked objects:
  8604 ;;		On entry : 1F/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8611 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8612 ;;Total ram usage:        3 bytes
  8613 ;; Hardware stack levels used:    1
  8614 ;; Hardware stack levels required when called:    7
  8615 ;; This function calls:
  8616 ;;		_MTOUCH_Sensor_RawSample_Get
  8617 ;; This function is called by:
  8618 ;;		_Button_Reading_Update
  8619 ;; This function uses a non-reentrant model
  8620 ;;
  8621                           
  8622                           
  8623                           ;psect for function _Button_Reading_Update_Helper
  8624  1766                     _Button_Reading_Update_Helper:
  8625                           
  8626                           ;incstack = 0
  8627                           ; Regs used in _Button_Reading_Update_Helper: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  8628                           ;Button_Reading_Update_Helper@button stored from wreg
  8629  1766  00FA               	movwf	Button_Reading_Update_Helper@button
  8630                           
  8631                           ;mcc_generated_files/mtouch/mtouch_button.c: 454: static void Button_Reading_Update_Help
      +                          er(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 455: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 456:     if (button->state != MTOUCH_BUTTON_STATE_ini
      +                          tializing)
  8632  1767  087A               	movf	Button_Reading_Update_Helper@button,w
  8633  1768  3E02               	addlw	2
  8634  1769  0086               	movwf	6
  8635  176A  3001               	movlw	1	; select bank2/3
  8636  176B  0087               	movwf	7
  8637  176C  0801               	movf	1,w
  8638  176D  1903               	btfsc	3,2
  8639  176E  2FA2               	goto	l3424
  8640                           
  8641                           ;mcc_generated_files/mtouch/mtouch_button.c: 457:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 458:         button->reading -= button->reading>>((uint8_t)2u);
  8642  176F  087A               	movf	Button_Reading_Update_Helper@button,w
  8643  1770  3E03               	addlw	3
  8644  1771  0086               	movwf	6
  8645  1772  3001               	movlw	1	; select bank2/3
  8646  1773  0087               	movwf	7
  8647  1774  3F40               	moviw [0]fsr1
  8648  1775  00F8               	movwf	??_Button_Reading_Update_Helper
  8649  1776  3F41               	moviw [1]fsr1
  8650  1777  00F9               	movwf	??_Button_Reading_Update_Helper+1
  8651  1778  36F9               	lsrf	??_Button_Reading_Update_Helper+1,f
  8652  1779  0CF8               	rrf	??_Button_Reading_Update_Helper,f
  8653  177A  36F9               	lsrf	??_Button_Reading_Update_Helper+1,f
  8654  177B  0CF8               	rrf	??_Button_Reading_Update_Helper,f
  8655  177C  087A               	movf	Button_Reading_Update_Helper@button,w
  8656  177D  3E03               	addlw	3
  8657  177E  0086               	movwf	6
  8658  177F  3001               	movlw	1	; select bank2/3
  8659  1780  0087               	movwf	7
  8660  1781  0878               	movf	??_Button_Reading_Update_Helper,w
  8661  1782  0281               	subwf	1,f
  8662  1783  3141               	addfsr 1,1
  8663  1784  0879               	movf	??_Button_Reading_Update_Helper+1,w
  8664  1785  3B81               	subwfb	1,f
  8665  1786  317F               	addfsr 1,-1
  8666                           
  8667                           ;mcc_generated_files/mtouch/mtouch_button.c: 459:         button->reading += MTOUCH_Sens
      +                          or_RawSample_Get(button->sensor) >> ((uint8_t)2u);
  8668  1787  0A7A               	incf	Button_Reading_Update_Helper@button,w
  8669  1788  0086               	movwf	6
  8670  1789  3001               	movlw	1	; select bank2/3
  8671  178A  0087               	movwf	7
  8672  178B  0801               	movf	1,w
  8673  178C  3194  2462         	fcall	_MTOUCH_Sensor_RawSample_Get
  8674  178E  0874               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8675  178F  00F8               	movwf	??_Button_Reading_Update_Helper
  8676  1790  0875               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8677  1791  00F9               	movwf	??_Button_Reading_Update_Helper+1
  8678  1792  36F9               	lsrf	??_Button_Reading_Update_Helper+1,f
  8679  1793  0CF8               	rrf	??_Button_Reading_Update_Helper,f
  8680  1794  36F9               	lsrf	??_Button_Reading_Update_Helper+1,f
  8681  1795  0CF8               	rrf	??_Button_Reading_Update_Helper,f
  8682  1796  087A               	movf	Button_Reading_Update_Helper@button,w
  8683  1797  3E03               	addlw	3
  8684  1798  0086               	movwf	6
  8685  1799  3001               	movlw	1	; select bank2/3
  8686  179A  0087               	movwf	7
  8687  179B  0878               	movf	??_Button_Reading_Update_Helper,w
  8688  179C  0781               	addwf	1,f
  8689  179D  3141               	addfsr 1,1
  8690  179E  0879               	movf	??_Button_Reading_Update_Helper+1,w
  8691  179F  3D81               	addwfc	1,f
  8692  17A0  317F               	addfsr 1,-1
  8693                           
  8694                           ;mcc_generated_files/mtouch/mtouch_button.c: 460:     }
  8695  17A1  0008               	return
  8696  17A2                     l3424:
  8697                           
  8698                           ;mcc_generated_files/mtouch/mtouch_button.c: 462:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 463:         button->reading = MTOUCH_Sensor_RawSample_Get(button->sensor);
  8699  17A2  0A7A               	incf	Button_Reading_Update_Helper@button,w
  8700  17A3  0086               	movwf	6
  8701  17A4  3001               	movlw	1	; select bank2/3
  8702  17A5  0087               	movwf	7
  8703  17A6  0801               	movf	1,w
  8704  17A7  3194  2462         	fcall	_MTOUCH_Sensor_RawSample_Get
  8705  17A9  087A               	movf	Button_Reading_Update_Helper@button,w
  8706  17AA  3E03               	addlw	3
  8707  17AB  0086               	movwf	6
  8708  17AC  3001               	movlw	1	; select bank2/3
  8709  17AD  0087               	movwf	7
  8710  17AE  0874               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8711  17AF  3FC0               	movwi [0]fsr1
  8712  17B0  0875               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8713  17B1  3FC1               	movwi [1]fsr1
  8714  17B2  0008               	return
  8715  17B3                     __end_of_Button_Reading_Update_Helper:
  8716                           
  8717                           	psect	text40
  8718  1462                     __ptext40:	
  8719 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
  8720 ;; Defined at:
  8721 ;;		line 420 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;  name            1    wreg     enum E2661
  8724 ;; Auto vars:     Size  Location     Type
  8725 ;;  name            1    7[COMMON] enum E2661
  8726 ;; Return value:  Size  Location     Type
  8727 ;;                  2    4[COMMON] unsigned short 
  8728 ;; Registers used:
  8729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8730 ;; Tracked objects:
  8731 ;;		On entry : 1F/0
  8732 ;;		On exit  : 0/0
  8733 ;;		Unchanged: 0/0
  8734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8737 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8738 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8739 ;;Total ram usage:        4 bytes
  8740 ;; Hardware stack levels used:    1
  8741 ;; Hardware stack levels required when called:    6
  8742 ;; This function calls:
  8743 ;;		___bmul
  8744 ;; This function is called by:
  8745 ;;		_Button_Reading_Update_Helper
  8746 ;;		_Button_Baseline_Initialize
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           
  8751                           ;psect for function _MTOUCH_Sensor_RawSample_Get
  8752  1462                     _MTOUCH_Sensor_RawSample_Get:
  8753                           
  8754                           ;incstack = 0
  8755                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  8756                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
  8757  1462  00F7               	movwf	MTOUCH_Sensor_RawSample_Get@name
  8758  1463  3002               	movlw	2
  8759  1464  0277               	subwf	MTOUCH_Sensor_RawSample_Get@name,w
  8760  1465  1803               	skipnc
  8761  1466  2C76               	goto	l3324
  8762  1467  3009               	movlw	9
  8763  1468  00F6               	movwf	??_MTOUCH_Sensor_RawSample_Get
  8764  1469  0876               	movf	??_MTOUCH_Sensor_RawSample_Get,w
  8765  146A  00F0               	movwf	___bmul@multiplicand
  8766  146B  0877               	movf	MTOUCH_Sensor_RawSample_Get@name,w
  8767  146C  3193  2369         	fcall	___bmul
  8768  146E  3EB6               	addlw	(low ((_mtouch_sensor| 0+6)))& (0+255)
  8769  146F  0086               	movwf	6
  8770  1470  0187               	clrf	7
  8771  1471  3F40               	moviw [0]fsr1
  8772  1472  00F4               	movwf	?_MTOUCH_Sensor_RawSample_Get
  8773  1473  3F41               	moviw [1]fsr1
  8774  1474  00F5               	movwf	?_MTOUCH_Sensor_RawSample_Get+1
  8775  1475  0008               	return
  8776  1476                     l3324:
  8777  1476  01F4               	clrf	?_MTOUCH_Sensor_RawSample_Get
  8778  1477  01F5               	clrf	?_MTOUCH_Sensor_RawSample_Get+1
  8779  1478  0008               	return
  8780  1479                     __end_of_MTOUCH_Sensor_RawSample_Get:
  8781                           
  8782                           	psect	text41
  8783  0AE7                     __ptext41:	
  8784 ;; *************** function _Button_Deviation_Update *****************
  8785 ;; Defined at:
  8786 ;;		line 391 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;  button          1    wreg     PTR struct .
  8789 ;;		 -> mtouch_button(32), 
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;  button          1    0[BANK0 ] PTR struct .
  8792 ;;		 -> mtouch_button(32), 
  8793 ;;  deviation       4    1[BANK0 ] long 
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  1    wreg      void 
  8796 ;; Registers used:
  8797 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8798 ;; Tracked objects:
  8799 ;;		On entry : 1F/0
  8800 ;;		On exit  : 1F/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8805 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8806 ;;      Totals:        10       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;Total ram usage:       15 bytes
  8808 ;; Hardware stack levels used:    1
  8809 ;; Hardware stack levels required when called:    5
  8810 ;; This function calls:
  8811 ;;		Nothing
  8812 ;; This function is called by:
  8813 ;;		_Button_Service
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           
  8818                           ;psect for function _Button_Deviation_Update
  8819  0AE7                     _Button_Deviation_Update:
  8820                           
  8821                           ;incstack = 0
  8822                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  8823                           ;Button_Deviation_Update@button stored from wreg
  8824  0AE7  00A0               	movwf	Button_Deviation_Update@button
  8825                           
  8826                           ;mcc_generated_files/mtouch/mtouch_button.c: 391: static void Button_Deviation_Update(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 392: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 393:     int32_t deviation;;mcc_generated_files/mtouch/mto
      +                          uch_button.c: 395:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4u)));
  8827  0AE8  0820               	movf	Button_Deviation_Update@button,w
  8828  0AE9  3E05               	addlw	5
  8829  0AEA  0086               	movwf	6
  8830  0AEB  3001               	movlw	1	; select bank2/3
  8831  0AEC  0087               	movwf	7
  8832  0AED  3F40               	moviw [0]fsr1
  8833  0AEE  00F0               	movwf	??_Button_Deviation_Update
  8834  0AEF  3F41               	moviw [1]fsr1
  8835  0AF0  00F1               	movwf	??_Button_Deviation_Update+1
  8836  0AF1  3F42               	moviw [2]fsr1
  8837  0AF2  00F2               	movwf	??_Button_Deviation_Update+2
  8838  0AF3  3F43               	moviw [3]fsr1
  8839  0AF4  00F3               	movwf	??_Button_Deviation_Update+3
  8840  0AF5  3004               	movlw	4
  8841  0AF6                     u2835:
  8842  0AF6  36F3               	lsrf	??_Button_Deviation_Update+3,f
  8843  0AF7  0CF2               	rrf	??_Button_Deviation_Update+2,f
  8844  0AF8  0CF1               	rrf	??_Button_Deviation_Update+1,f
  8845  0AF9  0CF0               	rrf	??_Button_Deviation_Update,f
  8846  0AFA  0B89               	decfsz	9,f
  8847  0AFB  2AF6               	goto	u2835
  8848  0AFC  0820               	movf	Button_Deviation_Update@button,w
  8849  0AFD  3E03               	addlw	3
  8850  0AFE  0086               	movwf	6
  8851  0AFF  3001               	movlw	1	; select bank2/3
  8852  0B00  0087               	movwf	7
  8853  0B01  3F40               	moviw [0]fsr1
  8854  0B02  00F4               	movwf	??_Button_Deviation_Update+4
  8855  0B03  3F41               	moviw [1]fsr1
  8856  0B04  00F5               	movwf	??_Button_Deviation_Update+5
  8857  0B05  0874               	movf	??_Button_Deviation_Update+4,w
  8858  0B06  00F6               	movwf	??_Button_Deviation_Update+6
  8859  0B07  0875               	movf	??_Button_Deviation_Update+5,w
  8860  0B08  00F7               	movwf	??_Button_Deviation_Update+7
  8861  0B09  01F8               	clrf	??_Button_Deviation_Update+8
  8862  0B0A  01F9               	clrf	??_Button_Deviation_Update+9
  8863  0B0B  0870               	movf	??_Button_Deviation_Update,w
  8864  0B0C  02F6               	subwf	??_Button_Deviation_Update+6,f
  8865  0B0D  0871               	movf	??_Button_Deviation_Update+1,w
  8866  0B0E  3BF7               	subwfb	??_Button_Deviation_Update+7,f
  8867  0B0F  0872               	movf	??_Button_Deviation_Update+2,w
  8868  0B10  3BF8               	subwfb	??_Button_Deviation_Update+8,f
  8869  0B11  0873               	movf	??_Button_Deviation_Update+3,w
  8870  0B12  3BF9               	subwfb	??_Button_Deviation_Update+9,f
  8871  0B13  0879               	movf	??_Button_Deviation_Update+9,w
  8872  0B14  00A4               	movwf	Button_Deviation_Update@deviation+3
  8873  0B15  0878               	movf	??_Button_Deviation_Update+8,w
  8874  0B16  00A3               	movwf	Button_Deviation_Update@deviation+2
  8875  0B17  0877               	movf	??_Button_Deviation_Update+7,w
  8876  0B18  00A2               	movwf	Button_Deviation_Update@deviation+1
  8877  0B19  0876               	movf	??_Button_Deviation_Update+6,w
  8878  0B1A  00A1               	movwf	Button_Deviation_Update@deviation
  8879                           
  8880                           ;mcc_generated_files/mtouch/mtouch_button.c: 398:     deviation = deviation >> (button->
      +                          scaling);
  8881  0B1B  0821               	movf	Button_Deviation_Update@deviation,w
  8882  0B1C  00F0               	movwf	??_Button_Deviation_Update
  8883  0B1D  0822               	movf	Button_Deviation_Update@deviation+1,w
  8884  0B1E  00F1               	movwf	??_Button_Deviation_Update+1
  8885  0B1F  0823               	movf	Button_Deviation_Update@deviation+2,w
  8886  0B20  00F2               	movwf	??_Button_Deviation_Update+2
  8887  0B21  0824               	movf	Button_Deviation_Update@deviation+3,w
  8888  0B22  00F3               	movwf	??_Button_Deviation_Update+3
  8889  0B23  0820               	movf	Button_Deviation_Update@button,w
  8890  0B24  3E0F               	addlw	15
  8891  0B25  0086               	movwf	6
  8892  0B26  3001               	movlw	1	; select bank2/3
  8893  0B27  0087               	movwf	7
  8894  0B28  0A01               	incf	1,w
  8895  0B29  2B2E               	goto	u2840
  8896  0B2A                     u2845:
  8897  0B2A  37F3               	asrf	??_Button_Deviation_Update+3,f
  8898  0B2B  0CF2               	rrf	??_Button_Deviation_Update+2,f
  8899  0B2C  0CF1               	rrf	??_Button_Deviation_Update+1,f
  8900  0B2D  0CF0               	rrf	??_Button_Deviation_Update,f
  8901  0B2E                     u2840:
  8902  0B2E  0B89               	decfsz	9,f
  8903  0B2F  2B2A               	goto	u2845
  8904  0B30  0873               	movf	??_Button_Deviation_Update+3,w
  8905  0B31  00A4               	movwf	Button_Deviation_Update@deviation+3
  8906  0B32  0872               	movf	??_Button_Deviation_Update+2,w
  8907  0B33  00A3               	movwf	Button_Deviation_Update@deviation+2
  8908  0B34  0871               	movf	??_Button_Deviation_Update+1,w
  8909  0B35  00A2               	movwf	Button_Deviation_Update@deviation+1
  8910  0B36  0870               	movf	??_Button_Deviation_Update,w
  8911  0B37  00A1               	movwf	Button_Deviation_Update@deviation
  8912                           
  8913                           ;mcc_generated_files/mtouch/mtouch_button.c: 401:     if (deviation > ((0x7f)))
  8914  0B38  1BA4               	btfsc	Button_Deviation_Update@deviation+3,7
  8915  0B39  2B50               	goto	l3720
  8916  0B3A  0824               	movf	Button_Deviation_Update@deviation+3,w
  8917  0B3B  1D03               	btfss	3,2
  8918  0B3C  2B47               	goto	l3718
  8919  0B3D  0823               	movf	Button_Deviation_Update@deviation+2,w
  8920  0B3E  1D03               	btfss	3,2
  8921  0B3F  2B47               	goto	l3718
  8922  0B40  0822               	movf	Button_Deviation_Update@deviation+1,w
  8923  0B41  1D03               	btfss	3,2
  8924  0B42  2B47               	goto	l3718
  8925  0B43  3080               	movlw	128
  8926  0B44  0221               	subwf	Button_Deviation_Update@deviation,w
  8927  0B45  1C03               	btfss	3,0
  8928  0B46  2B50               	goto	l3720
  8929  0B47                     l3718:
  8930                           
  8931                           ;mcc_generated_files/mtouch/mtouch_button.c: 402:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 403:         deviation = ((0x7f));
  8932  0B47  3000               	movlw	0
  8933  0B48  0020               	movlb	0	; select bank0
  8934  0B49  00A4               	movwf	Button_Deviation_Update@deviation+3
  8935  0B4A  3000               	movlw	0
  8936  0B4B  00A3               	movwf	Button_Deviation_Update@deviation+2
  8937  0B4C  3000               	movlw	0
  8938  0B4D  00A2               	movwf	Button_Deviation_Update@deviation+1
  8939  0B4E  307F               	movlw	127
  8940  0B4F  00A1               	movwf	Button_Deviation_Update@deviation
  8941  0B50                     l3720:
  8942                           
  8943                           ;mcc_generated_files/mtouch/mtouch_button.c: 405:     if (deviation < ((-1-0x7f)))
  8944  0B50  0020               	movlb	0	; select bank0
  8945  0B51  1FA4               	btfss	Button_Deviation_Update@deviation+3,7
  8946  0B52  2B66               	goto	l3724
  8947  0B53  3080               	movlw	128
  8948  0B54  0221               	subwf	Button_Deviation_Update@deviation,w
  8949  0B55  30FF               	movlw	255
  8950  0B56  3B22               	subwfb	Button_Deviation_Update@deviation+1,w
  8951  0B57  30FF               	movlw	255
  8952  0B58  3B23               	subwfb	Button_Deviation_Update@deviation+2,w
  8953  0B59  30FF               	movlw	255
  8954  0B5A  3B24               	subwfb	Button_Deviation_Update@deviation+3,w
  8955  0B5B  1803               	btfsc	3,0
  8956  0B5C  2B66               	goto	l3724
  8957                           
  8958                           ;mcc_generated_files/mtouch/mtouch_button.c: 406:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 407:         deviation = ((-1-0x7f));
  8959  0B5D  30FF               	movlw	255
  8960  0B5E  0020               	movlb	0	; select bank0
  8961  0B5F  00A4               	movwf	Button_Deviation_Update@deviation+3
  8962  0B60  30FF               	movlw	255
  8963  0B61  00A3               	movwf	Button_Deviation_Update@deviation+2
  8964  0B62  30FF               	movlw	255
  8965  0B63  00A2               	movwf	Button_Deviation_Update@deviation+1
  8966  0B64  3080               	movlw	128
  8967  0B65  00A1               	movwf	Button_Deviation_Update@deviation
  8968  0B66                     l3724:
  8969                           
  8970                           ;mcc_generated_files/mtouch/mtouch_button.c: 410:     button->deviation = (mtouch_button
      +                          _deviation_t)deviation;
  8971  0B66  0020               	movlb	0	; select bank0
  8972  0B67  0821               	movf	Button_Deviation_Update@deviation,w
  8973  0B68  00F0               	movwf	??_Button_Deviation_Update
  8974  0B69  0820               	movf	Button_Deviation_Update@button,w
  8975  0B6A  3E09               	addlw	9
  8976  0B6B  0086               	movwf	6
  8977  0B6C  3001               	movlw	1	; select bank2/3
  8978  0B6D  0087               	movwf	7
  8979  0B6E  0870               	movf	??_Button_Deviation_Update,w
  8980  0B6F  0081               	movwf	1
  8981  0B70  0008               	return
  8982  0B71                     __end_of_Button_Deviation_Update:
  8983                           
  8984                           	psect	text42
  8985  14DC                     __ptext42:	
  8986 ;; *************** function _MTOUCH_Button_isPressed *****************
  8987 ;; Defined at:
  8988 ;;		line 366 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8989 ;; Parameters:    Size  Location     Type
  8990 ;;  name            1    wreg     enum E2819
  8991 ;; Auto vars:     Size  Location     Type
  8992 ;;  name            1    1[COMMON] enum E2819
  8993 ;; Return value:  Size  Location     Type
  8994 ;;                  1    wreg      _Bool 
  8995 ;; Registers used:
  8996 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8997 ;; Tracked objects:
  8998 ;;		On entry : 0/1
  8999 ;;		On exit  : 0/0
  9000 ;;		Unchanged: 0/0
  9001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9003 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;Total ram usage:        2 bytes
  9007 ;; Hardware stack levels used:    1
  9008 ;; Hardware stack levels required when called:    5
  9009 ;; This function calls:
  9010 ;;		Nothing
  9011 ;; This function is called by:
  9012 ;;		_StartTouchDetection
  9013 ;;		_StopTouchDetection
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           
  9018                           ;psect for function _MTOUCH_Button_isPressed
  9019  14DC                     _MTOUCH_Button_isPressed:
  9020                           
  9021                           ;incstack = 0
  9022                           ; Regs used in _MTOUCH_Button_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0]
  9023                           ;MTOUCH_Button_isPressed@name stored from wreg
  9024  14DC  00F1               	movwf	MTOUCH_Button_isPressed@name
  9025                           
  9026                           ;mcc_generated_files/mtouch/mtouch_button.c: 366: _Bool MTOUCH_Button_isPressed(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 367: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 368:     if(name < 2u)
  9027  14DD  3002               	movlw	2
  9028  14DE  0271               	subwf	MTOUCH_Button_isPressed@name,w
  9029  14DF  1803               	skipnc
  9030  14E0  2CF5               	goto	l4306
  9031                           
  9032                           ;mcc_generated_files/mtouch/mtouch_button.c: 369:         return (_Bool)((mtouch_button[
      +                          name].state == MTOUCH_BUTTON_STATE_pressed) ? 1 : 0);
  9033  14E1  0871               	movf	MTOUCH_Button_isPressed@name,w
  9034  14E2  00F0               	movwf	??_MTOUCH_Button_isPressed
  9035  14E3  3003               	movlw	3
  9036  14E4                     u3845:
  9037  14E4  35F0               	lslf	??_MTOUCH_Button_isPressed,f
  9038  14E5  3EFF               	addlw	-1
  9039  14E6  1D03               	skipz
  9040  14E7  2CE4               	goto	u3845
  9041  14E8  3570               	lslf	??_MTOUCH_Button_isPressed,w
  9042  14E9  3E22               	addlw	(low ((_mtouch_button| (0+256)+2)))& (0+255)
  9043  14EA  0086               	movwf	6
  9044  14EB  3001               	movlw	1	; select bank2/3
  9045  14EC  0087               	movwf	7
  9046  14ED  3002               	movlw	2
  9047  14EE  0601               	xorwf	1,w
  9048  14EF  1D03               	btfss	3,2
  9049  14F0  2CF3               	goto	u3850
  9050  14F1  3001               	movlw	1
  9051  14F2  0008               	return
  9052  14F3                     u3850:
  9053  14F3  3000               	movlw	0
  9054  14F4  0008               	return
  9055  14F5                     l4306:
  9056                           
  9057                           ;mcc_generated_files/mtouch/mtouch_button.c: 371:         return 0;
  9058  14F5  3000               	movlw	0
  9059  14F6  0008               	return
  9060  14F7                     __end_of_MTOUCH_Button_isPressed:
  9061                           
  9062                           	psect	text43
  9063  1436                     __ptext43:	
  9064 ;; *************** function _Init_Function *****************
  9065 ;; Defined at:
  9066 ;;		line 77 in file "main.c"
  9067 ;; Parameters:    Size  Location     Type
  9068 ;;		None
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;		None
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		wreg, status,2, status,0, pclath, cstack
  9075 ;; Tracked objects:
  9076 ;;		On entry : 1C/1
  9077 ;;		On exit  : 1F/2
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9084 ;;Total ram usage:        0 bytes
  9085 ;; Hardware stack levels used:    1
  9086 ;; Hardware stack levels required when called:    9
  9087 ;; This function calls:
  9088 ;;		_StartStop_AlarmLED
  9089 ;;		_StartStop_AlarmLED_Blink
  9090 ;;		_StartStop_Buzzer
  9091 ;;		_StartStop_Dimmer
  9092 ;;		_StartStop_Fan
  9093 ;; This function is called by:
  9094 ;;		_main
  9095 ;;		_StopTouchDetection
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           
  9100                           ;psect for function _Init_Function
  9101  1436                     _Init_Function:
  9102                           
  9103                           ;main.c: 79:     StartStop_AlarmLED(0);
  9104                           
  9105                           ;incstack = 0
  9106                           ; Regs used in _Init_Function: [wreg+status,2+status,0+pclath+cstack]
  9107  1436  3000               	movlw	0
  9108  1437  3192  22AF  3194   	fcall	_StartStop_AlarmLED
  9109                           
  9110                           ;main.c: 80:     StartStop_AlarmLED_Blink(0);
  9111  143A  3000               	movlw	0
  9112  143B  3193  2307  3194   	fcall	_StartStop_AlarmLED_Blink
  9113                           
  9114                           ;main.c: 81:     StartStop_Fan(0);
  9115  143E  3000               	movlw	0
  9116  143F  3192  22C3  3194   	fcall	_StartStop_Fan
  9117                           
  9118                           ;main.c: 82:     StartStop_Buzzer(0);
  9119  1442  3000               	movlw	0
  9120  1443  3192  22B9  3194   	fcall	_StartStop_Buzzer
  9121                           
  9122                           ;main.c: 83:     StartStop_Dimmer(0);
  9123  1446  3000               	movlw	0
  9124  1447  3194  240C         	fcall	_StartStop_Dimmer
  9125  1449  0022               	movlb	2	; select bank2
  9126  144A  128E               	bcf	14,5	;volatile
  9127  144B  0008               	return
  9128  144C                     __end_of_Init_Function:
  9129                           
  9130                           	psect	text44
  9131  12C3                     __ptext44:	
  9132 ;; *************** function _StartStop_Fan *****************
  9133 ;; Defined at:
  9134 ;;		line 179 in file "main.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;  OnOff           1    wreg     _Bool 
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;  OnOff           1    0[COMMON] _Bool 
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  1    wreg      void 
  9141 ;; Registers used:
  9142 ;;		wreg, status,2, status,0
  9143 ;; Tracked objects:
  9144 ;;		On entry : 15/0
  9145 ;;		On exit  : 1F/2
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9152 ;;Total ram usage:        1 bytes
  9153 ;; Hardware stack levels used:    1
  9154 ;; Hardware stack levels required when called:    5
  9155 ;; This function calls:
  9156 ;;		Nothing
  9157 ;; This function is called by:
  9158 ;;		_Init_Function
  9159 ;;		_StartHeater
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           
  9164                           ;psect for function _StartStop_Fan
  9165  12C3                     _StartStop_Fan:
  9166                           
  9167                           ;incstack = 0
  9168                           ; Regs used in _StartStop_Fan: [wreg+status,2+status,0]
  9169                           ;StartStop_Fan@OnOff stored from wreg
  9170  12C3  00F0               	movwf	StartStop_Fan@OnOff
  9171                           
  9172                           ;main.c: 181:     if (1 == OnOff){
  9173  12C4  0370               	decf	StartStop_Fan@OnOff,w
  9174  12C5  1D03               	btfss	3,2
  9175  12C6  2ACA               	goto	l899
  9176                           
  9177                           ;main.c: 183:         do { LATCbits.LATC3 = 1; } while(0);
  9178  12C7  0022               	movlb	2	; select bank2
  9179  12C8  158E               	bsf	14,3	;volatile
  9180  12C9  0008               	return
  9181  12CA                     l899:	
  9182                           ;main.c: 187:         do { LATCbits.LATC3 = 0; } while(0);
  9183                           
  9184  12CA  0022               	movlb	2	; select bank2
  9185  12CB  118E               	bcf	14,3	;volatile
  9186  12CC  0008               	return
  9187  12CD                     __end_of_StartStop_Fan:
  9188                           
  9189                           	psect	text45
  9190  140C                     __ptext45:	
  9191 ;; *************** function _StartStop_Dimmer *****************
  9192 ;; Defined at:
  9193 ;;		line 207 in file "main.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  OnOff           1    wreg     _Bool 
  9196 ;; Auto vars:     Size  Location     Type
  9197 ;;  OnOff           1   66[BANK0 ] _Bool 
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  1    wreg      void 
  9200 ;; Registers used:
  9201 ;;		wreg, status,2, status,0, pclath, cstack
  9202 ;; Tracked objects:
  9203 ;;		On entry : 15/2
  9204 ;;		On exit  : 1F/0
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9208 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9210 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9211 ;;Total ram usage:        1 bytes
  9212 ;; Hardware stack levels used:    1
  9213 ;; Hardware stack levels required when called:    8
  9214 ;; This function calls:
  9215 ;;		_SetDimmer
  9216 ;; This function is called by:
  9217 ;;		_Init_Function
  9218 ;;		_StartHeater
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222                           
  9223                           ;psect for function _StartStop_Dimmer
  9224  140C                     _StartStop_Dimmer:
  9225                           
  9226                           ;incstack = 0
  9227                           ; Regs used in _StartStop_Dimmer: [wreg+status,2+status,0+pclath+cstack]
  9228                           ;StartStop_Dimmer@OnOff stored from wreg
  9229  140C  0020               	movlb	0	; select bank0
  9230  140D  00E2               	movwf	StartStop_Dimmer@OnOff
  9231                           
  9232                           ;main.c: 209:     if (1 == OnOff){
  9233  140E  0362               	decf	StartStop_Dimmer@OnOff,w
  9234  140F  1D03               	btfss	3,2
  9235  1410  2C14               	goto	l4260
  9236                           
  9237                           ;main.c: 211:         DimmerStatusFlag_g = 1;
  9238  1411  01EA               	clrf	_DimmerStatusFlag_g
  9239  1412  0AEA               	incf	_DimmerStatusFlag_g,f
  9240                           
  9241                           ;main.c: 212:     }
  9242  1413  0008               	return
  9243  1414                     l4260:
  9244                           
  9245                           ;main.c: 215:         SetDimmer(3);
  9246  1414  3040               	movlw	64
  9247  1415  00DD               	movwf	SetDimmer@dim_percentage+3
  9248  1416  3040               	movlw	64
  9249  1417  00DC               	movwf	SetDimmer@dim_percentage+2
  9250  1418  3000               	movlw	0
  9251  1419  00DB               	movwf	SetDimmer@dim_percentage+1
  9252  141A  3000               	movlw	0
  9253  141B  00DA               	movwf	SetDimmer@dim_percentage
  9254  141C  318A  226E         	fcall	_SetDimmer
  9255                           
  9256                           ;main.c: 216:         DimmerStatusFlag_g = 0;
  9257  141E  0020               	movlb	0	; select bank0
  9258  141F  01EA               	clrf	_DimmerStatusFlag_g
  9259  1420  0008               	return
  9260  1421                     __end_of_StartStop_Dimmer:
  9261                           
  9262                           	psect	text46
  9263  0A6E                     __ptext46:	
  9264 ;; *************** function _SetDimmer *****************
  9265 ;; Defined at:
  9266 ;;		line 268 in file "main.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;  dim_percenta    4   58[BANK0 ] float 
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;  TRIAC_off_du    4   62[BANK0 ] float 
  9271 ;; Return value:  Size  Location     Type
  9272 ;;                  1    wreg      void 
  9273 ;; Registers used:
  9274 ;;		wreg, status,2, status,0, pclath, cstack
  9275 ;; Tracked objects:
  9276 ;;		On entry : 1F/0
  9277 ;;		On exit  : 1F/1
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9280 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9281 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;Total ram usage:        8 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; Hardware stack levels required when called:    7
  9287 ;; This function calls:
  9288 ;;		___fldiv
  9289 ;;		___flmul
  9290 ;;		___flsub
  9291 ;;		___fltol
  9292 ;; This function is called by:
  9293 ;;		_StartStop_Dimmer
  9294 ;;		_StartHeater
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           
  9299                           ;psect for function _SetDimmer
  9300  0A6E                     _SetDimmer:
  9301                           
  9302                           ;main.c: 275:     TRIAC_off_duration_ms = HalfCycleACDuration_const - (5.0 * dim_percent
      +                          age / 50.0);
  9303                           
  9304                           ;incstack = 0
  9305                           ; Regs used in _SetDimmer: [wreg+status,2+status,0+pclath+cstack]
  9306  0A6E  3042               	movlw	66
  9307  0A6F  00B8               	movwf	___fldiv@a+3
  9308  0A70  3048               	movlw	72
  9309  0A71  00B7               	movwf	___fldiv@a+2
  9310  0A72  3000               	movlw	0
  9311  0A73  00B6               	movwf	___fldiv@a+1
  9312  0A74  3000               	movlw	0
  9313  0A75  00B5               	movwf	___fldiv@a
  9314  0A76  3040               	movlw	64
  9315  0A77  00A3               	movwf	___flmul@b+3
  9316  0A78  30A0               	movlw	160
  9317  0A79  00A2               	movwf	___flmul@b+2
  9318  0A7A  3000               	movlw	0
  9319  0A7B  00A1               	movwf	___flmul@b+1
  9320  0A7C  3000               	movlw	0
  9321  0A7D  00A0               	movwf	___flmul@b
  9322  0A7E  085D               	movf	SetDimmer@dim_percentage+3,w
  9323  0A7F  00A7               	movwf	___flmul@a+3
  9324  0A80  085C               	movf	SetDimmer@dim_percentage+2,w
  9325  0A81  00A6               	movwf	___flmul@a+2
  9326  0A82  085B               	movf	SetDimmer@dim_percentage+1,w
  9327  0A83  00A5               	movwf	___flmul@a+1
  9328  0A84  085A               	movf	SetDimmer@dim_percentage,w
  9329  0A85  00A4               	movwf	___flmul@a
  9330  0A86  3185  25E1  318A   	fcall	___flmul
  9331  0A89  0823               	movf	?___flmul+3,w
  9332  0A8A  00BC               	movwf	___fldiv@b+3
  9333  0A8B  0822               	movf	?___flmul+2,w
  9334  0A8C  00BB               	movwf	___fldiv@b+2
  9335  0A8D  0821               	movf	?___flmul+1,w
  9336  0A8E  00BA               	movwf	___fldiv@b+1
  9337  0A8F  0820               	movf	?___flmul,w
  9338  0A90  00B9               	movwf	___fldiv@b
  9339  0A91  318C  249F  318A   	fcall	___fldiv
  9340  0A94  0838               	movf	?___fldiv+3,w
  9341  0A95  00D2               	movwf	___flsub@a+3
  9342  0A96  0837               	movf	?___fldiv+2,w
  9343  0A97  00D1               	movwf	___flsub@a+2
  9344  0A98  0836               	movf	?___fldiv+1,w
  9345  0A99  00D0               	movwf	___flsub@a+1
  9346  0A9A  0835               	movf	?___fldiv,w
  9347  0A9B  00CF               	movwf	___flsub@a
  9348  0A9C  3041               	movlw	65
  9349  0A9D  00D6               	movwf	___flsub@b+3
  9350  0A9E  3020               	movlw	32
  9351  0A9F  00D5               	movwf	___flsub@b+2
  9352  0AA0  3000               	movlw	0
  9353  0AA1  00D4               	movwf	___flsub@b+1
  9354  0AA2  3000               	movlw	0
  9355  0AA3  00D3               	movwf	___flsub@b
  9356  0AA4  3194  24F7  318A   	fcall	___flsub
  9357  0AA7  0852               	movf	?___flsub+3,w
  9358  0AA8  00E1               	movwf	SetDimmer@TRIAC_off_duration_ms+3
  9359  0AA9  0851               	movf	?___flsub+2,w
  9360  0AAA  00E0               	movwf	SetDimmer@TRIAC_off_duration_ms+2
  9361  0AAB  0850               	movf	?___flsub+1,w
  9362  0AAC  00DF               	movwf	SetDimmer@TRIAC_off_duration_ms+1
  9363  0AAD  084F               	movf	?___flsub,w
  9364  0AAE  00DE               	movwf	SetDimmer@TRIAC_off_duration_ms
  9365                           
  9366                           ;main.c: 276:     tmr2_required_counter_steps_g = (TRIAC_off_duration_ms * 1000) / TMR2_
      +                          Timer_Period_const;
  9367  0AAF  0861               	movf	SetDimmer@TRIAC_off_duration_ms+3,w
  9368  0AB0  00A7               	movwf	___flmul@a+3
  9369  0AB1  0860               	movf	SetDimmer@TRIAC_off_duration_ms+2,w
  9370  0AB2  00A6               	movwf	___flmul@a+2
  9371  0AB3  085F               	movf	SetDimmer@TRIAC_off_duration_ms+1,w
  9372  0AB4  00A5               	movwf	___flmul@a+1
  9373  0AB5  085E               	movf	SetDimmer@TRIAC_off_duration_ms,w
  9374  0AB6  00A4               	movwf	___flmul@a
  9375  0AB7  3044               	movlw	68
  9376  0AB8  00A3               	movwf	___flmul@b+3
  9377  0AB9  307A               	movlw	122
  9378  0ABA  00A2               	movwf	___flmul@b+2
  9379  0ABB  3000               	movlw	0
  9380  0ABC  00A1               	movwf	___flmul@b+1
  9381  0ABD  3000               	movlw	0
  9382  0ABE  00A0               	movwf	___flmul@b
  9383  0ABF  3185  25E1  318A   	fcall	___flmul
  9384  0AC2  0823               	movf	?___flmul+3,w
  9385  0AC3  00BC               	movwf	___fldiv@b+3
  9386  0AC4  0822               	movf	?___flmul+2,w
  9387  0AC5  00BB               	movwf	___fldiv@b+2
  9388  0AC6  0821               	movf	?___flmul+1,w
  9389  0AC7  00BA               	movwf	___fldiv@b+1
  9390  0AC8  0820               	movf	?___flmul,w
  9391  0AC9  00B9               	movwf	___fldiv@b
  9392  0ACA  3042               	movlw	66
  9393  0ACB  00B8               	movwf	___fldiv@a+3
  9394  0ACC  30C8               	movlw	200
  9395  0ACD  00B7               	movwf	___fldiv@a+2
  9396  0ACE  3000               	movlw	0
  9397  0ACF  00B6               	movwf	___fldiv@a+1
  9398  0AD0  3000               	movlw	0
  9399  0AD1  00B5               	movwf	___fldiv@a
  9400  0AD2  318C  249F  318A   	fcall	___fldiv
  9401  0AD5  0838               	movf	?___fldiv+3,w
  9402  0AD6  00D2               	movwf	___fltol@f1+3
  9403  0AD7  0837               	movf	?___fldiv+2,w
  9404  0AD8  00D1               	movwf	___fltol@f1+2
  9405  0AD9  0836               	movf	?___fldiv+1,w
  9406  0ADA  00D0               	movwf	___fltol@f1+1
  9407  0ADB  0835               	movf	?___fldiv,w
  9408  0ADC  00CF               	movwf	___fltol@f1
  9409  0ADD  318A  2209         	fcall	___fltol
  9410  0ADF  0850               	movf	?___fltol+1,w
  9411  0AE0  0021               	movlb	1	; select bank1
  9412  0AE1  00C7               	movwf	(_tmr2_required_counter_steps_g+1)^(0+128)
  9413  0AE2  0020               	movlb	0	; select bank0
  9414  0AE3  084F               	movf	?___fltol,w
  9415  0AE4  0021               	movlb	1	; select bank1
  9416  0AE5  00C6               	movwf	_tmr2_required_counter_steps_g^(0+128)
  9417  0AE6  0008               	return
  9418  0AE7                     __end_of_SetDimmer:
  9419                           
  9420                           	psect	text47
  9421  0A09                     __ptext47:	
  9422 ;; *************** function ___fltol *****************
  9423 ;; Defined at:
  9424 ;;		line 43 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/fltol.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;  f1              4   47[BANK0 ] void 
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;  exp1            1   57[BANK0 ] unsigned char 
  9429 ;;  sign1           1   56[BANK0 ] unsigned char 
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  4   47[BANK0 ] long 
  9432 ;; Registers used:
  9433 ;;		wreg, status,2, status,0
  9434 ;; Tracked objects:
  9435 ;;		On entry : 1F/0
  9436 ;;		On exit  : 1F/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9439 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9440 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9441 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9442 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9443 ;;Total ram usage:       11 bytes
  9444 ;; Hardware stack levels used:    1
  9445 ;; Hardware stack levels required when called:    5
  9446 ;; This function calls:
  9447 ;;		Nothing
  9448 ;; This function is called by:
  9449 ;;		_SetDimmer
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           
  9454                           ;psect for function ___fltol
  9455  0A09                     ___fltol:
  9456                           
  9457                           ;incstack = 0
  9458                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9459  0A09  1003               	clrc
  9460  0A0A  0D51               	rlf	___fltol@f1+2,w
  9461  0A0B  0D52               	rlf	___fltol@f1+3,w
  9462  0A0C  00D3               	movwf	??___fltol
  9463  0A0D  0853               	movf	??___fltol,w
  9464  0A0E  00D9               	movwf	___fltol@exp1
  9465  0A0F  0859               	movf	___fltol@exp1,w
  9466  0A10  1D03               	btfss	3,2
  9467  0A11  2A1B               	goto	l3780
  9468  0A12                     l3776:
  9469  0A12  3000               	movlw	0
  9470  0A13  00D2               	movwf	?___fltol+3
  9471  0A14  3000               	movlw	0
  9472  0A15  00D1               	movwf	?___fltol+2
  9473  0A16  3000               	movlw	0
  9474  0A17  00D0               	movwf	?___fltol+1
  9475  0A18  3000               	movlw	0
  9476  0A19  00CF               	movwf	?___fltol
  9477  0A1A  0008               	return
  9478  0A1B                     l3780:
  9479  0A1B  084F               	movf	___fltol@f1,w
  9480  0A1C  00D3               	movwf	??___fltol
  9481  0A1D  0850               	movf	___fltol@f1+1,w
  9482  0A1E  00D4               	movwf	??___fltol+1
  9483  0A1F  0851               	movf	___fltol@f1+2,w
  9484  0A20  00D5               	movwf	??___fltol+2
  9485  0A21  0852               	movf	___fltol@f1+3,w
  9486  0A22  00D6               	movwf	??___fltol+3
  9487  0A23  301F               	movlw	31
  9488  0A24                     u2995:
  9489  0A24  36D6               	lsrf	??___fltol+3,f
  9490  0A25  0CD5               	rrf	??___fltol+2,f
  9491  0A26  0CD4               	rrf	??___fltol+1,f
  9492  0A27  0CD3               	rrf	??___fltol,f
  9493  0A28  0B89               	decfsz	9,f
  9494  0A29  2A24               	goto	u2995
  9495  0A2A  0853               	movf	??___fltol,w
  9496  0A2B  00D7               	movwf	??___fltol+4
  9497  0A2C  0857               	movf	??___fltol+4,w
  9498  0A2D  00D8               	movwf	___fltol@sign1
  9499  0A2E  17D1               	bsf	___fltol@f1+2,7
  9500  0A2F  30FF               	movlw	255
  9501  0A30  05CF               	andwf	___fltol@f1,f
  9502  0A31  30FF               	movlw	255
  9503  0A32  05D0               	andwf	___fltol@f1+1,f
  9504  0A33  30FF               	movlw	255
  9505  0A34  05D1               	andwf	___fltol@f1+2,f
  9506  0A35  3000               	movlw	0
  9507  0A36  05D2               	andwf	___fltol@f1+3,f
  9508  0A37  3096               	movlw	150
  9509  0A38  02D9               	subwf	___fltol@exp1,f
  9510  0A39  1FD9               	btfss	___fltol@exp1,7
  9511  0A3A  2A4E               	goto	l3798
  9512  0A3B  0859               	movf	___fltol@exp1,w
  9513  0A3C  3A80               	xorlw	128
  9514  0A3D  3E97               	addlw	151
  9515  0A3E  1C03               	btfss	3,0
  9516  0A3F  2A12               	goto	l3776
  9517  0A40                     l3796:
  9518  0A40  3001               	movlw	1
  9519  0A41                     u3025:
  9520  0A41  36D2               	lsrf	___fltol@f1+3,f
  9521  0A42  0CD1               	rrf	___fltol@f1+2,f
  9522  0A43  0CD0               	rrf	___fltol@f1+1,f
  9523  0A44  0CCF               	rrf	___fltol@f1,f
  9524  0A45  0B89               	decfsz	9,f
  9525  0A46  2A41               	goto	u3025
  9526  0A47  3001               	movlw	1
  9527  0A48  00D3               	movwf	??___fltol
  9528  0A49  0853               	movf	??___fltol,w
  9529  0A4A  07D9               	addwf	___fltol@exp1,f
  9530  0A4B  1903               	btfsc	3,2
  9531  0A4C  2A5F               	goto	l3806
  9532  0A4D  2A40               	goto	l3796
  9533  0A4E                     l3798:
  9534  0A4E  3020               	movlw	32
  9535  0A4F  0259               	subwf	___fltol@exp1,w
  9536  0A50  1803               	btfsc	3,0
  9537  0A51  2A12               	goto	l3776
  9538  0A52                     l1286:
  9539  0A52  0859               	movf	___fltol@exp1,w
  9540  0A53  1903               	btfsc	3,2
  9541  0A54  2A5F               	goto	l3806
  9542  0A55  3001               	movlw	1
  9543  0A56                     u3055:
  9544  0A56  35CF               	lslf	___fltol@f1,f
  9545  0A57  0DD0               	rlf	___fltol@f1+1,f
  9546  0A58  0DD1               	rlf	___fltol@f1+2,f
  9547  0A59  0DD2               	rlf	___fltol@f1+3,f
  9548  0A5A  0B89               	decfsz	9,f
  9549  0A5B  2A56               	goto	u3055
  9550  0A5C  3001               	movlw	1
  9551  0A5D  02D9               	subwf	___fltol@exp1,f
  9552  0A5E  2A52               	goto	l1286
  9553  0A5F                     l3806:
  9554  0A5F  0858               	movf	___fltol@sign1,w
  9555  0A60  1903               	btfsc	3,2
  9556  0A61  0008               	return
  9557  0A62  09CF               	comf	___fltol@f1,f
  9558  0A63  09D0               	comf	___fltol@f1+1,f
  9559  0A64  09D1               	comf	___fltol@f1+2,f
  9560  0A65  09D2               	comf	___fltol@f1+3,f
  9561  0A66  0ACF               	incf	___fltol@f1,f
  9562  0A67  1903               	skipnz
  9563  0A68  0AD0               	incf	___fltol@f1+1,f
  9564  0A69  1903               	skipnz
  9565  0A6A  0AD1               	incf	___fltol@f1+2,f
  9566  0A6B  1903               	skipnz
  9567  0A6C  0AD2               	incf	___fltol@f1+3,f
  9568  0A6D  0008               	return
  9569  0A6E                     __end_of___fltol:
  9570                           
  9571                           	psect	text48
  9572  14F7                     __ptext48:	
  9573 ;; *************** function ___flsub *****************
  9574 ;; Defined at:
  9575 ;;		line 242 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;  a               4   47[BANK0 ] long 
  9578 ;;  b               4   51[BANK0 ] long 
  9579 ;; Auto vars:     Size  Location     Type
  9580 ;;		None
  9581 ;; Return value:  Size  Location     Type
  9582 ;;                  4   47[BANK0 ] long 
  9583 ;; Registers used:
  9584 ;;		wreg, status,2, status,0, pclath, cstack
  9585 ;; Tracked objects:
  9586 ;;		On entry : 1F/0
  9587 ;;		On exit  : 1F/0
  9588 ;;		Unchanged: 0/0
  9589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9590 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9593 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9594 ;;Total ram usage:        8 bytes
  9595 ;; Hardware stack levels used:    1
  9596 ;; Hardware stack levels required when called:    6
  9597 ;; This function calls:
  9598 ;;		___fladd
  9599 ;; This function is called by:
  9600 ;;		_SetDimmer
  9601 ;; This function uses a non-reentrant model
  9602 ;;
  9603                           
  9604                           
  9605                           ;psect for function ___flsub
  9606  14F7                     ___flsub:
  9607                           
  9608                           ;incstack = 0
  9609                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  9610  14F7  3080               	movlw	128
  9611  14F8  06D2               	xorwf	___flsub@a+3,f
  9612  14F9  0856               	movf	___flsub@b+3,w
  9613  14FA  00F3               	movwf	___fladd@b+3
  9614  14FB  0855               	movf	___flsub@b+2,w
  9615  14FC  00F2               	movwf	___fladd@b+2
  9616  14FD  0854               	movf	___flsub@b+1,w
  9617  14FE  00F1               	movwf	___fladd@b+1
  9618  14FF  0853               	movf	___flsub@b,w
  9619  1500  00F0               	movwf	___fladd@b
  9620  1501  0852               	movf	___flsub@a+3,w
  9621  1502  00F7               	movwf	___fladd@a+3
  9622  1503  0851               	movf	___flsub@a+2,w
  9623  1504  00F6               	movwf	___fladd@a+2
  9624  1505  0850               	movf	___flsub@a+1,w
  9625  1506  00F5               	movwf	___fladd@a+1
  9626  1507  084F               	movf	___flsub@a,w
  9627  1508  00F4               	movwf	___fladd@a
  9628  1509  318E  2618         	fcall	___fladd
  9629  150B  0873               	movf	?___fladd+3,w
  9630  150C  0020               	movlb	0	; select bank0
  9631  150D  00D2               	movwf	?___flsub+3
  9632  150E  0872               	movf	?___fladd+2,w
  9633  150F  00D1               	movwf	?___flsub+2
  9634  1510  0871               	movf	?___fladd+1,w
  9635  1511  00D0               	movwf	?___flsub+1
  9636  1512  0870               	movf	?___fladd,w
  9637  1513  00CF               	movwf	?___flsub
  9638  1514  0008               	return
  9639  1515                     __end_of___flsub:
  9640                           
  9641                           	psect	text49
  9642  0E18                     __ptext49:	
  9643 ;; *************** function ___fladd *****************
  9644 ;; Defined at:
  9645 ;;		line 10 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;  b               4    0[COMMON] long 
  9648 ;;  a               4    4[COMMON] long 
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;  grs             1   11[COMMON] unsigned char 
  9651 ;;  bexp            1   10[COMMON] unsigned char 
  9652 ;;  aexp            1    9[COMMON] unsigned char 
  9653 ;;  signs           1    8[COMMON] unsigned char 
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  4    0[COMMON] unsigned char 
  9656 ;; Registers used:
  9657 ;;		wreg, status,2, status,0
  9658 ;; Tracked objects:
  9659 ;;		On entry : 1F/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9663 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9664 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9665 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;Total ram usage:       20 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; Hardware stack levels required when called:    5
  9670 ;; This function calls:
  9671 ;;		Nothing
  9672 ;; This function is called by:
  9673 ;;		___flsub
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           
  9678                           ;psect for function ___fladd
  9679  0E18                     ___fladd:
  9680                           
  9681                           ;incstack = 0
  9682                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9683  0E18  0873               	movf	___fladd@b+3,w
  9684  0E19  3980               	andlw	128
  9685  0E1A  00A0               	movwf	??___fladd
  9686  0E1B  0820               	movf	??___fladd,w
  9687  0E1C  00F8               	movwf	___fladd@signs
  9688  0E1D  3573               	lslf	___fladd@b+3,w
  9689  0E1E  00A0               	movwf	??___fladd
  9690  0E1F  0820               	movf	??___fladd,w
  9691  0E20  00FA               	movwf	___fladd@bexp
  9692  0E21  1BF2               	btfsc	___fladd@b+2,7
  9693  0E22  147A               	bsf	___fladd@bexp,0
  9694  0E23  087A               	movf	___fladd@bexp,w
  9695  0E24  1903               	btfsc	3,2
  9696  0E25  2E34               	goto	l3444
  9697  0E26  0A7A               	incf	___fladd@bexp,w
  9698  0E27  1D03               	btfss	3,2
  9699  0E28  2E31               	goto	l3440
  9700  0E29  3000               	movlw	0
  9701  0E2A  00F3               	movwf	___fladd@b+3
  9702  0E2B  3000               	movlw	0
  9703  0E2C  00F2               	movwf	___fladd@b+2
  9704  0E2D  3000               	movlw	0
  9705  0E2E  00F1               	movwf	___fladd@b+1
  9706  0E2F  3000               	movlw	0
  9707  0E30  00F0               	movwf	___fladd@b
  9708  0E31                     l3440:
  9709  0E31  17F2               	bsf	___fladd@b+2,7
  9710  0E32  01F3               	clrf	___fladd@b+3
  9711  0E33  2E3C               	goto	l3446
  9712  0E34                     l3444:
  9713  0E34  3000               	movlw	0
  9714  0E35  00F3               	movwf	___fladd@b+3
  9715  0E36  3000               	movlw	0
  9716  0E37  00F2               	movwf	___fladd@b+2
  9717  0E38  3000               	movlw	0
  9718  0E39  00F1               	movwf	___fladd@b+1
  9719  0E3A  3000               	movlw	0
  9720  0E3B  00F0               	movwf	___fladd@b
  9721  0E3C                     l3446:
  9722  0E3C  0877               	movf	___fladd@a+3,w
  9723  0E3D  3980               	andlw	128
  9724  0E3E  00A0               	movwf	??___fladd
  9725  0E3F  0820               	movf	??___fladd,w
  9726  0E40  00F9               	movwf	___fladd@aexp
  9727  0E41  0879               	movf	___fladd@aexp,w
  9728  0E42  0678               	xorwf	___fladd@signs,w
  9729  0E43  1D03               	btfss	3,2
  9730  0E44  1778               	bsf	___fladd@signs,6
  9731  0E45  3577               	lslf	___fladd@a+3,w
  9732  0E46  00A0               	movwf	??___fladd
  9733  0E47  0820               	movf	??___fladd,w
  9734  0E48  00F9               	movwf	___fladd@aexp
  9735  0E49  1BF6               	btfsc	___fladd@a+2,7
  9736  0E4A  1479               	bsf	___fladd@aexp,0
  9737  0E4B  0879               	movf	___fladd@aexp,w
  9738  0E4C  1903               	btfsc	3,2
  9739  0E4D  2E5C               	goto	l3468
  9740  0E4E  0A79               	incf	___fladd@aexp,w
  9741  0E4F  1D03               	btfss	3,2
  9742  0E50  2E59               	goto	l3464
  9743  0E51  3000               	movlw	0
  9744  0E52  00F7               	movwf	___fladd@a+3
  9745  0E53  3000               	movlw	0
  9746  0E54  00F6               	movwf	___fladd@a+2
  9747  0E55  3000               	movlw	0
  9748  0E56  00F5               	movwf	___fladd@a+1
  9749  0E57  3000               	movlw	0
  9750  0E58  00F4               	movwf	___fladd@a
  9751  0E59                     l3464:
  9752  0E59  17F6               	bsf	___fladd@a+2,7
  9753  0E5A  01F7               	clrf	___fladd@a+3
  9754  0E5B  2E64               	goto	l1386
  9755  0E5C                     l3468:
  9756  0E5C  3000               	movlw	0
  9757  0E5D  00F7               	movwf	___fladd@a+3
  9758  0E5E  3000               	movlw	0
  9759  0E5F  00F6               	movwf	___fladd@a+2
  9760  0E60  3000               	movlw	0
  9761  0E61  00F5               	movwf	___fladd@a+1
  9762  0E62  3000               	movlw	0
  9763  0E63  00F4               	movwf	___fladd@a
  9764  0E64                     l1386:
  9765  0E64  087A               	movf	___fladd@bexp,w
  9766  0E65  0279               	subwf	___fladd@aexp,w
  9767  0E66  1803               	skipnc
  9768  0E67  2EAA               	goto	l3504
  9769  0E68  1F78               	btfss	___fladd@signs,6
  9770  0E69  2E6E               	goto	l3474
  9771  0E6A  3080               	movlw	128
  9772  0E6B  00A0               	movwf	??___fladd
  9773  0E6C  0820               	movf	??___fladd,w
  9774  0E6D  06F8               	xorwf	___fladd@signs,f
  9775  0E6E                     l3474:
  9776  0E6E  087A               	movf	___fladd@bexp,w
  9777  0E6F  00A0               	movwf	??___fladd
  9778  0E70  0820               	movf	??___fladd,w
  9779  0E71  00FB               	movwf	___fladd@grs
  9780  0E72  0879               	movf	___fladd@aexp,w
  9781  0E73  00A0               	movwf	??___fladd
  9782  0E74  0820               	movf	??___fladd,w
  9783  0E75  00FA               	movwf	___fladd@bexp
  9784  0E76  087B               	movf	___fladd@grs,w
  9785  0E77  00A0               	movwf	??___fladd
  9786  0E78  0820               	movf	??___fladd,w
  9787  0E79  00F9               	movwf	___fladd@aexp
  9788  0E7A  0870               	movf	___fladd@b,w
  9789  0E7B  00A0               	movwf	??___fladd
  9790  0E7C  0820               	movf	??___fladd,w
  9791  0E7D  00FB               	movwf	___fladd@grs
  9792  0E7E  0874               	movf	___fladd@a,w
  9793  0E7F  00A0               	movwf	??___fladd
  9794  0E80  0820               	movf	??___fladd,w
  9795  0E81  00F0               	movwf	___fladd@b
  9796  0E82  087B               	movf	___fladd@grs,w
  9797  0E83  00A0               	movwf	??___fladd
  9798  0E84  0820               	movf	??___fladd,w
  9799  0E85  00F4               	movwf	___fladd@a
  9800  0E86  0871               	movf	___fladd@b+1,w
  9801  0E87  00A0               	movwf	??___fladd
  9802  0E88  0820               	movf	??___fladd,w
  9803  0E89  00FB               	movwf	___fladd@grs
  9804  0E8A  0875               	movf	___fladd@a+1,w
  9805  0E8B  00A0               	movwf	??___fladd
  9806  0E8C  0820               	movf	??___fladd,w
  9807  0E8D  00F1               	movwf	___fladd@b+1
  9808  0E8E  087B               	movf	___fladd@grs,w
  9809  0E8F  00A0               	movwf	??___fladd
  9810  0E90  0820               	movf	??___fladd,w
  9811  0E91  00F5               	movwf	___fladd@a+1
  9812  0E92  0872               	movf	___fladd@b+2,w
  9813  0E93  00A0               	movwf	??___fladd
  9814  0E94  0820               	movf	??___fladd,w
  9815  0E95  00FB               	movwf	___fladd@grs
  9816  0E96  0876               	movf	___fladd@a+2,w
  9817  0E97  00A0               	movwf	??___fladd
  9818  0E98  0820               	movf	??___fladd,w
  9819  0E99  00F2               	movwf	___fladd@b+2
  9820  0E9A  087B               	movf	___fladd@grs,w
  9821  0E9B  00A0               	movwf	??___fladd
  9822  0E9C  0820               	movf	??___fladd,w
  9823  0E9D  00F6               	movwf	___fladd@a+2
  9824  0E9E  0873               	movf	___fladd@b+3,w
  9825  0E9F  00A0               	movwf	??___fladd
  9826  0EA0  0820               	movf	??___fladd,w
  9827  0EA1  00FB               	movwf	___fladd@grs
  9828  0EA2  0877               	movf	___fladd@a+3,w
  9829  0EA3  00A0               	movwf	??___fladd
  9830  0EA4  0820               	movf	??___fladd,w
  9831  0EA5  00F3               	movwf	___fladd@b+3
  9832  0EA6  087B               	movf	___fladd@grs,w
  9833  0EA7  00A0               	movwf	??___fladd
  9834  0EA8  0820               	movf	??___fladd,w
  9835  0EA9  00F7               	movwf	___fladd@a+3
  9836  0EAA                     l3504:
  9837  0EAA  01FB               	clrf	___fladd@grs
  9838  0EAB  0879               	movf	___fladd@aexp,w
  9839  0EAC  00A0               	movwf	??___fladd
  9840  0EAD  01A1               	clrf	??___fladd+1
  9841  0EAE  0821               	movf	??___fladd+1,w
  9842  0EAF  00A3               	movwf	??___fladd+3
  9843  0EB0  087A               	movf	___fladd@bexp,w
  9844  0EB1  0220               	subwf	??___fladd,w
  9845  0EB2  00A2               	movwf	??___fladd+2
  9846  0EB3  1C03               	skipc
  9847  0EB4  03A3               	decf	??___fladd+3,f
  9848  0EB5  0823               	movf	??___fladd+3,w
  9849  0EB6  3A80               	xorlw	128
  9850  0EB7  00A4               	movwf	??___fladd+4
  9851  0EB8  3080               	movlw	128
  9852  0EB9  0224               	subwf	??___fladd+4,w
  9853  0EBA  1D03               	skipz
  9854  0EBB  2EBE               	goto	u2385
  9855  0EBC  301A               	movlw	26
  9856  0EBD  0222               	subwf	??___fladd+2,w
  9857  0EBE                     u2385:
  9858  0EBE  1C03               	skipc
  9859  0EBF  2EF4               	goto	l3522
  9860  0EC0  0873               	movf	___fladd@b+3,w
  9861  0EC1  0472               	iorwf	___fladd@b+2,w
  9862  0EC2  0471               	iorwf	___fladd@b+1,w
  9863  0EC3  0470               	iorwf	___fladd@b,w
  9864  0EC4  1903               	btfsc	3,2
  9865  0EC5  2EC8               	goto	u2390
  9866  0EC6  3001               	movlw	1
  9867  0EC7  2EC9               	goto	u2400
  9868  0EC8                     u2390:
  9869  0EC8  3000               	movlw	0
  9870  0EC9                     u2400:
  9871  0EC9  0020               	movlb	0	; select bank0
  9872  0ECA  00A0               	movwf	??___fladd
  9873  0ECB  0820               	movf	??___fladd,w
  9874  0ECC  00FB               	movwf	___fladd@grs
  9875  0ECD  3000               	movlw	0
  9876  0ECE  00F3               	movwf	___fladd@b+3
  9877  0ECF  3000               	movlw	0
  9878  0ED0  00F2               	movwf	___fladd@b+2
  9879  0ED1  3000               	movlw	0
  9880  0ED2  00F1               	movwf	___fladd@b+1
  9881  0ED3  3000               	movlw	0
  9882  0ED4  00F0               	movwf	___fladd@b
  9883  0ED5  0879               	movf	___fladd@aexp,w
  9884  0ED6  00A0               	movwf	??___fladd
  9885  0ED7  0820               	movf	??___fladd,w
  9886  0ED8  00FA               	movwf	___fladd@bexp
  9887  0ED9  2EF8               	goto	l1390
  9888  0EDA                     l1392:
  9889  0EDA  1C7B               	btfss	___fladd@grs,0
  9890  0EDB  2EE3               	goto	l3512
  9891  0EDC  367B               	lsrf	___fladd@grs,w
  9892  0EDD  3801               	iorlw	1
  9893  0EDE  0020               	movlb	0	; select bank0
  9894  0EDF  00A0               	movwf	??___fladd
  9895  0EE0  0820               	movf	??___fladd,w
  9896  0EE1  00FB               	movwf	___fladd@grs
  9897  0EE2  2EE5               	goto	l3514
  9898  0EE3                     l3512:
  9899  0EE3  1003               	clrc
  9900  0EE4  0CFB               	rrf	___fladd@grs,f
  9901  0EE5                     l3514:
  9902  0EE5  1870               	btfsc	___fladd@b,0
  9903  0EE6  17FB               	bsf	___fladd@grs,7
  9904  0EE7  3001               	movlw	1
  9905  0EE8  0020               	movlb	0	; select bank0
  9906  0EE9  00A0               	movwf	??___fladd
  9907  0EEA                     u2435:
  9908  0EEA  37F3               	asrf	___fladd@b+3,f
  9909  0EEB  0CF2               	rrf	___fladd@b+2,f
  9910  0EEC  0CF1               	rrf	___fladd@b+1,f
  9911  0EED  0CF0               	rrf	___fladd@b,f
  9912  0EEE  0BA0               	decfsz	??___fladd& (0+127),f
  9913  0EEF  2EEA               	goto	u2435
  9914  0EF0  3001               	movlw	1
  9915  0EF1  00A0               	movwf	??___fladd
  9916  0EF2  0820               	movf	??___fladd,w
  9917  0EF3  07FA               	addwf	___fladd@bexp,f
  9918  0EF4                     l3522:
  9919  0EF4  0879               	movf	___fladd@aexp,w
  9920  0EF5  027A               	subwf	___fladd@bexp,w
  9921  0EF6  1C03               	skipc
  9922  0EF7  2EDA               	goto	l1392
  9923  0EF8                     l1390:
  9924  0EF8  1B78               	btfsc	___fladd@signs,6
  9925  0EF9  2F2B               	goto	l3548
  9926  0EFA  087A               	movf	___fladd@bexp,w
  9927  0EFB  1D03               	btfss	3,2
  9928  0EFC  2F06               	goto	l3530
  9929  0EFD  3000               	movlw	0
  9930  0EFE  00F3               	movwf	?___fladd+3
  9931  0EFF  3000               	movlw	0
  9932  0F00  00F2               	movwf	?___fladd+2
  9933  0F01  3000               	movlw	0
  9934  0F02  00F1               	movwf	?___fladd+1
  9935  0F03  3000               	movlw	0
  9936  0F04  00F0               	movwf	?___fladd
  9937  0F05  0008               	return
  9938  0F06                     l3530:
  9939  0F06  0874               	movf	___fladd@a,w
  9940  0F07  07F0               	addwf	___fladd@b,f
  9941  0F08  0875               	movf	___fladd@a+1,w
  9942  0F09  3DF1               	addwfc	___fladd@b+1,f
  9943  0F0A  0876               	movf	___fladd@a+2,w
  9944  0F0B  3DF2               	addwfc	___fladd@b+2,f
  9945  0F0C  0877               	movf	___fladd@a+3,w
  9946  0F0D  3DF3               	addwfc	___fladd@b+3,f
  9947  0F0E  1C73               	btfss	___fladd@b+3,0
  9948  0F0F  2FA6               	goto	l3582
  9949  0F10  1C7B               	btfss	___fladd@grs,0
  9950  0F11  2F19               	goto	l3538
  9951  0F12  367B               	lsrf	___fladd@grs,w
  9952  0F13  3801               	iorlw	1
  9953  0F14  0020               	movlb	0	; select bank0
  9954  0F15  00A0               	movwf	??___fladd
  9955  0F16  0820               	movf	??___fladd,w
  9956  0F17  00FB               	movwf	___fladd@grs
  9957  0F18  2F1B               	goto	l3540
  9958  0F19                     l3538:
  9959  0F19  1003               	clrc
  9960  0F1A  0CFB               	rrf	___fladd@grs,f
  9961  0F1B                     l3540:
  9962  0F1B  1870               	btfsc	___fladd@b,0
  9963  0F1C  17FB               	bsf	___fladd@grs,7
  9964  0F1D  3001               	movlw	1
  9965  0F1E  0020               	movlb	0	; select bank0
  9966  0F1F  00A0               	movwf	??___fladd
  9967  0F20                     u2505:
  9968  0F20  37F3               	asrf	___fladd@b+3,f
  9969  0F21  0CF2               	rrf	___fladd@b+2,f
  9970  0F22  0CF1               	rrf	___fladd@b+1,f
  9971  0F23  0CF0               	rrf	___fladd@b,f
  9972  0F24  0BA0               	decfsz	??___fladd& (0+127),f
  9973  0F25  2F20               	goto	u2505
  9974  0F26  3001               	movlw	1
  9975  0F27  00A0               	movwf	??___fladd
  9976  0F28  0820               	movf	??___fladd,w
  9977  0F29  07FA               	addwf	___fladd@bexp,f
  9978  0F2A  2FA6               	goto	l3582
  9979  0F2B                     l3548:
  9980  0F2B  0873               	movf	___fladd@b+3,w
  9981  0F2C  3A80               	xorlw	128
  9982  0F2D  0020               	movlb	0	; select bank0
  9983  0F2E  00A0               	movwf	??___fladd
  9984  0F2F  0877               	movf	___fladd@a+3,w
  9985  0F30  3A80               	xorlw	128
  9986  0F31  0220               	subwf	??___fladd,w
  9987  0F32  1D03               	skipz
  9988  0F33  2F3E               	goto	u2513
  9989  0F34  0876               	movf	___fladd@a+2,w
  9990  0F35  0272               	subwf	___fladd@b+2,w
  9991  0F36  1D03               	skipz
  9992  0F37  2F3E               	goto	u2513
  9993  0F38  0875               	movf	___fladd@a+1,w
  9994  0F39  0271               	subwf	___fladd@b+1,w
  9995  0F3A  1D03               	skipz
  9996  0F3B  2F3E               	goto	u2513
  9997  0F3C  0874               	movf	___fladd@a,w
  9998  0F3D  0270               	subwf	___fladd@b,w
  9999  0F3E                     u2513:
 10000  0F3E  1803               	skipnc
 10001  0F3F  2F76               	goto	l3558
 10002  0F40  30FF               	movlw	255
 10003  0F41  00A0               	movwf	??___fladd
 10004  0F42  30FF               	movlw	255
 10005  0F43  00A1               	movwf	??___fladd+1
 10006  0F44  30FF               	movlw	255
 10007  0F45  00A2               	movwf	??___fladd+2
 10008  0F46  30FF               	movlw	255
 10009  0F47  00A3               	movwf	??___fladd+3
 10010  0F48  0870               	movf	___fladd@b,w
 10011  0F49  0274               	subwf	___fladd@a,w
 10012  0F4A  00A4               	movwf	??___fladd+4
 10013  0F4B  0871               	movf	___fladd@b+1,w
 10014  0F4C  3B75               	subwfb	___fladd@a+1,w
 10015  0F4D  00A5               	movwf	??___fladd+5
 10016  0F4E  0872               	movf	___fladd@b+2,w
 10017  0F4F  3B76               	subwfb	___fladd@a+2,w
 10018  0F50  00A6               	movwf	??___fladd+6
 10019  0F51  0873               	movf	___fladd@b+3,w
 10020  0F52  3B77               	subwfb	___fladd@a+3,w
 10021  0F53  00A7               	movwf	??___fladd+7
 10022  0F54  0824               	movf	??___fladd+4,w
 10023  0F55  07A0               	addwf	??___fladd,f
 10024  0F56  0825               	movf	??___fladd+5,w
 10025  0F57  3DA1               	addwfc	??___fladd+1,f
 10026  0F58  0826               	movf	??___fladd+6,w
 10027  0F59  3DA2               	addwfc	??___fladd+2,f
 10028  0F5A  0827               	movf	??___fladd+7,w
 10029  0F5B  3DA3               	addwfc	??___fladd+3,f
 10030  0F5C  0823               	movf	??___fladd+3,w
 10031  0F5D  00F3               	movwf	___fladd@b+3
 10032  0F5E  0822               	movf	??___fladd+2,w
 10033  0F5F  00F2               	movwf	___fladd@b+2
 10034  0F60  0821               	movf	??___fladd+1,w
 10035  0F61  00F1               	movwf	___fladd@b+1
 10036  0F62  0820               	movf	??___fladd,w
 10037  0F63  00F0               	movwf	___fladd@b
 10038  0F64  3080               	movlw	128
 10039  0F65  00A0               	movwf	??___fladd
 10040  0F66  0820               	movf	??___fladd,w
 10041  0F67  06F8               	xorwf	___fladd@signs,f
 10042  0F68  09FB               	comf	___fladd@grs,f
 10043  0F69  0AFB               	incf	___fladd@grs,f
 10044  0F6A  087B               	movf	___fladd@grs,w
 10045  0F6B  1D03               	btfss	3,2
 10046  0F6C  2F7E               	goto	l1407
 10047  0F6D  3001               	movlw	1
 10048  0F6E  07F0               	addwf	___fladd@b,f
 10049  0F6F  3000               	movlw	0
 10050  0F70  3DF1               	addwfc	___fladd@b+1,f
 10051  0F71  3000               	movlw	0
 10052  0F72  3DF2               	addwfc	___fladd@b+2,f
 10053  0F73  3000               	movlw	0
 10054  0F74  3DF3               	addwfc	___fladd@b+3,f
 10055  0F75  2F7E               	goto	l1407
 10056  0F76                     l3558:
 10057  0F76  0874               	movf	___fladd@a,w
 10058  0F77  02F0               	subwf	___fladd@b,f
 10059  0F78  0875               	movf	___fladd@a+1,w
 10060  0F79  3BF1               	subwfb	___fladd@b+1,f
 10061  0F7A  0876               	movf	___fladd@a+2,w
 10062  0F7B  3BF2               	subwfb	___fladd@b+2,f
 10063  0F7C  0877               	movf	___fladd@a+3,w
 10064  0F7D  3BF3               	subwfb	___fladd@b+3,f
 10065  0F7E                     l1407:
 10066  0F7E  0873               	movf	___fladd@b+3,w
 10067  0F7F  0472               	iorwf	___fladd@b+2,w
 10068  0F80  0471               	iorwf	___fladd@b+1,w
 10069  0F81  0470               	iorwf	___fladd@b,w
 10070  0F82  1D03               	skipz
 10071  0F83  2FA4               	goto	l3580
 10072  0F84  087B               	movf	___fladd@grs,w
 10073  0F85  1D03               	btfss	3,2
 10074  0F86  2FA4               	goto	l3580
 10075  0F87  3000               	movlw	0
 10076  0F88  00F3               	movwf	?___fladd+3
 10077  0F89  3000               	movlw	0
 10078  0F8A  00F2               	movwf	?___fladd+2
 10079  0F8B  3000               	movlw	0
 10080  0F8C  00F1               	movwf	?___fladd+1
 10081  0F8D  3000               	movlw	0
 10082  0F8E  00F0               	movwf	?___fladd
 10083  0F8F  0008               	return
 10084  0F90                     l3566:
 10085  0F90  3001               	movlw	1
 10086  0F91                     u2555:
 10087  0F91  35F0               	lslf	___fladd@b,f
 10088  0F92  0DF1               	rlf	___fladd@b+1,f
 10089  0F93  0DF2               	rlf	___fladd@b+2,f
 10090  0F94  0DF3               	rlf	___fladd@b+3,f
 10091  0F95  0B89               	decfsz	9,f
 10092  0F96  2F91               	goto	u2555
 10093  0F97  1BFB               	btfsc	___fladd@grs,7
 10094  0F98  1470               	bsf	___fladd@b,0
 10095  0F99  1C7B               	btfss	___fladd@grs,0
 10096  0F9A  2F9D               	goto	l3574
 10097  0F9B  1403               	setc
 10098  0F9C  2F9E               	goto	L3
 10099  0F9D                     l3574:
 10100  0F9D  1003               	clrc
 10101  0F9E                     L3:
 10102  0F9E  0DFB               	rlf	___fladd@grs,f
 10103  0F9F  087A               	movf	___fladd@bexp,w
 10104  0FA0  1903               	btfsc	3,2
 10105  0FA1  2FA4               	goto	l3580
 10106  0FA2  3001               	movlw	1
 10107  0FA3  02FA               	subwf	___fladd@bexp,f
 10108  0FA4                     l3580:
 10109  0FA4  1FF2               	btfss	___fladd@b+2,7
 10110  0FA5  2F90               	goto	l3566
 10111  0FA6                     l3582:
 10112  0FA6  01F9               	clrf	___fladd@aexp
 10113  0FA7  1FFB               	btfss	___fladd@grs,7
 10114  0FA8  2FB1               	goto	l3592
 10115  0FA9  087B               	movf	___fladd@grs,w
 10116  0FAA  397F               	andlw	127
 10117  0FAB  1903               	btfsc	3,2
 10118  0FAC  1870               	btfsc	___fladd@b,0
 10119  0FAD  2FAF               	goto	l3588
 10120  0FAE  2FB1               	goto	l3592
 10121  0FAF                     l3588:
 10122  0FAF  01F9               	clrf	___fladd@aexp
 10123  0FB0  0AF9               	incf	___fladd@aexp,f
 10124  0FB1                     l3592:
 10125  0FB1  0879               	movf	___fladd@aexp,w
 10126  0FB2  1903               	btfsc	3,2
 10127  0FB3  2FDE               	goto	l1420
 10128  0FB4  3001               	movlw	1
 10129  0FB5  07F0               	addwf	___fladd@b,f
 10130  0FB6  3000               	movlw	0
 10131  0FB7  3DF1               	addwfc	___fladd@b+1,f
 10132  0FB8  3000               	movlw	0
 10133  0FB9  3DF2               	addwfc	___fladd@b+2,f
 10134  0FBA  3000               	movlw	0
 10135  0FBB  3DF3               	addwfc	___fladd@b+3,f
 10136  0FBC  1C73               	btfss	___fladd@b+3,0
 10137  0FBD  2FDE               	goto	l1420
 10138  0FBE  0870               	movf	___fladd@b,w
 10139  0FBF  0020               	movlb	0	; select bank0
 10140  0FC0  00A0               	movwf	??___fladd
 10141  0FC1  0871               	movf	___fladd@b+1,w
 10142  0FC2  00A1               	movwf	??___fladd+1
 10143  0FC3  0872               	movf	___fladd@b+2,w
 10144  0FC4  00A2               	movwf	??___fladd+2
 10145  0FC5  0873               	movf	___fladd@b+3,w
 10146  0FC6  00A3               	movwf	??___fladd+3
 10147  0FC7  3001               	movlw	1
 10148  0FC8  00A4               	movwf	??___fladd+4
 10149  0FC9                     u2655:
 10150  0FC9  37A3               	asrf	??___fladd+3,f
 10151  0FCA  0CA2               	rrf	??___fladd+2,f
 10152  0FCB  0CA1               	rrf	??___fladd+1,f
 10153  0FCC  0CA0               	rrf	??___fladd,f
 10154  0FCD  0BA4               	decfsz	??___fladd+4,f
 10155  0FCE  2FC9               	goto	u2655
 10156  0FCF  0823               	movf	??___fladd+3,w
 10157  0FD0  00F3               	movwf	___fladd@b+3
 10158  0FD1  0822               	movf	??___fladd+2,w
 10159  0FD2  00F2               	movwf	___fladd@b+2
 10160  0FD3  0821               	movf	??___fladd+1,w
 10161  0FD4  00F1               	movwf	___fladd@b+1
 10162  0FD5  0820               	movf	??___fladd,w
 10163  0FD6  00F0               	movwf	___fladd@b
 10164  0FD7  0A7A               	incf	___fladd@bexp,w
 10165  0FD8  1903               	btfsc	3,2
 10166  0FD9  2FDE               	goto	l1420
 10167  0FDA  3001               	movlw	1
 10168  0FDB  00A0               	movwf	??___fladd
 10169  0FDC  0820               	movf	??___fladd,w
 10170  0FDD  07FA               	addwf	___fladd@bexp,f
 10171  0FDE                     l1420:
 10172  0FDE  0A7A               	incf	___fladd@bexp,w
 10173  0FDF  1D03               	btfss	3,2
 10174  0FE0  087A               	movf	___fladd@bexp,w
 10175  0FE1  1D03               	btfss	3,2
 10176  0FE2  2FEE               	goto	l3610
 10177  0FE3  3000               	movlw	0
 10178  0FE4  00F3               	movwf	___fladd@b+3
 10179  0FE5  3000               	movlw	0
 10180  0FE6  00F2               	movwf	___fladd@b+2
 10181  0FE7  3000               	movlw	0
 10182  0FE8  00F1               	movwf	___fladd@b+1
 10183  0FE9  3000               	movlw	0
 10184  0FEA  00F0               	movwf	___fladd@b
 10185  0FEB  087A               	movf	___fladd@bexp,w
 10186  0FEC  1903               	btfsc	3,2
 10187  0FED  01F8               	clrf	___fladd@signs
 10188  0FEE                     l3610:
 10189  0FEE  1C7A               	btfss	___fladd@bexp,0
 10190  0FEF  2FF2               	goto	l3614
 10191  0FF0  17F2               	bsf	___fladd@b+2,7
 10192  0FF1  2FF7               	goto	l1428
 10193  0FF2                     l3614:
 10194  0FF2  307F               	movlw	127
 10195  0FF3  0020               	movlb	0	; select bank0
 10196  0FF4  00A0               	movwf	??___fladd
 10197  0FF5  0820               	movf	??___fladd,w
 10198  0FF6  05F2               	andwf	___fladd@b+2,f
 10199  0FF7                     l1428:
 10200  0FF7  367A               	lsrf	___fladd@bexp,w
 10201  0FF8  0020               	movlb	0	; select bank0
 10202  0FF9  00A0               	movwf	??___fladd
 10203  0FFA  0820               	movf	??___fladd,w
 10204  0FFB  00F3               	movwf	___fladd@b+3
 10205  0FFC  1FF8               	btfss	___fladd@signs,7
 10206  0FFD  0008               	return
 10207  0FFE  17F3               	bsf	___fladd@b+3,7
 10208  0FFF  0008               	return
 10209  1000                     __end_of___fladd:
 10210                           
 10211                           	psect	text50
 10212  05E1                     __ptext50:	
 10213 ;; *************** function ___flmul *****************
 10214 ;; Defined at:
 10215 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcmul.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;  b               4    0[BANK0 ] unsigned char 
 10218 ;;  a               4    4[BANK0 ] unsigned char 
 10219 ;; Auto vars:     Size  Location     Type
 10220 ;;  prod            4   15[BANK0 ] struct .
 10221 ;;  grs             4   10[BANK0 ] unsigned long 
 10222 ;;  temp            2   19[BANK0 ] struct .
 10223 ;;  bexp            1   14[BANK0 ] unsigned char 
 10224 ;;  aexp            1    9[BANK0 ] unsigned char 
 10225 ;;  sign            1    8[BANK0 ] unsigned char 
 10226 ;; Return value:  Size  Location     Type
 10227 ;;                  4    0[BANK0 ] unsigned char 
 10228 ;; Registers used:
 10229 ;;		wreg, status,2, status,0, pclath, cstack
 10230 ;; Tracked objects:
 10231 ;;		On entry : 1F/0
 10232 ;;		On exit  : 1F/0
 10233 ;;		Unchanged: 0/0
 10234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10235 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10236 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10237 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;      Totals:         5      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;Total ram usage:       26 bytes
 10240 ;; Hardware stack levels used:    1
 10241 ;; Hardware stack levels required when called:    6
 10242 ;; This function calls:
 10243 ;;		__Umul8_16
 10244 ;; This function is called by:
 10245 ;;		_SetDimmer
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           
 10250                           ;psect for function ___flmul
 10251  05E1                     ___flmul:
 10252                           
 10253                           ;incstack = 0
 10254                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10255  05E1  0823               	movf	___flmul@b+3,w
 10256  05E2  3980               	andlw	128
 10257  05E3  00F9               	movwf	??___flmul
 10258  05E4  0879               	movf	??___flmul,w
 10259  05E5  00A8               	movwf	___flmul@sign
 10260  05E6  3523               	lslf	___flmul@b+3,w
 10261  05E7  00F9               	movwf	??___flmul
 10262  05E8  0879               	movf	??___flmul,w
 10263  05E9  00AE               	movwf	___flmul@bexp
 10264  05EA  1BA2               	btfsc	___flmul@b+2,7
 10265  05EB  142E               	bsf	___flmul@bexp,0
 10266  05EC  082E               	movf	___flmul@bexp,w
 10267  05ED  1903               	btfsc	3,2
 10268  05EE  2DFC               	goto	l3972
 10269  05EF  0A2E               	incf	___flmul@bexp,w
 10270  05F0  1D03               	btfss	3,2
 10271  05F1  2DFA               	goto	l3970
 10272  05F2  3000               	movlw	0
 10273  05F3  00A3               	movwf	___flmul@b+3
 10274  05F4  3000               	movlw	0
 10275  05F5  00A2               	movwf	___flmul@b+2
 10276  05F6  3000               	movlw	0
 10277  05F7  00A1               	movwf	___flmul@b+1
 10278  05F8  3000               	movlw	0
 10279  05F9  00A0               	movwf	___flmul@b
 10280  05FA                     l3970:
 10281  05FA  17A2               	bsf	___flmul@b+2,7
 10282  05FB  2E04               	goto	l3974
 10283  05FC                     l3972:
 10284  05FC  3000               	movlw	0
 10285  05FD  00A3               	movwf	___flmul@b+3
 10286  05FE  3000               	movlw	0
 10287  05FF  00A2               	movwf	___flmul@b+2
 10288  0600  3000               	movlw	0
 10289  0601  00A1               	movwf	___flmul@b+1
 10290  0602  3000               	movlw	0
 10291  0603  00A0               	movwf	___flmul@b
 10292  0604                     l3974:
 10293  0604  0827               	movf	___flmul@a+3,w
 10294  0605  3980               	andlw	128
 10295  0606  00F9               	movwf	??___flmul
 10296  0607  0879               	movf	??___flmul,w
 10297  0608  06A8               	xorwf	___flmul@sign,f
 10298  0609  3527               	lslf	___flmul@a+3,w
 10299  060A  00F9               	movwf	??___flmul
 10300  060B  0879               	movf	??___flmul,w
 10301  060C  00A9               	movwf	___flmul@aexp
 10302  060D  1BA6               	btfsc	___flmul@a+2,7
 10303  060E  1429               	bsf	___flmul@aexp,0
 10304  060F  0829               	movf	___flmul@aexp,w
 10305  0610  1903               	btfsc	3,2
 10306  0611  2E1F               	goto	l3990
 10307  0612  0A29               	incf	___flmul@aexp,w
 10308  0613  1D03               	btfss	3,2
 10309  0614  2E1D               	goto	l3988
 10310  0615  3000               	movlw	0
 10311  0616  00A7               	movwf	___flmul@a+3
 10312  0617  3000               	movlw	0
 10313  0618  00A6               	movwf	___flmul@a+2
 10314  0619  3000               	movlw	0
 10315  061A  00A5               	movwf	___flmul@a+1
 10316  061B  3000               	movlw	0
 10317  061C  00A4               	movwf	___flmul@a
 10318  061D                     l3988:
 10319  061D  17A6               	bsf	___flmul@a+2,7
 10320  061E  2E27               	goto	l3992
 10321  061F                     l3990:
 10322  061F  3000               	movlw	0
 10323  0620  00A7               	movwf	___flmul@a+3
 10324  0621  3000               	movlw	0
 10325  0622  00A6               	movwf	___flmul@a+2
 10326  0623  3000               	movlw	0
 10327  0624  00A5               	movwf	___flmul@a+1
 10328  0625  3000               	movlw	0
 10329  0626  00A4               	movwf	___flmul@a
 10330  0627                     l3992:
 10331  0627  0829               	movf	___flmul@aexp,w
 10332  0628  1D03               	btfss	3,2
 10333  0629  082E               	movf	___flmul@bexp,w
 10334  062A  1D03               	btfss	3,2
 10335  062B  2E35               	goto	l4000
 10336  062C  3000               	movlw	0
 10337  062D  00A3               	movwf	?___flmul+3
 10338  062E  3000               	movlw	0
 10339  062F  00A2               	movwf	?___flmul+2
 10340  0630  3000               	movlw	0
 10341  0631  00A1               	movwf	?___flmul+1
 10342  0632  3000               	movlw	0
 10343  0633  00A0               	movwf	?___flmul
 10344  0634  0008               	return
 10345  0635                     l4000:
 10346  0635  0820               	movf	___flmul@b,w
 10347  0636  00F9               	movwf	??___flmul
 10348  0637  0879               	movf	??___flmul,w
 10349  0638  00F0               	movwf	__Umul8_16@multiplicand
 10350  0639  0826               	movf	___flmul@a+2,w
 10351  063A  3195  2515  3185   	fcall	__Umul8_16
 10352  063D  0871               	movf	?__Umul8_16+1,w
 10353  063E  00B4               	movwf	___flmul@temp+1
 10354  063F  0870               	movf	?__Umul8_16,w
 10355  0640  00B3               	movwf	___flmul@temp
 10356  0641  0833               	movf	___flmul@temp,w
 10357  0642  00F9               	movwf	??___flmul
 10358  0643  01FA               	clrf	??___flmul+1
 10359  0644  01FB               	clrf	??___flmul+2
 10360  0645  01FC               	clrf	??___flmul+3
 10361  0646  087C               	movf	??___flmul+3,w
 10362  0647  00AD               	movwf	___flmul@grs+3
 10363  0648  087B               	movf	??___flmul+2,w
 10364  0649  00AC               	movwf	___flmul@grs+2
 10365  064A  087A               	movf	??___flmul+1,w
 10366  064B  00AB               	movwf	___flmul@grs+1
 10367  064C  0879               	movf	??___flmul,w
 10368  064D  00AA               	movwf	___flmul@grs
 10369  064E  0834               	movf	___flmul@temp+1,w
 10370  064F  00F9               	movwf	??___flmul
 10371  0650  01FA               	clrf	??___flmul+1
 10372  0651  01FB               	clrf	??___flmul+2
 10373  0652  01FC               	clrf	??___flmul+3
 10374  0653  087C               	movf	??___flmul+3,w
 10375  0654  00B2               	movwf	___flmul@prod+3
 10376  0655  087B               	movf	??___flmul+2,w
 10377  0656  00B1               	movwf	___flmul@prod+2
 10378  0657  087A               	movf	??___flmul+1,w
 10379  0658  00B0               	movwf	___flmul@prod+1
 10380  0659  0879               	movf	??___flmul,w
 10381  065A  00AF               	movwf	___flmul@prod
 10382  065B  0821               	movf	___flmul@b+1,w
 10383  065C  00F9               	movwf	??___flmul
 10384  065D  0879               	movf	??___flmul,w
 10385  065E  00F0               	movwf	__Umul8_16@multiplicand
 10386  065F  0825               	movf	___flmul@a+1,w
 10387  0660  3195  2515  3185   	fcall	__Umul8_16
 10388  0663  0871               	movf	?__Umul8_16+1,w
 10389  0664  00B4               	movwf	___flmul@temp+1
 10390  0665  0870               	movf	?__Umul8_16,w
 10391  0666  00B3               	movwf	___flmul@temp
 10392  0667  0833               	movf	___flmul@temp,w
 10393  0668  00F9               	movwf	??___flmul
 10394  0669  01FA               	clrf	??___flmul+1
 10395  066A  01FB               	clrf	??___flmul+2
 10396  066B  01FC               	clrf	??___flmul+3
 10397  066C  0879               	movf	??___flmul,w
 10398  066D  07AA               	addwf	___flmul@grs,f
 10399  066E  087A               	movf	??___flmul+1,w
 10400  066F  3DAB               	addwfc	___flmul@grs+1,f
 10401  0670  087B               	movf	??___flmul+2,w
 10402  0671  3DAC               	addwfc	___flmul@grs+2,f
 10403  0672  087C               	movf	??___flmul+3,w
 10404  0673  3DAD               	addwfc	___flmul@grs+3,f
 10405  0674  0834               	movf	___flmul@temp+1,w
 10406  0675  00F9               	movwf	??___flmul
 10407  0676  01FA               	clrf	??___flmul+1
 10408  0677  01FB               	clrf	??___flmul+2
 10409  0678  01FC               	clrf	??___flmul+3
 10410  0679  0879               	movf	??___flmul,w
 10411  067A  07AF               	addwf	___flmul@prod,f
 10412  067B  087A               	movf	??___flmul+1,w
 10413  067C  3DB0               	addwfc	___flmul@prod+1,f
 10414  067D  087B               	movf	??___flmul+2,w
 10415  067E  3DB1               	addwfc	___flmul@prod+2,f
 10416  067F  087C               	movf	??___flmul+3,w
 10417  0680  3DB2               	addwfc	___flmul@prod+3,f
 10418  0681  0822               	movf	___flmul@b+2,w
 10419  0682  00F9               	movwf	??___flmul
 10420  0683  0879               	movf	??___flmul,w
 10421  0684  00F0               	movwf	__Umul8_16@multiplicand
 10422  0685  0824               	movf	___flmul@a,w
 10423  0686  3195  2515  3185   	fcall	__Umul8_16
 10424  0689  0871               	movf	?__Umul8_16+1,w
 10425  068A  00B4               	movwf	___flmul@temp+1
 10426  068B  0870               	movf	?__Umul8_16,w
 10427  068C  00B3               	movwf	___flmul@temp
 10428  068D  0833               	movf	___flmul@temp,w
 10429  068E  00F9               	movwf	??___flmul
 10430  068F  01FA               	clrf	??___flmul+1
 10431  0690  01FB               	clrf	??___flmul+2
 10432  0691  01FC               	clrf	??___flmul+3
 10433  0692  0879               	movf	??___flmul,w
 10434  0693  07AA               	addwf	___flmul@grs,f
 10435  0694  087A               	movf	??___flmul+1,w
 10436  0695  3DAB               	addwfc	___flmul@grs+1,f
 10437  0696  087B               	movf	??___flmul+2,w
 10438  0697  3DAC               	addwfc	___flmul@grs+2,f
 10439  0698  087C               	movf	??___flmul+3,w
 10440  0699  3DAD               	addwfc	___flmul@grs+3,f
 10441  069A  0834               	movf	___flmul@temp+1,w
 10442  069B  00F9               	movwf	??___flmul
 10443  069C  01FA               	clrf	??___flmul+1
 10444  069D  01FB               	clrf	??___flmul+2
 10445  069E  01FC               	clrf	??___flmul+3
 10446  069F  0879               	movf	??___flmul,w
 10447  06A0  07AF               	addwf	___flmul@prod,f
 10448  06A1  087A               	movf	??___flmul+1,w
 10449  06A2  3DB0               	addwfc	___flmul@prod+1,f
 10450  06A3  087B               	movf	??___flmul+2,w
 10451  06A4  3DB1               	addwfc	___flmul@prod+2,f
 10452  06A5  087C               	movf	??___flmul+3,w
 10453  06A6  3DB2               	addwfc	___flmul@prod+3,f
 10454  06A7  3008               	movlw	8
 10455  06A8                     u3455:
 10456  06A8  35AA               	lslf	___flmul@grs,f
 10457  06A9  0DAB               	rlf	___flmul@grs+1,f
 10458  06AA  0DAC               	rlf	___flmul@grs+2,f
 10459  06AB  0DAD               	rlf	___flmul@grs+3,f
 10460  06AC  0B89               	decfsz	9,f
 10461  06AD  2EA8               	goto	u3455
 10462  06AE  0821               	movf	___flmul@b+1,w
 10463  06AF  00F9               	movwf	??___flmul
 10464  06B0  0879               	movf	??___flmul,w
 10465  06B1  00F0               	movwf	__Umul8_16@multiplicand
 10466  06B2  0824               	movf	___flmul@a,w
 10467  06B3  3195  2515  3185   	fcall	__Umul8_16
 10468  06B6  0871               	movf	?__Umul8_16+1,w
 10469  06B7  00B4               	movwf	___flmul@temp+1
 10470  06B8  0870               	movf	?__Umul8_16,w
 10471  06B9  00B3               	movwf	___flmul@temp
 10472  06BA  0833               	movf	___flmul@temp,w
 10473  06BB  07AA               	addwf	___flmul@grs,f
 10474  06BC  0834               	movf	___flmul@temp+1,w
 10475  06BD  3DAB               	addwfc	___flmul@grs+1,f
 10476  06BE  3000               	movlw	0
 10477  06BF  3DAC               	addwfc	___flmul@grs+2,f
 10478  06C0  3DAD               	addwfc	___flmul@grs+3,f
 10479  06C1  0820               	movf	___flmul@b,w
 10480  06C2  00F9               	movwf	??___flmul
 10481  06C3  0879               	movf	??___flmul,w
 10482  06C4  00F0               	movwf	__Umul8_16@multiplicand
 10483  06C5  0825               	movf	___flmul@a+1,w
 10484  06C6  3195  2515  3185   	fcall	__Umul8_16
 10485  06C9  0871               	movf	?__Umul8_16+1,w
 10486  06CA  00B4               	movwf	___flmul@temp+1
 10487  06CB  0870               	movf	?__Umul8_16,w
 10488  06CC  00B3               	movwf	___flmul@temp
 10489  06CD  0833               	movf	___flmul@temp,w
 10490  06CE  07AA               	addwf	___flmul@grs,f
 10491  06CF  0834               	movf	___flmul@temp+1,w
 10492  06D0  3DAB               	addwfc	___flmul@grs+1,f
 10493  06D1  3000               	movlw	0
 10494  06D2  3DAC               	addwfc	___flmul@grs+2,f
 10495  06D3  3DAD               	addwfc	___flmul@grs+3,f
 10496  06D4  3008               	movlw	8
 10497  06D5                     u3465:
 10498  06D5  35AA               	lslf	___flmul@grs,f
 10499  06D6  0DAB               	rlf	___flmul@grs+1,f
 10500  06D7  0DAC               	rlf	___flmul@grs+2,f
 10501  06D8  0DAD               	rlf	___flmul@grs+3,f
 10502  06D9  0B89               	decfsz	9,f
 10503  06DA  2ED5               	goto	u3465
 10504  06DB  0820               	movf	___flmul@b,w
 10505  06DC  00F9               	movwf	??___flmul
 10506  06DD  0879               	movf	??___flmul,w
 10507  06DE  00F0               	movwf	__Umul8_16@multiplicand
 10508  06DF  0824               	movf	___flmul@a,w
 10509  06E0  3195  2515  3185   	fcall	__Umul8_16
 10510  06E3  0871               	movf	?__Umul8_16+1,w
 10511  06E4  00B4               	movwf	___flmul@temp+1
 10512  06E5  0870               	movf	?__Umul8_16,w
 10513  06E6  00B3               	movwf	___flmul@temp
 10514  06E7  0833               	movf	___flmul@temp,w
 10515  06E8  07AA               	addwf	___flmul@grs,f
 10516  06E9  0834               	movf	___flmul@temp+1,w
 10517  06EA  3DAB               	addwfc	___flmul@grs+1,f
 10518  06EB  3000               	movlw	0
 10519  06EC  3DAC               	addwfc	___flmul@grs+2,f
 10520  06ED  3DAD               	addwfc	___flmul@grs+3,f
 10521  06EE  0821               	movf	___flmul@b+1,w
 10522  06EF  00F9               	movwf	??___flmul
 10523  06F0  0879               	movf	??___flmul,w
 10524  06F1  00F0               	movwf	__Umul8_16@multiplicand
 10525  06F2  0826               	movf	___flmul@a+2,w
 10526  06F3  3195  2515  3185   	fcall	__Umul8_16
 10527  06F6  0871               	movf	?__Umul8_16+1,w
 10528  06F7  00B4               	movwf	___flmul@temp+1
 10529  06F8  0870               	movf	?__Umul8_16,w
 10530  06F9  00B3               	movwf	___flmul@temp
 10531  06FA  0833               	movf	___flmul@temp,w
 10532  06FB  07AF               	addwf	___flmul@prod,f
 10533  06FC  0834               	movf	___flmul@temp+1,w
 10534  06FD  3DB0               	addwfc	___flmul@prod+1,f
 10535  06FE  3000               	movlw	0
 10536  06FF  3DB1               	addwfc	___flmul@prod+2,f
 10537  0700  3DB2               	addwfc	___flmul@prod+3,f
 10538  0701  0822               	movf	___flmul@b+2,w
 10539  0702  00F9               	movwf	??___flmul
 10540  0703  0879               	movf	??___flmul,w
 10541  0704  00F0               	movwf	__Umul8_16@multiplicand
 10542  0705  0825               	movf	___flmul@a+1,w
 10543  0706  3195  2515  3185   	fcall	__Umul8_16
 10544  0709  0871               	movf	?__Umul8_16+1,w
 10545  070A  00B4               	movwf	___flmul@temp+1
 10546  070B  0870               	movf	?__Umul8_16,w
 10547  070C  00B3               	movwf	___flmul@temp
 10548  070D  0833               	movf	___flmul@temp,w
 10549  070E  07AF               	addwf	___flmul@prod,f
 10550  070F  0834               	movf	___flmul@temp+1,w
 10551  0710  3DB0               	addwfc	___flmul@prod+1,f
 10552  0711  3000               	movlw	0
 10553  0712  3DB1               	addwfc	___flmul@prod+2,f
 10554  0713  3DB2               	addwfc	___flmul@prod+3,f
 10555  0714  0822               	movf	___flmul@b+2,w
 10556  0715  00F9               	movwf	??___flmul
 10557  0716  0879               	movf	??___flmul,w
 10558  0717  00F0               	movwf	__Umul8_16@multiplicand
 10559  0718  0826               	movf	___flmul@a+2,w
 10560  0719  3195  2515  3185   	fcall	__Umul8_16
 10561  071C  0871               	movf	?__Umul8_16+1,w
 10562  071D  00B4               	movwf	___flmul@temp+1
 10563  071E  0870               	movf	?__Umul8_16,w
 10564  071F  00B3               	movwf	___flmul@temp
 10565  0720  0833               	movf	___flmul@temp,w
 10566  0721  00F9               	movwf	??___flmul
 10567  0722  0834               	movf	___flmul@temp+1,w
 10568  0723  00FA               	movwf	??___flmul+1
 10569  0724  01FB               	clrf	??___flmul+2
 10570  0725  01FC               	clrf	??___flmul+3
 10571  0726  3008               	movlw	8
 10572  0727                     u3475:
 10573  0727  35F9               	lslf	??___flmul,f
 10574  0728  0DFA               	rlf	??___flmul+1,f
 10575  0729  0DFB               	rlf	??___flmul+2,f
 10576  072A  0DFC               	rlf	??___flmul+3,f
 10577  072B  0B89               	decfsz	9,f
 10578  072C  2F27               	goto	u3475
 10579  072D  0879               	movf	??___flmul,w
 10580  072E  07AF               	addwf	___flmul@prod,f
 10581  072F  087A               	movf	??___flmul+1,w
 10582  0730  3DB0               	addwfc	___flmul@prod+1,f
 10583  0731  087B               	movf	??___flmul+2,w
 10584  0732  3DB1               	addwfc	___flmul@prod+2,f
 10585  0733  087C               	movf	??___flmul+3,w
 10586  0734  3DB2               	addwfc	___flmul@prod+3,f
 10587  0735  082D               	movf	___flmul@grs+3,w
 10588  0736  00F9               	movwf	??___flmul
 10589  0737  01FA               	clrf	??___flmul+1
 10590  0738  01FB               	clrf	??___flmul+2
 10591  0739  01FC               	clrf	??___flmul+3
 10592  073A  0879               	movf	??___flmul,w
 10593  073B  07AF               	addwf	___flmul@prod,f
 10594  073C  087A               	movf	??___flmul+1,w
 10595  073D  3DB0               	addwfc	___flmul@prod+1,f
 10596  073E  087B               	movf	??___flmul+2,w
 10597  073F  3DB1               	addwfc	___flmul@prod+2,f
 10598  0740  087C               	movf	??___flmul+3,w
 10599  0741  3DB2               	addwfc	___flmul@prod+3,f
 10600  0742  3008               	movlw	8
 10601  0743                     u3485:
 10602  0743  35AA               	lslf	___flmul@grs,f
 10603  0744  0DAB               	rlf	___flmul@grs+1,f
 10604  0745  0DAC               	rlf	___flmul@grs+2,f
 10605  0746  0DAD               	rlf	___flmul@grs+3,f
 10606  0747  0B89               	decfsz	9,f
 10607  0748  2F43               	goto	u3485
 10608  0749  082E               	movf	___flmul@bexp,w
 10609  074A  0729               	addwf	___flmul@aexp,w
 10610  074B  00F9               	movwf	??___flmul
 10611  074C  01FA               	clrf	??___flmul+1
 10612  074D  0DFA               	rlf	??___flmul+1,f
 10613  074E  0879               	movf	??___flmul,w
 10614  074F  3E82               	addlw	130
 10615  0750  00B3               	movwf	___flmul@temp
 10616  0751  30FF               	movlw	255
 10617  0752  3D7A               	addwfc	??___flmul+1,w
 10618  0753  00B4               	movwf	___flmul@temp+1
 10619  0754                     l4052:
 10620  0754  1BB1               	btfsc	___flmul@prod+2,7
 10621  0755  2F6B               	goto	l4054
 10622  0756  3001               	movlw	1
 10623  0757                     u3495:
 10624  0757  35AF               	lslf	___flmul@prod,f
 10625  0758  0DB0               	rlf	___flmul@prod+1,f
 10626  0759  0DB1               	rlf	___flmul@prod+2,f
 10627  075A  0DB2               	rlf	___flmul@prod+3,f
 10628  075B  0B89               	decfsz	9,f
 10629  075C  2F57               	goto	u3495
 10630  075D  1BAD               	btfsc	___flmul@grs+3,7
 10631  075E  142F               	bsf	___flmul@prod,0
 10632  075F  3001               	movlw	1
 10633  0760                     u3515:
 10634  0760  35AA               	lslf	___flmul@grs,f
 10635  0761  0DAB               	rlf	___flmul@grs+1,f
 10636  0762  0DAC               	rlf	___flmul@grs+2,f
 10637  0763  0DAD               	rlf	___flmul@grs+3,f
 10638  0764  0B89               	decfsz	9,f
 10639  0765  2F60               	goto	u3515
 10640  0766  30FF               	movlw	255
 10641  0767  07B3               	addwf	___flmul@temp,f
 10642  0768  30FF               	movlw	255
 10643  0769  3DB4               	addwfc	___flmul@temp+1,f
 10644  076A  2F54               	goto	l4052
 10645  076B                     l4054:
 10646  076B  01A9               	clrf	___flmul@aexp
 10647  076C  1FAD               	btfss	___flmul@grs+3,7
 10648  076D  2F84               	goto	l4064
 10649  076E  30FF               	movlw	255
 10650  076F  052A               	andwf	___flmul@grs,w
 10651  0770  00F9               	movwf	??___flmul
 10652  0771  30FF               	movlw	255
 10653  0772  052B               	andwf	___flmul@grs+1,w
 10654  0773  00FA               	movwf	??___flmul+1
 10655  0774  30FF               	movlw	255
 10656  0775  052C               	andwf	___flmul@grs+2,w
 10657  0776  00FB               	movwf	??___flmul+2
 10658  0777  307F               	movlw	127
 10659  0778  052D               	andwf	___flmul@grs+3,w
 10660  0779  00FC               	movwf	??___flmul+3
 10661  077A  087C               	movf	??___flmul+3,w
 10662  077B  047B               	iorwf	??___flmul+2,w
 10663  077C  047A               	iorwf	??___flmul+1,w
 10664  077D  0479               	iorwf	??___flmul,w
 10665  077E  1903               	skipnz
 10666  077F  182F               	btfsc	___flmul@prod,0
 10667  0780  2F82               	goto	l4060
 10668  0781  2F84               	goto	l4064
 10669  0782                     l4060:
 10670  0782  01A9               	clrf	___flmul@aexp
 10671  0783  0AA9               	incf	___flmul@aexp,f
 10672  0784                     l4064:
 10673  0784  0829               	movf	___flmul@aexp,w
 10674  0785  1903               	btfsc	3,2
 10675  0786  2FAD               	goto	l4074
 10676  0787  3001               	movlw	1
 10677  0788  07AF               	addwf	___flmul@prod,f
 10678  0789  3000               	movlw	0
 10679  078A  3DB0               	addwfc	___flmul@prod+1,f
 10680  078B  3000               	movlw	0
 10681  078C  3DB1               	addwfc	___flmul@prod+2,f
 10682  078D  3000               	movlw	0
 10683  078E  3DB2               	addwfc	___flmul@prod+3,f
 10684  078F  1C32               	btfss	___flmul@prod+3,0
 10685  0790  2FAD               	goto	l4074
 10686  0791  082F               	movf	___flmul@prod,w
 10687  0792  00F9               	movwf	??___flmul
 10688  0793  0830               	movf	___flmul@prod+1,w
 10689  0794  00FA               	movwf	??___flmul+1
 10690  0795  0831               	movf	___flmul@prod+2,w
 10691  0796  00FB               	movwf	??___flmul+2
 10692  0797  0832               	movf	___flmul@prod+3,w
 10693  0798  00FC               	movwf	??___flmul+3
 10694  0799  3001               	movlw	1
 10695  079A  00FD               	movwf	??___flmul+4
 10696  079B                     u3585:
 10697  079B  37FC               	asrf	??___flmul+3,f
 10698  079C  0CFB               	rrf	??___flmul+2,f
 10699  079D  0CFA               	rrf	??___flmul+1,f
 10700  079E  0CF9               	rrf	??___flmul,f
 10701  079F  0BFD               	decfsz	??___flmul+4,f
 10702  07A0  2F9B               	goto	u3585
 10703  07A1  087C               	movf	??___flmul+3,w
 10704  07A2  00B2               	movwf	___flmul@prod+3
 10705  07A3  087B               	movf	??___flmul+2,w
 10706  07A4  00B1               	movwf	___flmul@prod+2
 10707  07A5  087A               	movf	??___flmul+1,w
 10708  07A6  00B0               	movwf	___flmul@prod+1
 10709  07A7  0879               	movf	??___flmul,w
 10710  07A8  00AF               	movwf	___flmul@prod
 10711  07A9  3001               	movlw	1
 10712  07AA  07B3               	addwf	___flmul@temp,f
 10713  07AB  3000               	movlw	0
 10714  07AC  3DB4               	addwfc	___flmul@temp+1,f
 10715  07AD                     l4074:
 10716  07AD  0834               	movf	___flmul@temp+1,w
 10717  07AE  3A80               	xorlw	128
 10718  07AF  00F9               	movwf	??___flmul
 10719  07B0  3080               	movlw	128
 10720  07B1  0279               	subwf	??___flmul,w
 10721  07B2  1D03               	skipz
 10722  07B3  2FB6               	goto	u3595
 10723  07B4  30FF               	movlw	255
 10724  07B5  0233               	subwf	___flmul@temp,w
 10725  07B6                     u3595:
 10726  07B6  1C03               	skipc
 10727  07B7  2FC2               	goto	l4078
 10728  07B8  307F               	movlw	127
 10729  07B9  0020               	movlb	0	; select bank0
 10730  07BA  00B2               	movwf	___flmul@prod+3
 10731  07BB  3080               	movlw	128
 10732  07BC  00B1               	movwf	___flmul@prod+2
 10733  07BD  3000               	movlw	0
 10734  07BE  00B0               	movwf	___flmul@prod+1
 10735  07BF  3000               	movlw	0
 10736  07C0  00AF               	movwf	___flmul@prod
 10737  07C1  2FEC               	goto	l1494
 10738  07C2                     l4078:
 10739  07C2  0020               	movlb	0	; select bank0
 10740  07C3  0834               	movf	___flmul@temp+1,w
 10741  07C4  3A80               	xorlw	128
 10742  07C5  00F9               	movwf	??___flmul
 10743  07C6  3080               	movlw	128
 10744  07C7  0279               	subwf	??___flmul,w
 10745  07C8  1D03               	skipz
 10746  07C9  2FCC               	goto	u3605
 10747  07CA  3001               	movlw	1
 10748  07CB  0233               	subwf	___flmul@temp,w
 10749  07CC                     u3605:
 10750  07CC  1803               	skipnc
 10751  07CD  2FD9               	goto	l4084
 10752  07CE  3000               	movlw	0
 10753  07CF  0020               	movlb	0	; select bank0
 10754  07D0  00B2               	movwf	___flmul@prod+3
 10755  07D1  3000               	movlw	0
 10756  07D2  00B1               	movwf	___flmul@prod+2
 10757  07D3  3000               	movlw	0
 10758  07D4  00B0               	movwf	___flmul@prod+1
 10759  07D5  3000               	movlw	0
 10760  07D6  00AF               	movwf	___flmul@prod
 10761  07D7  01A8               	clrf	___flmul@sign
 10762  07D8  2FEC               	goto	l1494
 10763  07D9                     l4084:
 10764  07D9  0020               	movlb	0	; select bank0
 10765  07DA  0833               	movf	___flmul@temp,w
 10766  07DB  00F9               	movwf	??___flmul
 10767  07DC  0879               	movf	??___flmul,w
 10768  07DD  00AE               	movwf	___flmul@bexp
 10769  07DE  30FF               	movlw	255
 10770  07DF  05AF               	andwf	___flmul@prod,f
 10771  07E0  30FF               	movlw	255
 10772  07E1  05B0               	andwf	___flmul@prod+1,f
 10773  07E2  307F               	movlw	127
 10774  07E3  05B1               	andwf	___flmul@prod+2,f
 10775  07E4  3000               	movlw	0
 10776  07E5  05B2               	andwf	___flmul@prod+3,f
 10777  07E6  182E               	btfsc	___flmul@bexp,0
 10778  07E7  17B1               	bsf	___flmul@prod+2,7
 10779  07E8  362E               	lsrf	___flmul@bexp,w
 10780  07E9  00F9               	movwf	??___flmul
 10781  07EA  0879               	movf	??___flmul,w
 10782  07EB  00B2               	movwf	___flmul@prod+3
 10783  07EC                     l1494:
 10784  07EC  0828               	movf	___flmul@sign,w
 10785  07ED  00F9               	movwf	??___flmul
 10786  07EE  0879               	movf	??___flmul,w
 10787  07EF  04B2               	iorwf	___flmul@prod+3,f
 10788  07F0  0832               	movf	___flmul@prod+3,w
 10789  07F1  00A3               	movwf	?___flmul+3
 10790  07F2  0831               	movf	___flmul@prod+2,w
 10791  07F3  00A2               	movwf	?___flmul+2
 10792  07F4  0830               	movf	___flmul@prod+1,w
 10793  07F5  00A1               	movwf	?___flmul+1
 10794  07F6  082F               	movf	___flmul@prod,w
 10795  07F7  00A0               	movwf	?___flmul
 10796  07F8  0008               	return
 10797  07F9                     __end_of___flmul:
 10798                           
 10799                           	psect	text51
 10800  1515                     __ptext51:	
 10801 ;; *************** function __Umul8_16 *****************
 10802 ;; Defined at:
 10803 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul8_16.c"
 10804 ;; Parameters:    Size  Location     Type
 10805 ;;  multiplier      1    wreg     unsigned char 
 10806 ;;  multiplicand    1    0[COMMON] unsigned char 
 10807 ;; Auto vars:     Size  Location     Type
 10808 ;;  multiplier      1    8[COMMON] unsigned char 
 10809 ;;  word_mpld       2    6[COMMON] unsigned int 
 10810 ;;  product         2    4[COMMON] unsigned int 
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  2    0[COMMON] unsigned int 
 10813 ;; Registers used:
 10814 ;;		wreg, status,2, status,0
 10815 ;; Tracked objects:
 10816 ;;		On entry : 1F/0
 10817 ;;		On exit  : 1F/0
 10818 ;;		Unchanged: 1F/0
 10819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10821 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10822 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10823 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10824 ;;Total ram usage:        9 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:    5
 10827 ;; This function calls:
 10828 ;;		Nothing
 10829 ;; This function is called by:
 10830 ;;		___flmul
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           
 10835                           ;psect for function __Umul8_16
 10836  1515                     __Umul8_16:
 10837                           
 10838                           ;incstack = 0
 10839                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10840                           ;__Umul8_16@multiplier stored from wreg
 10841  1515  00F8               	movwf	__Umul8_16@multiplier
 10842  1516  01F4               	clrf	__Umul8_16@product
 10843  1517  01F5               	clrf	__Umul8_16@product+1
 10844  1518  0870               	movf	__Umul8_16@multiplicand,w
 10845  1519  00F2               	movwf	??__Umul8_16
 10846  151A  01F3               	clrf	??__Umul8_16+1
 10847  151B  0872               	movf	??__Umul8_16,w
 10848  151C  00F6               	movwf	__Umul8_16@word_mpld
 10849  151D  0873               	movf	??__Umul8_16+1,w
 10850  151E  00F7               	movwf	__Umul8_16@word_mpld+1
 10851  151F                     l3624:
 10852  151F  1C78               	btfss	__Umul8_16@multiplier,0
 10853  1520  2D25               	goto	l1501
 10854  1521  0876               	movf	__Umul8_16@word_mpld,w
 10855  1522  07F4               	addwf	__Umul8_16@product,f
 10856  1523  0877               	movf	__Umul8_16@word_mpld+1,w
 10857  1524  3DF5               	addwfc	__Umul8_16@product+1,f
 10858  1525                     l1501:
 10859  1525  3001               	movlw	1
 10860  1526                     u2735:
 10861  1526  35F6               	lslf	__Umul8_16@word_mpld,f
 10862  1527  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10863  1528  0B89               	decfsz	9,f
 10864  1529  2D26               	goto	u2735
 10865  152A  1003               	clrc
 10866  152B  0CF8               	rrf	__Umul8_16@multiplier,f
 10867  152C  0878               	movf	__Umul8_16@multiplier,w
 10868  152D  1D03               	btfss	3,2
 10869  152E  2D1F               	goto	l3624
 10870  152F  0875               	movf	__Umul8_16@product+1,w
 10871  1530  00F1               	movwf	?__Umul8_16+1
 10872  1531  0874               	movf	__Umul8_16@product,w
 10873  1532  00F0               	movwf	?__Umul8_16
 10874  1533  0008               	return
 10875  1534                     __end_of__Umul8_16:
 10876                           
 10877                           	psect	text52
 10878  0C9F                     __ptext52:	
 10879 ;; *************** function ___fldiv *****************
 10880 ;; Defined at:
 10881 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcdiv.c"
 10882 ;; Parameters:    Size  Location     Type
 10883 ;;  a               4   21[BANK0 ] unsigned int 
 10884 ;;  b               4   25[BANK0 ] unsigned int 
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;  grs             4   41[BANK0 ] unsigned long 
 10887 ;;  rem             4   34[BANK0 ] unsigned long 
 10888 ;;  new_exp         2   39[BANK0 ] int 
 10889 ;;  aexp            1   46[BANK0 ] unsigned char 
 10890 ;;  bexp            1   45[BANK0 ] unsigned char 
 10891 ;;  sign            1   38[BANK0 ] unsigned char 
 10892 ;; Return value:  Size  Location     Type
 10893 ;;                  4   21[BANK0 ] unsigned char 
 10894 ;; Registers used:
 10895 ;;		wreg, status,2, status,0
 10896 ;; Tracked objects:
 10897 ;;		On entry : 1F/0
 10898 ;;		On exit  : 1F/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10901 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10902 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10904 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10905 ;;Total ram usage:       26 bytes
 10906 ;; Hardware stack levels used:    1
 10907 ;; Hardware stack levels required when called:    5
 10908 ;; This function calls:
 10909 ;;		Nothing
 10910 ;; This function is called by:
 10911 ;;		_SetDimmer
 10912 ;; This function uses a non-reentrant model
 10913 ;;
 10914                           
 10915                           
 10916                           ;psect for function ___fldiv
 10917  0C9F                     ___fldiv:
 10918                           
 10919                           ;incstack = 0
 10920                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10921  0C9F  083C               	movf	___fldiv@b+3,w
 10922  0CA0  3980               	andlw	128
 10923  0CA1  00BD               	movwf	??___fldiv
 10924  0CA2  083D               	movf	??___fldiv,w
 10925  0CA3  00C6               	movwf	___fldiv@sign
 10926  0CA4  353C               	lslf	___fldiv@b+3,w
 10927  0CA5  00BD               	movwf	??___fldiv
 10928  0CA6  083D               	movf	??___fldiv,w
 10929  0CA7  00CD               	movwf	___fldiv@bexp
 10930  0CA8  1BBB               	btfsc	___fldiv@b+2,7
 10931  0CA9  144D               	bsf	___fldiv@bexp,0
 10932  0CAA  084D               	movf	___fldiv@bexp,w
 10933  0CAB  1903               	btfsc	3,2
 10934  0CAC  2CBB               	goto	l3834
 10935  0CAD  0A4D               	incf	___fldiv@bexp,w
 10936  0CAE  1D03               	btfss	3,2
 10937  0CAF  2CB8               	goto	l3830
 10938  0CB0  3000               	movlw	0
 10939  0CB1  00BC               	movwf	___fldiv@b+3
 10940  0CB2  3000               	movlw	0
 10941  0CB3  00BB               	movwf	___fldiv@b+2
 10942  0CB4  3000               	movlw	0
 10943  0CB5  00BA               	movwf	___fldiv@b+1
 10944  0CB6  3000               	movlw	0
 10945  0CB7  00B9               	movwf	___fldiv@b
 10946  0CB8                     l3830:
 10947  0CB8  17BB               	bsf	___fldiv@b+2,7
 10948  0CB9  01BC               	clrf	___fldiv@b+3
 10949  0CBA  2CC3               	goto	l3836
 10950  0CBB                     l3834:
 10951  0CBB  3000               	movlw	0
 10952  0CBC  00BC               	movwf	___fldiv@b+3
 10953  0CBD  3000               	movlw	0
 10954  0CBE  00BB               	movwf	___fldiv@b+2
 10955  0CBF  3000               	movlw	0
 10956  0CC0  00BA               	movwf	___fldiv@b+1
 10957  0CC1  3000               	movlw	0
 10958  0CC2  00B9               	movwf	___fldiv@b
 10959  0CC3                     l3836:
 10960  0CC3  0838               	movf	___fldiv@a+3,w
 10961  0CC4  3980               	andlw	128
 10962  0CC5  00BD               	movwf	??___fldiv
 10963  0CC6  083D               	movf	??___fldiv,w
 10964  0CC7  06C6               	xorwf	___fldiv@sign,f
 10965  0CC8  3538               	lslf	___fldiv@a+3,w
 10966  0CC9  00BD               	movwf	??___fldiv
 10967  0CCA  083D               	movf	??___fldiv,w
 10968  0CCB  00CE               	movwf	___fldiv@aexp
 10969  0CCC  1BB7               	btfsc	___fldiv@a+2,7
 10970  0CCD  144E               	bsf	___fldiv@aexp,0
 10971  0CCE  084E               	movf	___fldiv@aexp,w
 10972  0CCF  1903               	btfsc	3,2
 10973  0CD0  2CDF               	goto	l3854
 10974  0CD1  0A4E               	incf	___fldiv@aexp,w
 10975  0CD2  1D03               	btfss	3,2
 10976  0CD3  2CDC               	goto	l3850
 10977  0CD4  3000               	movlw	0
 10978  0CD5  00B8               	movwf	___fldiv@a+3
 10979  0CD6  3000               	movlw	0
 10980  0CD7  00B7               	movwf	___fldiv@a+2
 10981  0CD8  3000               	movlw	0
 10982  0CD9  00B6               	movwf	___fldiv@a+1
 10983  0CDA  3000               	movlw	0
 10984  0CDB  00B5               	movwf	___fldiv@a
 10985  0CDC                     l3850:
 10986  0CDC  17B7               	bsf	___fldiv@a+2,7
 10987  0CDD  01B8               	clrf	___fldiv@a+3
 10988  0CDE  2CE7               	goto	l1442
 10989  0CDF                     l3854:
 10990  0CDF  3000               	movlw	0
 10991  0CE0  00B8               	movwf	___fldiv@a+3
 10992  0CE1  3000               	movlw	0
 10993  0CE2  00B7               	movwf	___fldiv@a+2
 10994  0CE3  3000               	movlw	0
 10995  0CE4  00B6               	movwf	___fldiv@a+1
 10996  0CE5  3000               	movlw	0
 10997  0CE6  00B5               	movwf	___fldiv@a
 10998  0CE7                     l1442:
 10999  0CE7  0838               	movf	___fldiv@a+3,w
 11000  0CE8  0437               	iorwf	___fldiv@a+2,w
 11001  0CE9  0436               	iorwf	___fldiv@a+1,w
 11002  0CEA  0435               	iorwf	___fldiv@a,w
 11003  0CEB  1D03               	skipz
 11004  0CEC  2D06               	goto	l3864
 11005  0CED  3000               	movlw	0
 11006  0CEE  00BC               	movwf	___fldiv@b+3
 11007  0CEF  3000               	movlw	0
 11008  0CF0  00BB               	movwf	___fldiv@b+2
 11009  0CF1  3000               	movlw	0
 11010  0CF2  00BA               	movwf	___fldiv@b+1
 11011  0CF3  3000               	movlw	0
 11012  0CF4  00B9               	movwf	___fldiv@b
 11013  0CF5  3080               	movlw	128
 11014  0CF6  04BB               	iorwf	___fldiv@b+2,f
 11015  0CF7  307F               	movlw	127
 11016  0CF8  04BC               	iorwf	___fldiv@b+3,f
 11017  0CF9                     L4:
 11018  0CF9  0846               	movf	___fldiv@sign,w
 11019  0CFA  00BD               	movwf	??___fldiv
 11020  0CFB  083D               	movf	??___fldiv,w
 11021  0CFC  04BC               	iorwf	___fldiv@b+3,f
 11022  0CFD  083C               	movf	___fldiv@b+3,w
 11023  0CFE  00B8               	movwf	?___fldiv+3
 11024  0CFF  083B               	movf	___fldiv@b+2,w
 11025  0D00  00B7               	movwf	?___fldiv+2
 11026  0D01  083A               	movf	___fldiv@b+1,w
 11027  0D02  00B6               	movwf	?___fldiv+1
 11028  0D03  0839               	movf	___fldiv@b,w
 11029  0D04  00B5               	movwf	?___fldiv
 11030  0D05  0008               	return
 11031  0D06                     l3864:
 11032  0D06  084D               	movf	___fldiv@bexp,w
 11033  0D07  1D03               	btfss	3,2
 11034  0D08  2D12               	goto	l3870
 11035  0D09  3000               	movlw	0
 11036  0D0A  00B8               	movwf	?___fldiv+3
 11037  0D0B  3000               	movlw	0
 11038  0D0C  00B7               	movwf	?___fldiv+2
 11039  0D0D  3000               	movlw	0
 11040  0D0E  00B6               	movwf	?___fldiv+1
 11041  0D0F  3000               	movlw	0
 11042  0D10  00B5               	movwf	?___fldiv
 11043  0D11  0008               	return
 11044  0D12                     l3870:
 11045  0D12  084D               	movf	___fldiv@bexp,w
 11046  0D13  00BD               	movwf	??___fldiv
 11047  0D14  01BE               	clrf	??___fldiv+1
 11048  0D15  083E               	movf	??___fldiv+1,w
 11049  0D16  00C0               	movwf	??___fldiv+3
 11050  0D17  084E               	movf	___fldiv@aexp,w
 11051  0D18  023D               	subwf	??___fldiv,w
 11052  0D19  00BF               	movwf	??___fldiv+2
 11053  0D1A  1C03               	skipc
 11054  0D1B  03C0               	decf	??___fldiv+3,f
 11055  0D1C  083F               	movf	??___fldiv+2,w
 11056  0D1D  3E7F               	addlw	127
 11057  0D1E  00C7               	movwf	___fldiv@new_exp
 11058  0D1F  3000               	movlw	0
 11059  0D20  3D40               	addwfc	??___fldiv+3,w
 11060  0D21  00C8               	movwf	___fldiv@new_exp+1
 11061  0D22  083C               	movf	___fldiv@b+3,w
 11062  0D23  00C5               	movwf	___fldiv@rem+3
 11063  0D24  083B               	movf	___fldiv@b+2,w
 11064  0D25  00C4               	movwf	___fldiv@rem+2
 11065  0D26  083A               	movf	___fldiv@b+1,w
 11066  0D27  00C3               	movwf	___fldiv@rem+1
 11067  0D28  0839               	movf	___fldiv@b,w
 11068  0D29  00C2               	movwf	___fldiv@rem
 11069  0D2A  3000               	movlw	0
 11070  0D2B  00BC               	movwf	___fldiv@b+3
 11071  0D2C  3000               	movlw	0
 11072  0D2D  00BB               	movwf	___fldiv@b+2
 11073  0D2E  3000               	movlw	0
 11074  0D2F  00BA               	movwf	___fldiv@b+1
 11075  0D30  3000               	movlw	0
 11076  0D31  00B9               	movwf	___fldiv@b
 11077  0D32  3000               	movlw	0
 11078  0D33  00CC               	movwf	___fldiv@grs+3
 11079  0D34  3000               	movlw	0
 11080  0D35  00CB               	movwf	___fldiv@grs+2
 11081  0D36  3000               	movlw	0
 11082  0D37  00CA               	movwf	___fldiv@grs+1
 11083  0D38  3000               	movlw	0
 11084  0D39  00C9               	movwf	___fldiv@grs
 11085  0D3A  01CE               	clrf	___fldiv@aexp
 11086  0D3B                     l3898:
 11087  0D3B  301A               	movlw	26
 11088  0D3C  024E               	subwf	___fldiv@aexp,w
 11089  0D3D  1803               	btfsc	3,0
 11090  0D3E  2D77               	goto	l3900
 11091  0D3F  084E               	movf	___fldiv@aexp,w
 11092  0D40  1903               	btfsc	3,2
 11093  0D41  2D59               	goto	l3890
 11094  0D42  3001               	movlw	1
 11095  0D43                     u3175:
 11096  0D43  35C2               	lslf	___fldiv@rem,f
 11097  0D44  0DC3               	rlf	___fldiv@rem+1,f
 11098  0D45  0DC4               	rlf	___fldiv@rem+2,f
 11099  0D46  0DC5               	rlf	___fldiv@rem+3,f
 11100  0D47  0B89               	decfsz	9,f
 11101  0D48  2D43               	goto	u3175
 11102  0D49  3001               	movlw	1
 11103  0D4A                     u3185:
 11104  0D4A  35B9               	lslf	___fldiv@b,f
 11105  0D4B  0DBA               	rlf	___fldiv@b+1,f
 11106  0D4C  0DBB               	rlf	___fldiv@b+2,f
 11107  0D4D  0DBC               	rlf	___fldiv@b+3,f
 11108  0D4E  0B89               	decfsz	9,f
 11109  0D4F  2D4A               	goto	u3185
 11110  0D50  1BCC               	btfsc	___fldiv@grs+3,7
 11111  0D51  1439               	bsf	___fldiv@b,0
 11112  0D52  3001               	movlw	1
 11113  0D53                     u3205:
 11114  0D53  35C9               	lslf	___fldiv@grs,f
 11115  0D54  0DCA               	rlf	___fldiv@grs+1,f
 11116  0D55  0DCB               	rlf	___fldiv@grs+2,f
 11117  0D56  0DCC               	rlf	___fldiv@grs+3,f
 11118  0D57  0B89               	decfsz	9,f
 11119  0D58  2D53               	goto	u3205
 11120  0D59                     l3890:
 11121  0D59  0838               	movf	___fldiv@a+3,w
 11122  0D5A  0245               	subwf	___fldiv@rem+3,w
 11123  0D5B  1D03               	skipz
 11124  0D5C  2D67               	goto	u3215
 11125  0D5D  0837               	movf	___fldiv@a+2,w
 11126  0D5E  0244               	subwf	___fldiv@rem+2,w
 11127  0D5F  1D03               	skipz
 11128  0D60  2D67               	goto	u3215
 11129  0D61  0836               	movf	___fldiv@a+1,w
 11130  0D62  0243               	subwf	___fldiv@rem+1,w
 11131  0D63  1D03               	skipz
 11132  0D64  2D67               	goto	u3215
 11133  0D65  0835               	movf	___fldiv@a,w
 11134  0D66  0242               	subwf	___fldiv@rem,w
 11135  0D67                     u3215:
 11136  0D67  1C03               	skipc
 11137  0D68  2D72               	goto	l3896
 11138  0D69  174C               	bsf	___fldiv@grs+3,6
 11139  0D6A  0835               	movf	___fldiv@a,w
 11140  0D6B  02C2               	subwf	___fldiv@rem,f
 11141  0D6C  0836               	movf	___fldiv@a+1,w
 11142  0D6D  3BC3               	subwfb	___fldiv@rem+1,f
 11143  0D6E  0837               	movf	___fldiv@a+2,w
 11144  0D6F  3BC4               	subwfb	___fldiv@rem+2,f
 11145  0D70  0838               	movf	___fldiv@a+3,w
 11146  0D71  3BC5               	subwfb	___fldiv@rem+3,f
 11147  0D72                     l3896:
 11148  0D72  3001               	movlw	1
 11149  0D73  00BD               	movwf	??___fldiv
 11150  0D74  083D               	movf	??___fldiv,w
 11151  0D75  07CE               	addwf	___fldiv@aexp,f
 11152  0D76  2D3B               	goto	l3898
 11153  0D77                     l3900:
 11154  0D77  0845               	movf	___fldiv@rem+3,w
 11155  0D78  0444               	iorwf	___fldiv@rem+2,w
 11156  0D79  0443               	iorwf	___fldiv@rem+1,w
 11157  0D7A  0442               	iorwf	___fldiv@rem,w
 11158  0D7B  1D03               	btfss	3,2
 11159  0D7C  1449               	bsf	___fldiv@grs,0
 11160  0D7D                     l3914:
 11161  0D7D  1BBB               	btfsc	___fldiv@b+2,7
 11162  0D7E  2D94               	goto	l3916
 11163  0D7F  3001               	movlw	1
 11164  0D80                     u3245:
 11165  0D80  35B9               	lslf	___fldiv@b,f
 11166  0D81  0DBA               	rlf	___fldiv@b+1,f
 11167  0D82  0DBB               	rlf	___fldiv@b+2,f
 11168  0D83  0DBC               	rlf	___fldiv@b+3,f
 11169  0D84  0B89               	decfsz	9,f
 11170  0D85  2D80               	goto	u3245
 11171  0D86  1BCC               	btfsc	___fldiv@grs+3,7
 11172  0D87  1439               	bsf	___fldiv@b,0
 11173  0D88  3001               	movlw	1
 11174  0D89                     u3265:
 11175  0D89  35C9               	lslf	___fldiv@grs,f
 11176  0D8A  0DCA               	rlf	___fldiv@grs+1,f
 11177  0D8B  0DCB               	rlf	___fldiv@grs+2,f
 11178  0D8C  0DCC               	rlf	___fldiv@grs+3,f
 11179  0D8D  0B89               	decfsz	9,f
 11180  0D8E  2D89               	goto	u3265
 11181  0D8F  30FF               	movlw	255
 11182  0D90  07C7               	addwf	___fldiv@new_exp,f
 11183  0D91  30FF               	movlw	255
 11184  0D92  3DC8               	addwfc	___fldiv@new_exp+1,f
 11185  0D93  2D7D               	goto	l3914
 11186  0D94                     l3916:
 11187  0D94  01CE               	clrf	___fldiv@aexp
 11188  0D95  1FCC               	btfss	___fldiv@grs+3,7
 11189  0D96  2DAD               	goto	l3926
 11190  0D97  30FF               	movlw	255
 11191  0D98  0549               	andwf	___fldiv@grs,w
 11192  0D99  00BD               	movwf	??___fldiv
 11193  0D9A  30FF               	movlw	255
 11194  0D9B  054A               	andwf	___fldiv@grs+1,w
 11195  0D9C  00BE               	movwf	??___fldiv+1
 11196  0D9D  30FF               	movlw	255
 11197  0D9E  054B               	andwf	___fldiv@grs+2,w
 11198  0D9F  00BF               	movwf	??___fldiv+2
 11199  0DA0  307F               	movlw	127
 11200  0DA1  054C               	andwf	___fldiv@grs+3,w
 11201  0DA2  00C0               	movwf	??___fldiv+3
 11202  0DA3  0840               	movf	??___fldiv+3,w
 11203  0DA4  043F               	iorwf	??___fldiv+2,w
 11204  0DA5  043E               	iorwf	??___fldiv+1,w
 11205  0DA6  043D               	iorwf	??___fldiv,w
 11206  0DA7  1903               	skipnz
 11207  0DA8  1839               	btfsc	___fldiv@b,0
 11208  0DA9  2DAB               	goto	l3922
 11209  0DAA  2DAD               	goto	l3926
 11210  0DAB                     l3922:
 11211  0DAB  01CE               	clrf	___fldiv@aexp
 11212  0DAC  0ACE               	incf	___fldiv@aexp,f
 11213  0DAD                     l3926:
 11214  0DAD  084E               	movf	___fldiv@aexp,w
 11215  0DAE  1903               	btfsc	3,2
 11216  0DAF  2DD6               	goto	l3936
 11217  0DB0  3001               	movlw	1
 11218  0DB1  07B9               	addwf	___fldiv@b,f
 11219  0DB2  3000               	movlw	0
 11220  0DB3  3DBA               	addwfc	___fldiv@b+1,f
 11221  0DB4  3000               	movlw	0
 11222  0DB5  3DBB               	addwfc	___fldiv@b+2,f
 11223  0DB6  3000               	movlw	0
 11224  0DB7  3DBC               	addwfc	___fldiv@b+3,f
 11225  0DB8  1C3C               	btfss	___fldiv@b+3,0
 11226  0DB9  2DD6               	goto	l3936
 11227  0DBA  0839               	movf	___fldiv@b,w
 11228  0DBB  00BD               	movwf	??___fldiv
 11229  0DBC  083A               	movf	___fldiv@b+1,w
 11230  0DBD  00BE               	movwf	??___fldiv+1
 11231  0DBE  083B               	movf	___fldiv@b+2,w
 11232  0DBF  00BF               	movwf	??___fldiv+2
 11233  0DC0  083C               	movf	___fldiv@b+3,w
 11234  0DC1  00C0               	movwf	??___fldiv+3
 11235  0DC2  3001               	movlw	1
 11236  0DC3  00C1               	movwf	??___fldiv+4
 11237  0DC4                     u3335:
 11238  0DC4  37C0               	asrf	??___fldiv+3,f
 11239  0DC5  0CBF               	rrf	??___fldiv+2,f
 11240  0DC6  0CBE               	rrf	??___fldiv+1,f
 11241  0DC7  0CBD               	rrf	??___fldiv,f
 11242  0DC8  0BC1               	decfsz	??___fldiv+4,f
 11243  0DC9  2DC4               	goto	u3335
 11244  0DCA  0840               	movf	??___fldiv+3,w
 11245  0DCB  00BC               	movwf	___fldiv@b+3
 11246  0DCC  083F               	movf	??___fldiv+2,w
 11247  0DCD  00BB               	movwf	___fldiv@b+2
 11248  0DCE  083E               	movf	??___fldiv+1,w
 11249  0DCF  00BA               	movwf	___fldiv@b+1
 11250  0DD0  083D               	movf	??___fldiv,w
 11251  0DD1  00B9               	movwf	___fldiv@b
 11252  0DD2  3001               	movlw	1
 11253  0DD3  07C7               	addwf	___fldiv@new_exp,f
 11254  0DD4  3000               	movlw	0
 11255  0DD5  3DC8               	addwfc	___fldiv@new_exp+1,f
 11256  0DD6                     l3936:
 11257  0DD6  0848               	movf	___fldiv@new_exp+1,w
 11258  0DD7  3A80               	xorlw	128
 11259  0DD8  00BD               	movwf	??___fldiv
 11260  0DD9  3080               	movlw	128
 11261  0DDA  023D               	subwf	??___fldiv,w
 11262  0DDB  1D03               	skipz
 11263  0DDC  2DDF               	goto	u3345
 11264  0DDD  30FF               	movlw	255
 11265  0DDE  0247               	subwf	___fldiv@new_exp,w
 11266  0DDF                     u3345:
 11267  0DDF  1C03               	skipc
 11268  0DE0  2DEE               	goto	l1463
 11269  0DE1  30FF               	movlw	255
 11270  0DE2  0020               	movlb	0	; select bank0
 11271  0DE3  00C7               	movwf	___fldiv@new_exp
 11272  0DE4  3000               	movlw	0
 11273  0DE5  00C8               	movwf	___fldiv@new_exp+1
 11274  0DE6  3000               	movlw	0
 11275  0DE7  00BC               	movwf	___fldiv@b+3
 11276  0DE8  3000               	movlw	0
 11277  0DE9  00BB               	movwf	___fldiv@b+2
 11278  0DEA  3000               	movlw	0
 11279  0DEB  00BA               	movwf	___fldiv@b+1
 11280  0DEC  3000               	movlw	0
 11281  0DED  00B9               	movwf	___fldiv@b
 11282  0DEE                     l1463:
 11283  0DEE  0020               	movlb	0	; select bank0
 11284  0DEF  0848               	movf	___fldiv@new_exp+1,w
 11285  0DF0  3A80               	xorlw	128
 11286  0DF1  00BD               	movwf	??___fldiv
 11287  0DF2  3080               	movlw	128
 11288  0DF3  023D               	subwf	??___fldiv,w
 11289  0DF4  1D03               	skipz
 11290  0DF5  2DF8               	goto	u3355
 11291  0DF6  3001               	movlw	1
 11292  0DF7  0247               	subwf	___fldiv@new_exp,w
 11293  0DF8                     u3355:
 11294  0DF8  1803               	skipnc
 11295  0DF9  2E06               	goto	l1464
 11296  0DFA  0020               	movlb	0	; select bank0
 11297  0DFB  01C7               	clrf	___fldiv@new_exp
 11298  0DFC  01C8               	clrf	___fldiv@new_exp+1
 11299  0DFD  3000               	movlw	0
 11300  0DFE  00BC               	movwf	___fldiv@b+3
 11301  0DFF  3000               	movlw	0
 11302  0E00  00BB               	movwf	___fldiv@b+2
 11303  0E01  3000               	movlw	0
 11304  0E02  00BA               	movwf	___fldiv@b+1
 11305  0E03  3000               	movlw	0
 11306  0E04  00B9               	movwf	___fldiv@b
 11307  0E05  01C6               	clrf	___fldiv@sign
 11308  0E06                     l1464:
 11309  0E06  0020               	movlb	0	; select bank0
 11310  0E07  0847               	movf	___fldiv@new_exp,w
 11311  0E08  00BD               	movwf	??___fldiv
 11312  0E09  083D               	movf	??___fldiv,w
 11313  0E0A  00CD               	movwf	___fldiv@bexp
 11314  0E0B  1C4D               	btfss	___fldiv@bexp,0
 11315  0E0C  2E0F               	goto	l3950
 11316  0E0D  17BB               	bsf	___fldiv@b+2,7
 11317  0E0E  2E13               	goto	l1466
 11318  0E0F                     l3950:
 11319  0E0F  307F               	movlw	127
 11320  0E10  00BD               	movwf	??___fldiv
 11321  0E11  083D               	movf	??___fldiv,w
 11322  0E12  05BB               	andwf	___fldiv@b+2,f
 11323  0E13                     l1466:
 11324  0E13  364D               	lsrf	___fldiv@bexp,w
 11325  0E14  00BD               	movwf	??___fldiv
 11326  0E15  083D               	movf	??___fldiv,w
 11327  0E16  00BC               	movwf	___fldiv@b+3
 11328  0E17  2CF9               	goto	L4
 11329  0E18                     __end_of___fldiv:
 11330                           
 11331                           	psect	text53
 11332  12B9                     __ptext53:	
 11333 ;; *************** function _StartStop_Buzzer *****************
 11334 ;; Defined at:
 11335 ;;		line 193 in file "main.c"
 11336 ;; Parameters:    Size  Location     Type
 11337 ;;  OnOff           1    wreg     _Bool 
 11338 ;; Auto vars:     Size  Location     Type
 11339 ;;  OnOff           1    0[COMMON] _Bool 
 11340 ;; Return value:  Size  Location     Type
 11341 ;;                  1    wreg      void 
 11342 ;; Registers used:
 11343 ;;		wreg, status,2, status,0
 11344 ;; Tracked objects:
 11345 ;;		On entry : 0/1
 11346 ;;		On exit  : 1F/2
 11347 ;;		Unchanged: 0/0
 11348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11353 ;;Total ram usage:        1 bytes
 11354 ;; Hardware stack levels used:    1
 11355 ;; Hardware stack levels required when called:    5
 11356 ;; This function calls:
 11357 ;;		Nothing
 11358 ;; This function is called by:
 11359 ;;		_Init_Function
 11360 ;;		_StartTouchDetection
 11361 ;;		_StopTouchDetection
 11362 ;;		_StartHeater
 11363 ;; This function uses a non-reentrant model
 11364 ;;
 11365                           
 11366                           
 11367                           ;psect for function _StartStop_Buzzer
 11368  12B9                     _StartStop_Buzzer:
 11369                           
 11370                           ;incstack = 0
 11371                           ; Regs used in _StartStop_Buzzer: [wreg+status,2+status,0]
 11372                           ;StartStop_Buzzer@OnOff stored from wreg
 11373  12B9  00F0               	movwf	StartStop_Buzzer@OnOff
 11374                           
 11375                           ;main.c: 195:     if (1 == OnOff){
 11376  12BA  0370               	decf	StartStop_Buzzer@OnOff,w
 11377  12BB  1D03               	btfss	3,2
 11378  12BC  2AC0               	goto	l908
 11379                           
 11380                           ;main.c: 197:         do { LATCbits.LATC4 = 1; } while(0);
 11381  12BD  0022               	movlb	2	; select bank2
 11382  12BE  160E               	bsf	14,4	;volatile
 11383  12BF  0008               	return
 11384  12C0                     l908:	
 11385                           ;main.c: 201:         do { LATCbits.LATC4 = 0; } while(0);
 11386                           
 11387  12C0  0022               	movlb	2	; select bank2
 11388  12C1  120E               	bcf	14,4	;volatile
 11389  12C2  0008               	return
 11390  12C3                     __end_of_StartStop_Buzzer:
 11391                           
 11392                           	psect	text54
 11393  1307                     __ptext54:	
 11394 ;; *************** function _StartStop_AlarmLED_Blink *****************
 11395 ;; Defined at:
 11396 ;;		line 165 in file "main.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;  OnOff           1    wreg     _Bool 
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;  OnOff           1    0[COMMON] _Bool 
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  1    wreg      void 
 11403 ;; Registers used:
 11404 ;;		wreg, status,2, status,0, pclath, cstack
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/2
 11407 ;;		On exit  : 15/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;Total ram usage:        1 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:    6
 11417 ;; This function calls:
 11418 ;;		_TMR4_StartTimer
 11419 ;;		_TMR4_StopTimer
 11420 ;; This function is called by:
 11421 ;;		_Init_Function
 11422 ;;		_StartHeater
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           
 11427                           ;psect for function _StartStop_AlarmLED_Blink
 11428  1307                     _StartStop_AlarmLED_Blink:
 11429                           
 11430                           ;incstack = 0
 11431                           ; Regs used in _StartStop_AlarmLED_Blink: [wreg+status,2+status,0+pclath+cstack]
 11432                           ;StartStop_AlarmLED_Blink@OnOff stored from wreg
 11433  1307  00F0               	movwf	StartStop_AlarmLED_Blink@OnOff
 11434                           
 11435                           ;main.c: 167:     if (1 == OnOff){
 11436  1308  0370               	decf	StartStop_AlarmLED_Blink@OnOff,w
 11437  1309  1D03               	btfss	3,2
 11438  130A  2B0E               	goto	l4248
 11439                           
 11440                           ;main.c: 169:         TMR4_StartTimer();
 11441  130B  3192  2254         	fcall	_TMR4_StartTimer
 11442                           
 11443                           ;main.c: 170:     }
 11444  130D  0008               	return
 11445  130E                     l4248:
 11446                           
 11447                           ;main.c: 173:         TMR4_StopTimer();
 11448  130E  3192  2257         	fcall	_TMR4_StopTimer
 11449  1310  0022               	movlb	2	; select bank2
 11450  1311  110E               	bcf	14,2	;volatile
 11451  1312  0008               	return
 11452  1313                     __end_of_StartStop_AlarmLED_Blink:
 11453                           
 11454                           	psect	text55
 11455  1257                     __ptext55:	
 11456 ;; *************** function _TMR4_StopTimer *****************
 11457 ;; Defined at:
 11458 ;;		line 93 in file "mcc_generated_files/tmr4.c"
 11459 ;; Parameters:    Size  Location     Type
 11460 ;;		None
 11461 ;; Auto vars:     Size  Location     Type
 11462 ;;		None
 11463 ;; Return value:  Size  Location     Type
 11464 ;;                  1    wreg      void 
 11465 ;; Registers used:
 11466 ;;		None
 11467 ;; Tracked objects:
 11468 ;;		On entry : 0/2
 11469 ;;		On exit  : 1F/8
 11470 ;;		Unchanged: 0/0
 11471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11476 ;;Total ram usage:        0 bytes
 11477 ;; Hardware stack levels used:    1
 11478 ;; Hardware stack levels required when called:    5
 11479 ;; This function calls:
 11480 ;;		Nothing
 11481 ;; This function is called by:
 11482 ;;		_StartStop_AlarmLED_Blink
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486                           
 11487                           ;psect for function _TMR4_StopTimer
 11488  1257                     _TMR4_StopTimer:
 11489                           
 11490                           ;mcc_generated_files/tmr4.c: 96:     T4CONbits.TMR4ON = 0;
 11491                           
 11492                           ;incstack = 0
 11493                           ; Regs used in _TMR4_StopTimer: []
 11494  1257  0028               	movlb	8	; select bank8
 11495  1258  1117               	bcf	23,2	;volatile
 11496  1259  0008               	return
 11497  125A                     __end_of_TMR4_StopTimer:
 11498                           
 11499                           	psect	text56
 11500  1254                     __ptext56:	
 11501 ;; *************** function _TMR4_StartTimer *****************
 11502 ;; Defined at:
 11503 ;;		line 87 in file "mcc_generated_files/tmr4.c"
 11504 ;; Parameters:    Size  Location     Type
 11505 ;;		None
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;		None
 11508 ;; Return value:  Size  Location     Type
 11509 ;;                  1    wreg      void 
 11510 ;; Registers used:
 11511 ;;		None
 11512 ;; Tracked objects:
 11513 ;;		On entry : 0/2
 11514 ;;		On exit  : 1F/8
 11515 ;;		Unchanged: 0/0
 11516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11521 ;;Total ram usage:        0 bytes
 11522 ;; Hardware stack levels used:    1
 11523 ;; Hardware stack levels required when called:    5
 11524 ;; This function calls:
 11525 ;;		Nothing
 11526 ;; This function is called by:
 11527 ;;		_StartStop_AlarmLED_Blink
 11528 ;; This function uses a non-reentrant model
 11529 ;;
 11530                           
 11531                           
 11532                           ;psect for function _TMR4_StartTimer
 11533  1254                     _TMR4_StartTimer:
 11534                           
 11535                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
 11536                           
 11537                           ;incstack = 0
 11538                           ; Regs used in _TMR4_StartTimer: []
 11539  1254  0028               	movlb	8	; select bank8
 11540  1255  1517               	bsf	23,2	;volatile
 11541  1256  0008               	return
 11542  1257                     __end_of_TMR4_StartTimer:
 11543                           
 11544                           	psect	text57
 11545  12AF                     __ptext57:	
 11546 ;; *************** function _StartStop_AlarmLED *****************
 11547 ;; Defined at:
 11548 ;;		line 151 in file "main.c"
 11549 ;; Parameters:    Size  Location     Type
 11550 ;;  OnOff           1    wreg     _Bool 
 11551 ;; Auto vars:     Size  Location     Type
 11552 ;;  OnOff           1    0[COMMON] _Bool 
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  1    wreg      void 
 11555 ;; Registers used:
 11556 ;;		wreg, status,2, status,0
 11557 ;; Tracked objects:
 11558 ;;		On entry : 1C/1
 11559 ;;		On exit  : 1F/2
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11565 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11566 ;;Total ram usage:        1 bytes
 11567 ;; Hardware stack levels used:    1
 11568 ;; Hardware stack levels required when called:    5
 11569 ;; This function calls:
 11570 ;;		Nothing
 11571 ;; This function is called by:
 11572 ;;		_Init_Function
 11573 ;; This function uses a non-reentrant model
 11574 ;;
 11575                           
 11576                           
 11577                           ;psect for function _StartStop_AlarmLED
 11578  12AF                     _StartStop_AlarmLED:
 11579                           
 11580                           ;incstack = 0
 11581                           ; Regs used in _StartStop_AlarmLED: [wreg+status,2+status,0]
 11582                           ;StartStop_AlarmLED@OnOff stored from wreg
 11583  12AF  00F0               	movwf	StartStop_AlarmLED@OnOff
 11584                           
 11585                           ;main.c: 153:     if (1 == OnOff){
 11586  12B0  0370               	decf	StartStop_AlarmLED@OnOff,w
 11587  12B1  1D03               	btfss	3,2
 11588  12B2  2AB6               	goto	l883
 11589                           
 11590                           ;main.c: 155:         do { LATCbits.LATC2 = 1; } while(0);
 11591  12B3  0022               	movlb	2	; select bank2
 11592  12B4  150E               	bsf	14,2	;volatile
 11593  12B5  0008               	return
 11594  12B6                     l883:	
 11595                           ;main.c: 159:         do { LATCbits.LATC2 = 0; } while(0);
 11596                           
 11597  12B6  0022               	movlb	2	; select bank2
 11598  12B7  110E               	bcf	14,2	;volatile
 11599  12B8  0008               	return
 11600  12B9                     __end_of_StartStop_AlarmLED:
 11601                           
 11602                           	psect	text58
 11603  13F7                     __ptext58:	
 11604 ;; *************** function _SYSTEM_Initialize *****************
 11605 ;; Defined at:
 11606 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11607 ;; Parameters:    Size  Location     Type
 11608 ;;		None
 11609 ;; Auto vars:     Size  Location     Type
 11610 ;;		None
 11611 ;; Return value:  Size  Location     Type
 11612 ;;                  1    wreg      void 
 11613 ;; Registers used:
 11614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11615 ;; Tracked objects:
 11616 ;;		On entry : B1F/0
 11617 ;;		On exit  : 1F/1
 11618 ;;		Unchanged: 0/0
 11619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11624 ;;Total ram usage:        0 bytes
 11625 ;; Hardware stack levels used:    1
 11626 ;; Hardware stack levels required when called:   10
 11627 ;; This function calls:
 11628 ;;		_MTOUCH_Initialize
 11629 ;;		_OSCILLATOR_Initialize
 11630 ;;		_PIN_MANAGER_Initialize
 11631 ;;		_TMR2_Initialize
 11632 ;;		_TMR4_Initialize
 11633 ;;		_TMR6_Initialize
 11634 ;;		_WDT_Initialize
 11635 ;; This function is called by:
 11636 ;;		_main
 11637 ;; This function uses a non-reentrant model
 11638 ;;
 11639                           
 11640                           
 11641                           ;psect for function _SYSTEM_Initialize
 11642  13F7                     _SYSTEM_Initialize:
 11643                           
 11644                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11645                           
 11646                           ;incstack = 0
 11647                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11648  13F7  3196  26B0  3193   	fcall	_PIN_MANAGER_Initialize
 11649                           
 11650                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11651  13FA  3192  227B  3193   	fcall	_OSCILLATOR_Initialize
 11652                           
 11653                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
 11654  13FD  3192  225D  3193   	fcall	_WDT_Initialize
 11655                           
 11656                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
 11657  1400  3193  23BE  3193   	fcall	_TMR6_Initialize
 11658                           
 11659                           ;mcc_generated_files/mcc.c: 57:     TMR4_Initialize();
 11660  1403  3193  239C  3193   	fcall	_TMR4_Initialize
 11661                           
 11662                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 11663  1406  3193  2349  3193   	fcall	_TMR2_Initialize
 11664                           
 11665                           ;mcc_generated_files/mcc.c: 59:     MTOUCH_Initialize();
 11666  1409  3192  22FB         	fcall	_MTOUCH_Initialize
 11667  140B  0008               	return
 11668  140C                     __end_of_SYSTEM_Initialize:
 11669                           
 11670                           	psect	text59
 11671  125D                     __ptext59:	
 11672 ;; *************** function _WDT_Initialize *****************
 11673 ;; Defined at:
 11674 ;;		line 72 in file "mcc_generated_files/mcc.c"
 11675 ;; Parameters:    Size  Location     Type
 11676 ;;		None
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;		None
 11679 ;; Return value:  Size  Location     Type
 11680 ;;                  1    wreg      void 
 11681 ;; Registers used:
 11682 ;;		wreg
 11683 ;; Tracked objects:
 11684 ;;		On entry : 1F/2
 11685 ;;		On exit  : 1F/1
 11686 ;;		Unchanged: 0/0
 11687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;Total ram usage:        0 bytes
 11693 ;; Hardware stack levels used:    1
 11694 ;; Hardware stack levels required when called:    5
 11695 ;; This function calls:
 11696 ;;		Nothing
 11697 ;; This function is called by:
 11698 ;;		_SYSTEM_Initialize
 11699 ;; This function uses a non-reentrant model
 11700 ;;
 11701                           
 11702                           
 11703                           ;psect for function _WDT_Initialize
 11704  125D                     _WDT_Initialize:
 11705                           
 11706                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
 11707                           
 11708                           ;incstack = 0
 11709                           ; Regs used in _WDT_Initialize: [wreg]
 11710  125D  3016               	movlw	22
 11711  125E  0021               	movlb	1	; select bank1
 11712  125F  0097               	movwf	23	;volatile
 11713  1260  0008               	return
 11714  1261                     __end_of_WDT_Initialize:
 11715                           
 11716                           	psect	text60
 11717  13BE                     __ptext60:	
 11718 ;; *************** function _TMR6_Initialize *****************
 11719 ;; Defined at:
 11720 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 11721 ;; Parameters:    Size  Location     Type
 11722 ;;		None
 11723 ;; Auto vars:     Size  Location     Type
 11724 ;;		None
 11725 ;; Return value:  Size  Location     Type
 11726 ;;                  1    wreg      void 
 11727 ;; Registers used:
 11728 ;;		wreg, status,2, status,0, pclath, cstack
 11729 ;; Tracked objects:
 11730 ;;		On entry : 1F/1
 11731 ;;		On exit  : 1F/8
 11732 ;;		Unchanged: 0/0
 11733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11738 ;;Total ram usage:        0 bytes
 11739 ;; Hardware stack levels used:    1
 11740 ;; Hardware stack levels required when called:    6
 11741 ;; This function calls:
 11742 ;;		_TMR6_SetInterruptHandler
 11743 ;; This function is called by:
 11744 ;;		_SYSTEM_Initialize
 11745 ;; This function uses a non-reentrant model
 11746 ;;
 11747                           
 11748                           
 11749                           ;psect for function _TMR6_Initialize
 11750  13BE                     _TMR6_Initialize:
 11751                           
 11752                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0xC7;
 11753                           
 11754                           ;incstack = 0
 11755                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11756  13BE  30C7               	movlw	199
 11757  13BF  0028               	movlb	8	; select bank8
 11758  13C0  009D               	movwf	29	;volatile
 11759                           
 11760                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
 11761  13C1  019C               	clrf	28	;volatile
 11762                           
 11763                           ;mcc_generated_files/tmr6.c: 75:     PIR3bits.TMR6IF = 0;
 11764  13C2  0020               	movlb	0	; select bank0
 11765  13C3  1193               	bcf	19,3	;volatile
 11766                           
 11767                           ;mcc_generated_files/tmr6.c: 78:     PIE3bits.TMR6IE = 1;
 11768  13C4  0021               	movlb	1	; select bank1
 11769  13C5  1593               	bsf	19,3	;volatile
 11770                           
 11771                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 11772  13C6  3049               	movlw	low _TMR6_DefaultInterruptHandler
 11773  13C7  00F0               	movwf	TMR6_SetInterruptHandler@InterruptHandler
 11774  13C8  3012               	movlw	high _TMR6_DefaultInterruptHandler
 11775  13C9  00F1               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
 11776  13CA  3192  2270         	fcall	_TMR6_SetInterruptHandler
 11777                           
 11778                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x04;
 11779  13CC  3004               	movlw	4
 11780  13CD  0028               	movlb	8	; select bank8
 11781  13CE  009E               	movwf	30	;volatile
 11782  13CF  0008               	return
 11783  13D0                     __end_of_TMR6_Initialize:
 11784                           
 11785                           	psect	text61
 11786  1270                     __ptext61:	
 11787 ;; *************** function _TMR6_SetInterruptHandler *****************
 11788 ;; Defined at:
 11789 ;;		line 132 in file "mcc_generated_files/tmr6.c"
 11790 ;; Parameters:    Size  Location     Type
 11791 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 11792 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 11793 ;; Auto vars:     Size  Location     Type
 11794 ;;		None
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  1    wreg      void 
 11797 ;; Registers used:
 11798 ;;		wreg
 11799 ;; Tracked objects:
 11800 ;;		On entry : 1F/1
 11801 ;;		On exit  : 1F/1
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11808 ;;Total ram usage:        2 bytes
 11809 ;; Hardware stack levels used:    1
 11810 ;; Hardware stack levels required when called:    5
 11811 ;; This function calls:
 11812 ;;		Nothing
 11813 ;; This function is called by:
 11814 ;;		_TMR6_Initialize
 11815 ;; This function uses a non-reentrant model
 11816 ;;
 11817                           
 11818                           
 11819                           ;psect for function _TMR6_SetInterruptHandler
 11820  1270                     _TMR6_SetInterruptHandler:
 11821                           
 11822                           ;mcc_generated_files/tmr6.c: 133:     TMR6_InterruptHandler = InterruptHandler;
 11823                           
 11824                           ;incstack = 0
 11825                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
 11826  1270  0871               	movf	TMR6_SetInterruptHandler@InterruptHandler+1,w
 11827  1271  00CE               	movwf	(_TMR6_InterruptHandler+1)^(0+128)
 11828  1272  0870               	movf	TMR6_SetInterruptHandler@InterruptHandler,w
 11829  1273  00CD               	movwf	_TMR6_InterruptHandler^(0+128)
 11830  1274  0008               	return
 11831  1275                     __end_of_TMR6_SetInterruptHandler:
 11832                           
 11833                           	psect	text62
 11834  139C                     __ptext62:	
 11835 ;; *************** function _TMR4_Initialize *****************
 11836 ;; Defined at:
 11837 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 11838 ;; Parameters:    Size  Location     Type
 11839 ;;		None
 11840 ;; Auto vars:     Size  Location     Type
 11841 ;;		None
 11842 ;; Return value:  Size  Location     Type
 11843 ;;                  1    wreg      void 
 11844 ;; Registers used:
 11845 ;;		wreg, status,2, status,0, pclath, cstack
 11846 ;; Tracked objects:
 11847 ;;		On entry : 1F/8
 11848 ;;		On exit  : 1F/8
 11849 ;;		Unchanged: 0/0
 11850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11855 ;;Total ram usage:        0 bytes
 11856 ;; Hardware stack levels used:    1
 11857 ;; Hardware stack levels required when called:    6
 11858 ;; This function calls:
 11859 ;;		_TMR4_SetInterruptHandler
 11860 ;; This function is called by:
 11861 ;;		_SYSTEM_Initialize
 11862 ;; This function uses a non-reentrant model
 11863 ;;
 11864                           
 11865                           
 11866                           ;psect for function _TMR4_Initialize
 11867  139C                     _TMR4_Initialize:
 11868                           
 11869                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0x7C;
 11870                           
 11871                           ;incstack = 0
 11872                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11873  139C  307C               	movlw	124
 11874  139D  0096               	movwf	22	;volatile
 11875                           
 11876                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
 11877  139E  0195               	clrf	21	;volatile
 11878                           
 11879                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
 11880  139F  0020               	movlb	0	; select bank0
 11881  13A0  1093               	bcf	19,1	;volatile
 11882                           
 11883                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
 11884  13A1  0021               	movlb	1	; select bank1
 11885  13A2  1493               	bsf	19,1	;volatile
 11886                           
 11887                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 11888  13A3  3048               	movlw	low _TMR4_DefaultInterruptHandler
 11889  13A4  00F0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
 11890  13A5  3012               	movlw	high _TMR4_DefaultInterruptHandler
 11891  13A6  00F1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
 11892  13A7  3192  226B         	fcall	_TMR4_SetInterruptHandler
 11893                           
 11894                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x02;
 11895  13A9  3002               	movlw	2
 11896  13AA  0028               	movlb	8	; select bank8
 11897  13AB  0097               	movwf	23	;volatile
 11898  13AC  0008               	return
 11899  13AD                     __end_of_TMR4_Initialize:
 11900                           
 11901                           	psect	text63
 11902  126B                     __ptext63:	
 11903 ;; *************** function _TMR4_SetInterruptHandler *****************
 11904 ;; Defined at:
 11905 ;;		line 132 in file "mcc_generated_files/tmr4.c"
 11906 ;; Parameters:    Size  Location     Type
 11907 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 11908 ;;		 -> TMR4_Wroking_Blink_AlarmLED_isr(1), TMR4_DefaultInterruptHandler(1), 
 11909 ;; Auto vars:     Size  Location     Type
 11910 ;;		None
 11911 ;; Return value:  Size  Location     Type
 11912 ;;                  1    wreg      void 
 11913 ;; Registers used:
 11914 ;;		wreg
 11915 ;; Tracked objects:
 11916 ;;		On entry : 1F/1
 11917 ;;		On exit  : 1F/1
 11918 ;;		Unchanged: 0/0
 11919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11924 ;;Total ram usage:        2 bytes
 11925 ;; Hardware stack levels used:    1
 11926 ;; Hardware stack levels required when called:    5
 11927 ;; This function calls:
 11928 ;;		Nothing
 11929 ;; This function is called by:
 11930 ;;		_TMR4_Initialize
 11931 ;;		_main
 11932 ;; This function uses a non-reentrant model
 11933 ;;
 11934                           
 11935                           
 11936                           ;psect for function _TMR4_SetInterruptHandler
 11937  126B                     _TMR4_SetInterruptHandler:
 11938                           
 11939                           ;mcc_generated_files/tmr4.c: 133:     TMR4_InterruptHandler = InterruptHandler;
 11940                           
 11941                           ;incstack = 0
 11942                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
 11943  126B  0871               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
 11944  126C  00D0               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
 11945  126D  0870               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
 11946  126E  00CF               	movwf	_TMR4_InterruptHandler^(0+128)
 11947  126F  0008               	return
 11948  1270                     __end_of_TMR4_SetInterruptHandler:
 11949                           
 11950                           	psect	text64
 11951  1349                     __ptext64:	
 11952 ;; *************** function _TMR2_Initialize *****************
 11953 ;; Defined at:
 11954 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 11955 ;; Parameters:    Size  Location     Type
 11956 ;;		None
 11957 ;; Auto vars:     Size  Location     Type
 11958 ;;		None
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  1    wreg      void 
 11961 ;; Registers used:
 11962 ;;		wreg, status,2, status,0, pclath, cstack
 11963 ;; Tracked objects:
 11964 ;;		On entry : 1F/8
 11965 ;;		On exit  : 1F/0
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11972 ;;Total ram usage:        0 bytes
 11973 ;; Hardware stack levels used:    1
 11974 ;; Hardware stack levels required when called:    6
 11975 ;; This function calls:
 11976 ;;		_TMR2_SetInterruptHandler
 11977 ;; This function is called by:
 11978 ;;		_SYSTEM_Initialize
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           
 11983                           ;psect for function _TMR2_Initialize
 11984  1349                     _TMR2_Initialize:
 11985                           
 11986                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xC7;
 11987                           
 11988                           ;incstack = 0
 11989                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11990  1349  30C7               	movlw	199
 11991  134A  0020               	movlb	0	; select bank0
 11992  134B  009B               	movwf	27	;volatile
 11993                           
 11994                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
 11995  134C  019A               	clrf	26	;volatile
 11996                           
 11997                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
 11998  134D  1091               	bcf	17,1	;volatile
 11999                           
 12000                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
 12001  134E  0021               	movlb	1	; select bank1
 12002  134F  1491               	bsf	17,1	;volatile
 12003                           
 12004                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 12005  1350  3047               	movlw	low _TMR2_DefaultInterruptHandler
 12006  1351  00F0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 12007  1352  3012               	movlw	high _TMR2_DefaultInterruptHandler
 12008  1353  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 12009  1354  3192  2266         	fcall	_TMR2_SetInterruptHandler
 12010                           
 12011                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x00;
 12012  1356  0020               	movlb	0	; select bank0
 12013  1357  019C               	clrf	28	;volatile
 12014  1358  0008               	return
 12015  1359                     __end_of_TMR2_Initialize:
 12016                           
 12017                           	psect	text65
 12018  1266                     __ptext65:	
 12019 ;; *************** function _TMR2_SetInterruptHandler *****************
 12020 ;; Defined at:
 12021 ;;		line 132 in file "mcc_generated_files/tmr2.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 12024 ;;		 -> TMR2_Drive_TRIAC_isr(1), TMR2_DefaultInterruptHandler(1), 
 12025 ;; Auto vars:     Size  Location     Type
 12026 ;;		None
 12027 ;; Return value:  Size  Location     Type
 12028 ;;                  1    wreg      void 
 12029 ;; Registers used:
 12030 ;;		wreg
 12031 ;; Tracked objects:
 12032 ;;		On entry : 1F/1
 12033 ;;		On exit  : 1F/1
 12034 ;;		Unchanged: 0/0
 12035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;Total ram usage:        2 bytes
 12041 ;; Hardware stack levels used:    1
 12042 ;; Hardware stack levels required when called:    5
 12043 ;; This function calls:
 12044 ;;		Nothing
 12045 ;; This function is called by:
 12046 ;;		_TMR2_Initialize
 12047 ;;		_main
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           
 12052                           ;psect for function _TMR2_SetInterruptHandler
 12053  1266                     _TMR2_SetInterruptHandler:
 12054                           
 12055                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
 12056                           
 12057                           ;incstack = 0
 12058                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 12059  1266  0871               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 12060  1267  00D2               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 12061  1268  0870               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 12062  1269  00D1               	movwf	_TMR2_InterruptHandler^(0+128)
 12063  126A  0008               	return
 12064  126B                     __end_of_TMR2_SetInterruptHandler:
 12065                           
 12066                           	psect	text66
 12067  16B0                     __ptext66:	
 12068 ;; *************** function _PIN_MANAGER_Initialize *****************
 12069 ;; Defined at:
 12070 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;		None
 12073 ;; Auto vars:     Size  Location     Type
 12074 ;;		None
 12075 ;; Return value:  Size  Location     Type
 12076 ;;                  1    wreg      void 
 12077 ;; Registers used:
 12078 ;;		wreg, status,2, status,0, pclath, cstack
 12079 ;; Tracked objects:
 12080 ;;		On entry : B1F/0
 12081 ;;		On exit  : 1F/1
 12082 ;;		Unchanged: 0/0
 12083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12088 ;;Total ram usage:        0 bytes
 12089 ;; Hardware stack levels used:    1
 12090 ;; Hardware stack levels required when called:    6
 12091 ;; This function calls:
 12092 ;;		_IOCAF2_SetInterruptHandler
 12093 ;; This function is called by:
 12094 ;;		_SYSTEM_Initialize
 12095 ;; This function uses a non-reentrant model
 12096 ;;
 12097                           
 12098                           
 12099                           ;psect for function _PIN_MANAGER_Initialize
 12100  16B0                     _PIN_MANAGER_Initialize:
 12101                           
 12102                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 12103                           
 12104                           ;incstack = 0
 12105                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12106  16B0  0022               	movlb	2	; select bank2
 12107  16B1  018C               	clrf	12	;volatile
 12108                           
 12109                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 12110  16B2  018D               	clrf	13	;volatile
 12111                           
 12112                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 12113  16B3  018E               	clrf	14	;volatile
 12114                           
 12115                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x2F;
 12116  16B4  302F               	movlw	47
 12117  16B5  0021               	movlb	1	; select bank1
 12118  16B6  008C               	movwf	12	;volatile
 12119                           
 12120                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
 12121  16B7  3070               	movlw	112
 12122  16B8  008D               	movwf	13	;volatile
 12123                           
 12124                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x03;
 12125  16B9  3003               	movlw	3
 12126  16BA  008E               	movwf	14	;volatile
 12127                           
 12128                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x03;
 12129  16BB  3003               	movlw	3
 12130  16BC  0023               	movlb	3	; select bank3
 12131  16BD  008E               	movwf	14	;volatile
 12132                           
 12133                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x30;
 12134  16BE  3030               	movlw	48
 12135  16BF  008D               	movwf	13	;volatile
 12136                           
 12137                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x03;
 12138  16C0  3003               	movlw	3
 12139  16C1  008C               	movwf	12	;volatile
 12140                           
 12141                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 12142  16C2  0024               	movlb	4	; select bank4
 12143  16C3  018D               	clrf	13	;volatile
 12144                           
 12145                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x04;
 12146  16C4  3004               	movlw	4
 12147  16C5  008C               	movwf	12	;volatile
 12148                           
 12149                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
 12150  16C6  018E               	clrf	14	;volatile
 12151                           
 12152                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 0;
 12153  16C7  0021               	movlb	1	; select bank1
 12154  16C8  1395               	bcf	21,7	;volatile
 12155                           
 12156                           ;mcc_generated_files/pin_manager.c: 92:     APFCON0 = 0x00;
 12157  16C9  0022               	movlb	2	; select bank2
 12158  16CA  019D               	clrf	29	;volatile
 12159                           
 12160                           ;mcc_generated_files/pin_manager.c: 93:     APFCON1 = 0x00;
 12161  16CB  019E               	clrf	30	;volatile
 12162                           
 12163                           ;mcc_generated_files/pin_manager.c: 99:     IOCAFbits.IOCAF2 = 0;
 12164  16CC  0027               	movlb	7	; select bank7
 12165  16CD  1113               	bcf	19,2	;volatile
 12166                           
 12167                           ;mcc_generated_files/pin_manager.c: 101:     IOCANbits.IOCAN2 = 0;
 12168  16CE  1112               	bcf	18,2	;volatile
 12169                           
 12170                           ;mcc_generated_files/pin_manager.c: 103:     IOCAPbits.IOCAP2 = 1;
 12171  16CF  1511               	bsf	17,2	;volatile
 12172                           
 12173                           ;mcc_generated_files/pin_manager.c: 108:     IOCAF2_SetInterruptHandler(IOCAF2_DefaultIn
      +                          terruptHandler);
 12174  16D0  3046               	movlw	low _IOCAF2_DefaultInterruptHandler
 12175  16D1  00F0               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
 12176  16D2  3012               	movlw	high _IOCAF2_DefaultInterruptHandler
 12177  16D3  00F1               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
 12178  16D4  3192  2281         	fcall	_IOCAF2_SetInterruptHandler
 12179                           
 12180                           ;mcc_generated_files/pin_manager.c: 111:     INTCONbits.IOCIE = 1;
 12181  16D6  158B               	bsf	11,3	;volatile
 12182  16D7  0008               	return
 12183  16D8                     __end_of_PIN_MANAGER_Initialize:
 12184                           
 12185                           	psect	text67
 12186  1281                     __ptext67:	
 12187 ;; *************** function _IOCAF2_SetInterruptHandler *****************
 12188 ;; Defined at:
 12189 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 12190 ;; Parameters:    Size  Location     Type
 12191 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 12192 ;;		 -> Zero_Detection_isr(1), IOCAF2_DefaultInterruptHandler(1), 
 12193 ;; Auto vars:     Size  Location     Type
 12194 ;;		None
 12195 ;; Return value:  Size  Location     Type
 12196 ;;                  1    wreg      void 
 12197 ;; Registers used:
 12198 ;;		wreg
 12199 ;; Tracked objects:
 12200 ;;		On entry : 1A/2
 12201 ;;		On exit  : 1F/1
 12202 ;;		Unchanged: 0/0
 12203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12208 ;;Total ram usage:        2 bytes
 12209 ;; Hardware stack levels used:    1
 12210 ;; Hardware stack levels required when called:    5
 12211 ;; This function calls:
 12212 ;;		Nothing
 12213 ;; This function is called by:
 12214 ;;		_PIN_MANAGER_Initialize
 12215 ;;		_main
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           
 12220                           ;psect for function _IOCAF2_SetInterruptHandler
 12221  1281                     _IOCAF2_SetInterruptHandler:
 12222                           
 12223                           ;mcc_generated_files/pin_manager.c: 143:     IOCAF2_InterruptHandler = InterruptHandler;
 12224                           
 12225                           ;incstack = 0
 12226                           ; Regs used in _IOCAF2_SetInterruptHandler: [wreg]
 12227  1281  0871               	movf	IOCAF2_SetInterruptHandler@InterruptHandler+1,w
 12228  1282  0021               	movlb	1	; select bank1
 12229  1283  00D4               	movwf	(_IOCAF2_InterruptHandler+1)^(0+128)
 12230  1284  0870               	movf	IOCAF2_SetInterruptHandler@InterruptHandler,w
 12231  1285  00D3               	movwf	_IOCAF2_InterruptHandler^(0+128)
 12232  1286  0008               	return
 12233  1287                     __end_of_IOCAF2_SetInterruptHandler:
 12234                           
 12235                           	psect	text68
 12236  127B                     __ptext68:	
 12237 ;; *************** function _OSCILLATOR_Initialize *****************
 12238 ;; Defined at:
 12239 ;;		line 62 in file "mcc_generated_files/mcc.c"
 12240 ;; Parameters:    Size  Location     Type
 12241 ;;		None
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;		None
 12244 ;; Return value:  Size  Location     Type
 12245 ;;                  1    wreg      void 
 12246 ;; Registers used:
 12247 ;;		wreg, status,2
 12248 ;; Tracked objects:
 12249 ;;		On entry : 1F/1
 12250 ;;		On exit  : 1F/2
 12251 ;;		Unchanged: 0/0
 12252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12257 ;;Total ram usage:        0 bytes
 12258 ;; Hardware stack levels used:    1
 12259 ;; Hardware stack levels required when called:    5
 12260 ;; This function calls:
 12261 ;;		Nothing
 12262 ;; This function is called by:
 12263 ;;		_SYSTEM_Initialize
 12264 ;; This function uses a non-reentrant model
 12265 ;;
 12266                           
 12267                           
 12268                           ;psect for function _OSCILLATOR_Initialize
 12269  127B                     _OSCILLATOR_Initialize:
 12270                           
 12271                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
 12272                           
 12273                           ;incstack = 0
 12274                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12275  127B  3070               	movlw	112
 12276  127C  0099               	movwf	25	;volatile
 12277                           
 12278                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
 12279  127D  0198               	clrf	24	;volatile
 12280                           
 12281                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
 12282  127E  0022               	movlb	2	; select bank2
 12283  127F  0196               	clrf	22	;volatile
 12284  1280  0008               	return
 12285  1281                     __end_of_OSCILLATOR_Initialize:
 12286                           
 12287                           	psect	text69
 12288  12FB                     __ptext69:	
 12289 ;; *************** function _MTOUCH_Initialize *****************
 12290 ;; Defined at:
 12291 ;;		line 81 in file "mcc_generated_files/mtouch/mtouch.c"
 12292 ;; Parameters:    Size  Location     Type
 12293 ;;		None
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;		None
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  1    wreg      void 
 12298 ;; Registers used:
 12299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12300 ;; Tracked objects:
 12301 ;;		On entry : 1E/1
 12302 ;;		On exit  : 1F/1
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12309 ;;Total ram usage:        0 bytes
 12310 ;; Hardware stack levels used:    1
 12311 ;; Hardware stack levels required when called:    9
 12312 ;; This function calls:
 12313 ;;		_MTOUCH_Button_InitializeAll
 12314 ;;		_MTOUCH_Sensor_InitializeAll
 12315 ;;		_MTOUCH_Sensor_Sampled_ResetAll
 12316 ;;		_MTOUCH_Sensor_Scan_Initialize
 12317 ;; This function is called by:
 12318 ;;		_MTOUCH_Service_Mainloop
 12319 ;;		_SYSTEM_Initialize
 12320 ;; This function uses a non-reentrant model
 12321 ;;
 12322                           
 12323                           
 12324                           ;psect for function _MTOUCH_Initialize
 12325  12FB                     _MTOUCH_Initialize:
 12326                           
 12327                           ;mcc_generated_files/mtouch/mtouch.c: 83:     MTOUCH_Sensor_InitializeAll();
 12328                           
 12329                           ;incstack = 0
 12330                           ; Regs used in _MTOUCH_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12331  12FB  3188  2000  3192   	fcall	_MTOUCH_Sensor_InitializeAll
 12332                           
 12333                           ;mcc_generated_files/mtouch/mtouch.c: 84:     MTOUCH_Button_InitializeAll();
 12334  12FE  3194  24C2  3192   	fcall	_MTOUCH_Button_InitializeAll
 12335                           
 12336                           ;mcc_generated_files/mtouch/mtouch.c: 85:     MTOUCH_Sensor_Sampled_ResetAll();
 12337  1301  3193  23D0  3192   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
 12338                           
 12339                           ;mcc_generated_files/mtouch/mtouch.c: 86:     MTOUCH_Sensor_Scan_Initialize();
 12340  1304  3192  2261         	fcall	_MTOUCH_Sensor_Scan_Initialize
 12341  1306  0008               	return
 12342  1307                     __end_of_MTOUCH_Initialize:
 12343                           
 12344                           	psect	text70
 12345  1261                     __ptext70:	
 12346 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
 12347 ;; Defined at:
 12348 ;;		line 172 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;		None
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;		None
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  1    wreg      void 
 12355 ;; Registers used:
 12356 ;;		wreg, status,2
 12357 ;; Tracked objects:
 12358 ;;		On entry : 0/1
 12359 ;;		On exit  : 1F/1
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12366 ;;Total ram usage:        0 bytes
 12367 ;; Hardware stack levels used:    1
 12368 ;; Hardware stack levels required when called:    5
 12369 ;; This function calls:
 12370 ;;		Nothing
 12371 ;; This function is called by:
 12372 ;;		_Sensor_Acq_ExecutePacket
 12373 ;;		_MTOUCH_Initialize
 12374 ;; This function uses a non-reentrant model
 12375 ;;
 12376                           
 12377                           
 12378                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
 12379  1261                     _MTOUCH_Sensor_Scan_Initialize:
 12380                           
 12381                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 175:     ADCON0 = (uint8_t)0;
 12382                           
 12383                           ;incstack = 0
 12384                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2]
 12385  1261  0021               	movlb	1	; select bank1
 12386  1262  019D               	clrf	29	;volatile
 12387                           
 12388                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 176:     ADCON1 = (uint8_t)( 0x1<<7 | 0x1<<
      +                          4 | 0x0 );
 12389  1263  3090               	movlw	144
 12390  1264  009E               	movwf	30	;volatile
 12391  1265  0008               	return
 12392  1266                     __end_of_MTOUCH_Sensor_Scan_Initialize:
 12393                           
 12394                           	psect	text71
 12395  13D0                     __ptext71:	
 12396 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
 12397 ;; Defined at:
 12398 ;;		line 547 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12399 ;; Parameters:    Size  Location     Type
 12400 ;;		None
 12401 ;; Auto vars:     Size  Location     Type
 12402 ;;  sensor          1    2[COMMON] PTR struct .
 12403 ;;		 -> mtouch_sensor(18), 
 12404 ;; Return value:  Size  Location     Type
 12405 ;;                  1    wreg      void 
 12406 ;; Registers used:
 12407 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12408 ;; Tracked objects:
 12409 ;;		On entry : 0/1
 12410 ;;		On exit  : 0/0
 12411 ;;		Unchanged: 0/0
 12412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12417 ;;Total ram usage:        2 bytes
 12418 ;; Hardware stack levels used:    1
 12419 ;; Hardware stack levels required when called:    6
 12420 ;; This function calls:
 12421 ;;		_Sensor_Sampled_Reset
 12422 ;; This function is called by:
 12423 ;;		_MTOUCH_Initialize
 12424 ;;		_MTOUCH_Service_Mainloop
 12425 ;; This function uses a non-reentrant model
 12426 ;;
 12427                           
 12428                           
 12429                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
 12430  13D0                     _MTOUCH_Sensor_Sampled_ResetAll:
 12431                           
 12432                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 549:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 550:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[(2u)-1];sensor++)
 12433                           
 12434                           ;incstack = 0
 12435                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 12436  13D0  30B0               	movlw	(low (_mtouch_sensor| 0))& (0+255)
 12437  13D1  00F1               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
 12438  13D2  0871               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
 12439  13D3  00F2               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
 12440  13D4                     L5:
 12441  13D4  30B9               	movlw	(low ((_mtouch_sensor| 0+9)))& (0+255)
 12442  13D5  00F1               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
 12443  13D6  0872               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 12444  13D7  0271               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
 12445  13D8  1C03               	btfss	3,0
 12446  13D9  0008               	return
 12447                           
 12448                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 551:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 552:         Sensor_Sampled_Reset(sensor);
 12449  13DA  0872               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 12450  13DB  3192  229A  3193   	fcall	_Sensor_Sampled_Reset
 12451                           
 12452                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 553:     }
 12453  13DE  3009               	movlw	9
 12454  13DF  00F1               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
 12455  13E0  0871               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
 12456  13E1  07F2               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
 12457  13E2  2BD4               	goto	L5
 12458  13E3                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:
 12459                           
 12460                           	psect	text72
 12461  0800                     __ptext72:	
 12462 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
 12463 ;; Defined at:
 12464 ;;		line 157 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12465 ;; Parameters:    Size  Location     Type
 12466 ;;		None
 12467 ;; Auto vars:     Size  Location     Type
 12468 ;;  sensor          1    9[COMMON] enum E2661
 12469 ;; Return value:  Size  Location     Type
 12470 ;;                  1    wreg      void 
 12471 ;; Registers used:
 12472 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12473 ;; Tracked objects:
 12474 ;;		On entry : 1E/1
 12475 ;;		On exit  : 0/0
 12476 ;;		Unchanged: 0/0
 12477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12480 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12481 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12482 ;;Total ram usage:        2 bytes
 12483 ;; Hardware stack levels used:    1
 12484 ;; Hardware stack levels required when called:    8
 12485 ;; This function calls:
 12486 ;;		_MTOUCH_Sensor_Initialize
 12487 ;; This function is called by:
 12488 ;;		_MTOUCH_Initialize
 12489 ;; This function uses a non-reentrant model
 12490 ;;
 12491                           
 12492                           
 12493                           ;psect for function _MTOUCH_Sensor_InitializeAll
 12494  0800                     _MTOUCH_Sensor_InitializeAll:
 12495                           
 12496                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 159:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 160:     for (sensor = 0; sensor < (2u); sens
      +                          or++)
 12497                           
 12498                           ;incstack = 0
 12499                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12500  0800  01F9               	clrf	MTOUCH_Sensor_InitializeAll@sensor
 12501  0801                     l4102:
 12502                           
 12503                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 161:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 162:         MTOUCH_Sensor_Initialize(sensor);
 12504  0801  0879               	movf	MTOUCH_Sensor_InitializeAll@sensor,w
 12505  0802  3193  238B  3188   	fcall	_MTOUCH_Sensor_Initialize
 12506                           
 12507                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 163:     }
 12508  0805  3001               	movlw	1
 12509  0806  00F8               	movwf	??_MTOUCH_Sensor_InitializeAll
 12510  0807  0878               	movf	??_MTOUCH_Sensor_InitializeAll,w
 12511  0808  07F9               	addwf	MTOUCH_Sensor_InitializeAll@sensor,f
 12512  0809  3002               	movlw	2
 12513  080A  0279               	subwf	MTOUCH_Sensor_InitializeAll@sensor,w
 12514  080B  1803               	btfsc	3,0
 12515  080C  0008               	return
 12516  080D  2801               	goto	l4102
 12517  080E                     __end_of_MTOUCH_Sensor_InitializeAll:
 12518                           
 12519                           	psect	text73
 12520  138B                     __ptext73:	
 12521 ;; *************** function _MTOUCH_Sensor_Initialize *****************
 12522 ;; Defined at:
 12523 ;;		line 143 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12524 ;; Parameters:    Size  Location     Type
 12525 ;;  sensor          1    wreg     enum E2661
 12526 ;; Auto vars:     Size  Location     Type
 12527 ;;  sensor          1    7[COMMON] enum E2661
 12528 ;; Return value:  Size  Location     Type
 12529 ;;                  1    wreg      enum E2664
 12530 ;; Registers used:
 12531 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12532 ;; Tracked objects:
 12533 ;;		On entry : 0/1
 12534 ;;		On exit  : 0/0
 12535 ;;		Unchanged: 0/0
 12536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12541 ;;Total ram usage:        2 bytes
 12542 ;; Hardware stack levels used:    1
 12543 ;; Hardware stack levels required when called:    7
 12544 ;; This function calls:
 12545 ;;		_MTOUCH_Sensor_Enable
 12546 ;;		_Sensor_Sampled_Reset
 12547 ;;		___bmul
 12548 ;; This function is called by:
 12549 ;;		_MTOUCH_Sensor_InitializeAll
 12550 ;; This function uses a non-reentrant model
 12551 ;;
 12552                           
 12553                           
 12554                           ;psect for function _MTOUCH_Sensor_Initialize
 12555  138B                     _MTOUCH_Sensor_Initialize:
 12556                           
 12557                           ;incstack = 0
 12558                           ; Regs used in _MTOUCH_Sensor_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 12559                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
 12560  138B  00F7               	movwf	MTOUCH_Sensor_Initialize@sensor
 12561                           
 12562                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 143: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           144: {;mcc_generated_files/mtouch/mtouch_sensor.c: 145:     MTOUCH_Sensor_Enable(sensor
      +                          );
 12563  138C  0877               	movf	MTOUCH_Sensor_Initialize@sensor,w
 12564  138D  3193  237A  3193   	fcall	_MTOUCH_Sensor_Enable
 12565                           
 12566                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 146:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
 12567  1390  3009               	movlw	9
 12568  1391  00F6               	movwf	??_MTOUCH_Sensor_Initialize
 12569  1392  0876               	movf	??_MTOUCH_Sensor_Initialize,w
 12570  1393  00F0               	movwf	___bmul@multiplicand
 12571  1394  0877               	movf	MTOUCH_Sensor_Initialize@sensor,w
 12572  1395  3193  2369  3193   	fcall	___bmul
 12573  1398  3EB0               	addlw	(low (_mtouch_sensor| 0))& (0+255)
 12574  1399  3192  229A         	fcall	_Sensor_Sampled_Reset
 12575  139B  0008               	return
 12576  139C                     __end_of_MTOUCH_Sensor_Initialize:
 12577                           
 12578                           	psect	text74
 12579  129A                     __ptext74:	
 12580 ;; *************** function _Sensor_Sampled_Reset *****************
 12581 ;; Defined at:
 12582 ;;		line 564 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12583 ;; Parameters:    Size  Location     Type
 12584 ;;  sensor          1    wreg     PTR struct .
 12585 ;;		 -> mtouch_sensor(18), 
 12586 ;; Auto vars:     Size  Location     Type
 12587 ;;  sensor          1    0[COMMON] PTR struct .
 12588 ;;		 -> mtouch_sensor(18), 
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  1    wreg      void 
 12591 ;; Registers used:
 12592 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12593 ;; Tracked objects:
 12594 ;;		On entry : 0/1
 12595 ;;		On exit  : 0/0
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12602 ;;Total ram usage:        1 bytes
 12603 ;; Hardware stack levels used:    1
 12604 ;; Hardware stack levels required when called:    5
 12605 ;; This function calls:
 12606 ;;		Nothing
 12607 ;; This function is called by:
 12608 ;;		_MTOUCH_Sensor_Initialize
 12609 ;;		_MTOUCH_Sensor_Sampled_ResetAll
 12610 ;; This function uses a non-reentrant model
 12611 ;;
 12612                           
 12613                           
 12614                           ;psect for function _Sensor_Sampled_Reset
 12615  129A                     _Sensor_Sampled_Reset:
 12616                           
 12617                           ;incstack = 0
 12618                           ; Regs used in _Sensor_Sampled_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
 12619                           ;Sensor_Sampled_Reset@sensor stored from wreg
 12620  129A  00F0               	movwf	Sensor_Sampled_Reset@sensor
 12621                           
 12622                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 564: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          565: {;mcc_generated_files/mtouch/mtouch_sensor.c: 566:     sensor->sampled = 0;
 12623  129B  0870               	movf	Sensor_Sampled_Reset@sensor,w
 12624  129C  3E08               	addlw	8
 12625  129D  0086               	movwf	6
 12626  129E  0187               	clrf	7
 12627  129F  1081               	bcf	1,1
 12628  12A0  0008               	return
 12629  12A1                     __end_of_Sensor_Sampled_Reset:
 12630                           
 12631                           	psect	text75
 12632  137A                     __ptext75:	
 12633 ;; *************** function _MTOUCH_Sensor_Enable *****************
 12634 ;; Defined at:
 12635 ;;		line 481 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12636 ;; Parameters:    Size  Location     Type
 12637 ;;  sensor          1    wreg     enum E2661
 12638 ;; Auto vars:     Size  Location     Type
 12639 ;;  sensor          1    5[COMMON] enum E2661
 12640 ;; Return value:  Size  Location     Type
 12641 ;;                  1    wreg      void 
 12642 ;; Registers used:
 12643 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12644 ;; Tracked objects:
 12645 ;;		On entry : 0/1
 12646 ;;		On exit  : 0/0
 12647 ;;		Unchanged: 0/0
 12648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12652 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12653 ;;Total ram usage:        2 bytes
 12654 ;; Hardware stack levels used:    1
 12655 ;; Hardware stack levels required when called:    6
 12656 ;; This function calls:
 12657 ;;		___bmul
 12658 ;; This function is called by:
 12659 ;;		_MTOUCH_Sensor_Initialize
 12660 ;; This function uses a non-reentrant model
 12661 ;;
 12662                           
 12663                           
 12664                           ;psect for function _MTOUCH_Sensor_Enable
 12665  137A                     _MTOUCH_Sensor_Enable:
 12666                           
 12667                           ;incstack = 0
 12668                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12669                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
 12670  137A  00F5               	movwf	MTOUCH_Sensor_Enable@sensor
 12671                           
 12672                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 481: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 482: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 483:     if(sensor < (2u))
 12673  137B  3002               	movlw	2
 12674  137C  0275               	subwf	MTOUCH_Sensor_Enable@sensor,w
 12675  137D  1803               	skipnc
 12676  137E  0008               	return
 12677                           
 12678                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 484:         mtouch_sensor[sensor].enabled 
      +                          = 1;
 12679  137F  3009               	movlw	9
 12680  1380  00F4               	movwf	??_MTOUCH_Sensor_Enable
 12681  1381  0874               	movf	??_MTOUCH_Sensor_Enable,w
 12682  1382  00F0               	movwf	___bmul@multiplicand
 12683  1383  0875               	movf	MTOUCH_Sensor_Enable@sensor,w
 12684  1384  3193  2369         	fcall	___bmul
 12685  1386  3EB8               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
 12686  1387  0086               	movwf	6
 12687  1388  0187               	clrf	7
 12688  1389  1401               	bsf	1,0
 12689  138A  0008               	return
 12690  138B                     __end_of_MTOUCH_Sensor_Enable:
 12691                           
 12692                           	psect	text76
 12693  1369                     __ptext76:	
 12694 ;; *************** function ___bmul *****************
 12695 ;; Defined at:
 12696 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul8.c"
 12697 ;; Parameters:    Size  Location     Type
 12698 ;;  multiplier      1    wreg     unsigned char 
 12699 ;;  multiplicand    1    0[COMMON] unsigned char 
 12700 ;; Auto vars:     Size  Location     Type
 12701 ;;  multiplier      1    3[COMMON] unsigned char 
 12702 ;;  product         1    2[COMMON] unsigned char 
 12703 ;; Return value:  Size  Location     Type
 12704 ;;                  1    wreg      unsigned char 
 12705 ;; Registers used:
 12706 ;;		wreg, status,2, status,0
 12707 ;; Tracked objects:
 12708 ;;		On entry : 0/0
 12709 ;;		On exit  : 0/0
 12710 ;;		Unchanged: 0/0
 12711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12712 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12713 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12714 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12715 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12716 ;;Total ram usage:        4 bytes
 12717 ;; Hardware stack levels used:    1
 12718 ;; Hardware stack levels required when called:    5
 12719 ;; This function calls:
 12720 ;;		Nothing
 12721 ;; This function is called by:
 12722 ;;		_MTOUCH_Sensor_Initialize
 12723 ;;		_Sensor_Service
 12724 ;;		_Sensor_Acq_ExecuteScan
 12725 ;;		_MTOUCH_Sensor_RawSample_Get
 12726 ;;		_MTOUCH_Sensor_Enable
 12727 ;;		_MTOUCH_Sensor_wasSampled
 12728 ;; This function uses a non-reentrant model
 12729 ;;
 12730                           
 12731                           
 12732                           ;psect for function ___bmul
 12733  1369                     ___bmul:
 12734                           
 12735                           ;incstack = 0
 12736                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12737                           ;___bmul@multiplier stored from wreg
 12738  1369  00F3               	movwf	___bmul@multiplier
 12739  136A  01F2               	clrf	___bmul@product
 12740  136B                     l3240:
 12741  136B  1C73               	btfss	___bmul@multiplier,0
 12742  136C  2B71               	goto	l3244
 12743  136D  0870               	movf	___bmul@multiplicand,w
 12744  136E  00F1               	movwf	??___bmul
 12745  136F  0871               	movf	??___bmul,w
 12746  1370  07F2               	addwf	___bmul@product,f
 12747  1371                     l3244:
 12748  1371  1003               	clrc
 12749  1372  0DF0               	rlf	___bmul@multiplicand,f
 12750  1373  1003               	clrc
 12751  1374  0CF3               	rrf	___bmul@multiplier,f
 12752  1375  0873               	movf	___bmul@multiplier,w
 12753  1376  1D03               	btfss	3,2
 12754  1377  2B6B               	goto	l3240
 12755  1378  0872               	movf	___bmul@product,w
 12756  1379  0008               	return
 12757  137A                     __end_of___bmul:
 12758                           
 12759                           	psect	text77
 12760  14C2                     __ptext77:	
 12761 ;; *************** function _MTOUCH_Button_InitializeAll *****************
 12762 ;; Defined at:
 12763 ;;		line 163 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12764 ;; Parameters:    Size  Location     Type
 12765 ;;		None
 12766 ;; Auto vars:     Size  Location     Type
 12767 ;;  button          1   11[COMMON] enum E2819
 12768 ;; Return value:  Size  Location     Type
 12769 ;;                  1    wreg      void 
 12770 ;; Registers used:
 12771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12772 ;; Tracked objects:
 12773 ;;		On entry : 0/1
 12774 ;;		On exit  : 0/0
 12775 ;;		Unchanged: 0/0
 12776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12781 ;;Total ram usage:        2 bytes
 12782 ;; Hardware stack levels used:    1
 12783 ;; Hardware stack levels required when called:    7
 12784 ;; This function calls:
 12785 ;;		_MTOUCH_Button_Initialize
 12786 ;;		_memcpy
 12787 ;; This function is called by:
 12788 ;;		_MTOUCH_Initialize
 12789 ;; This function uses a non-reentrant model
 12790 ;;
 12791                           
 12792                           
 12793                           ;psect for function _MTOUCH_Button_InitializeAll
 12794  14C2                     _MTOUCH_Button_InitializeAll:
 12795                           
 12796                           ;mcc_generated_files/mtouch/mtouch_button.c: 165:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 167:     memcpy(mtouch_button,mtouch_button_i
      +                          nit,sizeof(mtouch_button_init));
 12797                           
 12798                           ;incstack = 0
 12799                           ; Regs used in _MTOUCH_Button_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12800  14C2  3000               	movlw	low (_mtouch_button_init| (0+32768))
 12801  14C3  00F0               	movwf	memcpy@s1
 12802  14C4  3098               	movlw	high (_mtouch_button_init| (0+32768))
 12803  14C5  00F1               	movwf	memcpy@s1+1
 12804  14C6  3020               	movlw	32
 12805  14C7  00F2               	movwf	memcpy@n
 12806  14C8  3000               	movlw	0
 12807  14C9  00F3               	movwf	memcpy@n+1
 12808  14CA  3020               	movlw	(low (_mtouch_button| (0+256)))& (0+255)
 12809  14CB  3196  26D8  3194   	fcall	_memcpy
 12810                           
 12811                           ;mcc_generated_files/mtouch/mtouch_button.c: 169:     for (button = 0; button < 2u; butt
      +                          on++)
 12812  14CE  01FB               	clrf	MTOUCH_Button_InitializeAll@button
 12813  14CF                     l4152:
 12814                           
 12815                           ;mcc_generated_files/mtouch/mtouch_button.c: 170:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 171:         MTOUCH_Button_Initialize(button);
 12816  14CF  087B               	movf	MTOUCH_Button_InitializeAll@button,w
 12817  14D0  3197  2730  3194   	fcall	_MTOUCH_Button_Initialize
 12818                           
 12819                           ;mcc_generated_files/mtouch/mtouch_button.c: 172:     }
 12820  14D3  3001               	movlw	1
 12821  14D4  00FA               	movwf	??_MTOUCH_Button_InitializeAll
 12822  14D5  087A               	movf	??_MTOUCH_Button_InitializeAll,w
 12823  14D6  07FB               	addwf	MTOUCH_Button_InitializeAll@button,f
 12824  14D7  3002               	movlw	2
 12825  14D8  027B               	subwf	MTOUCH_Button_InitializeAll@button,w
 12826  14D9  1803               	btfsc	3,0
 12827  14DA  0008               	return
 12828  14DB  2CCF               	goto	l4152
 12829  14DC                     __end_of_MTOUCH_Button_InitializeAll:
 12830                           
 12831                           	psect	text78
 12832  16D8                     __ptext78:	
 12833 ;; *************** function _memcpy *****************
 12834 ;; Defined at:
 12835 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/memcpy.c"
 12836 ;; Parameters:    Size  Location     Type
 12837 ;;  d1              1    wreg     PTR void 
 12838 ;;		 -> mtouch_button(32), 
 12839 ;;  s1              2    0[COMMON] PTR const void 
 12840 ;;		 -> mtouch_button_init(32), 
 12841 ;;  n               2    2[COMMON] unsigned int 
 12842 ;; Auto vars:     Size  Location     Type
 12843 ;;  d1              1    8[COMMON] PTR void 
 12844 ;;		 -> mtouch_button(32), 
 12845 ;;  s               2    5[COMMON] PTR const unsigned char 
 12846 ;;		 -> mtouch_button_init(32), 
 12847 ;;  d               1    9[COMMON] PTR unsigned char 
 12848 ;;		 -> mtouch_button(32), 
 12849 ;;  tmp             1    7[COMMON] unsigned char 
 12850 ;; Return value:  Size  Location     Type
 12851 ;;                  1    wreg      PTR void 
 12852 ;; Registers used:
 12853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 12854 ;; Tracked objects:
 12855 ;;		On entry : 0/1
 12856 ;;		On exit  : 0/0
 12857 ;;		Unchanged: 0/0
 12858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12860 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12862 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12863 ;;Total ram usage:       10 bytes
 12864 ;; Hardware stack levels used:    1
 12865 ;; Hardware stack levels required when called:    5
 12866 ;; This function calls:
 12867 ;;		Nothing
 12868 ;; This function is called by:
 12869 ;;		_MTOUCH_Button_InitializeAll
 12870 ;; This function uses a non-reentrant model
 12871 ;;
 12872                           
 12873                           
 12874                           ;psect for function _memcpy
 12875  16D8                     _memcpy:
 12876                           
 12877                           ;incstack = 0
 12878                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
 12879                           ;memcpy@d1 stored from wreg
 12880  16D8  00F8               	movwf	memcpy@d1
 12881  16D9  0871               	movf	memcpy@s1+1,w
 12882  16DA  00F6               	movwf	memcpy@s+1
 12883  16DB  0870               	movf	memcpy@s1,w
 12884  16DC  00F5               	movwf	memcpy@s
 12885  16DD  0878               	movf	memcpy@d1,w
 12886  16DE  00F4               	movwf	??_memcpy
 12887  16DF  0874               	movf	??_memcpy,w
 12888  16E0  00F9               	movwf	memcpy@d
 12889  16E1                     l3702:
 12890  16E1  3001               	movlw	1
 12891  16E2  02F2               	subwf	memcpy@n,f
 12892  16E3  3000               	movlw	0
 12893  16E4  3BF3               	subwfb	memcpy@n+1,f
 12894  16E5  0A72               	incf	memcpy@n,w
 12895  16E6  1903               	btfsc	3,2
 12896  16E7  0A73               	incf	memcpy@n+1,w
 12897  16E8  1903               	btfsc	3,2
 12898  16E9  0008               	return
 12899  16EA  0875               	movf	memcpy@s,w
 12900  16EB  0084               	movwf	4
 12901  16EC  0876               	movf	memcpy@s+1,w
 12902  16ED  0085               	movwf	5
 12903  16EE  0800               	movf	0,w	;code access
 12904  16EF  00F4               	movwf	??_memcpy
 12905  16F0  0874               	movf	??_memcpy,w
 12906  16F1  00F7               	movwf	memcpy@tmp
 12907  16F2  3001               	movlw	1
 12908  16F3  07F5               	addwf	memcpy@s,f
 12909  16F4  3000               	movlw	0
 12910  16F5  3DF6               	addwfc	memcpy@s+1,f
 12911  16F6  0877               	movf	memcpy@tmp,w
 12912  16F7  00F4               	movwf	??_memcpy
 12913  16F8  0879               	movf	memcpy@d,w
 12914  16F9  0086               	movwf	6
 12915  16FA  3001               	movlw	1	; select bank2/3
 12916  16FB  0087               	movwf	7
 12917  16FC  0874               	movf	??_memcpy,w
 12918  16FD  0081               	movwf	1
 12919  16FE  3001               	movlw	1
 12920  16FF  00F4               	movwf	??_memcpy
 12921  1700  0874               	movf	??_memcpy,w
 12922  1701  07F9               	addwf	memcpy@d,f
 12923  1702  2EE1               	goto	l3702
 12924  1703                     __end_of_memcpy:
 12925                           
 12926                           	psect	text79
 12927  1730                     __ptext79:	
 12928 ;; *************** function _MTOUCH_Button_Initialize *****************
 12929 ;; Defined at:
 12930 ;;		line 151 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12931 ;; Parameters:    Size  Location     Type
 12932 ;;  name            1    wreg     enum E2819
 12933 ;; Auto vars:     Size  Location     Type
 12934 ;;  name            1    2[COMMON] enum E2819
 12935 ;;  button          1    3[COMMON] PTR struct .
 12936 ;;		 -> mtouch_button(32), 
 12937 ;; Return value:  Size  Location     Type
 12938 ;;                  1    wreg      void 
 12939 ;; Registers used:
 12940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12941 ;; Tracked objects:
 12942 ;;		On entry : 0/0
 12943 ;;		On exit  : 0/0
 12944 ;;		Unchanged: 0/0
 12945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12949 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12950 ;;Total ram usage:        4 bytes
 12951 ;; Hardware stack levels used:    1
 12952 ;; Hardware stack levels required when called:    6
 12953 ;; This function calls:
 12954 ;;		_MTOUCH_Sensor_Calibrate
 12955 ;; This function is called by:
 12956 ;;		_MTOUCH_Button_InitializeAll
 12957 ;;		_Button_Service
 12958 ;;		_Button_State_NotPressed
 12959 ;;		_Button_State_Pressed
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963                           
 12964                           ;psect for function _MTOUCH_Button_Initialize
 12965  1730                     _MTOUCH_Button_Initialize:
 12966                           
 12967                           ;incstack = 0
 12968                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 12969                           ;MTOUCH_Button_Initialize@name stored from wreg
 12970  1730  00F2               	movwf	MTOUCH_Button_Initialize@name
 12971                           
 12972                           ;mcc_generated_files/mtouch/mtouch_button.c: 151: void MTOUCH_Button_Initialize(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 152: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 153:     mtouch_button_t* button = &mtouch_button[name];
 12973  1731  0872               	movf	MTOUCH_Button_Initialize@name,w
 12974  1732  00F0               	movwf	??_MTOUCH_Button_Initialize
 12975  1733  3003               	movlw	3
 12976  1734                     u2235:
 12977  1734  35F0               	lslf	??_MTOUCH_Button_Initialize,f
 12978  1735  3EFF               	addlw	-1
 12979  1736  1D03               	skipz
 12980  1737  2F34               	goto	u2235
 12981  1738  3570               	lslf	??_MTOUCH_Button_Initialize,w
 12982  1739  3E20               	addlw	(low (_mtouch_button| (0+256)))& (0+255)
 12983  173A  00F1               	movwf	??_MTOUCH_Button_Initialize+1
 12984  173B  0871               	movf	??_MTOUCH_Button_Initialize+1,w
 12985  173C  00F3               	movwf	MTOUCH_Button_Initialize@button
 12986                           
 12987                           ;mcc_generated_files/mtouch/mtouch_button.c: 155:     button->state = MTOUCH_BUTTON_STAT
      +                          E_initializing;
 12988  173D  0873               	movf	MTOUCH_Button_Initialize@button,w
 12989  173E  3E02               	addlw	2
 12990  173F  0086               	movwf	6
 12991  1740  3001               	movlw	1	; select bank2/3
 12992  1741  0087               	movwf	7
 12993  1742  0181               	clrf	1
 12994                           
 12995                           ;mcc_generated_files/mtouch/mtouch_button.c: 156:     button->baseline = (mtouch_button_
      +                          baseline_t)0;
 12996  1743  0873               	movf	MTOUCH_Button_Initialize@button,w
 12997  1744  3E05               	addlw	5
 12998  1745  0086               	movwf	6
 12999  1746  3001               	movlw	1	; select bank2/3
 13000  1747  0087               	movwf	7
 13001  1748  3000               	movlw	0
 13002  1749  3FC0               	movwi [0]fsr1
 13003  174A  3000               	movlw	0
 13004  174B  3FC1               	movwi [1]fsr1
 13005  174C  3FC2               	movwi [2]fsr1
 13006  174D  3FC3               	movwi [3]fsr1
 13007                           
 13008                           ;mcc_generated_files/mtouch/mtouch_button.c: 157:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
 13009  174E  0873               	movf	MTOUCH_Button_Initialize@button,w
 13010  174F  3E0A               	addlw	10
 13011  1750  0086               	movwf	6
 13012  1751  3001               	movlw	1	; select bank2/3
 13013  1752  0087               	movwf	7
 13014  1753  3000               	movlw	0
 13015  1754  3FC0               	movwi [0]fsr1
 13016  1755  3FC1               	movwi [1]fsr1
 13017                           
 13018                           ;mcc_generated_files/mtouch/mtouch_button.c: 158:     button->baseline_count = (mtouch_b
      +                          utton_baselinecounter_t)0;
 13019  1756  0873               	movf	MTOUCH_Button_Initialize@button,w
 13020  1757  3E0C               	addlw	12
 13021  1758  0086               	movwf	6
 13022  1759  3001               	movlw	1	; select bank2/3
 13023  175A  0087               	movwf	7
 13024  175B  3000               	movlw	0
 13025  175C  3FC0               	movwi [0]fsr1
 13026  175D  3FC1               	movwi [1]fsr1
 13027                           
 13028                           ;mcc_generated_files/mtouch/mtouch_button.c: 160:     MTOUCH_Sensor_Calibrate(button->se
      +                          nsor);
 13029  175E  0A73               	incf	MTOUCH_Button_Initialize@button,w
 13030  175F  0086               	movwf	6
 13031  1760  3001               	movlw	1	; select bank2/3
 13032  1761  0087               	movwf	7
 13033  1762  0801               	movf	1,w
 13034  1763  3192  224A         	fcall	_MTOUCH_Sensor_Calibrate
 13035  1765  0008               	return
 13036  1766                     __end_of_MTOUCH_Button_Initialize:
 13037                           
 13038                           	psect	text80
 13039  124A                     __ptext80:	
 13040 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
 13041 ;; Defined at:
 13042 ;;		line 535 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 13043 ;; Parameters:    Size  Location     Type
 13044 ;;  sensor          1    wreg     enum E2661
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;  sensor          1    0[COMMON] enum E2661
 13047 ;; Return value:  Size  Location     Type
 13048 ;;                  1    wreg      void 
 13049 ;; Registers used:
 13050 ;;		wreg
 13051 ;; Tracked objects:
 13052 ;;		On entry : 0/0
 13053 ;;		On exit  : 0/0
 13054 ;;		Unchanged: 0/0
 13055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13060 ;;Total ram usage:        0 bytes
 13061 ;; Hardware stack levels used:    1
 13062 ;; Hardware stack levels required when called:    5
 13063 ;; This function calls:
 13064 ;;		Nothing
 13065 ;; This function is called by:
 13066 ;;		_MTOUCH_Button_Initialize
 13067 ;; This function uses a non-reentrant model
 13068 ;;
 13069                           
 13070                           
 13071                           ;psect for function _MTOUCH_Sensor_Calibrate
 13072  124A                     _MTOUCH_Sensor_Calibrate:
 13073                           
 13074                           ;incstack = 0
 13075                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg]
 13076  124A  0008               	return
 13077  124B                     __end_of_MTOUCH_Sensor_Calibrate:
 13078                           
 13079                           	psect	intentry
 13080  0004                     __pintentry:	
 13081 ;; *************** function _INTERRUPT_InterruptManager *****************
 13082 ;; Defined at:
 13083 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13084 ;; Parameters:    Size  Location     Type
 13085 ;;		None
 13086 ;; Auto vars:     Size  Location     Type
 13087 ;;		None
 13088 ;; Return value:  Size  Location     Type
 13089 ;;                  1    wreg      void 
 13090 ;; Registers used:
 13091 ;;		wreg, status,2, status,0, pclath, cstack
 13092 ;; Tracked objects:
 13093 ;;		On entry : 0/0
 13094 ;;		On exit  : 0/0
 13095 ;;		Unchanged: 0/0
 13096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13101 ;;Total ram usage:        0 bytes
 13102 ;; Hardware stack levels used:    1
 13103 ;; Hardware stack levels required when called:    4
 13104 ;; This function calls:
 13105 ;;		_PIN_MANAGER_IOC
 13106 ;;		_TMR2_ISR
 13107 ;;		_TMR4_ISR
 13108 ;;		_TMR6_ISR
 13109 ;; This function is called by:
 13110 ;;		Interrupt level 1
 13111 ;; This function uses a non-reentrant model
 13112 ;;
 13113                           
 13114  0004                     _INTERRUPT_InterruptManager:
 13115                           
 13116                           ;incstack = 0
 13117  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 13118                           
 13119                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 13120  0005  3180               	pagesel	$
 13121                           
 13122                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
 13123  0006  198B               	btfsc	11,3	;volatile
 13124  0007  1C0B               	btfss	11,0	;volatile
 13125  0008  280D               	goto	i1l624
 13126                           
 13127                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 13128  0009  3192  2275  3180   	fcall	_PIN_MANAGER_IOC
 13129                           
 13130                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 13131  000C  282B               	goto	i1l634
 13132  000D                     i1l624:	
 13133                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 13134                           
 13135  000D  1F0B               	btfss	11,6	;volatile
 13136  000E  282B               	goto	i1l634
 13137                           
 13138                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TMR6IE == 1 && PIR3bits.TMR6IF == 1)
 13139  000F  0021               	movlb	1	; select bank1
 13140  0010  1D93               	btfss	19,3	;volatile
 13141  0011  2819               	goto	i1l627
 13142  0012  0020               	movlb	0	; select bank0
 13143  0013  1D93               	btfss	19,3	;volatile
 13144  0014  2819               	goto	i1l627
 13145                           
 13146                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR6_ISR();
 13147  0015  3192  22EF  3180   	fcall	_TMR6_ISR
 13148                           
 13149                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 13150  0018  282B               	goto	i1l634
 13151  0019                     i1l627:	
 13152                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TMR4IE == 1 && PI
      +                          R3bits.TMR4IF == 1)
 13153                           
 13154  0019  0021               	movlb	1	; select bank1
 13155  001A  1C93               	btfss	19,1	;volatile
 13156  001B  2823               	goto	i1l629
 13157  001C  0020               	movlb	0	; select bank0
 13158  001D  1C93               	btfss	19,1	;volatile
 13159  001E  2823               	goto	i1l629
 13160                           
 13161                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
 13162  001F  3192  22E3  3180   	fcall	_TMR4_ISR
 13163                           
 13164                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 13165  0022  282B               	goto	i1l634
 13166  0023                     i1l629:	
 13167                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.TMR2IE == 1 && PI
      +                          R1bits.TMR2IF == 1)
 13168                           
 13169  0023  0021               	movlb	1	; select bank1
 13170  0024  1C91               	btfss	17,1	;volatile
 13171  0025  282B               	goto	i1l634
 13172  0026  0020               	movlb	0	; select bank0
 13173  0027  1C91               	btfss	17,1	;volatile
 13174  0028  282B               	goto	i1l634
 13175                           
 13176                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR2_ISR();
 13177  0029  3192  22D7         	fcall	_TMR2_ISR
 13178  002B                     i1l634:	
 13179                           ;mcc_generated_files/interrupt_manager.c: 77:     }
 13180                           
 13181                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 13182                           
 13183  002B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13184  002C  0009               	retfie
 13185  002D                     __end_of_INTERRUPT_InterruptManager:
 13186                           
 13187                           	psect	text82
 13188  12EF                     __ptext82:	
 13189 ;; *************** function _TMR6_ISR *****************
 13190 ;; Defined at:
 13191 ;;		line 119 in file "mcc_generated_files/tmr6.c"
 13192 ;; Parameters:    Size  Location     Type
 13193 ;;		None
 13194 ;; Auto vars:     Size  Location     Type
 13195 ;;		None
 13196 ;; Return value:  Size  Location     Type
 13197 ;;                  1    wreg      void 
 13198 ;; Registers used:
 13199 ;;		wreg, status,2, status,0, pclath, cstack
 13200 ;; Tracked objects:
 13201 ;;		On entry : 1F/0
 13202 ;;		On exit  : 0/0
 13203 ;;		Unchanged: 0/0
 13204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13209 ;;Total ram usage:        0 bytes
 13210 ;; Hardware stack levels used:    1
 13211 ;; Hardware stack levels required when called:    1
 13212 ;; This function calls:
 13213 ;;		Absolute function
 13214 ;;		_TMR6_DefaultInterruptHandler
 13215 ;; This function is called by:
 13216 ;;		_INTERRUPT_InterruptManager
 13217 ;; This function uses a non-reentrant model
 13218 ;;
 13219                           
 13220                           
 13221                           ;psect for function _TMR6_ISR
 13222  12EF                     _TMR6_ISR:
 13223                           
 13224                           ;mcc_generated_files/tmr6.c: 123:     PIR3bits.TMR6IF = 0;
 13225                           
 13226                           ;incstack = 0
 13227                           ; Regs used in _TMR6_ISR: [wreg+status,2+status,0+pclath+cstack]
 13228  12EF  1193               	bcf	19,3	;volatile
 13229                           
 13230                           ;mcc_generated_files/tmr6.c: 125:     if(TMR6_InterruptHandler)
 13231  12F0  0021               	movlb	1	; select bank1
 13232  12F1  084D               	movf	_TMR6_InterruptHandler^(0+128),w
 13233  12F2  044E               	iorwf	(_TMR6_InterruptHandler+1)^(0+128),w
 13234  12F3  1903               	btfsc	3,2
 13235  12F4  0008               	return
 13236                           
 13237                           ;mcc_generated_files/tmr6.c: 126:     {;mcc_generated_files/tmr6.c: 127:         TMR6_In
      +                          terruptHandler();
 13238  12F5  084E               	movf	(_TMR6_InterruptHandler+1)^(0+128),w
 13239  12F6  008A               	movwf	10
 13240  12F7  084D               	movf	_TMR6_InterruptHandler^(0+128),w
 13241  12F8  000A               	callw
 13242  12F9  3192               	pagesel	$
 13243  12FA  0008               	return
 13244  12FB                     __end_of_TMR6_ISR:
 13245                           
 13246                           	psect	text83
 13247  1249                     __ptext83:	
 13248 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 13249 ;; Defined at:
 13250 ;;		line 136 in file "mcc_generated_files/tmr6.c"
 13251 ;; Parameters:    Size  Location     Type
 13252 ;;		None
 13253 ;; Auto vars:     Size  Location     Type
 13254 ;;		None
 13255 ;; Return value:  Size  Location     Type
 13256 ;;                  1    wreg      void 
 13257 ;; Registers used:
 13258 ;;		None
 13259 ;; Tracked objects:
 13260 ;;		On entry : 1F/1
 13261 ;;		On exit  : 1F/1
 13262 ;;		Unchanged: 1F/0
 13263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13268 ;;Total ram usage:        0 bytes
 13269 ;; Hardware stack levels used:    1
 13270 ;; This function calls:
 13271 ;;		Nothing
 13272 ;; This function is called by:
 13273 ;;		_TMR6_Initialize
 13274 ;;		_TMR6_ISR
 13275 ;; This function uses a non-reentrant model
 13276 ;;
 13277                           
 13278                           
 13279                           ;psect for function _TMR6_DefaultInterruptHandler
 13280  1249                     _TMR6_DefaultInterruptHandler:
 13281                           
 13282                           ;incstack = 0
 13283                           ; Regs used in _TMR6_DefaultInterruptHandler: []
 13284  1249  0008               	return
 13285  124A                     __end_of_TMR6_DefaultInterruptHandler:
 13286                           
 13287                           	psect	text84
 13288  12E3                     __ptext84:	
 13289 ;; *************** function _TMR4_ISR *****************
 13290 ;; Defined at:
 13291 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 13292 ;; Parameters:    Size  Location     Type
 13293 ;;		None
 13294 ;; Auto vars:     Size  Location     Type
 13295 ;;		None
 13296 ;; Return value:  Size  Location     Type
 13297 ;;                  1    wreg      void 
 13298 ;; Registers used:
 13299 ;;		wreg, status,2, status,0, pclath, cstack
 13300 ;; Tracked objects:
 13301 ;;		On entry : 1F/0
 13302 ;;		On exit  : 0/0
 13303 ;;		Unchanged: 0/0
 13304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13309 ;;Total ram usage:        0 bytes
 13310 ;; Hardware stack levels used:    1
 13311 ;; Hardware stack levels required when called:    1
 13312 ;; This function calls:
 13313 ;;		Absolute function
 13314 ;;		_TMR4_DefaultInterruptHandler
 13315 ;;		_TMR4_Wroking_Blink_AlarmLED_isr
 13316 ;; This function is called by:
 13317 ;;		_INTERRUPT_InterruptManager
 13318 ;; This function uses a non-reentrant model
 13319 ;;
 13320                           
 13321                           
 13322                           ;psect for function _TMR4_ISR
 13323  12E3                     _TMR4_ISR:
 13324                           
 13325                           ;mcc_generated_files/tmr4.c: 123:     PIR3bits.TMR4IF = 0;
 13326                           
 13327                           ;incstack = 0
 13328                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 13329  12E3  1093               	bcf	19,1	;volatile
 13330                           
 13331                           ;mcc_generated_files/tmr4.c: 125:     if(TMR4_InterruptHandler)
 13332  12E4  0021               	movlb	1	; select bank1
 13333  12E5  084F               	movf	_TMR4_InterruptHandler^(0+128),w
 13334  12E6  0450               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
 13335  12E7  1903               	btfsc	3,2
 13336  12E8  0008               	return
 13337                           
 13338                           ;mcc_generated_files/tmr4.c: 126:     {;mcc_generated_files/tmr4.c: 127:         TMR4_In
      +                          terruptHandler();
 13339  12E9  0850               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
 13340  12EA  008A               	movwf	10
 13341  12EB  084F               	movf	_TMR4_InterruptHandler^(0+128),w
 13342  12EC  000A               	callw
 13343  12ED  3192               	pagesel	$
 13344  12EE  0008               	return
 13345  12EF                     __end_of_TMR4_ISR:
 13346                           
 13347                           	psect	text85
 13348  1248                     __ptext85:	
 13349 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 13350 ;; Defined at:
 13351 ;;		line 136 in file "mcc_generated_files/tmr4.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;		None
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;		None
 13356 ;; Return value:  Size  Location     Type
 13357 ;;                  1    wreg      void 
 13358 ;; Registers used:
 13359 ;;		None
 13360 ;; Tracked objects:
 13361 ;;		On entry : 1F/1
 13362 ;;		On exit  : 1F/1
 13363 ;;		Unchanged: 1F/0
 13364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13369 ;;Total ram usage:        0 bytes
 13370 ;; Hardware stack levels used:    1
 13371 ;; This function calls:
 13372 ;;		Nothing
 13373 ;; This function is called by:
 13374 ;;		_TMR4_Initialize
 13375 ;;		_TMR4_ISR
 13376 ;; This function uses a non-reentrant model
 13377 ;;
 13378                           
 13379                           
 13380                           ;psect for function _TMR4_DefaultInterruptHandler
 13381  1248                     _TMR4_DefaultInterruptHandler:
 13382                           
 13383                           ;incstack = 0
 13384                           ; Regs used in _TMR4_DefaultInterruptHandler: []
 13385  1248  0008               	return
 13386  1249                     __end_of_TMR4_DefaultInterruptHandler:
 13387                           
 13388                           	psect	text86
 13389  1490                     __ptext86:	
 13390 ;; *************** function _TMR4_Wroking_Blink_AlarmLED_isr *****************
 13391 ;; Defined at:
 13392 ;;		line 130 in file "main.c"
 13393 ;; Parameters:    Size  Location     Type
 13394 ;;		None
 13395 ;; Auto vars:     Size  Location     Type
 13396 ;;		None
 13397 ;; Return value:  Size  Location     Type
 13398 ;;                  1    wreg      void 
 13399 ;; Registers used:
 13400 ;;		wreg, status,2, status,0
 13401 ;; Tracked objects:
 13402 ;;		On entry : 1F/1
 13403 ;;		On exit  : 1C/0
 13404 ;;		Unchanged: 0/0
 13405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;Total ram usage:        0 bytes
 13411 ;; Hardware stack levels used:    1
 13412 ;; This function calls:
 13413 ;;		Nothing
 13414 ;; This function is called by:
 13415 ;;		_main
 13416 ;;		_TMR4_ISR
 13417 ;; This function uses a non-reentrant model
 13418 ;;
 13419                           
 13420                           
 13421                           ;psect for function _TMR4_Wroking_Blink_AlarmLED_isr
 13422  1490                     _TMR4_Wroking_Blink_AlarmLED_isr:
 13423                           
 13424                           ;main.c: 132:     static uint16_t counter_tmr4 = 0;;main.c: 133:     counter_tmr4 ++;
 13425                           
 13426                           ;incstack = 0
 13427                           ; Regs used in _TMR4_Wroking_Blink_AlarmLED_isr: [wreg+status,2+status,0]
 13428  1490  3001               	movlw	1
 13429  1491  07C2               	addwf	TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4^(0+128),f
 13430  1492  3000               	movlw	0
 13431  1493  3DC3               	addwfc	(TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4+1)^(0+128),f
 13432                           
 13433                           ;main.c: 135:     if(counter_tmr4 >= 1000){
 13434  1494  3003               	movlw	3
 13435  1495  0243               	subwf	(TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4+1)^(0+128),w
 13436  1496  30E8               	movlw	232
 13437  1497  1903               	skipnz
 13438  1498  0242               	subwf	TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4^(0+128),w
 13439  1499  1C03               	skipc
 13440  149A  0008               	return
 13441                           
 13442                           ;main.c: 137:         counter_tmr4 = 0;
 13443  149B  01C2               	clrf	TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4^(0+128)
 13444  149C  01C3               	clrf	(TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4+1)^(0+128)
 13445  149D  1003               	clrc
 13446  149E  0022               	movlb	2	; select bank2
 13447  149F  1D0E               	btfss	14,2	;volatile
 13448  14A0  1403               	setc
 13449  14A1  1C03               	btfss	3,0
 13450  14A2  2CA6               	goto	u395_20
 13451  14A3  0022               	movlb	2	; select bank2
 13452  14A4  150E               	bsf	14,2	;volatile
 13453  14A5  0008               	return
 13454  14A6                     u395_20:
 13455  14A6  0022               	movlb	2	; select bank2
 13456  14A7  110E               	bcf	14,2	;volatile
 13457  14A8  0008               	return
 13458  14A9                     __end_of_TMR4_Wroking_Blink_AlarmLED_isr:
 13459                           
 13460                           	psect	text87
 13461  12D7                     __ptext87:	
 13462 ;; *************** function _TMR2_ISR *****************
 13463 ;; Defined at:
 13464 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 13465 ;; Parameters:    Size  Location     Type
 13466 ;;		None
 13467 ;; Auto vars:     Size  Location     Type
 13468 ;;		None
 13469 ;; Return value:  Size  Location     Type
 13470 ;;                  1    wreg      void 
 13471 ;; Registers used:
 13472 ;;		wreg, status,2, status,0, pclath, cstack
 13473 ;; Tracked objects:
 13474 ;;		On entry : 1F/0
 13475 ;;		On exit  : 0/0
 13476 ;;		Unchanged: 0/0
 13477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13482 ;;Total ram usage:        0 bytes
 13483 ;; Hardware stack levels used:    1
 13484 ;; Hardware stack levels required when called:    2
 13485 ;; This function calls:
 13486 ;;		Absolute function
 13487 ;;		_TMR2_DefaultInterruptHandler
 13488 ;;		_TMR2_Drive_TRIAC_isr
 13489 ;; This function is called by:
 13490 ;;		_INTERRUPT_InterruptManager
 13491 ;; This function uses a non-reentrant model
 13492 ;;
 13493                           
 13494                           
 13495                           ;psect for function _TMR2_ISR
 13496  12D7                     _TMR2_ISR:
 13497                           
 13498                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
 13499                           
 13500                           ;incstack = 0
 13501                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 13502  12D7  1091               	bcf	17,1	;volatile
 13503                           
 13504                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
 13505  12D8  0021               	movlb	1	; select bank1
 13506  12D9  0851               	movf	_TMR2_InterruptHandler^(0+128),w
 13507  12DA  0452               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 13508  12DB  1903               	btfsc	3,2
 13509  12DC  0008               	return
 13510                           
 13511                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
 13512  12DD  0852               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 13513  12DE  008A               	movwf	10
 13514  12DF  0851               	movf	_TMR2_InterruptHandler^(0+128),w
 13515  12E0  000A               	callw
 13516  12E1  3192               	pagesel	$
 13517  12E2  0008               	return
 13518  12E3                     __end_of_TMR2_ISR:
 13519                           
 13520                           	psect	text88
 13521  1247                     __ptext88:	
 13522 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 13523 ;; Defined at:
 13524 ;;		line 136 in file "mcc_generated_files/tmr2.c"
 13525 ;; Parameters:    Size  Location     Type
 13526 ;;		None
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;		None
 13529 ;; Return value:  Size  Location     Type
 13530 ;;                  1    wreg      void 
 13531 ;; Registers used:
 13532 ;;		None
 13533 ;; Tracked objects:
 13534 ;;		On entry : 1F/1
 13535 ;;		On exit  : 1F/1
 13536 ;;		Unchanged: 1F/0
 13537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13542 ;;Total ram usage:        0 bytes
 13543 ;; Hardware stack levels used:    1
 13544 ;; This function calls:
 13545 ;;		Nothing
 13546 ;; This function is called by:
 13547 ;;		_TMR2_Initialize
 13548 ;;		_TMR2_ISR
 13549 ;; This function uses a non-reentrant model
 13550 ;;
 13551                           
 13552                           
 13553                           ;psect for function _TMR2_DefaultInterruptHandler
 13554  1247                     _TMR2_DefaultInterruptHandler:
 13555                           
 13556                           ;incstack = 0
 13557                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 13558  1247  0008               	return
 13559  1248                     __end_of_TMR2_DefaultInterruptHandler:
 13560                           
 13561                           	psect	text89
 13562  161A                     __ptext89:	
 13563 ;; *************** function _TMR2_Drive_TRIAC_isr *****************
 13564 ;; Defined at:
 13565 ;;		line 102 in file "main.c"
 13566 ;; Parameters:    Size  Location     Type
 13567 ;;		None
 13568 ;; Auto vars:     Size  Location     Type
 13569 ;;		None
 13570 ;; Return value:  Size  Location     Type
 13571 ;;                  1    wreg      void 
 13572 ;; Registers used:
 13573 ;;		wreg, status,2, status,0, pclath, cstack
 13574 ;; Tracked objects:
 13575 ;;		On entry : 1F/1
 13576 ;;		On exit  : 1C/0
 13577 ;;		Unchanged: 0/0
 13578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13583 ;;Total ram usage:        0 bytes
 13584 ;; Hardware stack levels used:    1
 13585 ;; Hardware stack levels required when called:    1
 13586 ;; This function calls:
 13587 ;;		_TMR2_StopTimer
 13588 ;; This function is called by:
 13589 ;;		_main
 13590 ;;		_TMR2_ISR
 13591 ;; This function uses a non-reentrant model
 13592 ;;
 13593                           
 13594                           
 13595                           ;psect for function _TMR2_Drive_TRIAC_isr
 13596  161A                     _TMR2_Drive_TRIAC_isr:
 13597                           
 13598                           ;main.c: 104:     static uint16_t counter_tmr2 = 0;;main.c: 106:     if (1 == DimmerStat
      +                          usFlag_g){
 13599                           
 13600                           ;incstack = 0
 13601                           ; Regs used in _TMR2_Drive_TRIAC_isr: [wreg+status,2+status,0+pclath+cstack]
 13602  161A  0020               	movlb	0	; select bank0
 13603  161B  036A               	decf	_DimmerStatusFlag_g,w
 13604  161C  1D03               	btfss	3,2
 13605  161D  2E3B               	goto	i1l4432
 13606                           
 13607                           ;main.c: 108:         counter_tmr2 ++;
 13608  161E  3001               	movlw	1
 13609  161F  0021               	movlb	1	; select bank1
 13610  1620  07C4               	addwf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+128),f
 13611  1621  3000               	movlw	0
 13612  1622  3DC5               	addwfc	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+128),f
 13613                           
 13614                           ;main.c: 110:         if(counter_tmr2 >= tmr2_required_counter_steps_g){
 13615  1623  0847               	movf	(_tmr2_required_counter_steps_g+1)^(0+128),w
 13616  1624  0245               	subwf	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+128),w
 13617  1625  1D03               	skipz
 13618  1626  2E29               	goto	u392_25
 13619  1627  0846               	movf	_tmr2_required_counter_steps_g^(0+128),w
 13620  1628  0244               	subwf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+128),w
 13621  1629                     u392_25:
 13622  1629  1C03               	skipc
 13623  162A  2E30               	goto	i1l857
 13624                           
 13625                           ;main.c: 112:             counter_tmr2 = 0;
 13626  162B  01C4               	clrf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+128)
 13627  162C  01C5               	clrf	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+128)
 13628  162D  0022               	movlb	2	; select bank2
 13629  162E  168E               	bsf	14,5	;volatile
 13630  162F  0008               	return
 13631  1630                     i1l857:	
 13632                           ;main.c: 116:         else if (1 == PORTCbits.RC5){
 13633                           
 13634  1630  0020               	movlb	0	; select bank0
 13635  1631  1E8E               	btfss	14,5	;volatile
 13636  1632  0008               	return
 13637                           
 13638                           ;main.c: 118:             counter_tmr2 = 0;
 13639  1633  0021               	movlb	1	; select bank1
 13640  1634  01C4               	clrf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+128)
 13641  1635  01C5               	clrf	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+128)
 13642                           
 13643                           ;main.c: 119:             TMR2_StopTimer();
 13644  1636  3192  2251         	fcall	_TMR2_StopTimer
 13645  1638  0022               	movlb	2	; select bank2
 13646  1639  128E               	bcf	14,5	;volatile
 13647  163A  0008               	return
 13648  163B                     i1l4432:
 13649                           
 13650                           ;main.c: 125:         counter_tmr2 = 0;
 13651  163B  0021               	movlb	1	; select bank1
 13652  163C  01C4               	clrf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+128)
 13653  163D  01C5               	clrf	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+128)
 13654  163E  0008               	return
 13655  163F                     __end_of_TMR2_Drive_TRIAC_isr:
 13656                           
 13657                           	psect	text90
 13658  1251                     __ptext90:	
 13659 ;; *************** function _TMR2_StopTimer *****************
 13660 ;; Defined at:
 13661 ;;		line 93 in file "mcc_generated_files/tmr2.c"
 13662 ;; Parameters:    Size  Location     Type
 13663 ;;		None
 13664 ;; Auto vars:     Size  Location     Type
 13665 ;;		None
 13666 ;; Return value:  Size  Location     Type
 13667 ;;                  1    wreg      void 
 13668 ;; Registers used:
 13669 ;;		None
 13670 ;; Tracked objects:
 13671 ;;		On entry : 1F/1
 13672 ;;		On exit  : 1F/0
 13673 ;;		Unchanged: 0/0
 13674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13679 ;;Total ram usage:        0 bytes
 13680 ;; Hardware stack levels used:    1
 13681 ;; This function calls:
 13682 ;;		Nothing
 13683 ;; This function is called by:
 13684 ;;		_TMR2_Drive_TRIAC_isr
 13685 ;; This function uses a non-reentrant model
 13686 ;;
 13687                           
 13688                           
 13689                           ;psect for function _TMR2_StopTimer
 13690  1251                     _TMR2_StopTimer:
 13691                           
 13692                           ;mcc_generated_files/tmr2.c: 96:     T2CONbits.TMR2ON = 0;
 13693                           
 13694                           ;incstack = 0
 13695                           ; Regs used in _TMR2_StopTimer: []
 13696  1251  0020               	movlb	0	; select bank0
 13697  1252  111C               	bcf	28,2	;volatile
 13698  1253  0008               	return
 13699  1254                     __end_of_TMR2_StopTimer:
 13700                           
 13701                           	psect	text91
 13702  1275                     __ptext91:	
 13703 ;; *************** function _PIN_MANAGER_IOC *****************
 13704 ;; Defined at:
 13705 ;;		line 115 in file "mcc_generated_files/pin_manager.c"
 13706 ;; Parameters:    Size  Location     Type
 13707 ;;		None
 13708 ;; Auto vars:     Size  Location     Type
 13709 ;;		None
 13710 ;; Return value:  Size  Location     Type
 13711 ;;                  1    wreg      void 
 13712 ;; Registers used:
 13713 ;;		wreg, status,2, status,0, pclath, cstack
 13714 ;; Tracked objects:
 13715 ;;		On entry : 0/0
 13716 ;;		On exit  : 1F/7
 13717 ;;		Unchanged: 0/0
 13718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13723 ;;Total ram usage:        0 bytes
 13724 ;; Hardware stack levels used:    1
 13725 ;; Hardware stack levels required when called:    3
 13726 ;; This function calls:
 13727 ;;		_IOCAF2_ISR
 13728 ;; This function is called by:
 13729 ;;		_INTERRUPT_InterruptManager
 13730 ;; This function uses a non-reentrant model
 13731 ;;
 13732                           
 13733                           
 13734                           ;psect for function _PIN_MANAGER_IOC
 13735  1275                     _PIN_MANAGER_IOC:
 13736                           
 13737                           ;mcc_generated_files/pin_manager.c: 118:     if(IOCAFbits.IOCAF2 == 1)
 13738                           
 13739                           ;incstack = 0
 13740                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 13741  1275  0027               	movlb	7	; select bank7
 13742  1276  1D13               	btfss	19,2	;volatile
 13743  1277  0008               	return
 13744                           
 13745                           ;mcc_generated_files/pin_manager.c: 119:     {;mcc_generated_files/pin_manager.c: 120:  
      +                                 IOCAF2_ISR();
 13746  1278  3193  2313         	fcall	_IOCAF2_ISR
 13747  127A  0008               	return
 13748  127B                     __end_of_PIN_MANAGER_IOC:
 13749                           
 13750                           	psect	text92
 13751  1313                     __ptext92:	
 13752 ;; *************** function _IOCAF2_ISR *****************
 13753 ;; Defined at:
 13754 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
 13755 ;; Parameters:    Size  Location     Type
 13756 ;;		None
 13757 ;; Auto vars:     Size  Location     Type
 13758 ;;		None
 13759 ;; Return value:  Size  Location     Type
 13760 ;;                  1    wreg      void 
 13761 ;; Registers used:
 13762 ;;		wreg, status,2, status,0, pclath, cstack
 13763 ;; Tracked objects:
 13764 ;;		On entry : 1F/7
 13765 ;;		On exit  : 1F/7
 13766 ;;		Unchanged: 0/0
 13767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13772 ;;Total ram usage:        0 bytes
 13773 ;; Hardware stack levels used:    1
 13774 ;; Hardware stack levels required when called:    2
 13775 ;; This function calls:
 13776 ;;		Absolute function
 13777 ;;		_IOCAF2_DefaultInterruptHandler
 13778 ;;		_Zero_Detection_isr
 13779 ;; This function is called by:
 13780 ;;		_PIN_MANAGER_IOC
 13781 ;; This function uses a non-reentrant model
 13782 ;;
 13783                           
 13784                           
 13785                           ;psect for function _IOCAF2_ISR
 13786  1313                     _IOCAF2_ISR:
 13787                           
 13788                           ;mcc_generated_files/pin_manager.c: 132:     if(IOCAF2_InterruptHandler)
 13789                           
 13790                           ;incstack = 0
 13791                           ; Regs used in _IOCAF2_ISR: [wreg+status,2+status,0+pclath+cstack]
 13792  1313  0021               	movlb	1	; select bank1
 13793  1314  0853               	movf	_IOCAF2_InterruptHandler^(0+128),w
 13794  1315  0454               	iorwf	(_IOCAF2_InterruptHandler+1)^(0+128),w
 13795  1316  1903               	btfsc	3,2
 13796  1317  2B1D               	goto	i1l4416
 13797                           
 13798                           ;mcc_generated_files/pin_manager.c: 133:     {;mcc_generated_files/pin_manager.c: 134:  
      +                                 IOCAF2_InterruptHandler();
 13799  1318  0854               	movf	(_IOCAF2_InterruptHandler+1)^(0+128),w
 13800  1319  008A               	movwf	10
 13801  131A  0853               	movf	_IOCAF2_InterruptHandler^(0+128),w
 13802  131B  000A               	callw
 13803  131C  3193               	pagesel	$
 13804  131D                     i1l4416:
 13805                           
 13806                           ;mcc_generated_files/pin_manager.c: 136:     IOCAFbits.IOCAF2 = 0;
 13807  131D  0027               	movlb	7	; select bank7
 13808  131E  1113               	bcf	19,2	;volatile
 13809  131F  0008               	return
 13810  1320                     __end_of_IOCAF2_ISR:
 13811                           
 13812                           	psect	text93
 13813  1246                     __ptext93:	
 13814 ;; *************** function _IOCAF2_DefaultInterruptHandler *****************
 13815 ;; Defined at:
 13816 ;;		line 149 in file "mcc_generated_files/pin_manager.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;		None
 13819 ;; Auto vars:     Size  Location     Type
 13820 ;;		None
 13821 ;; Return value:  Size  Location     Type
 13822 ;;                  1    wreg      void 
 13823 ;; Registers used:
 13824 ;;		None
 13825 ;; Tracked objects:
 13826 ;;		On entry : 1F/1
 13827 ;;		On exit  : 1F/1
 13828 ;;		Unchanged: 1F/0
 13829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13834 ;;Total ram usage:        0 bytes
 13835 ;; Hardware stack levels used:    1
 13836 ;; This function calls:
 13837 ;;		Nothing
 13838 ;; This function is called by:
 13839 ;;		_PIN_MANAGER_Initialize
 13840 ;;		_IOCAF2_ISR
 13841 ;; This function uses a non-reentrant model
 13842 ;;
 13843                           
 13844                           
 13845                           ;psect for function _IOCAF2_DefaultInterruptHandler
 13846  1246                     _IOCAF2_DefaultInterruptHandler:
 13847                           
 13848                           ;incstack = 0
 13849                           ; Regs used in _IOCAF2_DefaultInterruptHandler: []
 13850  1246  0008               	return
 13851  1247                     __end_of_IOCAF2_DefaultInterruptHandler:
 13852                           
 13853                           	psect	text94
 13854  1293                     __ptext94:	
 13855 ;; *************** function _Zero_Detection_isr *****************
 13856 ;; Defined at:
 13857 ;;		line 89 in file "main.c"
 13858 ;; Parameters:    Size  Location     Type
 13859 ;;		None
 13860 ;; Auto vars:     Size  Location     Type
 13861 ;;		None
 13862 ;; Return value:  Size  Location     Type
 13863 ;;                  1    wreg      void 
 13864 ;; Registers used:
 13865 ;;		wreg, status,2, status,0, pclath, cstack
 13866 ;; Tracked objects:
 13867 ;;		On entry : 1F/1
 13868 ;;		On exit  : 1F/0
 13869 ;;		Unchanged: 0/0
 13870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13875 ;;Total ram usage:        0 bytes
 13876 ;; Hardware stack levels used:    1
 13877 ;; Hardware stack levels required when called:    1
 13878 ;; This function calls:
 13879 ;;		_TMR2_StartTimer
 13880 ;; This function is called by:
 13881 ;;		_main
 13882 ;;		_IOCAF2_ISR
 13883 ;; This function uses a non-reentrant model
 13884 ;;
 13885                           
 13886                           
 13887                           ;psect for function _Zero_Detection_isr
 13888  1293                     _Zero_Detection_isr:
 13889                           
 13890                           ;main.c: 94:     if (1 == DimmerStatusFlag_g){
 13891                           
 13892                           ;incstack = 0
 13893                           ; Regs used in _Zero_Detection_isr: [wreg+status,2+status,0+pclath+cstack]
 13894  1293  0020               	movlb	0	; select bank0
 13895  1294  036A               	decf	_DimmerStatusFlag_g,w
 13896  1295  1D03               	btfss	3,2
 13897  1296  0008               	return
 13898                           
 13899                           ;main.c: 96:         TMR2_StartTimer();
 13900  1297  3192  224D         	fcall	_TMR2_StartTimer
 13901  1299  0008               	return
 13902  129A                     __end_of_Zero_Detection_isr:
 13903                           
 13904                           	psect	text95
 13905  124D                     __ptext95:	
 13906 ;; *************** function _TMR2_StartTimer *****************
 13907 ;; Defined at:
 13908 ;;		line 87 in file "mcc_generated_files/tmr2.c"
 13909 ;; Parameters:    Size  Location     Type
 13910 ;;		None
 13911 ;; Auto vars:     Size  Location     Type
 13912 ;;		None
 13913 ;; Return value:  Size  Location     Type
 13914 ;;                  1    wreg      void 
 13915 ;; Registers used:
 13916 ;;		None
 13917 ;; Tracked objects:
 13918 ;;		On entry : 1F/0
 13919 ;;		On exit  : 1F/0
 13920 ;;		Unchanged: 0/0
 13921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13926 ;;Total ram usage:        0 bytes
 13927 ;; Hardware stack levels used:    1
 13928 ;; This function calls:
 13929 ;;		Nothing
 13930 ;; This function is called by:
 13931 ;;		_Zero_Detection_isr
 13932 ;; This function uses a non-reentrant model
 13933 ;;
 13934                           
 13935                           
 13936                           ;psect for function _TMR2_StartTimer
 13937  124D                     _TMR2_StartTimer:
 13938                           
 13939                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
 13940                           
 13941                           ;incstack = 0
 13942                           ; Regs used in _TMR2_StartTimer: []
 13943  124D  151C               	bsf	28,2	;volatile
 13944  124E  0008               	return
 13945  124F                     __end_of_TMR2_StartTimer:
 13946  007E                     btemp	set	126	;btemp
 13947  007E                     int$flags	set	126
 13948  007E                     wtemp0	set	126
 13949                           
 13950                           	psect	idloc
 13951                           
 13952                           ;Config register IDLOC0 @ 0x8000
 13953                           ;	unspecified, using default values
 13954  8000                     	org	32768
 13955  8000  3FFF               	dw	16383
 13956                           
 13957                           ;Config register IDLOC1 @ 0x8001
 13958                           ;	unspecified, using default values
 13959  8001                     	org	32769
 13960  8001  3FFF               	dw	16383
 13961                           
 13962                           ;Config register IDLOC2 @ 0x8002
 13963                           ;	unspecified, using default values
 13964  8002                     	org	32770
 13965  8002  3FFF               	dw	16383
 13966                           
 13967                           ;Config register IDLOC3 @ 0x8003
 13968                           ;	unspecified, using default values
 13969  8003                     	org	32771
 13970  8003  3FFF               	dw	16383
 13971                           
 13972                           	psect	config
 13973                           
 13974                           ;Config register CONFIG1 @ 0x8007
 13975                           ;	Oscillator Selection
 13976                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13977                           ;	Watchdog Timer Enable
 13978                           ;	WDTE = OFF, WDT disabled
 13979                           ;	Power-up Timer Enable
 13980                           ;	PWRTE = OFF, PWRT disabled
 13981                           ;	MCLR Pin Function Select
 13982                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13983                           ;	Flash Program Memory Code Protection
 13984                           ;	CP = OFF, Program memory code protection is disabled
 13985                           ;	Data Memory Code Protection
 13986                           ;	CPD = OFF, Data memory code protection is disabled
 13987                           ;	Brown-out Reset Enable
 13988                           ;	BOREN = NSLEEP, Brown-out Reset enabled while running and disabled in Sleep
 13989                           ;	Clock Out Enable
 13990                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13991                           ;	Internal/External Switchover
 13992                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13993                           ;	Fail-Safe Clock Monitor Enable
 13994                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13995  8007                     	org	32775
 13996  8007  3DE4               	dw	15844
 13997                           
 13998                           ;Config register CONFIG2 @ 0x8008
 13999                           ;	Flash Memory Self-Write Protection
 14000                           ;	WRT = OFF, Write protection off
 14001                           ;	PLL Enable
 14002                           ;	PLLEN = OFF, 4x PLL disabled
 14003                           ;	Stack Overflow/Underflow Reset Enable
 14004                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 14005                           ;	Brown-out Reset Voltage Selection
 14006                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 14007                           ;	Low-Voltage Programming Enable
 14008                           ;	LVP = ON, Low-voltage programming enabled
 14009  8008                     	org	32776
 14010  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    40
    Data        34
    BSS         49
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      80
    BANK1            80      0      53
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Button_Service$2408$0	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Service$2408	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    Button_StateMachine$0	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    memcpy@d1	PTR void  size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    memcpy@s1	PTR const void  size(2) Largest target is 32
		 -> mtouch_button_init(CODE[32]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 32
		 -> mtouch_button_init(CODE[32]), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Wroking_Blink_AlarmLED_isr(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Wroking_Blink_AlarmLED_isr(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Drive_TRIAC_isr(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Drive_TRIAC_isr(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    IOCAF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Zero_Detection_isr(), IOCAF2_DefaultInterruptHandler(), 

    IOCAF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Zero_Detection_isr(), Absolute function(), IOCAF2_DefaultInterruptHandler(), 

    Button_Baseline_Update@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Baseline_Initialize@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Reading_Update_Helper@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Reading_Update@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Deviation_Update@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Tick_helper@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_State_Pressed@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_State_NotPressed@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_State_Initializing@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Service@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    sp__memcpy	PTR void  size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E2819,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E2819,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setInactive@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setActive@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_isEnabled@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_setScanFunction@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setScanFunction@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setScanFunction@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acquisition@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_Service@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    S50$scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    S50$scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_scanB	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_scanA	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    callback_sampled	PTR FTN(enum E2661,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 


Critical Paths under _main in COMMON

    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _Sensor_Acquisition->_Sensor_Acq_ExecutePacket
    _Sensor_Acq_ExecutePacket->_Sensor_Acq_ExecuteScan
    _Sensor_Acq_ExecuteScan->___bmul
    _Button_Service->_Button_State_Initializing
    _Button_Service->_Button_State_NotPressed
    _Button_Service->_Button_State_Pressed
    _MTOUCH_Sensor_wasSampled->___bmul
    _Button_State_Initializing->_Button_Baseline_Initialize
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_Button_Reading_Update_Helper
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___bmul
    _SetDimmer->___flmul
    ___fltol->___flmul
    ___flsub->___flmul
    ___flmul->__Umul8_16
    ___fldiv->___flmul
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF2_SetInterruptHandler
    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Enable
    _MTOUCH_Sensor_Enable->___bmul
    _MTOUCH_Button_InitializeAll->_memcpy

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_StartTouchDetection
    _StartTouchDetection->_StartHeater
    _StartHeater->_StopTouchDetection
    _MTOUCH_Service_Mainloop->_MTOUCH_Button_ServiceAll
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_Deviation_Update
    _Init_Function->_StartStop_Dimmer
    _StartStop_Dimmer->_SetDimmer
    _SetDimmer->___fltol
    ___fltol->___fldiv
    ___flsub->___fldiv
    ___fldiv->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   61343
         _IOCAF2_SetInterruptHandler
                      _Init_Function
                  _SYSTEM_Initialize
                _StartTouchDetection
           _TMR2_SetInterruptHandler
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _StartTouchDetection                                  2     2      0   48031
                                             72 BANK0      2     2      0
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
                        _StartHeater
                   _StartStop_Buzzer
 ---------------------------------------------------------------------------------
 (2) _StartHeater                                          3     3      0   39856
                                             69 BANK0      3     3      0
                          _SetDimmer
           _StartStop_AlarmLED_Blink
                   _StartStop_Buzzer
                   _StartStop_Dimmer
                      _StartStop_Fan
                 _StopTouchDetection
 ---------------------------------------------------------------------------------
 (3) _StopTouchDetection                                   2     2      0   18764
                                             67 BANK0      2     2      0
                      _Init_Function
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
                   _StartStop_Buzzer
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Service_Mainloop                              1     1      0    8109
                                             11 BANK0      1     1      0
           _MTOUCH_Button_ServiceAll
                  _MTOUCH_Initialize
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
                        _MTOUCH_Tick
                 _MTOUCH_needReburst
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_needReburst                                   1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Tick                                          0     0      0     189
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Button_Tick                                   2     2      0     189
                                              3 COMMON     2     2      0
                 _Button_Tick_helper
 ---------------------------------------------------------------------------------
 (7) _Button_Tick_helper                                   3     3      0     121
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_SampleAll                              2     2      0    2105
                                              8 BANK0      2     2      0
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (6) _Sensor_Service                                       5     5      0    2037
                                              3 BANK0      5     5      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback
            _Sensor_RawSample_Update
                   _Sensor_isEnabled
                  _Sensor_setSampled
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) _Sensor_setSampled                                    1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Sensor_RawSample_Update                              1     1      0      77
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Sensor_DefaultCallback                               1     0      1      53
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _Sensor_Acquisition                                   3     3      0    1238
                                              0 BANK0      3     3      0
           _Sensor_Acq_ExecutePacket
                   _Sensor_isEnabled
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _Sensor_setInactive                                   1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Sensor_setActive                                     1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Sensor_isEnabled                                     1     1      0     110
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Sensor_Acq_ExecutePacket                             6     6      0     709
                                              8 COMMON     6     6      0
                       _MTOUCH_Delay
                      _MTOUCH_Random
      _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
             _Sensor_setScanFunction
 ---------------------------------------------------------------------------------
 (9) _Sensor_setScanFunction                               1     1      0      77
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _Sensor_Acq_ExecuteScan                               4     4      0     394
                                              4 COMMON     4     4      0
                 _MTOUCH_CVD_ScanA_0 *
                 _MTOUCH_CVD_ScanA_1 *
                 _MTOUCH_CVD_ScanB_0 *
                 _MTOUCH_CVD_ScanB_1 *
                             ___bmul
 ---------------------------------------------------------------------------------
 (10) _MTOUCH_CVD_ScanB_1                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _MTOUCH_CVD_ScanB_0                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _MTOUCH_CVD_ScanA_1                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _MTOUCH_CVD_ScanA_0                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _MTOUCH_Random                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _MTOUCH_Delay                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Button_ServiceAll                             2     2      0    4055
                                              9 BANK0      2     2      0
                     _Button_Service
 ---------------------------------------------------------------------------------
 (6) _Button_Service                                       4     4      0    3987
                                              5 BANK0      4     4      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Sensor_wasSampled                             2     2      0     370
                                              4 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _Button_State_Pressed                                 3     2      1     565
                                             13 COMMON     1     0      1
                                              0 BANK0      2     2      0
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (7) _Button_State_NotPressed                              3     2      1     904
                                             13 COMMON     1     0      1
                                              0 BANK0      2     2      0
             _Button_Baseline_Update
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (8) _Button_DefaultCallback                               1     0      1     159
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _Button_State_Initializing                            5     4      1     936
                                             13 COMMON     1     0      1
                                              0 BANK0      4     4      0
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (8) _Button_Baseline_Update                               7     7      0     260
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) _Button_Baseline_Initialize                           5     5      0     478
                                              8 COMMON     5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (7) _Button_Reading_Update                                1     1      0     667
                                             11 COMMON     1     1      0
       _Button_Reading_Update_Helper
 ---------------------------------------------------------------------------------
 (8) _Button_Reading_Update_Helper                         3     3      0     590
                                              8 COMMON     3     3      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (9) _MTOUCH_Sensor_RawSample_Get                          4     2      2     370
                                              4 COMMON     4     2      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) _Button_Deviation_Update                             15    15      0     213
                                              0 COMMON    10    10      0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_isPressed                              2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Init_Function                                        0     0      0   10589
                 _StartStop_AlarmLED
           _StartStop_AlarmLED_Blink
                   _StartStop_Buzzer
                   _StartStop_Dimmer
                      _StartStop_Fan
 ---------------------------------------------------------------------------------
 (5) _StartStop_Fan                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _StartStop_Dimmer                                     1     1      0   10501
                                             66 BANK0      1     1      0
                          _SetDimmer
 ---------------------------------------------------------------------------------
 (6) _SetDimmer                                            8     4      4   10479
                                             58 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             11     7      4     305
                                             47 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2333
                                             47 BANK0      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             20    12      8    2136
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    2570
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    1425
                                             21 BANK0     26    18      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _StartStop_Buzzer                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _StartStop_AlarmLED_Blink                             1     1      0      22
                                              0 COMMON     1     1      0
                    _TMR4_StartTimer
                     _TMR4_StopTimer
 ---------------------------------------------------------------------------------
 (6) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _StartStop_AlarmLED                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2201
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      98
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCAF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF2_SetInterruptHandler                           2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Initialize                                    0     0      0    1581
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
 ---------------------------------------------------------------------------------
 (9) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     156
                                              1 COMMON     2     2      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_InitializeAll                          2     2      0     896
                                              8 COMMON     2     2      0
           _MTOUCH_Sensor_Initialize
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Sensor_Initialize                             2     2      0     828
                                              6 COMMON     2     2      0
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
                             ___bmul
 ---------------------------------------------------------------------------------
 (6) _Sensor_Sampled_Reset                                 1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_Sensor_Enable                                 2     2      0     370
                                              4 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               4     3      1     326
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Button_InitializeAll                          2     2      0     529
                                             10 COMMON     2     2      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     6      4     328
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Button_Initialize                             4     4      0     133
                                              0 COMMON     4     4      0
            _MTOUCH_Sensor_Calibrate
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_Sensor_Calibrate                              1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0       0
                    _PIN_MANAGER_IOC
                           _TMR2_ISR
                           _TMR4_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
    _TMR4_Wroking_Blink_AlarmLED_isr *
 ---------------------------------------------------------------------------------
 (13) _TMR4_Wroking_Blink_AlarmLED_isr                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
               _TMR2_Drive_TRIAC_isr *
 ---------------------------------------------------------------------------------
 (13) _TMR2_Drive_TRIAC_isr                                0     0      0       0
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (14) _TMR2_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF2_ISR
 ---------------------------------------------------------------------------------
 (13) _IOCAF2_ISR                                          0     0      0       0
                   Absolute function *
     _IOCAF2_DefaultInterruptHandler *
                 _Zero_Detection_isr *
 ---------------------------------------------------------------------------------
 (14) _Zero_Detection_isr                                  0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (15) _TMR2_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _IOCAF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCAF2_SetInterruptHandler
   _Init_Function
     _StartStop_AlarmLED
     _StartStop_AlarmLED_Blink
       _TMR4_StartTimer
       _TMR4_StopTimer
     _StartStop_Buzzer
     _StartStop_Dimmer
       _SetDimmer
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
         ___flmul
           __Umul8_16
         ___flsub
           ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
           ___flmul (ARG)
             __Umul8_16
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
           ___flmul (ARG)
             __Umul8_16
     _StartStop_Fan
   _SYSTEM_Initialize
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
           _MTOUCH_Sensor_Calibrate
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Enable
             ___bmul
           _Sensor_Sampled_Reset
           ___bmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF2_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _WDT_Initialize
   _StartTouchDetection
     _MTOUCH_Button_isPressed
     _MTOUCH_Service_Mainloop
       _MTOUCH_Button_ServiceAll
         _Button_Service
           _Button_Deviation_Update
           _Button_Reading_Update
             _Button_Reading_Update_Helper
               _MTOUCH_Sensor_RawSample_Get
                 ___bmul
           _Button_State_Initializing *
             _Button_Baseline_Initialize
               _MTOUCH_Sensor_RawSample_Get
                 ___bmul
             _Button_Baseline_Update
           _Button_State_NotPressed *
             _Button_Baseline_Update
             _Button_DefaultCallback
             _MTOUCH_Button_Initialize
               _MTOUCH_Sensor_Calibrate
           _Button_State_Pressed *
             _Button_DefaultCallback
             _MTOUCH_Button_Initialize
               _MTOUCH_Sensor_Calibrate
           _MTOUCH_Button_Initialize *
             _MTOUCH_Sensor_Calibrate
           _MTOUCH_Sensor_isCalibrated *
           _MTOUCH_Sensor_wasSampled *
             ___bmul
       _MTOUCH_Initialize
         _MTOUCH_Button_InitializeAll
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
           _memcpy
         _MTOUCH_Sensor_InitializeAll
           _MTOUCH_Sensor_Initialize
             _MTOUCH_Sensor_Enable
               ___bmul
             _Sensor_Sampled_Reset
             ___bmul
         _MTOUCH_Sensor_Sampled_ResetAll
           _Sensor_Sampled_Reset
         _MTOUCH_Sensor_Scan_Initialize
       _MTOUCH_Sensor_SampleAll
         _Sensor_Service
           _Sensor_Acquisition
             _Sensor_Acq_ExecutePacket
               _MTOUCH_Delay
               _MTOUCH_Random
               _MTOUCH_Sensor_Scan_Initialize
               _Sensor_Acq_ExecuteScan
                 _MTOUCH_CVD_ScanA_0 *
                 _MTOUCH_CVD_ScanA_1 *
                 _MTOUCH_CVD_ScanB_0 *
                 _MTOUCH_CVD_ScanB_1 *
                 ___bmul *
               _Sensor_setScanFunction
             _Sensor_isEnabled
             _Sensor_setActive
             _Sensor_setInactive
             _abs
           _Sensor_DefaultCallback
           _Sensor_RawSample_Update
           _Sensor_isEnabled
           _Sensor_setSampled
           ___bmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Tick
         _MTOUCH_Button_Tick
           _Button_Tick_helper
       _MTOUCH_needReburst
     _StartHeater
       _SetDimmer
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
         ___flmul
           __Umul8_16
         ___flsub
           ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
           ___flmul (ARG)
             __Umul8_16
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
           ___flmul (ARG)
             __Umul8_16
       _StartStop_AlarmLED_Blink
         _TMR4_StartTimer
         _TMR4_StopTimer
       _StartStop_Buzzer
       _StartStop_Dimmer
         _SetDimmer
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
           ___flmul
             __Umul8_16
           ___flsub
             ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
             ___flmul (ARG)
               __Umul8_16
           ___fltol
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
             ___flmul (ARG)
               __Umul8_16
       _StartStop_Fan
       _StopTouchDetection
         _Init_Function
           _StartStop_AlarmLED
           _StartStop_AlarmLED_Blink
             _TMR4_StartTimer
             _TMR4_StopTimer
           _StartStop_Buzzer
           _StartStop_Dimmer
             _SetDimmer
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
               ___flmul
                 __Umul8_16
               ___flsub
                 ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                 ___flmul (ARG)
                   __Umul8_16
               ___fltol
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                 ___flmul (ARG)
                   __Umul8_16
           _StartStop_Fan
         _MTOUCH_Button_isPressed
         _MTOUCH_Service_Mainloop
           _MTOUCH_Button_ServiceAll
             _Button_Service
               _Button_Deviation_Update
               _Button_Reading_Update
                 _Button_Reading_Update_Helper
                   _MTOUCH_Sensor_RawSample_Get
                     ___bmul
               _Button_State_Initializing *
                 _Button_Baseline_Initialize
                   _MTOUCH_Sensor_RawSample_Get
                     ___bmul
                 _Button_Baseline_Update
               _Button_State_NotPressed *
                 _Button_Baseline_Update
                 _Button_DefaultCallback
                 _MTOUCH_Button_Initialize
                   _MTOUCH_Sensor_Calibrate
               _Button_State_Pressed *
                 _Button_DefaultCallback
                 _MTOUCH_Button_Initialize
                   _MTOUCH_Sensor_Calibrate
               _MTOUCH_Button_Initialize *
                 _MTOUCH_Sensor_Calibrate
               _MTOUCH_Sensor_isCalibrated *
               _MTOUCH_Sensor_wasSampled *
                 ___bmul
           _MTOUCH_Initialize
             _MTOUCH_Button_InitializeAll
               _MTOUCH_Button_Initialize
                 _MTOUCH_Sensor_Calibrate
               _memcpy
             _MTOUCH_Sensor_InitializeAll
               _MTOUCH_Sensor_Initialize
                 _MTOUCH_Sensor_Enable
                   ___bmul
                 _Sensor_Sampled_Reset
                 ___bmul
             _MTOUCH_Sensor_Sampled_ResetAll
               _Sensor_Sampled_Reset
             _MTOUCH_Sensor_Scan_Initialize
           _MTOUCH_Sensor_SampleAll
             _Sensor_Service
               _Sensor_Acquisition
                 _Sensor_Acq_ExecutePacket
                   _MTOUCH_Delay
                   _MTOUCH_Random
                   _MTOUCH_Sensor_Scan_Initialize
                   _Sensor_Acq_ExecuteScan
                     _MTOUCH_CVD_ScanA_0 *
                     _MTOUCH_CVD_ScanA_1 *
                     _MTOUCH_CVD_ScanB_0 *
                     _MTOUCH_CVD_ScanB_1 *
                     ___bmul *
                   _Sensor_setScanFunction
                 _Sensor_isEnabled
                 _Sensor_setActive
                 _Sensor_setInactive
                 _abs
               _Sensor_DefaultCallback
               _Sensor_RawSample_Update
               _Sensor_isEnabled
               _Sensor_setSampled
               ___bmul
           _MTOUCH_Sensor_Sampled_ResetAll
             _Sensor_Sampled_Reset
           _MTOUCH_Tick
             _MTOUCH_Button_Tick
               _Button_Tick_helper
           _MTOUCH_needReburst
         _StartStop_Buzzer
     _StartStop_Buzzer
   _TMR2_SetInterruptHandler
   _TMR4_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF2_ISR
       Absolute function(Fake) *
       _IOCAF2_DefaultInterruptHandler *
       _Zero_Detection_isr *
         _TMR2_StartTimer
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _TMR2_Drive_TRIAC_isr *
       _TMR2_StopTimer
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *
     _TMR4_Wroking_Blink_AlarmLED_isr *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      35       7       66.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 24 13:39:48 2023

           __end_of_TMR2_SetInterruptHandler 126B                 ?_MTOUCH_Sensor_RawSample_Get 0074  
                               ___fldiv@aexp 004E                                 ___fldiv@bexp 004D  
                               ___fldiv@sign 0046                               ___bmul@product 0072  
                     _Sensor_setScanFunction 13AD              __size_of_Sensor_Acq_ExecuteScan 0059  
                               StartHeater@i 0067                   __end_of_Sensor_setInactive 12AF  
                        __Umul8_16@word_mpld 0076                                          LATC 010E  
                                        l140 08EE                                          l136 08DC  
                                        l340 0C7C                                          l908 12C0  
                                        l839 15D1                                          l883 12B6  
                                        l899 12CA                                          _GIE 005F  
                                        _PR2 001B                                          _PR4 0416  
                                        _PR6 041D                                          _abs 1479  
                            _TMR2_Initialize 1349                                          wreg 0009  
         __end_of_IOCAF2_SetInterruptHandler 1287                   _IOCAF2_SetInterruptHandler 1281  
           ??_MTOUCH_Sensor_Sampled_ResetAll 0071              ?_MTOUCH_Sensor_Sampled_ResetAll 0070  
                               ___flmul@aexp 0029                                 ___flmul@bexp 002E  
           __size_of_MTOUCH_Sensor_SampleAll 0015                                 ___flmul@sign 0028  
                               ___flmul@temp 0033                                 ___flmul@prod 002F  
          __size_of_MTOUCH_Sensor_Initialize 0011                    ?_MTOUCH_Sensor_Initialize 0070  
                                       INDF0 0000                                         FSR0H 0005  
                                       FSR1H 0007                                         FSR0L 0004  
                                       FSR1L 0006                           _MTOUCH_CVD_ScanA_0 1554  
                         _MTOUCH_CVD_ScanA_1 1534                           _MTOUCH_CVD_ScanB_0 1594  
                         _MTOUCH_CVD_ScanB_1 1574                                 ___fltol@exp1 0059  
                                       ?_abs 0070                                         l1420 0FDE  
                                       l1501 1525                                         l1407 0F7E  
                                       l4000 0635                                         l1442 0CE7  
                                       l1428 0FF7                                         l4102 0801  
                                       l1390 0EF8                                         l1286 0A52  
                                       l1463 0DEE                                         l3240 136B  
                                       l1464 0E06                                         l1392 0EDA  
                                       l4112 17C9                                         l4120 17E1  
                                       l4200 1423                                         l1466 0E13  
                                       l1386 0E64                                         l4122 17FE  
                                       l3244 1371                                         l4060 0782  
                                       l4052 0754                                         l3324 1476  
                                       l4220 133B                                         l1494 07EC  
                                       l4054 076B                                         l3342 1338  
                                       l4206 142C                                         l4152 14CF  
                                       l4064 0784                                         l3512 0EE3  
                                       l3504 0EAA                                         l3440 0E31  
                                       l3424 17A2                                         l3416 0BBB  
                                       l3256 135D                                         l3280 08FC  
                                       l4074 07AD                                         l3610 0FEE  
                                       l3530 0F06                                         l3514 0EE5  
                                       l3522 0EF4                                         l4306 14F5  
                                       l4170 0889                                         l3282 0903  
                                       l4084 07D9                                         l3540 0F1B  
                                       l3444 0E34                                         l4260 1414  
                                       l3702 16E1                                         l4078 07C2  
                                       l3614 0FF2                                         l3446 0E3C  
                                       l3294 0938                                         l3286 090A  
                                       l4270 15FF                                         l4248 130E  
                                       l3624 151F                                         l3464 0E59  
                                       l3720 0B50                                         l3712 1329  
                                       l3296 093D                                         l3288 091B  
                                       l3368 08D0                                         l4280 1609  
                                       l3538 0F19                                         l3474 0E6E  
                                       l3730 09BD                                         l3298 0941  
                                       l3642 081A                                         l4178 144D  
                                       l3900 0D77                                         l3580 0FA4  
                                       l3548 0F2B                                         l3468 0E5C  
                                       l3724 0B66                                         l3732 09C1  
                                       l3652 0823                                         l3830 0CB8  
                                       l3574 0F9D                                         l3566 0F90  
                                       l3558 0F76                                         l3582 0FA6  
                                       l3806 0A5F                                         l3718 0B47  
                                       l3646 081C                                         l3592 0FB1  
                                       l3752 0C74                                         l3672 14B8  
                                       l3922 0DAB                                         l3914 0D7D  
                                       l3850 0CDC                                         l3834 0CBB  
                                       l3762 096D                                         l3746 0C3E  
                                       l3658 0845                                         l3916 0D94  
                                       l3836 0CC3                                         l3588 0FAF  
                                       l3780 0A1B                                         l3950 0E0F  
                                       l3926 0DAD                                         l3870 0D12  
                                       l3854 0CDF                                         l3936 0DD6  
                                       l3864 0D06                                         l3776 0A12  
                                       l3688 13F5                                         l4832 17EE  
                                       l3890 0D59                                         l3970 05FA  
                                       l4834 17F3                                         l3972 05FC  
                                       l3796 0A40                                         l4836 0913  
                                       TRISC 008E                                         l3990 061F  
                                       l3974 0604                                         l3798 0A4E  
                                       l3896 0D72                                         l3992 0627  
                                       l4688 05B3                                         l3898 0D3B  
                                       l3988 061D                ?_Button_Reading_Update_Helper 0070  
                                       _LATA 010C                                         _LATB 010D  
                                       _LATC 010E                                         u2400 0EC9  
                                       u3025 0A41                                         u2225 1482  
                                       u2235 1734                                         u3205 0D53  
                                       u2245 1725                                         u3215 0D67  
                                       u3055 0A56                                         u2513 0F3E  
                                       u2505 0F20                                         u2265 0B83  
                                       u2435 0EEA                                         u2275 0BC9  
                                       u3245 0D80                                         u2390 0EC8  
                                       u3335 0DC4                                         u3175 0D43  
                                       u4207 0115                                         u3345 0DDF  
                                       u3265 0D89                                         u3185 0D4A  
                                       u2385 0EBE                                         u4217 0131  
                                       u4137 167B                                         u3355 0DF8  
                                       u3515 0760                                         u2555 0F91  
                                       u4307 022D                                         u4227 014D  
                                       u4147 006D                                         u3605 07CC  
                                       u4317 0249                                         u4237 0169  
                                       u4157 0089                                         u2735 1526  
                                       u3455 06A8                                         u2655 0FC9  
                                       u4407 0345                                         u4327 0265  
                                       u4247 0185                                         u4167 00A5  
                                       u2840 0B2E                                         u3465 06D5  
                                       u4417 0361                                         u4337 0281  
                                       u4257 01A1                                         u4177 00C1  
                                       u3475 0727                                         u2835 0AF6  
                                       u3715 1450                                         u4507 0458  
                                       u4427 037D                                         u4347 029D  
                                       u4267 01BD                                         u4187 00DD  
                                       u3485 0743                                         u2845 0B2A  
                                       u2925 0C54                                         u4517 0473  
                                       u4437 0399                                         u4357 02B9  
                                       u4277 01D9                                         u4197 00F9  
                                       u3495 0757                                         u4607 0566  
                                       u4527 048E                                         u4447 03B5  
                                       u4367 02D5                                         u4287 01F5  
                                       u3585 079B                                         u4617 0581  
                                       u4537 04A9                                         u4457 03D1  
                                       u4377 02F1                                         u4297 0211  
                                       u3850 14F3                                         u3595 07B6  
                                       u3675 084F                                         u4627 059C  
                                       u4547 04C4                                         u4467 03EC  
                                       u4387 030D                                         u3845 14E4  
                                       u4637 05B9                                         u4557 04DF  
                                       u4477 0407                                         u4397 0329  
                                       u2895 09EA                                         u4647 05D6  
                                       u4567 04FA                                         u4487 0422  
                                       u4657 1656                                         u4577 0515  
                                       u4497 043D                                         u2995 0A24  
                                       u4667 159A                                         u4587 0530  
                                       u4677 157A                                         u4597 054B  
                                       u4687 155A                                         u4697 153A  
                 Button_State_Pressed@button 007D                                         _TMR2 001A  
                                       _TMR4 0415                                         _TMR6 041C  
                                       _WPUA 020C                                         _WPUB 020D  
                                       _WPUC 020E            __size_of_Sensor_Acq_ExecutePacket 0053  
                  ?_Sensor_Acq_ExecutePacket 0070                           _MTOUCH_needReburst 0002  
                                       abs@a 0070                                         _main 15B4  
       __size_of_MTOUCH_Button_InitializeAll 001A  TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4 00C2  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
       __size_of_MTOUCH_Sensor_InitializeAll 000E                                         btemp 007E  
                        ?_MTOUCH_CVD_ScanA_0 0070                          ?_MTOUCH_CVD_ScanA_1 0070  
                        ?_MTOUCH_CVD_ScanB_0 0070                          ?_MTOUCH_CVD_ScanB_1 0070  
                                       start 002D                              ___fldiv@new_exp 0047  
                     ??_TMR2_Drive_TRIAC_isr 0070                            ___bmul@multiplier 0073  
                        ?_MTOUCH_needReburst 0070                   ??_TMR4_SetInterruptHandler 0072  
                                      ADCON0 009D                     ?_MTOUCH_Service_Mainloop 0070  
           __size_of_MTOUCH_Button_isPressed 001B                __size_of_Button_State_Pressed 005F  
                                      ??_abs 0072                  ?_Button_Baseline_Initialize 0070  
                              _Init_Function 1436                ??_MTOUCH_Sensor_RawSample_Get 0076  
              Sensor_RawSample_Update@sensor 0070                    __size_of_Sensor_isEnabled 000D  
             __size_of_OSCILLATOR_Initialize 0006                          __size_of_IOCAF2_ISR 000D  
              __end_of_OSCILLATOR_Initialize 1281                                ___fltol@sign1 0058  
                            __end_of___fladd 1000                                        ?_main 0070  
                            __end_of___fldiv 0E18                                        _ADRES 009B  
                       ??_MTOUCH_CVD_ScanA_0 0070                         ??_MTOUCH_CVD_ScanA_1 0070  
                       ??_MTOUCH_CVD_ScanB_0 0070                         ??_MTOUCH_CVD_ScanB_1 0070  
                            __end_of___flmul 07F9                              __end_of___flsub 1515  
                            __end_of___fltol 0A6E                                        _T2CON 001C  
                                      _T4CON 0417                                        _T6CON 041E  
                    __size_of_Button_Service 0052                                        i1l624 000D  
                                      i1l634 002B                                        i1l627 0019  
                                      i1l629 0023                                        i1l857 1630  
                                      _TRISA 008C                                        _TRISB 008D  
                                      _TRISC 008E              __size_of_Button_DefaultCallback 0001  
                            _TMR4_Initialize 139C            __size_of_TMR6_SetInterruptHandler 0005  
                       ??_MTOUCH_needReburst 0070                    ?_TMR6_SetInterruptHandler 0070  
                           __end_of_TMR2_ISR 12E3                             __end_of_TMR4_ISR 12EF  
                           __end_of_TMR6_ISR 12FB              __size_of_Sensor_DefaultCallback 0001  
                    __end_of_PIN_MANAGER_IOC 127B                      __size_of_Sensor_Service 004D  
      __end_of_MTOUCH_Sensor_Scan_Initialize 1266       __size_of_MTOUCH_Sensor_Scan_Initialize 0005  
              _MTOUCH_Sensor_Scan_Initialize 1261                               _WDT_Initialize 125D  
                    Sensor_setSampled@sensor 0070                              ??_StartStop_Fan 0070  
                     _Sensor_Acq_ExecuteScan 08F0             __size_of_Button_State_NotPressed 009F  
                                      pclath 000A                         _Sensor_Sampled_Reset 129A  
                                      status 0003                                        wtemp0 007E  
                            _TMR2_StartTimer 124D                    __size_of_Sensor_setActive 0007  
                     Sensor_isEnabled@sensor 0070               ??_TMR6_DefaultInterruptHandler 0070  
                            __initialization 002F                                 __end_of_main 15D5  
                             ?_Init_Function 0070                        __end_of_MTOUCH_Random 1369  
                    __end_of_TMR2_Initialize 1359                  ?_INTERRUPT_InterruptManager 0070  
           __end_of_MTOUCH_Button_Initialize 1766                     _TMR2_SetInterruptHandler 1266  
                                     ??_main 007E                   __end_of_StartStop_AlarmLED 12B9  
                    _MTOUCH_Sensor_Calibrate 124A                      ??_Button_Reading_Update 007B  
       MTOUCH_Sensor_Sampled_ResetAll@sensor 0072                     ?_Button_Deviation_Update 0070  
                     __end_of_WDT_Initialize 1261                              _TMR6_Initialize 13BE  
                  __size_of_StartStop_Dimmer 0015                                 ?_MTOUCH_Tick 0070  
               Button_Baseline_Update@button 0076                    __size_of_StartStop_Buzzer 000A  
                                     _ADCON0 009D                                       _ADCON1 009E  
       __size_of_MTOUCH_Sensor_RawSample_Get 0017                  __size_of_StopTouchDetection 0025  
                                     _ANSELA 018C                                       _ANSELB 018D  
                                     _ANSELC 018E                                       _BORCON 0116  
                                     i1l4416 131D                                       i1l4432 163B  
                      ?_Sensor_Sampled_Reset 0070                                       u392_25 1629  
                                     _OSCCON 0099                                       u395_20 14A6  
                                     _WDTCON 0097                  __end_of_StartTouchDetection 1689  
          MTOUCH_Button_InitializeAll@button 007B                              _TMR4_StartTimer 1254  
             ??_Button_Reading_Update_Helper 0078                       _Button_DefaultCallback 124B  
            __end_of_MTOUCH_Service_Mainloop 161A      __end_of_TMR4_Wroking_Blink_AlarmLED_isr 14A9  
   __size_of_TMR4_Wroking_Blink_AlarmLED_isr 0019            ??_TMR4_Wroking_Blink_AlarmLED_isr 0070  
           ?_TMR4_Wroking_Blink_AlarmLED_isr 0070              _TMR4_Wroking_Blink_AlarmLED_isr 1490  
                     _Sensor_DefaultCallback 124C                                _packet_sample 00C8  
                         __size_of_SetDimmer 0079                                       ___bmul 1369  
                                  ??___fladd 0020                 Sensor_DefaultCallback@sensor 0070  
                                  ??___fldiv 003D                                    ??___flmul 0079  
                                  ??___flsub 007E                                    ??___fltol 0053  
                                     _memcpy 16D8                      __end_of_TMR4_Initialize 13AD  
           __end_of_MTOUCH_Button_ServiceAll 1349                   __end_of_Zero_Detection_isr 129A  
       __end_of_TMR4_DefaultInterruptHandler 1249        __size_of_TMR4_DefaultInterruptHandler 0001  
               _TMR4_DefaultInterruptHandler 1248                      _MTOUCH_Sensor_SampleAll 1421  
                         __size_of__Umul8_16 001F                 Button_DefaultCallback@button 0070  
                            ?_WDT_Initialize 0070                     ?_Sensor_RawSample_Update 0070  
              StartStop_AlarmLED_Blink@OnOff 0070                   __end_of_Sensor_Acquisition 084B  
              _tmr2_required_counter_steps_g 00C6                      ?_Button_Baseline_Update 0070  
                    __end_of_TMR2_StartTimer 124F     TMR6_SetInterruptHandler@InterruptHandler 0070  
   TMR4_SetInterruptHandler@InterruptHandler 0070     TMR2_SetInterruptHandler@InterruptHandler 0070  
 IOCAF2_SetInterruptHandler@InterruptHandler 0070             TMR2_Drive_TRIAC_isr@counter_tmr2 00C4  
                           ?_PIN_MANAGER_IOC 0070                                 ??_IOCAF2_ISR 0070  
             SetDimmer@TRIAC_off_duration_ms 005E              MTOUCH_Sensor_RawSample_Get@name 0077  
                          _SYSTEM_Initialize 13F7                      __end_of__initialization 0050  
        __size_of_Button_Baseline_Initialize 002D               ?_MTOUCH_Sensor_Scan_Initialize 0070  
                         ?_SYSTEM_Initialize 0070                          _Button_StateMachine 00A0  
                                 ___fltol@f1 004F                   __end_of_Button_Tick_helper 16B0  
              MTOUCH_Sensor_Calibrate@sensor 0070                          ___bmul@multiplicand 0070  
                    ?_Sensor_setScanFunction 0070                                ??_StartHeater 0065  
                            ??_Init_Function 007E                               __pcstackCOMMON 0070  
                    _MTOUCH_Button_isPressed 14DC                                 __pidataBANK1 15D5  
                        ??_SYSTEM_Initialize 007C                                    ?_TMR2_ISR 0070  
                                  ?_TMR4_ISR 0070                   __end_of_MTOUCH_Button_Tick 1462  
                                  ?_TMR6_ISR 0070             __end_of_MTOUCH_Sensor_Initialize 139C  
                         _DimmerStatusFlag_g 006A                    ??_MTOUCH_Sensor_Calibrate 0070  
                           _Sensor_isEnabled 132D                             ?_TMR2_Initialize 0070  
                    __end_of_TMR6_Initialize 13D0              __end_of_Button_Deviation_Update 0B71  
                         __end_of_IOCAF2_ISR 1320                     Sensor_setInactive@sensor 0070  
                             _Button_Service 084B             __end_of_Sensor_Acq_ExecutePacket 08F0  
                 ?_Button_State_Initializing 007D                         Button_Service@button 0028  
                             _OPTION_REGbits 0095               __end_of_Button_Baseline_Update 0C00  
              ?_TMR4_DefaultInterruptHandler 0070                         Sensor_Service@sensor 0027  
                    StartStop_AlarmLED@OnOff 0070                  ?_IOCAF2_SetInterruptHandler 0070  
                   _MTOUCH_Button_Initialize 1730             ??_IOCAF2_DefaultInterruptHandler 0070  
            ?_IOCAF2_DefaultInterruptHandler 0070                               _Sensor_Service 17B3  
                          __end_of_SetDimmer 0AE7                      _Button_State_NotPressed 0C00  
              __size_of_MTOUCH_Sensor_Enable 0011                           _Sensor_setInactive 12A8  
                    __end_of_TMR4_StartTimer 1257                    __end_of_SYSTEM_Initialize 140C  
                          _lowpowerActivated 00CC             MTOUCH_Sensor_isCalibrated@sensor 0070  
                     ??_Sensor_Sampled_Reset 0070                                   __pbssBANK0 006A  
                                 __pbssBANK1 00C2                                   __pbssBANK2 0120  
                        ?_Sensor_setInactive 0070                             _Sensor_setActive 12A1  
                         Sensor_Service@name 0025                        _TMR4_InterruptHandler 00CF  
                 __end_of_mtouch_button_init 1820               __end_of_Sensor_setScanFunction 13BE  
                          __end_of__Umul8_16 1534                                   __pmaintext 15B4  
                              ?_MTOUCH_Delay 0070                                      ?___bmul 0070  
           __end_of_TMR6_SetInterruptHandler 1275                                   ??_TMR2_ISR 0070  
                                 ??_TMR4_ISR 0070                                   ??_TMR6_ISR 0070  
             MTOUCH_Sensor_wasSampled@sensor 0075                                   __pintentry 0004  
                     __end_of_Button_Service 089D                                      ?_memcpy 0070  
        __end_of_MTOUCH_Button_InitializeAll 14DC                  _MTOUCH_Button_InitializeAll 14C2  
                           ?_TMR4_Initialize 0070                                      _APFCON0 011D  
                                    _APFCON1 011E          __end_of_MTOUCH_Sensor_InitializeAll 080E  
                _MTOUCH_Sensor_InitializeAll 0800                    ??_MTOUCH_Sensor_SampleAll 0028  
                        __end_of_StartHeater 05E1              __end_of_Sensor_RawSample_Update 14C2  
                       ??_Sensor_setInactive 0070            __size_of_MTOUCH_Sensor_wasSampled 0014  
                  ?_MTOUCH_Sensor_wasSampled 0070            __end_of_Button_State_Initializing 0A09  
                     __end_of_Sensor_Service 1800            __size_of_StartStop_AlarmLED_Blink 000C  
                  ?_StartStop_AlarmLED_Blink 0070                     _MTOUCH_Button_ServiceAll 133A  
                           _StartStop_Dimmer 140C                      ?_Sensor_Acq_ExecuteScan 0070  
              MTOUCH_Sensor_SampleAll@sensor 0029                                      _OSCTUNE 0098  
           __size_of_MTOUCH_Service_Mainloop 0023                             _StartStop_Buzzer 12B9  
               __end_of_Button_State_Pressed 09A8                      __size_of_TMR2_StopTimer 0003  
                           ?_TMR2_StartTimer 0070             Button_Baseline_Initialize@button 007C  
                       __size_of_MTOUCH_Tick 0003                    ??_MTOUCH_Button_isPressed 0070  
                             ??_MTOUCH_Delay 0070                               _packet_counter 006C  
                 ??_TMR2_SetInterruptHandler 0072                __size_of_TMR2_Drive_TRIAC_isr 0025  
                    Sensor_Acquisition@retry 0021                      __size_of_TMR4_StopTimer 0003  
                            __size_of___bmul 0011                                      ___fladd 0E18  
                                    ___fldiv 0C9F                                      ___flmul 05E1  
                                    ___flsub 14F7                                      ___fltol 0A09  
             MTOUCH_Button_Initialize@button 0073                              ?_Button_Service 0070  
                            __size_of_memcpy 002B                             ?_TMR6_Initialize 0070  
                                    __ptext1 1664                                      __ptext2 0054  
                                    __ptext3 163F                                      __ptext4 15F7  
                                    __ptext5 0002                                      __ptext6 125A  
                                    __ptext7 144C                                      __ptext8 1689  
                                    __ptext9 1421                  Button_Reading_Update@button 007B  
                __size_of_MTOUCH_CVD_ScanA_0 0020                  __size_of_MTOUCH_CVD_ScanA_1 0020  
                __size_of_MTOUCH_CVD_ScanB_0 0020                  __size_of_MTOUCH_CVD_ScanB_1 0020  
                   _MTOUCH_Sensor_Initialize 138B               __end_of_Sensor_Acq_ExecuteScan 0949  
                      _OSCILLATOR_Initialize 127B                                    _T2CONbits 001C  
                               __size_of_abs 0017                    ??_Button_State_NotPressed 0020  
                            ?_Sensor_Service 0070                                    _T4CONbits 0417  
                   ??_PIN_MANAGER_Initialize 0072            __size_of_TMR4_SetInterruptHandler 0005  
                                  _IOCAFbits 0393                    ?_TMR4_SetInterruptHandler 0070  
                                  _IOCANbits 0392               __size_of_Button_Reading_Update 000D  
                                  _IOCAPbits 0391                  __size_of_MTOUCH_needReburst 0002  
              __end_of_Button_Reading_Update 132D            MTOUCH_Sensor_InitializeAll@sensor 0079  
                   _Sensor_Acq_ExecutePacket 089D                             _callback_sampled 00AE  
                 __size_of_SYSTEM_Initialize 0015                                      clrloop0 1288  
                           ?_TMR4_StartTimer 0070                             _callback_pressed 00A8  
             MTOUCH_Sensor_Initialize@sensor 0077                         end_of_initialization 0050  
             ??_TMR4_DefaultInterruptHandler 0070                      ?_Button_DefaultCallback 0070  
                         _StartStop_AlarmLED 12AF                                      memcpy@d 0079  
                      __end_of_StartStop_Fan 12CD                                      memcpy@n 0072  
                                    memcpy@s 0075                                      init_ram 128D  
                                    initloop 128E                      ?_Sensor_DefaultCallback 0070  
           __size_of_Button_Deviation_Update 008A                 ??_MTOUCH_Sensor_isCalibrated 0070  
                        ?_StartStop_AlarmLED 0070          __end_of_MTOUCH_Sensor_RawSample_Get 1479  
                _MTOUCH_Sensor_RawSample_Get 1462                                  _StartHeater 0054  
                        _mtouch_request_init 00CA                                MTOUCH_Delay@i 0071  
                           ??_WDT_Initialize 0070                        StartStop_Dimmer@OnOff 0062  
                                  _PORTCbits 000E                     _TMR6_SetInterruptHandler 1270  
                     Sensor_setActive@sensor 0070                                  ___fladd@grs 007B  
                       ??_StartStop_AlarmLED 0070                   __end_of_StopTouchDetection 1664  
              Button_Deviation_Update@button 0020                   MTOUCH_Sensor_Enable@sensor 0075  
                                ___fldiv@grs 0049                                  ___fldiv@rem 0042  
                        _callback_notPressed 00A6          __size_of_MTOUCH_Sensor_isCalibrated 0002  
             __end_of_Button_DefaultCallback 124C            __end_of_HalfCycleACDuration_const 1828  
                         _sensor_globalFlags 006E                       __size_of_MTOUCH_Random 0010  
                   __end_of_Sensor_isEnabled 133A               __end_of_Sensor_DefaultCallback 124D  
                         _Zero_Detection_isr 1293                                  ___flmul@grs 002A  
               Sensor_Acq_ExecuteScan@result 0076                           StartStop_Fan@OnOff 0070  
           __size_of_Sensor_RawSample_Update 0019                      SetDimmer@dim_percentage 005A  
                         _Sensor_Acquisition 080E                          ?_Zero_Detection_isr 0070  
               __size_of_StartTouchDetection 0025         __end_of_TMR2_DefaultInterruptHandler 1248  
      __size_of_TMR2_DefaultInterruptHandler 0001                 _TMR2_DefaultInterruptHandler 1247  
                       _Button_State_Pressed 0949                               __end_of___bmul 137A  
                        ?_Sensor_Acquisition 0070                   ??_MTOUCH_Button_Initialize 0070  
            ??_MTOUCH_Sensor_Scan_Initialize 0070                            __size_of_TMR2_ISR 000C  
                          __size_of_TMR4_ISR 000C                            __size_of_TMR6_ISR 000C  
              Sensor_Acq_ExecutePacket@error 007C                           _Button_Tick_helper 1689  
                             __end_of_memcpy 1703                       ?_OSCILLATOR_Initialize 0070  
                        MTOUCH_Button_Tick@i 0074                     __end_of_Sensor_setActive 12A8  
                ??_Button_State_Initializing 0020                          start_initialization 002F  
                    _MTOUCH_Service_Mainloop 15F7                         ??_Zero_Detection_isr 0070  
            __size_of_PIN_MANAGER_Initialize 0028                         __end_of_MTOUCH_Delay 12D7  
                         _MTOUCH_Button_Tick 144C                          ?_Button_Tick_helper 0070  
                                __end_of_abs 1490                               _TMR2_StopTimer 1251  
                       ??_Sensor_Acquisition 0020                          ?_MTOUCH_Button_Tick 0070  
                                  _SetDimmer 0A6E              Button_State_Initializing@button 007D  
                   __size_of_PIN_MANAGER_IOC 0006       __end_of_IOCAF2_DefaultInterruptHandler 1247  
    __size_of_IOCAF2_DefaultInterruptHandler 0001               _IOCAF2_DefaultInterruptHandler 1246  
           __end_of_MTOUCH_Sensor_wasSampled 13F7                     __end_of_StartStop_Dimmer 1421  
                       ??_Button_Tick_helper 0070                 __end_of_MTOUCH_Sensor_Enable 138B  
                             _TMR4_StopTimer 1257                                     ??___bmul 0071  
           __end_of_StartStop_AlarmLED_Blink 1313                     __end_of_StartStop_Buzzer 12C3  
                      ?_Button_State_Pressed 007D                        __end_of_Init_Function 144C  
                                  __Umul8_16 1515                   ??_MTOUCH_Button_ServiceAll 0029  
                                __pdataBANK1 00A0                                _MTOUCH_Random 1359  
                                   ??_memcpy 0074                 ??_Button_Baseline_Initialize 0078  
              ?_TMR2_DefaultInterruptHandler 0070                         ??_MTOUCH_Button_Tick 0073  
                         _mtouch_button_init 1800                   Sensor_Sampled_Reset@sensor 0070  
                                  ___fladd@a 0074                                    ___fladd@b 0070  
                                  ___fldiv@a 0035                                    ___fldiv@b 0039  
                     __end_of_TMR2_StopTimer 1254                                    ___flmul@a 0024  
                                  ___flmul@b 0020                                    ___flsub@a 004F  
                                  ___flsub@b 0053                                    ___latbits 0002  
                              __pcstackBANK0 0020              __end_of_TMR2_Timer_Period_const 1824  
                   __size_of_TMR2_Initialize 0010               MTOUCH_Button_ServiceAll@button 002A  
                        Sensor_Service@error 0026                __size_of_Sensor_Sampled_Reset 0007  
                                 ?_SetDimmer 005A                      _Button_Deviation_Update 0AE7  
                  _Button_State_Initializing 09A8           __end_of_MTOUCH_Sensor_isCalibrated 1251  
                 _MTOUCH_Sensor_isCalibrated 124F                        _TMR6_InterruptHandler 00CD  
                                  __pnvBANK1 00CD                            _Sensor_setSampled 07F9  
                     __end_of_TMR4_StopTimer 125A                       _PIN_MANAGER_Initialize 16B0  
                           ??_Button_Service 0025                     ?_MTOUCH_Sensor_Calibrate 0070  
                         ?_Sensor_setSampled 0070           Button_Reading_Update_Helper@button 007A  
                 ??_MTOUCH_Sensor_Initialize 0076                                     ?___fladd 0070  
           __end_of_TMR4_SetInterruptHandler 1270                                     ?___fldiv 0035  
                                   ?___flmul 0020                                     ?___flsub 004F  
                                   ?___fltol 004F                               ?_MTOUCH_Random 0070  
                                 ?__Umul8_16 0070                             ??_Sensor_Service 0023  
                 ??_Sensor_Acq_ExecutePacket 0078                 ??_INTERRUPT_InterruptManager 0070  
                        ??_Sensor_setSampled 0070                    ??_MTOUCH_Service_Mainloop 002B  
                __size_of_Sensor_setInactive 0007                              ?_TMR2_StopTimer 0070  
             Sensor_Acq_ExecutePacket@sensor 007D                 __end_of_TMR2_Drive_TRIAC_isr 163F  
                              ??_MTOUCH_Tick 0075                     __size_of_TMR4_Initialize 0011  
                  __end_of_Sensor_setSampled 0800                                     _LATCbits 010E  
                         _currentScannSensor 006D                      _Sensor_RawSample_Update 14A9  
                                  clear_ram0 1287                                     _PIE1bits 0091  
                                   _PIE3bits 0093                     __size_of_TMR2_StartTimer 0002  
                            ?_TMR4_StopTimer 0070          __size_of_INTERRUPT_InterruptManager 0029  
                                   _PIR1bits 0011                                     _PIR3bits 0013  
                     ??_Button_State_Pressed 0020                   ??_TMR6_SetInterruptHandler 0072  
                               ?_StartHeater 0070       __end_of_MTOUCH_Sensor_Sampled_ResetAll 13E3  
    __size_of_MTOUCH_Sensor_Sampled_ResetAll 0013               _MTOUCH_Sensor_Sampled_ResetAll 13D0  
                   ?_MTOUCH_Sensor_SampleAll 0070                                     _TMR2_ISR 12D7  
                                   _TMR4_ISR 12E3                                     _TMR6_ISR 12EF  
                          ??_PIN_MANAGER_IOC 0070                     _MTOUCH_Sensor_wasSampled 13E3  
                         _mtouch_time_toScan 00CB                   __end_of_MTOUCH_CVD_ScanA_0 1574  
                 __end_of_MTOUCH_CVD_ScanA_1 1554                   __end_of_MTOUCH_CVD_ScanB_0 15B4  
                 __end_of_MTOUCH_CVD_ScanB_1 1594                     ??_Button_Baseline_Update 0070  
                   _StartStop_AlarmLED_Blink 1307                                   _ADCON0bits 009D  
                      __size_of_MTOUCH_Delay 000A                   __end_of_MTOUCH_needReburst 0004  
             ??_TMR2_DefaultInterruptHandler 0070            __size_of_TMR2_SetInterruptHandler 0005  
                  ?_TMR2_SetInterruptHandler 0070                     __size_of_TMR6_Initialize 0012  
                       _MTOUCH_Sensor_Enable 137A                          _StartTouchDetection 1664  
                   Button_Tick_helper@button 0072                    ??_Button_Deviation_Update 0070  
                      _Button_Reading_Update 1320                     ??_Sensor_setScanFunction 0070  
                   ?_MTOUCH_Button_isPressed 0070                                  ??_SetDimmer 007E  
                          ?_Sensor_isEnabled 0070                            ??_TMR2_Initialize 0072  
                        __end_of_MTOUCH_Tick 125D                        StartStop_Buzzer@OnOff 0070  
                          _MTOUCH_Initialize 12FB              __end_of_MTOUCH_Sensor_Calibrate 124B  
                         _StopTouchDetection 163F                           ??_Sensor_isEnabled 0070  
                   __size_of_TMR4_StartTimer 0003                           ?_MTOUCH_Initialize 0070  
                                  memcpy@tmp 0077                              ??_MTOUCH_Random 0070  
                               _MTOUCH_Delay 12CD                                 _sample_delay 006B  
                       ?_StartTouchDetection 0070                    _HalfCycleACDuration_const 1824  
                        ?_StopTouchDetection 0070                      ??_OSCILLATOR_Initialize 0070  
         __end_of_Button_Baseline_Initialize 1730                   _Button_Baseline_Initialize 1703  
                   Sensor_Acquisition@sensor 0022                                  ??__Umul8_16 0072  
                           __size_of___fladd 01E8                          ??_MTOUCH_Initialize 007C  
                           __size_of___fldiv 0179                             __size_of___flmul 0218  
                           __size_of___flsub 001E                             __size_of___fltol 0065  
                   ?_Button_State_NotPressed 007D                     _TMR4_SetInterruptHandler 126B  
                     __size_of_StartStop_Fan 000A                           Button_Service@name 0027  
                          ?_Sensor_setActive 0070                      _IOCAF2_InterruptHandler 00D3  
                               _Sensor_scanA 00AC                                 _Sensor_scanB 00AA  
                __size_of_StartStop_AlarmLED 000A                           ??_Sensor_setActive 0070  
                      ?_MTOUCH_Sensor_Enable 0070                 ??_IOCAF2_SetInterruptHandler 0072  
                                   __ptext10 17B3                                     __ptext11 07F9  
                                   __ptext20 13AD                                     __ptext12 14A9  
                                   __ptext21 08F0                                     __ptext13 124C  
                                   __ptext30 13E3                                     __ptext22 1594  
                                   __ptext14 080E                                     __ptext31 124F  
                                   __ptext23 1574                                     __ptext15 1479  
                                   __ptext40 1462                                     __ptext32 0C00  
                                   __ptext24 1554                                     __ptext16 12A8  
                                   __ptext41 0AE7                                     __ptext33 09A8  
                                   __ptext25 1534                                     __ptext17 12A1  
                                   __ptext50 05E1                                     __ptext42 14DC  
                                   __ptext34 0949                                     __ptext26 1359  
                                   __ptext18 132D                                     __ptext51 1515  
                                   __ptext43 1436                                     __ptext35 124B  
                                   __ptext27 12CD                                     __ptext19 089D  
                                   __ptext60 13BE                                     __ptext52 0C9F  
                                   __ptext44 12C3                                     __ptext36 0B71  
                                   __ptext28 133A                                     __ptext61 1270  
                                   __ptext53 12B9                                     __ptext45 140C  
                                   __ptext37 1703                                     __ptext29 084B  
                                   __ptext70 1261                                     __ptext62 139C  
                                   __ptext54 1307                                     __ptext46 0A6E  
                                   __ptext38 1320                                     __ptext71 13D0  
                                   __ptext63 126B                                     __ptext55 1257  
                                   __ptext47 0A09                                     __ptext39 1766  
                                   __ptext80 124A                                     __ptext72 0800  
                                   __ptext64 1349                                     __ptext56 1254  
                                   __ptext48 14F7                                     __ptext73 138B  
                                   __ptext65 1266                                     __ptext57 12AF  
                                   __ptext49 0E18                                     __ptext90 1251  
                                   __ptext82 12EF                                     __ptext74 129A  
                                   __ptext66 16B0                                     __ptext58 13F7  
                                   __ptext91 1275                                     __ptext83 1249  
                                   __ptext75 137A                                     __ptext67 1281  
                                   __ptext59 125D                                     __ptext92 1313  
                                   __ptext84 12E3                                     __ptext76 1369  
                                   __ptext68 127B                                     __ptext93 1246  
                                   __ptext85 1248                                     __ptext77 14C2  
                                   __ptext69 12FB                                     __ptext94 1293  
                                   __ptext86 1490                                     __ptext78 16D8  
                                   __ptext95 124D                                     __ptext87 12D7  
                                   __ptext79 1730                                     __ptext88 1247  
                                   __ptext89 161A                         ??_StopTouchDetection 0063  
                                 _IOCAF2_ISR 1313                    __end_of_MTOUCH_Initialize 1307  
                  ??_Sensor_RawSample_Update 0070          Sensor_Acq_ExecutePacket@ADCON0_temp 0079  
        Sensor_Acq_ExecutePacket@ADCON1_temp 007A                   __size_of_Sensor_setSampled 0007  
                          ??_TMR4_Initialize 0072                                __size_of_main 0021  
            __end_of_MTOUCH_Sensor_SampleAll 1436                        ??_StartTouchDetection 0068  
               Sensor_setScanFunction@sensor 0070                            ?_StartStop_Dimmer 0070  
                       _TMR2_Drive_TRIAC_isr 161A                                     int$flags 007E  
                          ?_StartStop_Buzzer 0070                     ??_Sensor_Acq_ExecuteScan 0074  
                         ??_StartStop_Dimmer 007E           __size_of_Button_State_Initializing 0061  
                          ??_TMR2_StartTimer 0070           __end_of_INTERRUPT_InterruptManager 002D  
                 _INTERRUPT_InterruptManager 0004            Sensor_Acq_ExecutePacket@GIE_state 007B  
                         ??_StartStop_Buzzer 0070          __size_of_IOCAF2_SetInterruptHandler 0006  
            __size_of_Button_Baseline_Update 008F                 ?_MTOUCH_Button_InitializeAll 0070  
               ?_MTOUCH_Sensor_InitializeAll 0070                                _mtouch_button 0120  
                                 _INTCONbits 000B                                _mtouch_sensor 00B0  
                                   memcpy@d1 0078                                     memcpy@s1 0070  
                __size_of_Zero_Detection_isr 0007              __end_of_MTOUCH_Button_isPressed 14F7  
                                _MTOUCH_Tick 125A                       ?_Button_Reading_Update 0070  
       __end_of_TMR6_DefaultInterruptHandler 124A        __size_of_TMR6_DefaultInterruptHandler 0001  
               _TMR6_DefaultInterruptHandler 1249             Button_Deviation_Update@deviation 0021  
                    __size_of_WDT_Initialize 0004                 MTOUCH_Button_Initialize@name 0072  
          __size_of_MTOUCH_Button_Initialize 0036                                     intlevel1 0000  
                  ?_MTOUCH_Button_Initialize 0070                  __size_of_Sensor_Acquisition 003D  
            __size_of_Sensor_setScanFunction 0011                      ?_PIN_MANAGER_Initialize 0070  
                              _StartStop_Fan 12C3                            ??_TMR6_Initialize 0072  
                ?_MTOUCH_Sensor_isCalibrated 0070                            MTOUCH_Random@seed 006F  
                      ?_TMR2_Drive_TRIAC_isr 0070                  __size_of_Button_Tick_helper 0027  
            __end_of_Button_State_NotPressed 0C9F                         __size_of_StartHeater 058D  
                          ??_TMR4_StartTimer 0070                 __end_of_Sensor_Sampled_Reset 12A1  
                           ??_TMR2_StopTimer 0070                  __size_of_MTOUCH_Button_Tick 0016  
                              __pstringtext1 1820                                __pstringtext2 1800  
                              __pstringtext3 1824                       __Umul8_16@multiplicand 0070  
              ??_MTOUCH_Button_InitializeAll 007A                     ??_Button_DefaultCallback 0071  
              ??_MTOUCH_Sensor_InitializeAll 0078             __size_of_MTOUCH_Sensor_Calibrate 0001  
                     ??_MTOUCH_Sensor_Enable 0074                     ??_Sensor_DefaultCallback 0071  
       __end_of_Button_Reading_Update_Helper 17B3        __size_of_Button_Reading_Update_Helper 004D  
               _Button_Reading_Update_Helper 1766                                ___fladd@signs 0078  
          __size_of_MTOUCH_Button_ServiceAll 000F                    ?_MTOUCH_Button_ServiceAll 0070  
              Button_State_NotPressed@button 007D                                  ?_IOCAF2_ISR 0070  
                 __size_of_MTOUCH_Initialize 000C                       __size_of_Init_Function 0016  
             __end_of_PIN_MANAGER_Initialize 16D8                             ??_TMR4_StopTimer 0070  
              ?_TMR6_DefaultInterruptHandler 0070                       _Button_Baseline_Update 0B71  
                             ?_StartStop_Fan 0070                                 ___fladd@aexp 0079  
                               ___fladd@bexp 007A                              _PIN_MANAGER_IOC 1275  
                MTOUCH_Button_isPressed@name 0071                         __Umul8_16@multiplier 0078  
                      _TMR2_InterruptHandler 00D1                   ??_MTOUCH_Sensor_wasSampled 0074  
                 ??_StartStop_AlarmLED_Blink 0070                            __Umul8_16@product 0074  
                    _TMR2_Timer_Period_const 1820  
