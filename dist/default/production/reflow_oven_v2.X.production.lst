

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jul 23 18:40:16 2023

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    25                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    26                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    27                           	psect	inittext,global,class=CODE,delta=2
    28                           	psect	clrtext,global,class=CODE,delta=2
    29                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    34                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text15,local,class=CODE,merge=1,delta=2
    49                           	psect	text16,local,class=CODE,merge=1,delta=2
    50                           	psect	text17,local,class=CODE,merge=1,delta=2
    51                           	psect	text18,local,class=CODE,merge=1,delta=2
    52                           	psect	text19,local,class=CODE,merge=1,delta=2
    53                           	psect	text20,local,class=CODE,merge=1,delta=2
    54                           	psect	text21,local,class=CODE,merge=1,delta=2
    55                           	psect	text22,local,class=CODE,merge=1,delta=2
    56                           	psect	text23,local,class=CODE,merge=1,delta=2
    57                           	psect	text24,local,class=CODE,merge=1,delta=2
    58                           	psect	text25,local,class=CODE,merge=1,delta=2
    59                           	psect	text26,local,class=CODE,merge=1,delta=2
    60                           	psect	text27,local,class=CODE,merge=1,delta=2
    61                           	psect	text28,local,class=CODE,merge=1,delta=2
    62                           	psect	text29,local,class=CODE,merge=1,delta=2
    63                           	psect	text30,local,class=CODE,merge=1,delta=2
    64                           	psect	text31,local,class=CODE,merge=1,delta=2
    65                           	psect	text32,local,class=CODE,merge=1,delta=2
    66                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text34,local,class=CODE,merge=1,delta=2
    68                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text36,local,class=CODE,merge=1,delta=2
    70                           	psect	text37,local,class=CODE,merge=1,delta=2,group=3
    71                           	psect	text38,local,class=CODE,merge=1,delta=2
    72                           	psect	text39,local,class=CODE,merge=1,delta=2
    73                           	psect	text40,local,class=CODE,merge=1,delta=2
    74                           	psect	text41,local,class=CODE,merge=1,delta=2
    75                           	psect	text42,local,class=CODE,merge=1,delta=2
    76                           	psect	text43,local,class=CODE,merge=1,delta=2
    77                           	psect	text44,local,class=CODE,merge=1,delta=2
    78                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text47,local,class=CODE,merge=1,delta=2
    81                           	psect	text48,local,class=CODE,merge=1,delta=2
    82                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text50,local,class=CODE,merge=1,delta=2,group=3
    84                           	psect	text51,local,class=CODE,merge=1,delta=2,group=3
    85                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text56,local,class=CODE,merge=1,delta=2
    90                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text59,local,class=CODE,merge=1,delta=2
    93                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text61,local,class=CODE,merge=1,delta=2
    95                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text65,local,class=CODE,merge=1,delta=2
    99                           	psect	text66,local,class=CODE,merge=1,delta=2,group=2
   100                           	psect	text67,local,class=CODE,merge=1,delta=2,group=2
   101                           	psect	text68,local,class=CODE,merge=1,delta=2,group=2
   102                           	psect	text69,local,class=CODE,merge=1,delta=2,group=2
   103                           	psect	text70,local,class=CODE,merge=1,delta=2,group=2
   104                           	psect	text71,local,class=CODE,merge=1,delta=2,group=2
   105                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text74,local,class=CODE,merge=1,delta=2
   108                           	psect	text75,local,class=CODE,merge=1,delta=2
   109                           	psect	intentry,global,class=CODE,delta=2
   110                           	psect	text77,local,class=CODE,merge=1,delta=2
   111                           	psect	text78,local,class=CODE,merge=1,delta=2
   112                           	psect	text79,local,class=CODE,merge=1,delta=2
   113                           	psect	text80,local,class=CODE,merge=1,delta=2
   114                           	psect	text81,local,class=CODE,merge=1,delta=2
   115                           	psect	text82,local,class=CODE,merge=1,delta=2
   116                           	psect	text83,local,class=CODE,merge=1,delta=2
   117                           	psect	text84,local,class=CODE,merge=1,delta=2
   118                           	psect	text85,local,class=CODE,merge=1,delta=2
   119                           	psect	text86,local,class=CODE,merge=1,delta=2
   120                           	psect	text87,local,class=CODE,merge=1,delta=2
   121                           	psect	text88,local,class=CODE,merge=1,delta=2
   122                           	psect	text89,local,class=CODE,merge=1,delta=2
   123                           	psect	text90,local,class=CODE,merge=1,delta=2
   124                           	psect	text91,local,class=CODE,merge=1,delta=2
   125                           	psect	text92,local,class=CODE,merge=1,delta=2
   126                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   127                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   128                           	dabs	1,0x7E,2
   129  0000                     
   130                           ; Version 2.40
   131                           ; Generated 17/11/2021 GMT
   132                           ; 
   133                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   134                           ; All rights reserved.
   135                           ; 
   136                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   137                           ; 
   138                           ; Redistribution and use in source and binary forms, with or without modification, are
   139                           ; permitted provided that the following conditions are met:
   140                           ; 
   141                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   142                           ;        conditions and the following disclaimer.
   143                           ; 
   144                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   145                           ;        of conditions and the following disclaimer in the documentation and/or other
   146                           ;        materials provided with the distribution. Publication is not required when
   147                           ;        this file is used in an embedded application.
   148                           ; 
   149                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   150                           ;        software without specific prior written permission.
   151                           ; 
   152                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   153                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   154                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   155                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   156                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   157                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   158                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   159                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   160                           ; 
   161                           ; 
   162                           ; Code-generator required, PIC16F1829 Definitions
   163                           ; 
   164                           ; SFR Addresses
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  008C                     	;# 
   196  008D                     	;# 
   197  008E                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  0111                     	;# 
   217  0112                     	;# 
   218  0113                     	;# 
   219  0114                     	;# 
   220  0115                     	;# 
   221  0116                     	;# 
   222  0117                     	;# 
   223  0118                     	;# 
   224  0119                     	;# 
   225  011A                     	;# 
   226  011B                     	;# 
   227  011D                     	;# 
   228  011E                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  018E                     	;# 
   232  0191                     	;# 
   233  0191                     	;# 
   234  0192                     	;# 
   235  0193                     	;# 
   236  0193                     	;# 
   237  0193                     	;# 
   238  0194                     	;# 
   239  0195                     	;# 
   240  0196                     	;# 
   241  0199                     	;# 
   242  019A                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019C                     	;# 
   246  019D                     	;# 
   247  019E                     	;# 
   248  019F                     	;# 
   249  020C                     	;# 
   250  020D                     	;# 
   251  020E                     	;# 
   252  0211                     	;# 
   253  0211                     	;# 
   254  0212                     	;# 
   255  0212                     	;# 
   256  0213                     	;# 
   257  0213                     	;# 
   258  0214                     	;# 
   259  0214                     	;# 
   260  0215                     	;# 
   261  0215                     	;# 
   262  0215                     	;# 
   263  0216                     	;# 
   264  0216                     	;# 
   265  0217                     	;# 
   266  0217                     	;# 
   267  0219                     	;# 
   268  021A                     	;# 
   269  021B                     	;# 
   270  021C                     	;# 
   271  021D                     	;# 
   272  021E                     	;# 
   273  021F                     	;# 
   274  0291                     	;# 
   275  0291                     	;# 
   276  0292                     	;# 
   277  0293                     	;# 
   278  0294                     	;# 
   279  0295                     	;# 
   280  0295                     	;# 
   281  0296                     	;# 
   282  0298                     	;# 
   283  0298                     	;# 
   284  0299                     	;# 
   285  029A                     	;# 
   286  029B                     	;# 
   287  029C                     	;# 
   288  029D                     	;# 
   289  029E                     	;# 
   290  0311                     	;# 
   291  0311                     	;# 
   292  0312                     	;# 
   293  0313                     	;# 
   294  0318                     	;# 
   295  0318                     	;# 
   296  0319                     	;# 
   297  031A                     	;# 
   298  038C                     	;# 
   299  038D                     	;# 
   300  038E                     	;# 
   301  0391                     	;# 
   302  0392                     	;# 
   303  0393                     	;# 
   304  0394                     	;# 
   305  0395                     	;# 
   306  0396                     	;# 
   307  039A                     	;# 
   308  039C                     	;# 
   309  039D                     	;# 
   310  039E                     	;# 
   311  039F                     	;# 
   312  0415                     	;# 
   313  0416                     	;# 
   314  0417                     	;# 
   315  041C                     	;# 
   316  041D                     	;# 
   317  041E                     	;# 
   318  0FE4                     	;# 
   319  0FE5                     	;# 
   320  0FE6                     	;# 
   321  0FE7                     	;# 
   322  0FE8                     	;# 
   323  0FE9                     	;# 
   324  0FEA                     	;# 
   325  0FEB                     	;# 
   326  0FED                     	;# 
   327  0FEE                     	;# 
   328  0FEF                     	;# 
   329  0000                     	;# 
   330  0001                     	;# 
   331  0002                     	;# 
   332  0003                     	;# 
   333  0004                     	;# 
   334  0005                     	;# 
   335  0006                     	;# 
   336  0007                     	;# 
   337  0008                     	;# 
   338  0009                     	;# 
   339  000A                     	;# 
   340  000B                     	;# 
   341  000C                     	;# 
   342  000D                     	;# 
   343  000E                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0016                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001C                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  008C                     	;# 
   360  008D                     	;# 
   361  008E                     	;# 
   362  0091                     	;# 
   363  0092                     	;# 
   364  0093                     	;# 
   365  0094                     	;# 
   366  0095                     	;# 
   367  0096                     	;# 
   368  0097                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009B                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  0111                     	;# 
   381  0112                     	;# 
   382  0113                     	;# 
   383  0114                     	;# 
   384  0115                     	;# 
   385  0116                     	;# 
   386  0117                     	;# 
   387  0118                     	;# 
   388  0119                     	;# 
   389  011A                     	;# 
   390  011B                     	;# 
   391  011D                     	;# 
   392  011E                     	;# 
   393  018C                     	;# 
   394  018D                     	;# 
   395  018E                     	;# 
   396  0191                     	;# 
   397  0191                     	;# 
   398  0192                     	;# 
   399  0193                     	;# 
   400  0193                     	;# 
   401  0193                     	;# 
   402  0194                     	;# 
   403  0195                     	;# 
   404  0196                     	;# 
   405  0199                     	;# 
   406  019A                     	;# 
   407  019B                     	;# 
   408  019B                     	;# 
   409  019C                     	;# 
   410  019D                     	;# 
   411  019E                     	;# 
   412  019F                     	;# 
   413  020C                     	;# 
   414  020D                     	;# 
   415  020E                     	;# 
   416  0211                     	;# 
   417  0211                     	;# 
   418  0212                     	;# 
   419  0212                     	;# 
   420  0213                     	;# 
   421  0213                     	;# 
   422  0214                     	;# 
   423  0214                     	;# 
   424  0215                     	;# 
   425  0215                     	;# 
   426  0215                     	;# 
   427  0216                     	;# 
   428  0216                     	;# 
   429  0217                     	;# 
   430  0217                     	;# 
   431  0219                     	;# 
   432  021A                     	;# 
   433  021B                     	;# 
   434  021C                     	;# 
   435  021D                     	;# 
   436  021E                     	;# 
   437  021F                     	;# 
   438  0291                     	;# 
   439  0291                     	;# 
   440  0292                     	;# 
   441  0293                     	;# 
   442  0294                     	;# 
   443  0295                     	;# 
   444  0295                     	;# 
   445  0296                     	;# 
   446  0298                     	;# 
   447  0298                     	;# 
   448  0299                     	;# 
   449  029A                     	;# 
   450  029B                     	;# 
   451  029C                     	;# 
   452  029D                     	;# 
   453  029E                     	;# 
   454  0311                     	;# 
   455  0311                     	;# 
   456  0312                     	;# 
   457  0313                     	;# 
   458  0318                     	;# 
   459  0318                     	;# 
   460  0319                     	;# 
   461  031A                     	;# 
   462  038C                     	;# 
   463  038D                     	;# 
   464  038E                     	;# 
   465  0391                     	;# 
   466  0392                     	;# 
   467  0393                     	;# 
   468  0394                     	;# 
   469  0395                     	;# 
   470  0396                     	;# 
   471  039A                     	;# 
   472  039C                     	;# 
   473  039D                     	;# 
   474  039E                     	;# 
   475  039F                     	;# 
   476  0415                     	;# 
   477  0416                     	;# 
   478  0417                     	;# 
   479  041C                     	;# 
   480  041D                     	;# 
   481  041E                     	;# 
   482  0FE4                     	;# 
   483  0FE5                     	;# 
   484  0FE6                     	;# 
   485  0FE7                     	;# 
   486  0FE8                     	;# 
   487  0FE9                     	;# 
   488  0FEA                     	;# 
   489  0FEB                     	;# 
   490  0FED                     	;# 
   491  0FEE                     	;# 
   492  0FEF                     	;# 
   493  0000                     	;# 
   494  0001                     	;# 
   495  0002                     	;# 
   496  0003                     	;# 
   497  0004                     	;# 
   498  0005                     	;# 
   499  0006                     	;# 
   500  0007                     	;# 
   501  0008                     	;# 
   502  0009                     	;# 
   503  000A                     	;# 
   504  000B                     	;# 
   505  000C                     	;# 
   506  000D                     	;# 
   507  000E                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0014                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001E                     	;# 
   522  001F                     	;# 
   523  008C                     	;# 
   524  008D                     	;# 
   525  008E                     	;# 
   526  0091                     	;# 
   527  0092                     	;# 
   528  0093                     	;# 
   529  0094                     	;# 
   530  0095                     	;# 
   531  0096                     	;# 
   532  0097                     	;# 
   533  0098                     	;# 
   534  0099                     	;# 
   535  009A                     	;# 
   536  009B                     	;# 
   537  009B                     	;# 
   538  009C                     	;# 
   539  009D                     	;# 
   540  009E                     	;# 
   541  010C                     	;# 
   542  010D                     	;# 
   543  010E                     	;# 
   544  0111                     	;# 
   545  0112                     	;# 
   546  0113                     	;# 
   547  0114                     	;# 
   548  0115                     	;# 
   549  0116                     	;# 
   550  0117                     	;# 
   551  0118                     	;# 
   552  0119                     	;# 
   553  011A                     	;# 
   554  011B                     	;# 
   555  011D                     	;# 
   556  011E                     	;# 
   557  018C                     	;# 
   558  018D                     	;# 
   559  018E                     	;# 
   560  0191                     	;# 
   561  0191                     	;# 
   562  0192                     	;# 
   563  0193                     	;# 
   564  0193                     	;# 
   565  0193                     	;# 
   566  0194                     	;# 
   567  0195                     	;# 
   568  0196                     	;# 
   569  0199                     	;# 
   570  019A                     	;# 
   571  019B                     	;# 
   572  019B                     	;# 
   573  019C                     	;# 
   574  019D                     	;# 
   575  019E                     	;# 
   576  019F                     	;# 
   577  020C                     	;# 
   578  020D                     	;# 
   579  020E                     	;# 
   580  0211                     	;# 
   581  0211                     	;# 
   582  0212                     	;# 
   583  0212                     	;# 
   584  0213                     	;# 
   585  0213                     	;# 
   586  0214                     	;# 
   587  0214                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0216                     	;# 
   592  0216                     	;# 
   593  0217                     	;# 
   594  0217                     	;# 
   595  0219                     	;# 
   596  021A                     	;# 
   597  021B                     	;# 
   598  021C                     	;# 
   599  021D                     	;# 
   600  021E                     	;# 
   601  021F                     	;# 
   602  0291                     	;# 
   603  0291                     	;# 
   604  0292                     	;# 
   605  0293                     	;# 
   606  0294                     	;# 
   607  0295                     	;# 
   608  0295                     	;# 
   609  0296                     	;# 
   610  0298                     	;# 
   611  0298                     	;# 
   612  0299                     	;# 
   613  029A                     	;# 
   614  029B                     	;# 
   615  029C                     	;# 
   616  029D                     	;# 
   617  029E                     	;# 
   618  0311                     	;# 
   619  0311                     	;# 
   620  0312                     	;# 
   621  0313                     	;# 
   622  0318                     	;# 
   623  0318                     	;# 
   624  0319                     	;# 
   625  031A                     	;# 
   626  038C                     	;# 
   627  038D                     	;# 
   628  038E                     	;# 
   629  0391                     	;# 
   630  0392                     	;# 
   631  0393                     	;# 
   632  0394                     	;# 
   633  0395                     	;# 
   634  0396                     	;# 
   635  039A                     	;# 
   636  039C                     	;# 
   637  039D                     	;# 
   638  039E                     	;# 
   639  039F                     	;# 
   640  0415                     	;# 
   641  0416                     	;# 
   642  0417                     	;# 
   643  041C                     	;# 
   644  041D                     	;# 
   645  041E                     	;# 
   646  0FE4                     	;# 
   647  0FE5                     	;# 
   648  0FE6                     	;# 
   649  0FE7                     	;# 
   650  0FE8                     	;# 
   651  0FE9                     	;# 
   652  0FEA                     	;# 
   653  0FEB                     	;# 
   654  0FED                     	;# 
   655  0FEE                     	;# 
   656  0FEF                     	;# 
   657  0000                     	;# 
   658  0001                     	;# 
   659  0002                     	;# 
   660  0003                     	;# 
   661  0004                     	;# 
   662  0005                     	;# 
   663  0006                     	;# 
   664  0007                     	;# 
   665  0008                     	;# 
   666  0009                     	;# 
   667  000A                     	;# 
   668  000B                     	;# 
   669  000C                     	;# 
   670  000D                     	;# 
   671  000E                     	;# 
   672  0011                     	;# 
   673  0012                     	;# 
   674  0013                     	;# 
   675  0014                     	;# 
   676  0015                     	;# 
   677  0016                     	;# 
   678  0016                     	;# 
   679  0017                     	;# 
   680  0018                     	;# 
   681  0019                     	;# 
   682  001A                     	;# 
   683  001B                     	;# 
   684  001C                     	;# 
   685  001E                     	;# 
   686  001F                     	;# 
   687  008C                     	;# 
   688  008D                     	;# 
   689  008E                     	;# 
   690  0091                     	;# 
   691  0092                     	;# 
   692  0093                     	;# 
   693  0094                     	;# 
   694  0095                     	;# 
   695  0096                     	;# 
   696  0097                     	;# 
   697  0098                     	;# 
   698  0099                     	;# 
   699  009A                     	;# 
   700  009B                     	;# 
   701  009B                     	;# 
   702  009C                     	;# 
   703  009D                     	;# 
   704  009E                     	;# 
   705  010C                     	;# 
   706  010D                     	;# 
   707  010E                     	;# 
   708  0111                     	;# 
   709  0112                     	;# 
   710  0113                     	;# 
   711  0114                     	;# 
   712  0115                     	;# 
   713  0116                     	;# 
   714  0117                     	;# 
   715  0118                     	;# 
   716  0119                     	;# 
   717  011A                     	;# 
   718  011B                     	;# 
   719  011D                     	;# 
   720  011E                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  018E                     	;# 
   724  0191                     	;# 
   725  0191                     	;# 
   726  0192                     	;# 
   727  0193                     	;# 
   728  0193                     	;# 
   729  0193                     	;# 
   730  0194                     	;# 
   731  0195                     	;# 
   732  0196                     	;# 
   733  0199                     	;# 
   734  019A                     	;# 
   735  019B                     	;# 
   736  019B                     	;# 
   737  019C                     	;# 
   738  019D                     	;# 
   739  019E                     	;# 
   740  019F                     	;# 
   741  020C                     	;# 
   742  020D                     	;# 
   743  020E                     	;# 
   744  0211                     	;# 
   745  0211                     	;# 
   746  0212                     	;# 
   747  0212                     	;# 
   748  0213                     	;# 
   749  0213                     	;# 
   750  0214                     	;# 
   751  0214                     	;# 
   752  0215                     	;# 
   753  0215                     	;# 
   754  0215                     	;# 
   755  0216                     	;# 
   756  0216                     	;# 
   757  0217                     	;# 
   758  0217                     	;# 
   759  0219                     	;# 
   760  021A                     	;# 
   761  021B                     	;# 
   762  021C                     	;# 
   763  021D                     	;# 
   764  021E                     	;# 
   765  021F                     	;# 
   766  0291                     	;# 
   767  0291                     	;# 
   768  0292                     	;# 
   769  0293                     	;# 
   770  0294                     	;# 
   771  0295                     	;# 
   772  0295                     	;# 
   773  0296                     	;# 
   774  0298                     	;# 
   775  0298                     	;# 
   776  0299                     	;# 
   777  029A                     	;# 
   778  029B                     	;# 
   779  029C                     	;# 
   780  029D                     	;# 
   781  029E                     	;# 
   782  0311                     	;# 
   783  0311                     	;# 
   784  0312                     	;# 
   785  0313                     	;# 
   786  0318                     	;# 
   787  0318                     	;# 
   788  0319                     	;# 
   789  031A                     	;# 
   790  038C                     	;# 
   791  038D                     	;# 
   792  038E                     	;# 
   793  0391                     	;# 
   794  0392                     	;# 
   795  0393                     	;# 
   796  0394                     	;# 
   797  0395                     	;# 
   798  0396                     	;# 
   799  039A                     	;# 
   800  039C                     	;# 
   801  039D                     	;# 
   802  039E                     	;# 
   803  039F                     	;# 
   804  0415                     	;# 
   805  0416                     	;# 
   806  0417                     	;# 
   807  041C                     	;# 
   808  041D                     	;# 
   809  041E                     	;# 
   810  0FE4                     	;# 
   811  0FE5                     	;# 
   812  0FE6                     	;# 
   813  0FE7                     	;# 
   814  0FE8                     	;# 
   815  0FE9                     	;# 
   816  0FEA                     	;# 
   817  0FEB                     	;# 
   818  0FED                     	;# 
   819  0FEE                     	;# 
   820  0FEF                     	;# 
   821  0000                     	;# 
   822  0001                     	;# 
   823  0002                     	;# 
   824  0003                     	;# 
   825  0004                     	;# 
   826  0005                     	;# 
   827  0006                     	;# 
   828  0007                     	;# 
   829  0008                     	;# 
   830  0009                     	;# 
   831  000A                     	;# 
   832  000B                     	;# 
   833  000C                     	;# 
   834  000D                     	;# 
   835  000E                     	;# 
   836  0011                     	;# 
   837  0012                     	;# 
   838  0013                     	;# 
   839  0014                     	;# 
   840  0015                     	;# 
   841  0016                     	;# 
   842  0016                     	;# 
   843  0017                     	;# 
   844  0018                     	;# 
   845  0019                     	;# 
   846  001A                     	;# 
   847  001B                     	;# 
   848  001C                     	;# 
   849  001E                     	;# 
   850  001F                     	;# 
   851  008C                     	;# 
   852  008D                     	;# 
   853  008E                     	;# 
   854  0091                     	;# 
   855  0092                     	;# 
   856  0093                     	;# 
   857  0094                     	;# 
   858  0095                     	;# 
   859  0096                     	;# 
   860  0097                     	;# 
   861  0098                     	;# 
   862  0099                     	;# 
   863  009A                     	;# 
   864  009B                     	;# 
   865  009B                     	;# 
   866  009C                     	;# 
   867  009D                     	;# 
   868  009E                     	;# 
   869  010C                     	;# 
   870  010D                     	;# 
   871  010E                     	;# 
   872  0111                     	;# 
   873  0112                     	;# 
   874  0113                     	;# 
   875  0114                     	;# 
   876  0115                     	;# 
   877  0116                     	;# 
   878  0117                     	;# 
   879  0118                     	;# 
   880  0119                     	;# 
   881  011A                     	;# 
   882  011B                     	;# 
   883  011D                     	;# 
   884  011E                     	;# 
   885  018C                     	;# 
   886  018D                     	;# 
   887  018E                     	;# 
   888  0191                     	;# 
   889  0191                     	;# 
   890  0192                     	;# 
   891  0193                     	;# 
   892  0193                     	;# 
   893  0193                     	;# 
   894  0194                     	;# 
   895  0195                     	;# 
   896  0196                     	;# 
   897  0199                     	;# 
   898  019A                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019C                     	;# 
   902  019D                     	;# 
   903  019E                     	;# 
   904  019F                     	;# 
   905  020C                     	;# 
   906  020D                     	;# 
   907  020E                     	;# 
   908  0211                     	;# 
   909  0211                     	;# 
   910  0212                     	;# 
   911  0212                     	;# 
   912  0213                     	;# 
   913  0213                     	;# 
   914  0214                     	;# 
   915  0214                     	;# 
   916  0215                     	;# 
   917  0215                     	;# 
   918  0215                     	;# 
   919  0216                     	;# 
   920  0216                     	;# 
   921  0217                     	;# 
   922  0217                     	;# 
   923  0219                     	;# 
   924  021A                     	;# 
   925  021B                     	;# 
   926  021C                     	;# 
   927  021D                     	;# 
   928  021E                     	;# 
   929  021F                     	;# 
   930  0291                     	;# 
   931  0291                     	;# 
   932  0292                     	;# 
   933  0293                     	;# 
   934  0294                     	;# 
   935  0295                     	;# 
   936  0295                     	;# 
   937  0296                     	;# 
   938  0298                     	;# 
   939  0298                     	;# 
   940  0299                     	;# 
   941  029A                     	;# 
   942  029B                     	;# 
   943  029C                     	;# 
   944  029D                     	;# 
   945  029E                     	;# 
   946  0311                     	;# 
   947  0311                     	;# 
   948  0312                     	;# 
   949  0313                     	;# 
   950  0318                     	;# 
   951  0318                     	;# 
   952  0319                     	;# 
   953  031A                     	;# 
   954  038C                     	;# 
   955  038D                     	;# 
   956  038E                     	;# 
   957  0391                     	;# 
   958  0392                     	;# 
   959  0393                     	;# 
   960  0394                     	;# 
   961  0395                     	;# 
   962  0396                     	;# 
   963  039A                     	;# 
   964  039C                     	;# 
   965  039D                     	;# 
   966  039E                     	;# 
   967  039F                     	;# 
   968  0415                     	;# 
   969  0416                     	;# 
   970  0417                     	;# 
   971  041C                     	;# 
   972  041D                     	;# 
   973  041E                     	;# 
   974  0FE4                     	;# 
   975  0FE5                     	;# 
   976  0FE6                     	;# 
   977  0FE7                     	;# 
   978  0FE8                     	;# 
   979  0FE9                     	;# 
   980  0FEA                     	;# 
   981  0FEB                     	;# 
   982  0FED                     	;# 
   983  0FEE                     	;# 
   984  0FEF                     	;# 
   985  0000                     	;# 
   986  0001                     	;# 
   987  0002                     	;# 
   988  0003                     	;# 
   989  0004                     	;# 
   990  0005                     	;# 
   991  0006                     	;# 
   992  0007                     	;# 
   993  0008                     	;# 
   994  0009                     	;# 
   995  000A                     	;# 
   996  000B                     	;# 
   997  000C                     	;# 
   998  000D                     	;# 
   999  000E                     	;# 
  1000  0011                     	;# 
  1001  0012                     	;# 
  1002  0013                     	;# 
  1003  0014                     	;# 
  1004  0015                     	;# 
  1005  0016                     	;# 
  1006  0016                     	;# 
  1007  0017                     	;# 
  1008  0018                     	;# 
  1009  0019                     	;# 
  1010  001A                     	;# 
  1011  001B                     	;# 
  1012  001C                     	;# 
  1013  001E                     	;# 
  1014  001F                     	;# 
  1015  008C                     	;# 
  1016  008D                     	;# 
  1017  008E                     	;# 
  1018  0091                     	;# 
  1019  0092                     	;# 
  1020  0093                     	;# 
  1021  0094                     	;# 
  1022  0095                     	;# 
  1023  0096                     	;# 
  1024  0097                     	;# 
  1025  0098                     	;# 
  1026  0099                     	;# 
  1027  009A                     	;# 
  1028  009B                     	;# 
  1029  009B                     	;# 
  1030  009C                     	;# 
  1031  009D                     	;# 
  1032  009E                     	;# 
  1033  010C                     	;# 
  1034  010D                     	;# 
  1035  010E                     	;# 
  1036  0111                     	;# 
  1037  0112                     	;# 
  1038  0113                     	;# 
  1039  0114                     	;# 
  1040  0115                     	;# 
  1041  0116                     	;# 
  1042  0117                     	;# 
  1043  0118                     	;# 
  1044  0119                     	;# 
  1045  011A                     	;# 
  1046  011B                     	;# 
  1047  011D                     	;# 
  1048  011E                     	;# 
  1049  018C                     	;# 
  1050  018D                     	;# 
  1051  018E                     	;# 
  1052  0191                     	;# 
  1053  0191                     	;# 
  1054  0192                     	;# 
  1055  0193                     	;# 
  1056  0193                     	;# 
  1057  0193                     	;# 
  1058  0194                     	;# 
  1059  0195                     	;# 
  1060  0196                     	;# 
  1061  0199                     	;# 
  1062  019A                     	;# 
  1063  019B                     	;# 
  1064  019B                     	;# 
  1065  019C                     	;# 
  1066  019D                     	;# 
  1067  019E                     	;# 
  1068  019F                     	;# 
  1069  020C                     	;# 
  1070  020D                     	;# 
  1071  020E                     	;# 
  1072  0211                     	;# 
  1073  0211                     	;# 
  1074  0212                     	;# 
  1075  0212                     	;# 
  1076  0213                     	;# 
  1077  0213                     	;# 
  1078  0214                     	;# 
  1079  0214                     	;# 
  1080  0215                     	;# 
  1081  0215                     	;# 
  1082  0215                     	;# 
  1083  0216                     	;# 
  1084  0216                     	;# 
  1085  0217                     	;# 
  1086  0217                     	;# 
  1087  0219                     	;# 
  1088  021A                     	;# 
  1089  021B                     	;# 
  1090  021C                     	;# 
  1091  021D                     	;# 
  1092  021E                     	;# 
  1093  021F                     	;# 
  1094  0291                     	;# 
  1095  0291                     	;# 
  1096  0292                     	;# 
  1097  0293                     	;# 
  1098  0294                     	;# 
  1099  0295                     	;# 
  1100  0295                     	;# 
  1101  0296                     	;# 
  1102  0298                     	;# 
  1103  0298                     	;# 
  1104  0299                     	;# 
  1105  029A                     	;# 
  1106  029B                     	;# 
  1107  029C                     	;# 
  1108  029D                     	;# 
  1109  029E                     	;# 
  1110  0311                     	;# 
  1111  0311                     	;# 
  1112  0312                     	;# 
  1113  0313                     	;# 
  1114  0318                     	;# 
  1115  0318                     	;# 
  1116  0319                     	;# 
  1117  031A                     	;# 
  1118  038C                     	;# 
  1119  038D                     	;# 
  1120  038E                     	;# 
  1121  0391                     	;# 
  1122  0392                     	;# 
  1123  0393                     	;# 
  1124  0394                     	;# 
  1125  0395                     	;# 
  1126  0396                     	;# 
  1127  039A                     	;# 
  1128  039C                     	;# 
  1129  039D                     	;# 
  1130  039E                     	;# 
  1131  039F                     	;# 
  1132  0415                     	;# 
  1133  0416                     	;# 
  1134  0417                     	;# 
  1135  041C                     	;# 
  1136  041D                     	;# 
  1137  041E                     	;# 
  1138  0FE4                     	;# 
  1139  0FE5                     	;# 
  1140  0FE6                     	;# 
  1141  0FE7                     	;# 
  1142  0FE8                     	;# 
  1143  0FE9                     	;# 
  1144  0FEA                     	;# 
  1145  0FEB                     	;# 
  1146  0FED                     	;# 
  1147  0FEE                     	;# 
  1148  0FEF                     	;# 
  1149  0000                     	;# 
  1150  0001                     	;# 
  1151  0002                     	;# 
  1152  0003                     	;# 
  1153  0004                     	;# 
  1154  0005                     	;# 
  1155  0006                     	;# 
  1156  0007                     	;# 
  1157  0008                     	;# 
  1158  0009                     	;# 
  1159  000A                     	;# 
  1160  000B                     	;# 
  1161  000C                     	;# 
  1162  000D                     	;# 
  1163  000E                     	;# 
  1164  0011                     	;# 
  1165  0012                     	;# 
  1166  0013                     	;# 
  1167  0014                     	;# 
  1168  0015                     	;# 
  1169  0016                     	;# 
  1170  0016                     	;# 
  1171  0017                     	;# 
  1172  0018                     	;# 
  1173  0019                     	;# 
  1174  001A                     	;# 
  1175  001B                     	;# 
  1176  001C                     	;# 
  1177  001E                     	;# 
  1178  001F                     	;# 
  1179  008C                     	;# 
  1180  008D                     	;# 
  1181  008E                     	;# 
  1182  0091                     	;# 
  1183  0092                     	;# 
  1184  0093                     	;# 
  1185  0094                     	;# 
  1186  0095                     	;# 
  1187  0096                     	;# 
  1188  0097                     	;# 
  1189  0098                     	;# 
  1190  0099                     	;# 
  1191  009A                     	;# 
  1192  009B                     	;# 
  1193  009B                     	;# 
  1194  009C                     	;# 
  1195  009D                     	;# 
  1196  009E                     	;# 
  1197  010C                     	;# 
  1198  010D                     	;# 
  1199  010E                     	;# 
  1200  0111                     	;# 
  1201  0112                     	;# 
  1202  0113                     	;# 
  1203  0114                     	;# 
  1204  0115                     	;# 
  1205  0116                     	;# 
  1206  0117                     	;# 
  1207  0118                     	;# 
  1208  0119                     	;# 
  1209  011A                     	;# 
  1210  011B                     	;# 
  1211  011D                     	;# 
  1212  011E                     	;# 
  1213  018C                     	;# 
  1214  018D                     	;# 
  1215  018E                     	;# 
  1216  0191                     	;# 
  1217  0191                     	;# 
  1218  0192                     	;# 
  1219  0193                     	;# 
  1220  0193                     	;# 
  1221  0193                     	;# 
  1222  0194                     	;# 
  1223  0195                     	;# 
  1224  0196                     	;# 
  1225  0199                     	;# 
  1226  019A                     	;# 
  1227  019B                     	;# 
  1228  019B                     	;# 
  1229  019C                     	;# 
  1230  019D                     	;# 
  1231  019E                     	;# 
  1232  019F                     	;# 
  1233  020C                     	;# 
  1234  020D                     	;# 
  1235  020E                     	;# 
  1236  0211                     	;# 
  1237  0211                     	;# 
  1238  0212                     	;# 
  1239  0212                     	;# 
  1240  0213                     	;# 
  1241  0213                     	;# 
  1242  0214                     	;# 
  1243  0214                     	;# 
  1244  0215                     	;# 
  1245  0215                     	;# 
  1246  0215                     	;# 
  1247  0216                     	;# 
  1248  0216                     	;# 
  1249  0217                     	;# 
  1250  0217                     	;# 
  1251  0219                     	;# 
  1252  021A                     	;# 
  1253  021B                     	;# 
  1254  021C                     	;# 
  1255  021D                     	;# 
  1256  021E                     	;# 
  1257  021F                     	;# 
  1258  0291                     	;# 
  1259  0291                     	;# 
  1260  0292                     	;# 
  1261  0293                     	;# 
  1262  0294                     	;# 
  1263  0295                     	;# 
  1264  0295                     	;# 
  1265  0296                     	;# 
  1266  0298                     	;# 
  1267  0298                     	;# 
  1268  0299                     	;# 
  1269  029A                     	;# 
  1270  029B                     	;# 
  1271  029C                     	;# 
  1272  029D                     	;# 
  1273  029E                     	;# 
  1274  0311                     	;# 
  1275  0311                     	;# 
  1276  0312                     	;# 
  1277  0313                     	;# 
  1278  0318                     	;# 
  1279  0318                     	;# 
  1280  0319                     	;# 
  1281  031A                     	;# 
  1282  038C                     	;# 
  1283  038D                     	;# 
  1284  038E                     	;# 
  1285  0391                     	;# 
  1286  0392                     	;# 
  1287  0393                     	;# 
  1288  0394                     	;# 
  1289  0395                     	;# 
  1290  0396                     	;# 
  1291  039A                     	;# 
  1292  039C                     	;# 
  1293  039D                     	;# 
  1294  039E                     	;# 
  1295  039F                     	;# 
  1296  0415                     	;# 
  1297  0416                     	;# 
  1298  0417                     	;# 
  1299  041C                     	;# 
  1300  041D                     	;# 
  1301  041E                     	;# 
  1302  0FE4                     	;# 
  1303  0FE5                     	;# 
  1304  0FE6                     	;# 
  1305  0FE7                     	;# 
  1306  0FE8                     	;# 
  1307  0FE9                     	;# 
  1308  0FEA                     	;# 
  1309  0FEB                     	;# 
  1310  0FED                     	;# 
  1311  0FEE                     	;# 
  1312  0FEF                     	;# 
  1313  0000                     	;# 
  1314  0001                     	;# 
  1315  0002                     	;# 
  1316  0003                     	;# 
  1317  0004                     	;# 
  1318  0005                     	;# 
  1319  0006                     	;# 
  1320  0007                     	;# 
  1321  0008                     	;# 
  1322  0009                     	;# 
  1323  000A                     	;# 
  1324  000B                     	;# 
  1325  000C                     	;# 
  1326  000D                     	;# 
  1327  000E                     	;# 
  1328  0011                     	;# 
  1329  0012                     	;# 
  1330  0013                     	;# 
  1331  0014                     	;# 
  1332  0015                     	;# 
  1333  0016                     	;# 
  1334  0016                     	;# 
  1335  0017                     	;# 
  1336  0018                     	;# 
  1337  0019                     	;# 
  1338  001A                     	;# 
  1339  001B                     	;# 
  1340  001C                     	;# 
  1341  001E                     	;# 
  1342  001F                     	;# 
  1343  008C                     	;# 
  1344  008D                     	;# 
  1345  008E                     	;# 
  1346  0091                     	;# 
  1347  0092                     	;# 
  1348  0093                     	;# 
  1349  0094                     	;# 
  1350  0095                     	;# 
  1351  0096                     	;# 
  1352  0097                     	;# 
  1353  0098                     	;# 
  1354  0099                     	;# 
  1355  009A                     	;# 
  1356  009B                     	;# 
  1357  009B                     	;# 
  1358  009C                     	;# 
  1359  009D                     	;# 
  1360  009E                     	;# 
  1361  010C                     	;# 
  1362  010D                     	;# 
  1363  010E                     	;# 
  1364  0111                     	;# 
  1365  0112                     	;# 
  1366  0113                     	;# 
  1367  0114                     	;# 
  1368  0115                     	;# 
  1369  0116                     	;# 
  1370  0117                     	;# 
  1371  0118                     	;# 
  1372  0119                     	;# 
  1373  011A                     	;# 
  1374  011B                     	;# 
  1375  011D                     	;# 
  1376  011E                     	;# 
  1377  018C                     	;# 
  1378  018D                     	;# 
  1379  018E                     	;# 
  1380  0191                     	;# 
  1381  0191                     	;# 
  1382  0192                     	;# 
  1383  0193                     	;# 
  1384  0193                     	;# 
  1385  0193                     	;# 
  1386  0194                     	;# 
  1387  0195                     	;# 
  1388  0196                     	;# 
  1389  0199                     	;# 
  1390  019A                     	;# 
  1391  019B                     	;# 
  1392  019B                     	;# 
  1393  019C                     	;# 
  1394  019D                     	;# 
  1395  019E                     	;# 
  1396  019F                     	;# 
  1397  020C                     	;# 
  1398  020D                     	;# 
  1399  020E                     	;# 
  1400  0211                     	;# 
  1401  0211                     	;# 
  1402  0212                     	;# 
  1403  0212                     	;# 
  1404  0213                     	;# 
  1405  0213                     	;# 
  1406  0214                     	;# 
  1407  0214                     	;# 
  1408  0215                     	;# 
  1409  0215                     	;# 
  1410  0215                     	;# 
  1411  0216                     	;# 
  1412  0216                     	;# 
  1413  0217                     	;# 
  1414  0217                     	;# 
  1415  0219                     	;# 
  1416  021A                     	;# 
  1417  021B                     	;# 
  1418  021C                     	;# 
  1419  021D                     	;# 
  1420  021E                     	;# 
  1421  021F                     	;# 
  1422  0291                     	;# 
  1423  0291                     	;# 
  1424  0292                     	;# 
  1425  0293                     	;# 
  1426  0294                     	;# 
  1427  0295                     	;# 
  1428  0295                     	;# 
  1429  0296                     	;# 
  1430  0298                     	;# 
  1431  0298                     	;# 
  1432  0299                     	;# 
  1433  029A                     	;# 
  1434  029B                     	;# 
  1435  029C                     	;# 
  1436  029D                     	;# 
  1437  029E                     	;# 
  1438  0311                     	;# 
  1439  0311                     	;# 
  1440  0312                     	;# 
  1441  0313                     	;# 
  1442  0318                     	;# 
  1443  0318                     	;# 
  1444  0319                     	;# 
  1445  031A                     	;# 
  1446  038C                     	;# 
  1447  038D                     	;# 
  1448  038E                     	;# 
  1449  0391                     	;# 
  1450  0392                     	;# 
  1451  0393                     	;# 
  1452  0394                     	;# 
  1453  0395                     	;# 
  1454  0396                     	;# 
  1455  039A                     	;# 
  1456  039C                     	;# 
  1457  039D                     	;# 
  1458  039E                     	;# 
  1459  039F                     	;# 
  1460  0415                     	;# 
  1461  0416                     	;# 
  1462  0417                     	;# 
  1463  041C                     	;# 
  1464  041D                     	;# 
  1465  041E                     	;# 
  1466  0FE4                     	;# 
  1467  0FE5                     	;# 
  1468  0FE6                     	;# 
  1469  0FE7                     	;# 
  1470  0FE8                     	;# 
  1471  0FE9                     	;# 
  1472  0FEA                     	;# 
  1473  0FEB                     	;# 
  1474  0FED                     	;# 
  1475  0FEE                     	;# 
  1476  0FEF                     	;# 
  1477  0000                     	;# 
  1478  0001                     	;# 
  1479  0002                     	;# 
  1480  0003                     	;# 
  1481  0004                     	;# 
  1482  0005                     	;# 
  1483  0006                     	;# 
  1484  0007                     	;# 
  1485  0008                     	;# 
  1486  0009                     	;# 
  1487  000A                     	;# 
  1488  000B                     	;# 
  1489  000C                     	;# 
  1490  000D                     	;# 
  1491  000E                     	;# 
  1492  0011                     	;# 
  1493  0012                     	;# 
  1494  0013                     	;# 
  1495  0014                     	;# 
  1496  0015                     	;# 
  1497  0016                     	;# 
  1498  0016                     	;# 
  1499  0017                     	;# 
  1500  0018                     	;# 
  1501  0019                     	;# 
  1502  001A                     	;# 
  1503  001B                     	;# 
  1504  001C                     	;# 
  1505  001E                     	;# 
  1506  001F                     	;# 
  1507  008C                     	;# 
  1508  008D                     	;# 
  1509  008E                     	;# 
  1510  0091                     	;# 
  1511  0092                     	;# 
  1512  0093                     	;# 
  1513  0094                     	;# 
  1514  0095                     	;# 
  1515  0096                     	;# 
  1516  0097                     	;# 
  1517  0098                     	;# 
  1518  0099                     	;# 
  1519  009A                     	;# 
  1520  009B                     	;# 
  1521  009B                     	;# 
  1522  009C                     	;# 
  1523  009D                     	;# 
  1524  009E                     	;# 
  1525  010C                     	;# 
  1526  010D                     	;# 
  1527  010E                     	;# 
  1528  0111                     	;# 
  1529  0112                     	;# 
  1530  0113                     	;# 
  1531  0114                     	;# 
  1532  0115                     	;# 
  1533  0116                     	;# 
  1534  0117                     	;# 
  1535  0118                     	;# 
  1536  0119                     	;# 
  1537  011A                     	;# 
  1538  011B                     	;# 
  1539  011D                     	;# 
  1540  011E                     	;# 
  1541  018C                     	;# 
  1542  018D                     	;# 
  1543  018E                     	;# 
  1544  0191                     	;# 
  1545  0191                     	;# 
  1546  0192                     	;# 
  1547  0193                     	;# 
  1548  0193                     	;# 
  1549  0193                     	;# 
  1550  0194                     	;# 
  1551  0195                     	;# 
  1552  0196                     	;# 
  1553  0199                     	;# 
  1554  019A                     	;# 
  1555  019B                     	;# 
  1556  019B                     	;# 
  1557  019C                     	;# 
  1558  019D                     	;# 
  1559  019E                     	;# 
  1560  019F                     	;# 
  1561  020C                     	;# 
  1562  020D                     	;# 
  1563  020E                     	;# 
  1564  0211                     	;# 
  1565  0211                     	;# 
  1566  0212                     	;# 
  1567  0212                     	;# 
  1568  0213                     	;# 
  1569  0213                     	;# 
  1570  0214                     	;# 
  1571  0214                     	;# 
  1572  0215                     	;# 
  1573  0215                     	;# 
  1574  0215                     	;# 
  1575  0216                     	;# 
  1576  0216                     	;# 
  1577  0217                     	;# 
  1578  0217                     	;# 
  1579  0219                     	;# 
  1580  021A                     	;# 
  1581  021B                     	;# 
  1582  021C                     	;# 
  1583  021D                     	;# 
  1584  021E                     	;# 
  1585  021F                     	;# 
  1586  0291                     	;# 
  1587  0291                     	;# 
  1588  0292                     	;# 
  1589  0293                     	;# 
  1590  0294                     	;# 
  1591  0295                     	;# 
  1592  0295                     	;# 
  1593  0296                     	;# 
  1594  0298                     	;# 
  1595  0298                     	;# 
  1596  0299                     	;# 
  1597  029A                     	;# 
  1598  029B                     	;# 
  1599  029C                     	;# 
  1600  029D                     	;# 
  1601  029E                     	;# 
  1602  0311                     	;# 
  1603  0311                     	;# 
  1604  0312                     	;# 
  1605  0313                     	;# 
  1606  0318                     	;# 
  1607  0318                     	;# 
  1608  0319                     	;# 
  1609  031A                     	;# 
  1610  038C                     	;# 
  1611  038D                     	;# 
  1612  038E                     	;# 
  1613  0391                     	;# 
  1614  0392                     	;# 
  1615  0393                     	;# 
  1616  0394                     	;# 
  1617  0395                     	;# 
  1618  0396                     	;# 
  1619  039A                     	;# 
  1620  039C                     	;# 
  1621  039D                     	;# 
  1622  039E                     	;# 
  1623  039F                     	;# 
  1624  0415                     	;# 
  1625  0416                     	;# 
  1626  0417                     	;# 
  1627  041C                     	;# 
  1628  041D                     	;# 
  1629  041E                     	;# 
  1630  0FE4                     	;# 
  1631  0FE5                     	;# 
  1632  0FE6                     	;# 
  1633  0FE7                     	;# 
  1634  0FE8                     	;# 
  1635  0FE9                     	;# 
  1636  0FEA                     	;# 
  1637  0FEB                     	;# 
  1638  0FED                     	;# 
  1639  0FEE                     	;# 
  1640  0FEF                     	;# 
  1641  0000                     	;# 
  1642  0001                     	;# 
  1643  0002                     	;# 
  1644  0003                     	;# 
  1645  0004                     	;# 
  1646  0005                     	;# 
  1647  0006                     	;# 
  1648  0007                     	;# 
  1649  0008                     	;# 
  1650  0009                     	;# 
  1651  000A                     	;# 
  1652  000B                     	;# 
  1653  000C                     	;# 
  1654  000D                     	;# 
  1655  000E                     	;# 
  1656  0011                     	;# 
  1657  0012                     	;# 
  1658  0013                     	;# 
  1659  0014                     	;# 
  1660  0015                     	;# 
  1661  0016                     	;# 
  1662  0016                     	;# 
  1663  0017                     	;# 
  1664  0018                     	;# 
  1665  0019                     	;# 
  1666  001A                     	;# 
  1667  001B                     	;# 
  1668  001C                     	;# 
  1669  001E                     	;# 
  1670  001F                     	;# 
  1671  008C                     	;# 
  1672  008D                     	;# 
  1673  008E                     	;# 
  1674  0091                     	;# 
  1675  0092                     	;# 
  1676  0093                     	;# 
  1677  0094                     	;# 
  1678  0095                     	;# 
  1679  0096                     	;# 
  1680  0097                     	;# 
  1681  0098                     	;# 
  1682  0099                     	;# 
  1683  009A                     	;# 
  1684  009B                     	;# 
  1685  009B                     	;# 
  1686  009C                     	;# 
  1687  009D                     	;# 
  1688  009E                     	;# 
  1689  010C                     	;# 
  1690  010D                     	;# 
  1691  010E                     	;# 
  1692  0111                     	;# 
  1693  0112                     	;# 
  1694  0113                     	;# 
  1695  0114                     	;# 
  1696  0115                     	;# 
  1697  0116                     	;# 
  1698  0117                     	;# 
  1699  0118                     	;# 
  1700  0119                     	;# 
  1701  011A                     	;# 
  1702  011B                     	;# 
  1703  011D                     	;# 
  1704  011E                     	;# 
  1705  018C                     	;# 
  1706  018D                     	;# 
  1707  018E                     	;# 
  1708  0191                     	;# 
  1709  0191                     	;# 
  1710  0192                     	;# 
  1711  0193                     	;# 
  1712  0193                     	;# 
  1713  0193                     	;# 
  1714  0194                     	;# 
  1715  0195                     	;# 
  1716  0196                     	;# 
  1717  0199                     	;# 
  1718  019A                     	;# 
  1719  019B                     	;# 
  1720  019B                     	;# 
  1721  019C                     	;# 
  1722  019D                     	;# 
  1723  019E                     	;# 
  1724  019F                     	;# 
  1725  020C                     	;# 
  1726  020D                     	;# 
  1727  020E                     	;# 
  1728  0211                     	;# 
  1729  0211                     	;# 
  1730  0212                     	;# 
  1731  0212                     	;# 
  1732  0213                     	;# 
  1733  0213                     	;# 
  1734  0214                     	;# 
  1735  0214                     	;# 
  1736  0215                     	;# 
  1737  0215                     	;# 
  1738  0215                     	;# 
  1739  0216                     	;# 
  1740  0216                     	;# 
  1741  0217                     	;# 
  1742  0217                     	;# 
  1743  0219                     	;# 
  1744  021A                     	;# 
  1745  021B                     	;# 
  1746  021C                     	;# 
  1747  021D                     	;# 
  1748  021E                     	;# 
  1749  021F                     	;# 
  1750  0291                     	;# 
  1751  0291                     	;# 
  1752  0292                     	;# 
  1753  0293                     	;# 
  1754  0294                     	;# 
  1755  0295                     	;# 
  1756  0295                     	;# 
  1757  0296                     	;# 
  1758  0298                     	;# 
  1759  0298                     	;# 
  1760  0299                     	;# 
  1761  029A                     	;# 
  1762  029B                     	;# 
  1763  029C                     	;# 
  1764  029D                     	;# 
  1765  029E                     	;# 
  1766  0311                     	;# 
  1767  0311                     	;# 
  1768  0312                     	;# 
  1769  0313                     	;# 
  1770  0318                     	;# 
  1771  0318                     	;# 
  1772  0319                     	;# 
  1773  031A                     	;# 
  1774  038C                     	;# 
  1775  038D                     	;# 
  1776  038E                     	;# 
  1777  0391                     	;# 
  1778  0392                     	;# 
  1779  0393                     	;# 
  1780  0394                     	;# 
  1781  0395                     	;# 
  1782  0396                     	;# 
  1783  039A                     	;# 
  1784  039C                     	;# 
  1785  039D                     	;# 
  1786  039E                     	;# 
  1787  039F                     	;# 
  1788  0415                     	;# 
  1789  0416                     	;# 
  1790  0417                     	;# 
  1791  041C                     	;# 
  1792  041D                     	;# 
  1793  041E                     	;# 
  1794  0FE4                     	;# 
  1795  0FE5                     	;# 
  1796  0FE6                     	;# 
  1797  0FE7                     	;# 
  1798  0FE8                     	;# 
  1799  0FE9                     	;# 
  1800  0FEA                     	;# 
  1801  0FEB                     	;# 
  1802  0FED                     	;# 
  1803  0FEE                     	;# 
  1804  0FEF                     	;# 
  1805  0000                     	;# 
  1806  0001                     	;# 
  1807  0002                     	;# 
  1808  0003                     	;# 
  1809  0004                     	;# 
  1810  0005                     	;# 
  1811  0006                     	;# 
  1812  0007                     	;# 
  1813  0008                     	;# 
  1814  0009                     	;# 
  1815  000A                     	;# 
  1816  000B                     	;# 
  1817  000C                     	;# 
  1818  000D                     	;# 
  1819  000E                     	;# 
  1820  0011                     	;# 
  1821  0012                     	;# 
  1822  0013                     	;# 
  1823  0014                     	;# 
  1824  0015                     	;# 
  1825  0016                     	;# 
  1826  0016                     	;# 
  1827  0017                     	;# 
  1828  0018                     	;# 
  1829  0019                     	;# 
  1830  001A                     	;# 
  1831  001B                     	;# 
  1832  001C                     	;# 
  1833  001E                     	;# 
  1834  001F                     	;# 
  1835  008C                     	;# 
  1836  008D                     	;# 
  1837  008E                     	;# 
  1838  0091                     	;# 
  1839  0092                     	;# 
  1840  0093                     	;# 
  1841  0094                     	;# 
  1842  0095                     	;# 
  1843  0096                     	;# 
  1844  0097                     	;# 
  1845  0098                     	;# 
  1846  0099                     	;# 
  1847  009A                     	;# 
  1848  009B                     	;# 
  1849  009B                     	;# 
  1850  009C                     	;# 
  1851  009D                     	;# 
  1852  009E                     	;# 
  1853  010C                     	;# 
  1854  010D                     	;# 
  1855  010E                     	;# 
  1856  0111                     	;# 
  1857  0112                     	;# 
  1858  0113                     	;# 
  1859  0114                     	;# 
  1860  0115                     	;# 
  1861  0116                     	;# 
  1862  0117                     	;# 
  1863  0118                     	;# 
  1864  0119                     	;# 
  1865  011A                     	;# 
  1866  011B                     	;# 
  1867  011D                     	;# 
  1868  011E                     	;# 
  1869  018C                     	;# 
  1870  018D                     	;# 
  1871  018E                     	;# 
  1872  0191                     	;# 
  1873  0191                     	;# 
  1874  0192                     	;# 
  1875  0193                     	;# 
  1876  0193                     	;# 
  1877  0193                     	;# 
  1878  0194                     	;# 
  1879  0195                     	;# 
  1880  0196                     	;# 
  1881  0199                     	;# 
  1882  019A                     	;# 
  1883  019B                     	;# 
  1884  019B                     	;# 
  1885  019C                     	;# 
  1886  019D                     	;# 
  1887  019E                     	;# 
  1888  019F                     	;# 
  1889  020C                     	;# 
  1890  020D                     	;# 
  1891  020E                     	;# 
  1892  0211                     	;# 
  1893  0211                     	;# 
  1894  0212                     	;# 
  1895  0212                     	;# 
  1896  0213                     	;# 
  1897  0213                     	;# 
  1898  0214                     	;# 
  1899  0214                     	;# 
  1900  0215                     	;# 
  1901  0215                     	;# 
  1902  0215                     	;# 
  1903  0216                     	;# 
  1904  0216                     	;# 
  1905  0217                     	;# 
  1906  0217                     	;# 
  1907  0219                     	;# 
  1908  021A                     	;# 
  1909  021B                     	;# 
  1910  021C                     	;# 
  1911  021D                     	;# 
  1912  021E                     	;# 
  1913  021F                     	;# 
  1914  0291                     	;# 
  1915  0291                     	;# 
  1916  0292                     	;# 
  1917  0293                     	;# 
  1918  0294                     	;# 
  1919  0295                     	;# 
  1920  0295                     	;# 
  1921  0296                     	;# 
  1922  0298                     	;# 
  1923  0298                     	;# 
  1924  0299                     	;# 
  1925  029A                     	;# 
  1926  029B                     	;# 
  1927  029C                     	;# 
  1928  029D                     	;# 
  1929  029E                     	;# 
  1930  0311                     	;# 
  1931  0311                     	;# 
  1932  0312                     	;# 
  1933  0313                     	;# 
  1934  0318                     	;# 
  1935  0318                     	;# 
  1936  0319                     	;# 
  1937  031A                     	;# 
  1938  038C                     	;# 
  1939  038D                     	;# 
  1940  038E                     	;# 
  1941  0391                     	;# 
  1942  0392                     	;# 
  1943  0393                     	;# 
  1944  0394                     	;# 
  1945  0395                     	;# 
  1946  0396                     	;# 
  1947  039A                     	;# 
  1948  039C                     	;# 
  1949  039D                     	;# 
  1950  039E                     	;# 
  1951  039F                     	;# 
  1952  0415                     	;# 
  1953  0416                     	;# 
  1954  0417                     	;# 
  1955  041C                     	;# 
  1956  041D                     	;# 
  1957  041E                     	;# 
  1958  0FE4                     	;# 
  1959  0FE5                     	;# 
  1960  0FE6                     	;# 
  1961  0FE7                     	;# 
  1962  0FE8                     	;# 
  1963  0FE9                     	;# 
  1964  0FEA                     	;# 
  1965  0FEB                     	;# 
  1966  0FED                     	;# 
  1967  0FEE                     	;# 
  1968  0FEF                     	;# 
  1969  0000                     	;# 
  1970  0001                     	;# 
  1971  0002                     	;# 
  1972  0003                     	;# 
  1973  0004                     	;# 
  1974  0005                     	;# 
  1975  0006                     	;# 
  1976  0007                     	;# 
  1977  0008                     	;# 
  1978  0009                     	;# 
  1979  000A                     	;# 
  1980  000B                     	;# 
  1981  000C                     	;# 
  1982  000D                     	;# 
  1983  000E                     	;# 
  1984  0011                     	;# 
  1985  0012                     	;# 
  1986  0013                     	;# 
  1987  0014                     	;# 
  1988  0015                     	;# 
  1989  0016                     	;# 
  1990  0016                     	;# 
  1991  0017                     	;# 
  1992  0018                     	;# 
  1993  0019                     	;# 
  1994  001A                     	;# 
  1995  001B                     	;# 
  1996  001C                     	;# 
  1997  001E                     	;# 
  1998  001F                     	;# 
  1999  008C                     	;# 
  2000  008D                     	;# 
  2001  008E                     	;# 
  2002  0091                     	;# 
  2003  0092                     	;# 
  2004  0093                     	;# 
  2005  0094                     	;# 
  2006  0095                     	;# 
  2007  0096                     	;# 
  2008  0097                     	;# 
  2009  0098                     	;# 
  2010  0099                     	;# 
  2011  009A                     	;# 
  2012  009B                     	;# 
  2013  009B                     	;# 
  2014  009C                     	;# 
  2015  009D                     	;# 
  2016  009E                     	;# 
  2017  010C                     	;# 
  2018  010D                     	;# 
  2019  010E                     	;# 
  2020  0111                     	;# 
  2021  0112                     	;# 
  2022  0113                     	;# 
  2023  0114                     	;# 
  2024  0115                     	;# 
  2025  0116                     	;# 
  2026  0117                     	;# 
  2027  0118                     	;# 
  2028  0119                     	;# 
  2029  011A                     	;# 
  2030  011B                     	;# 
  2031  011D                     	;# 
  2032  011E                     	;# 
  2033  018C                     	;# 
  2034  018D                     	;# 
  2035  018E                     	;# 
  2036  0191                     	;# 
  2037  0191                     	;# 
  2038  0192                     	;# 
  2039  0193                     	;# 
  2040  0193                     	;# 
  2041  0193                     	;# 
  2042  0194                     	;# 
  2043  0195                     	;# 
  2044  0196                     	;# 
  2045  0199                     	;# 
  2046  019A                     	;# 
  2047  019B                     	;# 
  2048  019B                     	;# 
  2049  019C                     	;# 
  2050  019D                     	;# 
  2051  019E                     	;# 
  2052  019F                     	;# 
  2053  020C                     	;# 
  2054  020D                     	;# 
  2055  020E                     	;# 
  2056  0211                     	;# 
  2057  0211                     	;# 
  2058  0212                     	;# 
  2059  0212                     	;# 
  2060  0213                     	;# 
  2061  0213                     	;# 
  2062  0214                     	;# 
  2063  0214                     	;# 
  2064  0215                     	;# 
  2065  0215                     	;# 
  2066  0215                     	;# 
  2067  0216                     	;# 
  2068  0216                     	;# 
  2069  0217                     	;# 
  2070  0217                     	;# 
  2071  0219                     	;# 
  2072  021A                     	;# 
  2073  021B                     	;# 
  2074  021C                     	;# 
  2075  021D                     	;# 
  2076  021E                     	;# 
  2077  021F                     	;# 
  2078  0291                     	;# 
  2079  0291                     	;# 
  2080  0292                     	;# 
  2081  0293                     	;# 
  2082  0294                     	;# 
  2083  0295                     	;# 
  2084  0295                     	;# 
  2085  0296                     	;# 
  2086  0298                     	;# 
  2087  0298                     	;# 
  2088  0299                     	;# 
  2089  029A                     	;# 
  2090  029B                     	;# 
  2091  029C                     	;# 
  2092  029D                     	;# 
  2093  029E                     	;# 
  2094  0311                     	;# 
  2095  0311                     	;# 
  2096  0312                     	;# 
  2097  0313                     	;# 
  2098  0318                     	;# 
  2099  0318                     	;# 
  2100  0319                     	;# 
  2101  031A                     	;# 
  2102  038C                     	;# 
  2103  038D                     	;# 
  2104  038E                     	;# 
  2105  0391                     	;# 
  2106  0392                     	;# 
  2107  0393                     	;# 
  2108  0394                     	;# 
  2109  0395                     	;# 
  2110  0396                     	;# 
  2111  039A                     	;# 
  2112  039C                     	;# 
  2113  039D                     	;# 
  2114  039E                     	;# 
  2115  039F                     	;# 
  2116  0415                     	;# 
  2117  0416                     	;# 
  2118  0417                     	;# 
  2119  041C                     	;# 
  2120  041D                     	;# 
  2121  041E                     	;# 
  2122  0FE4                     	;# 
  2123  0FE5                     	;# 
  2124  0FE6                     	;# 
  2125  0FE7                     	;# 
  2126  0FE8                     	;# 
  2127  0FE9                     	;# 
  2128  0FEA                     	;# 
  2129  0FEB                     	;# 
  2130  0FED                     	;# 
  2131  0FEE                     	;# 
  2132  0FEF                     	;# 
  2133  0000                     	;# 
  2134  0001                     	;# 
  2135  0002                     	;# 
  2136  0003                     	;# 
  2137  0004                     	;# 
  2138  0005                     	;# 
  2139  0006                     	;# 
  2140  0007                     	;# 
  2141  0008                     	;# 
  2142  0009                     	;# 
  2143  000A                     	;# 
  2144  000B                     	;# 
  2145  000C                     	;# 
  2146  000D                     	;# 
  2147  000E                     	;# 
  2148  0011                     	;# 
  2149  0012                     	;# 
  2150  0013                     	;# 
  2151  0014                     	;# 
  2152  0015                     	;# 
  2153  0016                     	;# 
  2154  0016                     	;# 
  2155  0017                     	;# 
  2156  0018                     	;# 
  2157  0019                     	;# 
  2158  001A                     	;# 
  2159  001B                     	;# 
  2160  001C                     	;# 
  2161  001E                     	;# 
  2162  001F                     	;# 
  2163  008C                     	;# 
  2164  008D                     	;# 
  2165  008E                     	;# 
  2166  0091                     	;# 
  2167  0092                     	;# 
  2168  0093                     	;# 
  2169  0094                     	;# 
  2170  0095                     	;# 
  2171  0096                     	;# 
  2172  0097                     	;# 
  2173  0098                     	;# 
  2174  0099                     	;# 
  2175  009A                     	;# 
  2176  009B                     	;# 
  2177  009B                     	;# 
  2178  009C                     	;# 
  2179  009D                     	;# 
  2180  009E                     	;# 
  2181  010C                     	;# 
  2182  010D                     	;# 
  2183  010E                     	;# 
  2184  0111                     	;# 
  2185  0112                     	;# 
  2186  0113                     	;# 
  2187  0114                     	;# 
  2188  0115                     	;# 
  2189  0116                     	;# 
  2190  0117                     	;# 
  2191  0118                     	;# 
  2192  0119                     	;# 
  2193  011A                     	;# 
  2194  011B                     	;# 
  2195  011D                     	;# 
  2196  011E                     	;# 
  2197  018C                     	;# 
  2198  018D                     	;# 
  2199  018E                     	;# 
  2200  0191                     	;# 
  2201  0191                     	;# 
  2202  0192                     	;# 
  2203  0193                     	;# 
  2204  0193                     	;# 
  2205  0193                     	;# 
  2206  0194                     	;# 
  2207  0195                     	;# 
  2208  0196                     	;# 
  2209  0199                     	;# 
  2210  019A                     	;# 
  2211  019B                     	;# 
  2212  019B                     	;# 
  2213  019C                     	;# 
  2214  019D                     	;# 
  2215  019E                     	;# 
  2216  019F                     	;# 
  2217  020C                     	;# 
  2218  020D                     	;# 
  2219  020E                     	;# 
  2220  0211                     	;# 
  2221  0211                     	;# 
  2222  0212                     	;# 
  2223  0212                     	;# 
  2224  0213                     	;# 
  2225  0213                     	;# 
  2226  0214                     	;# 
  2227  0214                     	;# 
  2228  0215                     	;# 
  2229  0215                     	;# 
  2230  0215                     	;# 
  2231  0216                     	;# 
  2232  0216                     	;# 
  2233  0217                     	;# 
  2234  0217                     	;# 
  2235  0219                     	;# 
  2236  021A                     	;# 
  2237  021B                     	;# 
  2238  021C                     	;# 
  2239  021D                     	;# 
  2240  021E                     	;# 
  2241  021F                     	;# 
  2242  0291                     	;# 
  2243  0291                     	;# 
  2244  0292                     	;# 
  2245  0293                     	;# 
  2246  0294                     	;# 
  2247  0295                     	;# 
  2248  0295                     	;# 
  2249  0296                     	;# 
  2250  0298                     	;# 
  2251  0298                     	;# 
  2252  0299                     	;# 
  2253  029A                     	;# 
  2254  029B                     	;# 
  2255  029C                     	;# 
  2256  029D                     	;# 
  2257  029E                     	;# 
  2258  0311                     	;# 
  2259  0311                     	;# 
  2260  0312                     	;# 
  2261  0313                     	;# 
  2262  0318                     	;# 
  2263  0318                     	;# 
  2264  0319                     	;# 
  2265  031A                     	;# 
  2266  038C                     	;# 
  2267  038D                     	;# 
  2268  038E                     	;# 
  2269  0391                     	;# 
  2270  0392                     	;# 
  2271  0393                     	;# 
  2272  0394                     	;# 
  2273  0395                     	;# 
  2274  0396                     	;# 
  2275  039A                     	;# 
  2276  039C                     	;# 
  2277  039D                     	;# 
  2278  039E                     	;# 
  2279  039F                     	;# 
  2280  0415                     	;# 
  2281  0416                     	;# 
  2282  0417                     	;# 
  2283  041C                     	;# 
  2284  041D                     	;# 
  2285  041E                     	;# 
  2286  0FE4                     	;# 
  2287  0FE5                     	;# 
  2288  0FE6                     	;# 
  2289  0FE7                     	;# 
  2290  0FE8                     	;# 
  2291  0FE9                     	;# 
  2292  0FEA                     	;# 
  2293  0FEB                     	;# 
  2294  0FED                     	;# 
  2295  0FEE                     	;# 
  2296  0FEF                     	;# 
  2297  0000                     	;# 
  2298  0001                     	;# 
  2299  0002                     	;# 
  2300  0003                     	;# 
  2301  0004                     	;# 
  2302  0005                     	;# 
  2303  0006                     	;# 
  2304  0007                     	;# 
  2305  0008                     	;# 
  2306  0009                     	;# 
  2307  000A                     	;# 
  2308  000B                     	;# 
  2309  000C                     	;# 
  2310  000D                     	;# 
  2311  000E                     	;# 
  2312  0011                     	;# 
  2313  0012                     	;# 
  2314  0013                     	;# 
  2315  0014                     	;# 
  2316  0015                     	;# 
  2317  0016                     	;# 
  2318  0016                     	;# 
  2319  0017                     	;# 
  2320  0018                     	;# 
  2321  0019                     	;# 
  2322  001A                     	;# 
  2323  001B                     	;# 
  2324  001C                     	;# 
  2325  001E                     	;# 
  2326  001F                     	;# 
  2327  008C                     	;# 
  2328  008D                     	;# 
  2329  008E                     	;# 
  2330  0091                     	;# 
  2331  0092                     	;# 
  2332  0093                     	;# 
  2333  0094                     	;# 
  2334  0095                     	;# 
  2335  0096                     	;# 
  2336  0097                     	;# 
  2337  0098                     	;# 
  2338  0099                     	;# 
  2339  009A                     	;# 
  2340  009B                     	;# 
  2341  009B                     	;# 
  2342  009C                     	;# 
  2343  009D                     	;# 
  2344  009E                     	;# 
  2345  010C                     	;# 
  2346  010D                     	;# 
  2347  010E                     	;# 
  2348  0111                     	;# 
  2349  0112                     	;# 
  2350  0113                     	;# 
  2351  0114                     	;# 
  2352  0115                     	;# 
  2353  0116                     	;# 
  2354  0117                     	;# 
  2355  0118                     	;# 
  2356  0119                     	;# 
  2357  011A                     	;# 
  2358  011B                     	;# 
  2359  011D                     	;# 
  2360  011E                     	;# 
  2361  018C                     	;# 
  2362  018D                     	;# 
  2363  018E                     	;# 
  2364  0191                     	;# 
  2365  0191                     	;# 
  2366  0192                     	;# 
  2367  0193                     	;# 
  2368  0193                     	;# 
  2369  0193                     	;# 
  2370  0194                     	;# 
  2371  0195                     	;# 
  2372  0196                     	;# 
  2373  0199                     	;# 
  2374  019A                     	;# 
  2375  019B                     	;# 
  2376  019B                     	;# 
  2377  019C                     	;# 
  2378  019D                     	;# 
  2379  019E                     	;# 
  2380  019F                     	;# 
  2381  020C                     	;# 
  2382  020D                     	;# 
  2383  020E                     	;# 
  2384  0211                     	;# 
  2385  0211                     	;# 
  2386  0212                     	;# 
  2387  0212                     	;# 
  2388  0213                     	;# 
  2389  0213                     	;# 
  2390  0214                     	;# 
  2391  0214                     	;# 
  2392  0215                     	;# 
  2393  0215                     	;# 
  2394  0215                     	;# 
  2395  0216                     	;# 
  2396  0216                     	;# 
  2397  0217                     	;# 
  2398  0217                     	;# 
  2399  0219                     	;# 
  2400  021A                     	;# 
  2401  021B                     	;# 
  2402  021C                     	;# 
  2403  021D                     	;# 
  2404  021E                     	;# 
  2405  021F                     	;# 
  2406  0291                     	;# 
  2407  0291                     	;# 
  2408  0292                     	;# 
  2409  0293                     	;# 
  2410  0294                     	;# 
  2411  0295                     	;# 
  2412  0295                     	;# 
  2413  0296                     	;# 
  2414  0298                     	;# 
  2415  0298                     	;# 
  2416  0299                     	;# 
  2417  029A                     	;# 
  2418  029B                     	;# 
  2419  029C                     	;# 
  2420  029D                     	;# 
  2421  029E                     	;# 
  2422  0311                     	;# 
  2423  0311                     	;# 
  2424  0312                     	;# 
  2425  0313                     	;# 
  2426  0318                     	;# 
  2427  0318                     	;# 
  2428  0319                     	;# 
  2429  031A                     	;# 
  2430  038C                     	;# 
  2431  038D                     	;# 
  2432  038E                     	;# 
  2433  0391                     	;# 
  2434  0392                     	;# 
  2435  0393                     	;# 
  2436  0394                     	;# 
  2437  0395                     	;# 
  2438  0396                     	;# 
  2439  039A                     	;# 
  2440  039C                     	;# 
  2441  039D                     	;# 
  2442  039E                     	;# 
  2443  039F                     	;# 
  2444  0415                     	;# 
  2445  0416                     	;# 
  2446  0417                     	;# 
  2447  041C                     	;# 
  2448  041D                     	;# 
  2449  041E                     	;# 
  2450  0FE4                     	;# 
  2451  0FE5                     	;# 
  2452  0FE6                     	;# 
  2453  0FE7                     	;# 
  2454  0FE8                     	;# 
  2455  0FE9                     	;# 
  2456  0FEA                     	;# 
  2457  0FEB                     	;# 
  2458  0FED                     	;# 
  2459  0FEE                     	;# 
  2460  0FEF                     	;# 
  2461  0000                     	;# 
  2462  0001                     	;# 
  2463  0002                     	;# 
  2464  0003                     	;# 
  2465  0004                     	;# 
  2466  0005                     	;# 
  2467  0006                     	;# 
  2468  0007                     	;# 
  2469  0008                     	;# 
  2470  0009                     	;# 
  2471  000A                     	;# 
  2472  000B                     	;# 
  2473  000C                     	;# 
  2474  000D                     	;# 
  2475  000E                     	;# 
  2476  0011                     	;# 
  2477  0012                     	;# 
  2478  0013                     	;# 
  2479  0014                     	;# 
  2480  0015                     	;# 
  2481  0016                     	;# 
  2482  0016                     	;# 
  2483  0017                     	;# 
  2484  0018                     	;# 
  2485  0019                     	;# 
  2486  001A                     	;# 
  2487  001B                     	;# 
  2488  001C                     	;# 
  2489  001E                     	;# 
  2490  001F                     	;# 
  2491  008C                     	;# 
  2492  008D                     	;# 
  2493  008E                     	;# 
  2494  0091                     	;# 
  2495  0092                     	;# 
  2496  0093                     	;# 
  2497  0094                     	;# 
  2498  0095                     	;# 
  2499  0096                     	;# 
  2500  0097                     	;# 
  2501  0098                     	;# 
  2502  0099                     	;# 
  2503  009A                     	;# 
  2504  009B                     	;# 
  2505  009B                     	;# 
  2506  009C                     	;# 
  2507  009D                     	;# 
  2508  009E                     	;# 
  2509  010C                     	;# 
  2510  010D                     	;# 
  2511  010E                     	;# 
  2512  0111                     	;# 
  2513  0112                     	;# 
  2514  0113                     	;# 
  2515  0114                     	;# 
  2516  0115                     	;# 
  2517  0116                     	;# 
  2518  0117                     	;# 
  2519  0118                     	;# 
  2520  0119                     	;# 
  2521  011A                     	;# 
  2522  011B                     	;# 
  2523  011D                     	;# 
  2524  011E                     	;# 
  2525  018C                     	;# 
  2526  018D                     	;# 
  2527  018E                     	;# 
  2528  0191                     	;# 
  2529  0191                     	;# 
  2530  0192                     	;# 
  2531  0193                     	;# 
  2532  0193                     	;# 
  2533  0193                     	;# 
  2534  0194                     	;# 
  2535  0195                     	;# 
  2536  0196                     	;# 
  2537  0199                     	;# 
  2538  019A                     	;# 
  2539  019B                     	;# 
  2540  019B                     	;# 
  2541  019C                     	;# 
  2542  019D                     	;# 
  2543  019E                     	;# 
  2544  019F                     	;# 
  2545  020C                     	;# 
  2546  020D                     	;# 
  2547  020E                     	;# 
  2548  0211                     	;# 
  2549  0211                     	;# 
  2550  0212                     	;# 
  2551  0212                     	;# 
  2552  0213                     	;# 
  2553  0213                     	;# 
  2554  0214                     	;# 
  2555  0214                     	;# 
  2556  0215                     	;# 
  2557  0215                     	;# 
  2558  0215                     	;# 
  2559  0216                     	;# 
  2560  0216                     	;# 
  2561  0217                     	;# 
  2562  0217                     	;# 
  2563  0219                     	;# 
  2564  021A                     	;# 
  2565  021B                     	;# 
  2566  021C                     	;# 
  2567  021D                     	;# 
  2568  021E                     	;# 
  2569  021F                     	;# 
  2570  0291                     	;# 
  2571  0291                     	;# 
  2572  0292                     	;# 
  2573  0293                     	;# 
  2574  0294                     	;# 
  2575  0295                     	;# 
  2576  0295                     	;# 
  2577  0296                     	;# 
  2578  0298                     	;# 
  2579  0298                     	;# 
  2580  0299                     	;# 
  2581  029A                     	;# 
  2582  029B                     	;# 
  2583  029C                     	;# 
  2584  029D                     	;# 
  2585  029E                     	;# 
  2586  0311                     	;# 
  2587  0311                     	;# 
  2588  0312                     	;# 
  2589  0313                     	;# 
  2590  0318                     	;# 
  2591  0318                     	;# 
  2592  0319                     	;# 
  2593  031A                     	;# 
  2594  038C                     	;# 
  2595  038D                     	;# 
  2596  038E                     	;# 
  2597  0391                     	;# 
  2598  0392                     	;# 
  2599  0393                     	;# 
  2600  0394                     	;# 
  2601  0395                     	;# 
  2602  0396                     	;# 
  2603  039A                     	;# 
  2604  039C                     	;# 
  2605  039D                     	;# 
  2606  039E                     	;# 
  2607  039F                     	;# 
  2608  0415                     	;# 
  2609  0416                     	;# 
  2610  0417                     	;# 
  2611  041C                     	;# 
  2612  041D                     	;# 
  2613  041E                     	;# 
  2614  0FE4                     	;# 
  2615  0FE5                     	;# 
  2616  0FE6                     	;# 
  2617  0FE7                     	;# 
  2618  0FE8                     	;# 
  2619  0FE9                     	;# 
  2620  0FEA                     	;# 
  2621  0FEB                     	;# 
  2622  0FED                     	;# 
  2623  0FEE                     	;# 
  2624  0FEF                     	;# 
  2625                           
  2626 ;; Function _Sensor_DefaultCallback is unused but had its address taken
  2627  0000                     
  2628 ;; Function _MTOUCH_CVD_ScanA_0 is unused but had its address taken
  2629  0000                     
  2630 ;; Function _MTOUCH_CVD_ScanB_0 is unused but had its address taken
  2631  0000                     
  2632 ;; Function _MTOUCH_CVD_ScanA_1 is unused but had its address taken
  2633  0000                     
  2634 ;; Function _MTOUCH_CVD_ScanB_1 is unused but had its address taken
  2635  0000                     
  2636 ;; Function _Button_State_Initializing is unused but had its address taken
  2637  0000                     
  2638 ;; Function _Button_State_NotPressed is unused but had its address taken
  2639  0000                     
  2640 ;; Function _Button_State_Pressed is unused but had its address taken
  2641  0000                     
  2642 ;; Function _Button_DefaultCallback is unused but had its address taken
  2643  0000                     
  2644 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2645  0000                     
  2646 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2647  0000                     
  2648 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2649  0000                     
  2650                           	psect	idataBANK2
  2651  1B39                     __pidataBANK2:
  2652                           
  2653                           ;initializer for _callback_notPressed
  2654  1B39  3400               	retlw	0
  2655  1B3A  3400               	retlw	0
  2656                           
  2657                           ;initializer for _callback_pressed
  2658  1B3B  3400               	retlw	0
  2659  1B3C  3400               	retlw	0
  2660                           
  2661                           ;initializer for _Sensor_scanB
  2662  1B3D  3400               	retlw	0
  2663  1B3E  3400               	retlw	0
  2664                           
  2665                           ;initializer for _Sensor_scanA
  2666  1B3F  3400               	retlw	0
  2667  1B40  3400               	retlw	0
  2668                           
  2669                           ;initializer for _callback_sampled
  2670  1B41  3400               	retlw	0
  2671  1B42  3400               	retlw	0
  2672                           
  2673                           ;initializer for _onceFlag
  2674  1B43  3401               	retlw	1
  2675                           
  2676                           	psect	idataBANK3
  2677  1C7C                     __pidataBANK3:
  2678                           
  2679                           ;initializer for _Button_StateMachine
  2680  1C7C  3400               	retlw	0
  2681  1C7D  3400               	retlw	0
  2682  1C7E  3400               	retlw	0
  2683  1C7F  3400               	retlw	0
  2684  1C80  3400               	retlw	0
  2685  1C81  3400               	retlw	0
  2686                           
  2687                           ;initializer for _mtouch_sensor
  2688  1C82  3400               	retlw	0
  2689  1C83  3400               	retlw	0
  2690  1C84  3400               	retlw	0
  2691  1C85  3400               	retlw	0
  2692  1C86  3400               	retlw	0
  2693  1C87  3420               	retlw	32
  2694  1C88  3400               	retlw	0
  2695  1C89  3400               	retlw	0
  2696  1C8A  3400               	retlw	0
  2697  1C8B  3401               	retlw	1
  2698  1C8C  3400               	retlw	0
  2699  1C8D  3400               	retlw	0
  2700  1C8E  3400               	retlw	0
  2701  1C8F  3400               	retlw	0
  2702  1C90  3420               	retlw	32
  2703  1C91  3400               	retlw	0
  2704  1C92  3400               	retlw	0
  2705  1C93  3400               	retlw	0
  2706                           
  2707                           	psect	stringtext1
  2708  182C                     __pstringtext1:
  2709  182C                     _tiny:
  2710  182C  3460               	retlw	96
  2711  182D  3442               	retlw	66
  2712  182E  34A2               	retlw	162
  2713  182F  340D               	retlw	13
  2714  1830                     __end_of_tiny:
  2715                           
  2716                           	psect	stringtext2
  2717  1830                     __pstringtext2:
  2718  1830                     _TMR6_Timer_Period_const:
  2719  1830  3400               	retlw	0
  2720  1831  3400               	retlw	0
  2721  1832  3480               	retlw	128
  2722  1833  343F               	retlw	63
  2723  1834                     __end_of_TMR6_Timer_Period_const:
  2724                           
  2725                           	psect	stringtext3
  2726  1834                     __pstringtext3:
  2727  1834                     _TMR2_Timer_Period_const:
  2728  1834  3400               	retlw	0
  2729  1835  3400               	retlw	0
  2730  1836  34C8               	retlw	200
  2731  1837  3442               	retlw	66
  2732  1838                     __end_of_TMR2_Timer_Period_const:
  2733                           
  2734                           	psect	stringtext4
  2735  1840                     __pstringtext4:
  2736  1840                     _tmr1_period:
  2737  1840  34FA               	retlw	250
  2738  1841  3400               	retlw	0
  2739  1842                     __end_of_tmr1_period:
  2740                           
  2741                           	psect	stringtext5
  2742  1842                     __pstringtext5:
  2743  1842                     _ticker_max:
  2744  1842  34FF               	retlw	255
  2745  1843  34FF               	retlw	255
  2746  1844                     __end_of_ticker_max:
  2747                           
  2748                           	psect	stringtext6
  2749  1800                     __pstringtext6:
  2750  1800                     _mtouch_button_init:
  2751  1800  3400               	retlw	0
  2752  1801  3400               	retlw	0
  2753  1802  3400               	retlw	0
  2754  1803  3400               	retlw	0
  2755  1804  3400               	retlw	0
  2756  1805  3400               	retlw	0
  2757  1806  3400               	retlw	0
  2758  1807  3400               	retlw	0
  2759  1808  3400               	retlw	0
  2760  1809  3400               	retlw	0
  2761  180A  3400               	retlw	0
  2762  180B  3400               	retlw	0
  2763  180C  3400               	retlw	0
  2764  180D  3400               	retlw	0
  2765  180E  3464               	retlw	100
  2766  180F  3401               	retlw	1
  2767  1810  3401               	retlw	1
  2768  1811  3401               	retlw	1
  2769  1812  3400               	retlw	0
  2770  1813  3400               	retlw	0
  2771  1814  3400               	retlw	0
  2772  1815  3400               	retlw	0
  2773  1816  3400               	retlw	0
  2774  1817  3400               	retlw	0
  2775  1818  3400               	retlw	0
  2776  1819  3400               	retlw	0
  2777  181A  3400               	retlw	0
  2778  181B  3400               	retlw	0
  2779  181C  3400               	retlw	0
  2780  181D  3400               	retlw	0
  2781  181E  3464               	retlw	100
  2782  181F  3401               	retlw	1
  2783  1820                     __end_of_mtouch_button_init:
  2784                           
  2785                           	psect	stringtext7
  2786  1838                     __pstringtext7:
  2787  1838                     _HalfCycleACDuration_const:
  2788  1838  3400               	retlw	0
  2789  1839  3400               	retlw	0
  2790  183A  3420               	retlw	32
  2791  183B  3441               	retlw	65
  2792  183C                     __end_of_HalfCycleACDuration_const:
  2793                           
  2794                           	psect	stringtext8
  2795  183C                     __pstringtext8:
  2796  183C                     _Tolerance_Temp_const:
  2797  183C  34CD               	retlw	205
  2798  183D  34CC               	retlw	204
  2799  183E  3414               	retlw	20
  2800  183F  3442               	retlw	66
  2801  1840                     __end_of_Tolerance_Temp_const:
  2802                           
  2803                           	psect	stringtext9
  2804  1844                     __pstringtext9:
  2805  1844                     _V_cc_const:
  2806  1844  3405               	retlw	5
  2807  1845                     __end_of_V_cc_const:
  2808                           
  2809                           	psect	stringtext10
  2810  1845                     __pstringtext10:
  2811  1845                     _R_const:
  2812  1845  3464               	retlw	100
  2813  1846                     __end_of_R_const:
  2814                           
  2815                           	psect	nvBANK3
  2816  01CC                     __pnvBANK3:
  2817  01CC                     _TMR1_InterruptHandler:
  2818  01CC                     	ds	2
  2819  01CE                     _timer1ReloadVal:
  2820  01CE                     	ds	2
  2821  01D0                     _TMR4_InterruptHandler:
  2822  01D0                     	ds	2
  2823  01D2                     _TMR2_InterruptHandler:
  2824  01D2                     	ds	2
  2825  01D4                     _EUSART_ErrorHandler:
  2826  01D4                     	ds	2
  2827  01D6                     _EUSART_OverrunErrorHandler:
  2828  01D6                     	ds	2
  2829  01D8                     _EUSART_FramingErrorHandler:
  2830  01D8                     	ds	2
  2831  01DA                     _IOCAF2_InterruptHandler:
  2832  01DA                     	ds	2
  2833  0018                     _T1CONbits	set	24
  2834  0018                     _T1CON	set	24
  2835  0016                     _TMR1L	set	22
  2836  0017                     _TMR1H	set	23
  2837  0019                     _T1GCON	set	25
  2838  000E                     _PORTCbits	set	14
  2839  001C                     _T2CONbits	set	28
  2840  001C                     _T2CON	set	28
  2841  001A                     _TMR2	set	26
  2842  001B                     _PR2	set	27
  2843  0013                     _PIR3bits	set	19
  2844  0011                     _PIR1bits	set	17
  2845  000B                     _INTCONbits	set	11
  2846  005F                     _GIE	set	95
  2847  0091                     _PIE1bits	set	145
  2848  0093                     _PIE3bits	set	147
  2849  009C                     _ADRESH	set	156
  2850  009B                     _ADRESL	set	155
  2851  0095                     _OPTION_REGbits	set	149
  2852  008E                     _TRISC	set	142
  2853  008D                     _TRISB	set	141
  2854  008C                     _TRISA	set	140
  2855  0097                     _WDTCON	set	151
  2856  0098                     _OSCTUNE	set	152
  2857  0099                     _OSCCON	set	153
  2858  009D                     _ADCON0bits	set	157
  2859  009E                     _ADCON1	set	158
  2860  009D                     _ADCON0	set	157
  2861  010E                     _LATCbits	set	270
  2862  011E                     _APFCON1	set	286
  2863  011D                     _APFCON0	set	285
  2864  010E                     _LATC	set	270
  2865  010D                     _LATB	set	269
  2866  010C                     _LATA	set	268
  2867  0116                     _BORCON	set	278
  2868  019A                     _TXREG	set	410
  2869  019E                     _TXSTAbits	set	414
  2870  019C                     _SPBRGH	set	412
  2871  019B                     _SPBRGL	set	411
  2872  019E                     _TXSTA	set	414
  2873  019D                     _RCSTA	set	413
  2874  019F                     _BAUDCON	set	415
  2875  018C                     _ANSELA	set	396
  2876  018D                     _ANSELB	set	397
  2877  018E                     _ANSELC	set	398
  2878  020E                     _WPUC	set	526
  2879  020C                     _WPUA	set	524
  2880  020D                     _WPUB	set	525
  2881  0391                     _IOCAPbits	set	913
  2882  0392                     _IOCANbits	set	914
  2883  0393                     _IOCAFbits	set	915
  2884  0417                     _T4CONbits	set	1047
  2885  0417                     _T4CON	set	1047
  2886  0415                     _TMR4	set	1045
  2887  0416                     _PR4	set	1046
  2888                           
  2889                           	psect	stringtext11
  2890  1820                     __pstringtext11:
  2891  1820                     STR_1:
  2892  1820  3425               	retlw	37	;'%'
  2893  1821  3464               	retlw	100	;'d'
  2894  1822  3420               	retlw	32	;' '
  2895  1823  3443               	retlw	67	;'C'
  2896  1824  3465               	retlw	101	;'e'
  2897  1825  346C               	retlw	108	;'l'
  2898  1826  3473               	retlw	115	;'s'
  2899  1827  3469               	retlw	105	;'i'
  2900  1828  3475               	retlw	117	;'u'
  2901  1829  3473               	retlw	115	;'s'
  2902  182A  340A               	retlw	10
  2903  182B  3400               	retlw	0
  2904                           
  2905                           	psect	stringtext12
  2906  0000                     __pstringtext12:
  2907  182B                     
  2908                           	psect	cinit
  2909  002F                     start_initialization:	
  2910                           ; #config settings
  2911                           
  2912  002F                     __initialization:
  2913                           
  2914                           ; Initialize objects allocated to BANK2
  2915  002F  3039               	movlw	low __pidataBANK2
  2916  0030  0084               	movwf	4
  2917  0031  309B               	movlw	(high __pidataBANK2)| (0+128)
  2918  0032  0085               	movwf	5
  2919  0033  3064               	movlw	low __pdataBANK2
  2920  0034  0086               	movwf	6
  2921  0035  3001               	movlw	high __pdataBANK2
  2922  0036  0087               	movwf	7
  2923  0037  300B               	movlw	11
  2924  0038  319A  22E3  3180   	fcall	init_ram
  2925                           
  2926                           ; Initialize objects allocated to BANK3
  2927  003B  307C               	movlw	low __pidataBANK3
  2928  003C  0084               	movwf	4
  2929  003D  309C               	movlw	(high __pidataBANK3)| (0+128)
  2930  003E  0085               	movwf	5
  2931  003F  30A0               	movlw	low __pdataBANK3
  2932  0040  0086               	movwf	6
  2933  0041  3001               	movlw	high __pdataBANK3
  2934  0042  0087               	movwf	7
  2935  0043  3018               	movlw	24
  2936  0044  319A  22E3  3180   	fcall	init_ram
  2937                           
  2938                           ; Clear objects allocated to COMMON
  2939  0047  01FA               	clrf	__pbssCOMMON& (0+127)
  2940  0048  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2941                           
  2942                           ; Clear objects allocated to BANK1
  2943  0049  0021               	movlb	1	; select bank1
  2944  004A  01EF               	clrf	__pbssBANK1& (0+127)
  2945                           
  2946                           ; Clear objects allocated to BANK2
  2947  004B  3043               	movlw	low __pbssBANK2
  2948  004C  0084               	movwf	4
  2949  004D  3001               	movlw	high __pbssBANK2
  2950  004E  0085               	movwf	5
  2951  004F  3021               	movlw	33
  2952  0050  319A  22DD  3180   	fcall	clear_ram0
  2953                           
  2954                           ; Clear objects allocated to BANK3
  2955  0053  30B8               	movlw	low __pbssBANK3
  2956  0054  0084               	movwf	4
  2957  0055  3001               	movlw	high __pbssBANK3
  2958  0056  0085               	movwf	5
  2959  0057  3014               	movlw	20
  2960  0058  319A  22DD  3180   	fcall	clear_ram0
  2961                           
  2962                           ; Clear objects allocated to BANK4
  2963  005B  3020               	movlw	low __pbssBANK4
  2964  005C  0084               	movwf	4
  2965  005D  3002               	movlw	high __pbssBANK4
  2966  005E  0085               	movwf	5
  2967  005F  3040               	movlw	64
  2968  0060  319A  22DD         	fcall	clear_ram0
  2969  0062                     end_of_initialization:	
  2970                           ;End of C runtime variable initialization code
  2971                           
  2972  0062                     __end_of__initialization:
  2973  0062  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2974  0063  0020               	movlb	0
  2975  0064  3191  2924         	ljmp	_main	;jump to C main() function
  2976                           
  2977                           	psect	bssCOMMON
  2978  007A                     __pbssCOMMON:
  2979  007A                     _flags:
  2980  007A                     	ds	2
  2981                           
  2982                           	psect	bssBANK1
  2983  00EF                     __pbssBANK1:
  2984  00EF                     MTOUCH_Random@seed:
  2985  00EF                     	ds	1
  2986                           
  2987                           	psect	bssBANK2
  2988  0143                     __pbssBANK2:
  2989  0143                     _errno:
  2990  0143                     	ds	2
  2991  0145                     _nout:
  2992  0145                     	ds	2
  2993  0147                     _width:
  2994  0147                     	ds	2
  2995  0149                     _prec:
  2996  0149                     	ds	2
  2997  014B                     Config_Heater@del:
  2998  014B                     	ds	2
  2999  014D                     TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4:
  3000  014D                     	ds	2
  3001  014F                     TMR2_Drive_TRIAC_isr@counter_tmr2:
  3002  014F                     	ds	2
  3003  0151                     _ticker_g:
  3004  0151                     	ds	2
  3005  0153                     _tmr2_required_counter_steps_g:
  3006  0153                     	ds	2
  3007  0155                     _ADC_InterruptHandler:
  3008  0155                     	ds	2
  3009  0157                     _packet_sample:
  3010  0157                     	ds	2
  3011  0159                     Config_Heater@once:
  3012  0159                     	ds	1
  3013  015A                     Config_Heater@count:
  3014  015A                     	ds	1
  3015  015B                     _DimmerStatusFlag_g:
  3016  015B                     	ds	1
  3017  015C                     _eusartRxLastError:
  3018  015C                     	ds	1
  3019  015D                     _mtouch_request_init:
  3020  015D                     	ds	1
  3021  015E                     _mtouch_time_toScan:
  3022  015E                     	ds	1
  3023  015F                     _lowpowerActivated:
  3024  015F                     	ds	1
  3025  0160                     _sample_delay:
  3026  0160                     	ds	1
  3027  0161                     _packet_counter:
  3028  0161                     	ds	1
  3029  0162                     _currentScannSensor:
  3030  0162                     	ds	1
  3031  0163                     _sensor_globalFlags:
  3032  0163                     	ds	1
  3033                           
  3034                           	psect	dataBANK2
  3035  0164                     __pdataBANK2:
  3036  0164                     _callback_notPressed:
  3037  0164                     	ds	2
  3038  0166                     _callback_pressed:
  3039  0166                     	ds	2
  3040  0168                     _Sensor_scanB:
  3041  0168                     	ds	2
  3042  016A                     _Sensor_scanA:
  3043  016A                     	ds	2
  3044  016C                     _callback_sampled:
  3045  016C                     	ds	2
  3046  016E                     _onceFlag:
  3047  016E                     	ds	1
  3048                           
  3049                           	psect	bssBANK3
  3050  01B8                     __pbssBANK3:
  3051  01B8                     _Buff_g:
  3052  01B8                     	ds	20
  3053                           
  3054                           	psect	dataBANK3
  3055  01A0                     __pdataBANK3:
  3056  01A0                     _Button_StateMachine:
  3057  01A0                     	ds	6
  3058  01A6                     _mtouch_sensor:
  3059  01A6                     	ds	18
  3060                           
  3061                           	psect	bssBANK4
  3062  0220                     __pbssBANK4:
  3063  0220                     _dbuf:
  3064  0220                     	ds	32
  3065  0240                     _mtouch_button:
  3066  0240                     	ds	32
  3067                           
  3068                           	psect	inittext
  3069  1AE3                     init_ram:
  3070  1AE3  00FE               	movwf	126
  3071  1AE4                     initloop:
  3072  1AE4  0012               	moviw fsr0++
  3073  1AE5  001E               	movwi fsr1++
  3074  1AE6  0BFE               	decfsz	126,f
  3075  1AE7  2AE4               	goto	initloop
  3076  1AE8  3400               	retlw	0
  3077                           
  3078                           	psect	clrtext
  3079  1ADD                     clear_ram0:	
  3080                           ;	Called with FSR0 containing the base address, and
  3081                           ;	WREG with the size to clear
  3082                           
  3083  1ADD  0064               	clrwdt	;clear the watchdog before getting into this loop
  3084  1ADE                     clrloop0:
  3085  1ADE  0180               	clrf	0	;clear RAM location pointed to by FSR
  3086  1ADF  3101               	addfsr 0,1
  3087  1AE0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3088  1AE1  2ADE               	goto	clrloop0	;have we reached the end yet?
  3089  1AE2  3400               	retlw	0	;all done for this memory range, return
  3090                           
  3091                           	psect	cstackBANK2
  3092  0120                     __pcstackBANK2:
  3093  0120                     Read_PT100_Temp@ADC_volt:
  3094                           
  3095                           ; 4 bytes @ 0x0
  3096  0120                     	ds	4
  3097  0124                     Read_PT100_Temp@R_PT100:
  3098                           
  3099                           ; 4 bytes @ 0x4
  3100  0124                     	ds	4
  3101  0128                     Read_PT100_Temp@Temp_PT100:
  3102                           
  3103                           ; 4 bytes @ 0x8
  3104  0128                     	ds	4
  3105  012C                     Read_PT100_Temp@ADC_num:
  3106                           
  3107                           ; 2 bytes @ 0xC
  3108  012C                     	ds	2
  3109  012E                     ?___fltol:
  3110  012E                     ___fltol@f1:	
  3111                           ; 4 bytes @ 0xE
  3112                           
  3113                           
  3114                           ; 4 bytes @ 0xE
  3115  012E                     	ds	4
  3116  0132                     ??___fltol:
  3117                           
  3118                           ; 1 bytes @ 0x12
  3119  0132                     	ds	5
  3120  0137                     ?_SetDimmer:
  3121  0137                     SetDimmer@dim_percentage:	
  3122                           ; 1 bytes @ 0x17
  3123                           
  3124                           
  3125                           ; 4 bytes @ 0x17
  3126  0137                     	ds	4
  3127  013B                     SetDimmer@TRIAC_off_duration_ms:
  3128                           
  3129                           ; 4 bytes @ 0x1B
  3130  013B                     	ds	4
  3131  013F                     main@del:
  3132                           
  3133                           ; 2 bytes @ 0x1F
  3134  013F                     	ds	2
  3135  0141                     main@Temp_PT100:
  3136                           
  3137                           ; 2 bytes @ 0x21
  3138  0141                     	ds	2
  3139                           
  3140                           	psect	cstackBANK1
  3141  00A0                     __pcstackBANK1:
  3142  00A0                     ?_sprintf:
  3143  00A0                     sprintf@fmt:	
  3144                           ; 2 bytes @ 0x0
  3145                           
  3146                           
  3147                           ; 2 bytes @ 0x0
  3148  00A0                     	ds	4
  3149  00A4                     ??_sprintf:
  3150  00A4                     sqrtf@s:	
  3151                           ; 1 bytes @ 0x4
  3152                           
  3153                           
  3154                           ; 4 bytes @ 0x4
  3155  00A4                     	ds	3
  3156  00A7                     sprintf@ap:
  3157                           
  3158                           ; 1 bytes @ 0x7
  3159  00A7                     	ds	1
  3160  00A8                     sprintf@s:
  3161  00A8                     sqrtf@i:	
  3162                           ; 1 bytes @ 0x8
  3163                           
  3164                           
  3165                           ; 4 bytes @ 0x8
  3166  00A8                     	ds	1
  3167  00A9                     sprintf@f:
  3168                           
  3169                           ; 5 bytes @ 0x9
  3170  00A9                     	ds	3
  3171  00AC                     sqrtf@__xc8_float_word:
  3172                           
  3173                           ; 4 bytes @ 0xC
  3174  00AC                     	ds	4
  3175  00B0                     sqrtf@q:
  3176                           
  3177                           ; 4 bytes @ 0x10
  3178  00B0                     	ds	4
  3179  00B4                     sqrtf@t:
  3180                           
  3181                           ; 4 bytes @ 0x14
  3182  00B4                     	ds	4
  3183  00B8                     sqrtf@z:
  3184                           
  3185                           ; 4 bytes @ 0x18
  3186  00B8                     	ds	4
  3187  00BC                     sqrtf@m:
  3188                           
  3189                           ; 4 bytes @ 0x1C
  3190  00BC                     	ds	4
  3191  00C0                     sqrtf@r:
  3192                           
  3193                           ; 4 bytes @ 0x20
  3194  00C0                     	ds	4
  3195  00C4                     sqrtf@ix:
  3196                           
  3197                           ; 4 bytes @ 0x24
  3198  00C4                     	ds	4
  3199  00C8                     ___fldiv@rem:
  3200                           
  3201                           ; 4 bytes @ 0x28
  3202  00C8                     	ds	4
  3203  00CC                     ___fldiv@sign:
  3204                           
  3205                           ; 1 bytes @ 0x2C
  3206  00CC                     	ds	1
  3207  00CD                     ___fldiv@new_exp:
  3208                           
  3209                           ; 2 bytes @ 0x2D
  3210  00CD                     	ds	2
  3211  00CF                     ___fldiv@grs:
  3212                           
  3213                           ; 4 bytes @ 0x2F
  3214  00CF                     	ds	4
  3215  00D3                     ___fldiv@bexp:
  3216                           
  3217                           ; 1 bytes @ 0x33
  3218  00D3                     	ds	1
  3219  00D4                     ___fldiv@aexp:
  3220                           
  3221                           ; 1 bytes @ 0x34
  3222  00D4                     	ds	1
  3223  00D5                     ?_ChangeADCtoVoltage:
  3224  00D5                     ?_Measure_R_PT100_2Wire:	
  3225                           ; 4 bytes @ 0x35
  3226                           
  3227  00D5                     ?_Measure_Temp_PT100_2Wire:	
  3228                           ; 4 bytes @ 0x35
  3229                           
  3230  00D5                     ChangeADCtoVoltage@ADC_number:	
  3231                           ; 4 bytes @ 0x35
  3232                           
  3233  00D5                     Measure_R_PT100_2Wire@ADC_volt:	
  3234                           ; 2 bytes @ 0x35
  3235                           
  3236  00D5                     Measure_Temp_PT100_2Wire@R_PT100:	
  3237                           ; 4 bytes @ 0x35
  3238                           
  3239                           
  3240                           ; 4 bytes @ 0x35
  3241  00D5                     	ds	4
  3242  00D9                     Measure_R_PT100_2Wire@R_PT100:
  3243  00D9                     Measure_Temp_PT100_2Wire@Temp_PT100:	
  3244                           ; 4 bytes @ 0x39
  3245                           
  3246                           
  3247                           ; 4 bytes @ 0x39
  3248  00D9                     	ds	4
  3249  00DD                     _Measure_Temp_PT100_2Wire$2973:
  3250                           
  3251                           ; 4 bytes @ 0x3D
  3252  00DD                     	ds	4
  3253  00E1                     _Measure_Temp_PT100_2Wire$2974:
  3254                           
  3255                           ; 4 bytes @ 0x41
  3256  00E1                     	ds	4
  3257  00E5                     _Measure_Temp_PT100_2Wire$2975:
  3258                           
  3259                           ; 4 bytes @ 0x45
  3260  00E5                     	ds	4
  3261  00E9                     ?_Read_PT100_Temp:
  3262                           
  3263                           ; 4 bytes @ 0x49
  3264  00E9                     	ds	4
  3265  00ED                     ??_Config_Heater:
  3266                           
  3267                           ; 1 bytes @ 0x4D
  3268  00ED                     	ds	2
  3269                           
  3270                           	psect	cstackCOMMON
  3271  0070                     __pcstackCOMMON:
  3272  0070                     ?_MTOUCH_Sensor_Enable:
  3273  0070                     ?_Sensor_Sampled_Reset:	
  3274                           ; 1 bytes @ 0x0
  3275                           
  3276  0070                     ?_PIN_MANAGER_Initialize:	
  3277                           ; 1 bytes @ 0x0
  3278                           
  3279  0070                     ?_OSCILLATOR_Initialize:	
  3280                           ; 1 bytes @ 0x0
  3281                           
  3282  0070                     ?_WDT_Initialize:	
  3283                           ; 1 bytes @ 0x0
  3284                           
  3285  0070                     ?_ADC_Initialize:	
  3286                           ; 1 bytes @ 0x0
  3287                           
  3288  0070                     ?_TMR4_Initialize:	
  3289                           ; 1 bytes @ 0x0
  3290                           
  3291  0070                     ?_TMR2_Initialize:	
  3292                           ; 1 bytes @ 0x0
  3293                           
  3294  0070                     ?_TMR1_Initialize:	
  3295                           ; 1 bytes @ 0x0
  3296                           
  3297  0070                     ?_EUSART_Initialize:	
  3298                           ; 1 bytes @ 0x0
  3299                           
  3300  0070                     ?_IOCAF2_DefaultInterruptHandler:	
  3301                           ; 1 bytes @ 0x0
  3302                           
  3303  0070                     ??_IOCAF2_DefaultInterruptHandler:	
  3304                           ; 1 bytes @ 0x0
  3305                           
  3306  0070                     ?_IOCAF2_ISR:	
  3307                           ; 1 bytes @ 0x0
  3308                           
  3309  0070                     ??_IOCAF2_ISR:	
  3310                           ; 1 bytes @ 0x0
  3311                           
  3312  0070                     ?_TMR4_ISR:	
  3313                           ; 1 bytes @ 0x0
  3314                           
  3315  0070                     ??_TMR4_ISR:	
  3316                           ; 1 bytes @ 0x0
  3317                           
  3318  0070                     ?_TMR2_ISR:	
  3319                           ; 1 bytes @ 0x0
  3320                           
  3321  0070                     ??_TMR2_ISR:	
  3322                           ; 1 bytes @ 0x0
  3323                           
  3324  0070                     ?_TMR1_ISR:	
  3325                           ; 1 bytes @ 0x0
  3326                           
  3327  0070                     ?_TMR2_DefaultInterruptHandler:	
  3328                           ; 1 bytes @ 0x0
  3329                           
  3330  0070                     ??_TMR2_DefaultInterruptHandler:	
  3331                           ; 1 bytes @ 0x0
  3332                           
  3333  0070                     ?_TMR4_DefaultInterruptHandler:	
  3334                           ; 1 bytes @ 0x0
  3335                           
  3336  0070                     ??_TMR4_DefaultInterruptHandler:	
  3337                           ; 1 bytes @ 0x0
  3338                           
  3339  0070                     ?_Init_Function:	
  3340                           ; 1 bytes @ 0x0
  3341                           
  3342  0070                     ?_Zero_Detection_isr:	
  3343                           ; 1 bytes @ 0x0
  3344                           
  3345  0070                     ??_Zero_Detection_isr:	
  3346                           ; 1 bytes @ 0x0
  3347                           
  3348  0070                     ?_TMR1_Generate_Delay_ms_isr:	
  3349                           ; 1 bytes @ 0x0
  3350                           
  3351  0070                     ??_TMR1_Generate_Delay_ms_isr:	
  3352                           ; 1 bytes @ 0x0
  3353                           
  3354  0070                     ?_TMR2_Drive_TRIAC_isr:	
  3355                           ; 1 bytes @ 0x0
  3356                           
  3357  0070                     ??_TMR2_Drive_TRIAC_isr:	
  3358                           ; 1 bytes @ 0x0
  3359                           
  3360  0070                     ?_TMR4_Wroking_Blink_AlarmLED_isr:	
  3361                           ; 1 bytes @ 0x0
  3362                           
  3363  0070                     ??_TMR4_Wroking_Blink_AlarmLED_isr:	
  3364                           ; 1 bytes @ 0x0
  3365                           
  3366  0070                     ?_Config_Heater:	
  3367                           ; 1 bytes @ 0x0
  3368                           
  3369  0070                     ?_TX_Whole_String:	
  3370                           ; 1 bytes @ 0x0
  3371                           
  3372  0070                     ?_StartStop_AlarmLED:	
  3373                           ; 1 bytes @ 0x0
  3374                           
  3375  0070                     ?_StartStop_AlarmLED_Blink:	
  3376                           ; 1 bytes @ 0x0
  3377                           
  3378  0070                     ?_StartStop_Fan:	
  3379                           ; 1 bytes @ 0x0
  3380                           
  3381  0070                     ?_StartStop_Buzzer:	
  3382                           ; 1 bytes @ 0x0
  3383                           
  3384  0070                     ?_StartStop_Dimmer:	
  3385                           ; 1 bytes @ 0x0
  3386                           
  3387  0070                     ?_TMR1_DefaultInterruptHandler:	
  3388                           ; 1 bytes @ 0x0
  3389                           
  3390  0070                     ??_TMR1_DefaultInterruptHandler:	
  3391                           ; 1 bytes @ 0x0
  3392                           
  3393  0070                     ?_putch:	
  3394                           ; 1 bytes @ 0x0
  3395                           
  3396  0070                     ?_MTOUCH_Sensor_Initialize:	
  3397                           ; 1 bytes @ 0x0
  3398                           
  3399  0070                     ?_MTOUCH_Sensor_InitializeAll:	
  3400                           ; 1 bytes @ 0x0
  3401                           
  3402  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	
  3403                           ; 1 bytes @ 0x0
  3404                           
  3405  0070                     ?_MTOUCH_Sensor_Calibrate:	
  3406                           ; 1 bytes @ 0x0
  3407                           
  3408  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	
  3409                           ; 1 bytes @ 0x0
  3410                           
  3411  0070                     ?_MTOUCH_Button_Initialize:	
  3412                           ; 1 bytes @ 0x0
  3413                           
  3414  0070                     ?_MTOUCH_Button_InitializeAll:	
  3415                           ; 1 bytes @ 0x0
  3416                           
  3417  0070                     ?_MTOUCH_Initialize:	
  3418                           ; 1 bytes @ 0x0
  3419                           
  3420  0070                     ?_SYSTEM_Initialize:	
  3421                           ; 1 bytes @ 0x0
  3422                           
  3423  0070                     ?_PIN_MANAGER_IOC:	
  3424                           ; 1 bytes @ 0x0
  3425                           
  3426  0070                     ??_PIN_MANAGER_IOC:	
  3427                           ; 1 bytes @ 0x0
  3428                           
  3429  0070                     ?_EUSART_is_tx_ready:	
  3430                           ; 1 bytes @ 0x0
  3431                           
  3432  0070                     ?_EUSART_Write:	
  3433                           ; 1 bytes @ 0x0
  3434                           
  3435  0070                     ?_ADC_SelectChannel:	
  3436                           ; 1 bytes @ 0x0
  3437                           
  3438  0070                     ?_ADC_StartConversion:	
  3439                           ; 1 bytes @ 0x0
  3440                           
  3441  0070                     ?_ADC_IsConversionDone:	
  3442                           ; 1 bytes @ 0x0
  3443                           
  3444  0070                     ?_INTERRUPT_InterruptManager:	
  3445                           ; 1 bytes @ 0x0
  3446                           
  3447  0070                     ?_TMR2_StartTimer:	
  3448                           ; 1 bytes @ 0x0
  3449                           
  3450  0070                     ??_TMR2_StartTimer:	
  3451                           ; 1 bytes @ 0x0
  3452                           
  3453  0070                     ?_TMR2_StopTimer:	
  3454                           ; 1 bytes @ 0x0
  3455                           
  3456  0070                     ??_TMR2_StopTimer:	
  3457                           ; 1 bytes @ 0x0
  3458                           
  3459  0070                     ?_TMR4_StartTimer:	
  3460                           ; 1 bytes @ 0x0
  3461                           
  3462  0070                     ?_TMR4_StopTimer:	
  3463                           ; 1 bytes @ 0x0
  3464                           
  3465  0070                     ?_main:	
  3466                           ; 1 bytes @ 0x0
  3467                           
  3468  0070                     ?_TX_Command:	
  3469                           ; 1 bytes @ 0x0
  3470                           
  3471  0070                     ?_TMR1_WriteTimer:	
  3472                           ; 1 bytes @ 0x0
  3473                           
  3474  0070                     MTOUCH_Sensor_Calibrate@sensor:	
  3475                           ; 1 bytes @ 0x0
  3476                           
  3477  0070                     putch@c:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480  0070                     TMR1_WriteTimer@timerVal:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483                           
  3484                           ; 2 bytes @ 0x0
  3485  0070                     	ds	2
  3486  0072                     ?___flge:
  3487  0072                     ??_Sensor_Sampled_Reset:	
  3488                           ; 1 bit 
  3489                           
  3490  0072                     ?_memcpy:	
  3491                           ; 1 bytes @ 0x2
  3492                           
  3493  0072                     ??_OSCILLATOR_Initialize:	
  3494                           ; 1 bytes @ 0x2
  3495                           
  3496  0072                     ??_WDT_Initialize:	
  3497                           ; 1 bytes @ 0x2
  3498                           
  3499  0072                     ??_ADC_Initialize:	
  3500                           ; 1 bytes @ 0x2
  3501                           
  3502  0072                     ?_IOCAF2_SetInterruptHandler:	
  3503                           ; 1 bytes @ 0x2
  3504                           
  3505  0072                     ?_EUSART_SetFramingErrorHandler:	
  3506                           ; 1 bytes @ 0x2
  3507                           
  3508  0072                     ?_EUSART_SetOverrunErrorHandler:	
  3509                           ; 1 bytes @ 0x2
  3510                           
  3511  0072                     ?_EUSART_SetErrorHandler:	
  3512                           ; 1 bytes @ 0x2
  3513                           
  3514  0072                     ??_TMR1_ISR:	
  3515                           ; 1 bytes @ 0x2
  3516                           
  3517  0072                     ?_TMR2_SetInterruptHandler:	
  3518                           ; 1 bytes @ 0x2
  3519                           
  3520  0072                     ?_TMR4_SetInterruptHandler:	
  3521                           ; 1 bytes @ 0x2
  3522                           
  3523  0072                     ?_TMR1_SetInterruptHandler:	
  3524                           ; 1 bytes @ 0x2
  3525                           
  3526  0072                     ??_StartStop_AlarmLED:	
  3527                           ; 1 bytes @ 0x2
  3528                           
  3529  0072                     ??_StartStop_AlarmLED_Blink:	
  3530                           ; 1 bytes @ 0x2
  3531                           
  3532  0072                     ??_StartStop_Fan:	
  3533                           ; 1 bytes @ 0x2
  3534                           
  3535  0072                     ??_StartStop_Buzzer:	
  3536                           ; 1 bytes @ 0x2
  3537                           
  3538  0072                     ??_putch:	
  3539                           ; 1 bytes @ 0x2
  3540                           
  3541  0072                     ??_MTOUCH_Sensor_Scan_Initialize:	
  3542                           ; 1 bytes @ 0x2
  3543                           
  3544  0072                     ??_MTOUCH_Sensor_Calibrate:	
  3545                           ; 1 bytes @ 0x2
  3546                           
  3547  0072                     ??_MTOUCH_Button_Initialize:	
  3548                           ; 1 bytes @ 0x2
  3549                           
  3550  0072                     ??_EUSART_is_tx_ready:	
  3551                           ; 1 bytes @ 0x2
  3552                           
  3553  0072                     ??_EUSART_Write:	
  3554                           ; 1 bytes @ 0x2
  3555                           
  3556  0072                     ??_ADC_SelectChannel:	
  3557                           ; 1 bytes @ 0x2
  3558                           
  3559  0072                     ??_ADC_StartConversion:	
  3560                           ; 1 bytes @ 0x2
  3561                           
  3562  0072                     ??_ADC_IsConversionDone:	
  3563                           ; 1 bytes @ 0x2
  3564                           
  3565  0072                     ??_INTERRUPT_InterruptManager:	
  3566                           ; 1 bytes @ 0x2
  3567                           
  3568  0072                     ??_TMR4_StartTimer:	
  3569                           ; 1 bytes @ 0x2
  3570                           
  3571  0072                     ??_TMR4_StopTimer:	
  3572                           ; 1 bytes @ 0x2
  3573                           
  3574  0072                     ??_TMR1_WriteTimer:	
  3575                           ; 1 bytes @ 0x2
  3576                           
  3577  0072                     ?___bmul:	
  3578                           ; 1 bytes @ 0x2
  3579                           
  3580  0072                     ??___aodiv:	
  3581                           ; 1 bytes @ 0x2
  3582                           
  3583  0072                     ??___aomod:	
  3584                           ; 1 bytes @ 0x2
  3585                           
  3586  0072                     ?_strlen:	
  3587                           ; 1 bytes @ 0x2
  3588                           
  3589  0072                     ?__Umul8_16:	
  3590                           ; 2 bytes @ 0x2
  3591                           
  3592  0072                     ?_fputc:	
  3593                           ; 2 bytes @ 0x2
  3594                           
  3595  0072                     ?_ADC_GetConversionResult:	
  3596                           ; 2 bytes @ 0x2
  3597                           
  3598  0072                     ?___lwdiv:	
  3599                           ; 2 bytes @ 0x2
  3600                           
  3601  0072                     ?_nanf:	
  3602                           ; 2 bytes @ 0x2
  3603                           
  3604  0072                     ?___xxtofl:	
  3605                           ; 4 bytes @ 0x2
  3606                           
  3607  0072                     Sensor_Sampled_Reset@sensor:	
  3608                           ; 4 bytes @ 0x2
  3609                           
  3610  0072                     _EUSART_is_tx_ready$1174:	
  3611                           ; 1 bytes @ 0x2
  3612                           
  3613  0072                     EUSART_Write@txData:	
  3614                           ; 1 bytes @ 0x2
  3615                           
  3616  0072                     StartStop_AlarmLED@OnOff:	
  3617                           ; 1 bytes @ 0x2
  3618                           
  3619  0072                     StartStop_AlarmLED_Blink@OnOff:	
  3620                           ; 1 bytes @ 0x2
  3621                           
  3622  0072                     StartStop_Fan@OnOff:	
  3623                           ; 1 bytes @ 0x2
  3624                           
  3625  0072                     StartStop_Buzzer@OnOff:	
  3626                           ; 1 bytes @ 0x2
  3627                           
  3628  0072                     ___bmul@multiplicand:	
  3629                           ; 1 bytes @ 0x2
  3630                           
  3631  0072                     __Umul8_16@multiplicand:	
  3632                           ; 1 bytes @ 0x2
  3633                           
  3634  0072                     IOCAF2_SetInterruptHandler@InterruptHandler:	
  3635                           ; 1 bytes @ 0x2
  3636                           
  3637  0072                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3638                           ; 2 bytes @ 0x2
  3639                           
  3640  0072                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3641                           ; 2 bytes @ 0x2
  3642                           
  3643  0072                     EUSART_SetErrorHandler@interruptHandler:	
  3644                           ; 2 bytes @ 0x2
  3645                           
  3646  0072                     TMR2_SetInterruptHandler@InterruptHandler:	
  3647                           ; 2 bytes @ 0x2
  3648                           
  3649  0072                     TMR4_SetInterruptHandler@InterruptHandler:	
  3650                           ; 2 bytes @ 0x2
  3651                           
  3652  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  3653                           ; 2 bytes @ 0x2
  3654                           
  3655  0072                     ___lwdiv@divisor:	
  3656                           ; 2 bytes @ 0x2
  3657                           
  3658  0072                     memcpy@s1:	
  3659                           ; 2 bytes @ 0x2
  3660                           
  3661  0072                     fputc@c:	
  3662                           ; 2 bytes @ 0x2
  3663                           
  3664  0072                     nanf@s:	
  3665                           ; 2 bytes @ 0x2
  3666                           
  3667  0072                     strlen@s:	
  3668                           ; 2 bytes @ 0x2
  3669                           
  3670  0072                     ___flge@ff1:	
  3671                           ; 2 bytes @ 0x2
  3672                           
  3673  0072                     ___xxtofl@val:	
  3674                           ; 4 bytes @ 0x2
  3675                           
  3676                           
  3677                           ; 4 bytes @ 0x2
  3678  0072                     	ds	1
  3679  0073                     ??_MTOUCH_Sensor_Sampled_ResetAll:
  3680  0073                     ??_TX_Command:	
  3681                           ; 1 bytes @ 0x3
  3682                           
  3683  0073                     ??___bmul:	
  3684                           ; 1 bytes @ 0x3
  3685                           
  3686  0073                     ADC_SelectChannel@channel:	
  3687                           ; 1 bytes @ 0x3
  3688                           
  3689  0073                     TX_Command@txData:	
  3690                           ; 1 bytes @ 0x3
  3691                           
  3692  0073                     ___aomod@counter:	
  3693                           ; 1 bytes @ 0x3
  3694                           
  3695                           
  3696                           ; 1 bytes @ 0x3
  3697  0073                     	ds	1
  3698  0074                     ??_PIN_MANAGER_Initialize:
  3699  0074                     ??_TMR4_Initialize:	
  3700                           ; 1 bytes @ 0x4
  3701                           
  3702  0074                     ??_TMR2_Initialize:	
  3703                           ; 1 bytes @ 0x4
  3704                           
  3705  0074                     ??_TMR1_Initialize:	
  3706                           ; 1 bytes @ 0x4
  3707                           
  3708  0074                     ??_EUSART_Initialize:	
  3709                           ; 1 bytes @ 0x4
  3710                           
  3711  0074                     ??_IOCAF2_SetInterruptHandler:	
  3712                           ; 1 bytes @ 0x4
  3713                           
  3714  0074                     ??_EUSART_SetFramingErrorHandler:	
  3715                           ; 1 bytes @ 0x4
  3716                           
  3717  0074                     ??_EUSART_SetOverrunErrorHandler:	
  3718                           ; 1 bytes @ 0x4
  3719                           
  3720  0074                     ??_EUSART_SetErrorHandler:	
  3721                           ; 1 bytes @ 0x4
  3722                           
  3723  0074                     ??_TMR2_SetInterruptHandler:	
  3724                           ; 1 bytes @ 0x4
  3725                           
  3726  0074                     ??_TMR4_SetInterruptHandler:	
  3727                           ; 1 bytes @ 0x4
  3728                           
  3729  0074                     ??_TMR1_SetInterruptHandler:	
  3730                           ; 1 bytes @ 0x4
  3731                           
  3732  0074                     ??_strlen:	
  3733                           ; 1 bytes @ 0x4
  3734                           
  3735  0074                     ??__Umul8_16:	
  3736                           ; 1 bytes @ 0x4
  3737                           
  3738  0074                     ??_ADC_GetConversionResult:	
  3739                           ; 1 bytes @ 0x4
  3740                           
  3741  0074                     ?_Read_ADC_Num:	
  3742                           ; 1 bytes @ 0x4
  3743                           
  3744  0074                     MTOUCH_Sensor_Sampled_ResetAll@sensor:	
  3745                           ; 2 bytes @ 0x4
  3746                           
  3747  0074                     MTOUCH_Button_Initialize@name:	
  3748                           ; 1 bytes @ 0x4
  3749                           
  3750  0074                     ___bmul@product:	
  3751                           ; 1 bytes @ 0x4
  3752                           
  3753  0074                     ___aomod@sign:	
  3754                           ; 1 bytes @ 0x4
  3755                           
  3756  0074                     fputc@fp:	
  3757                           ; 1 bytes @ 0x4
  3758                           
  3759  0074                     ___lwdiv@dividend:	
  3760                           ; 1 bytes @ 0x4
  3761                           
  3762  0074                     memcpy@n:	
  3763                           ; 2 bytes @ 0x4
  3764                           
  3765  0074                     strlen@a:	
  3766                           ; 2 bytes @ 0x4
  3767                           
  3768                           
  3769                           ; 2 bytes @ 0x4
  3770  0074                     	ds	1
  3771  0075                     ??_fputc:
  3772  0075                     ?_abs:	
  3773                           ; 1 bytes @ 0x5
  3774                           
  3775  0075                     MTOUCH_Button_Initialize@button:	
  3776                           ; 2 bytes @ 0x5
  3777                           
  3778  0075                     ___bmul@multiplier:	
  3779                           ; 1 bytes @ 0x5
  3780                           
  3781  0075                     abs@a:	
  3782                           ; 1 bytes @ 0x5
  3783                           
  3784                           
  3785                           ; 2 bytes @ 0x5
  3786  0075                     	ds	1
  3787  0076                     ??_MTOUCH_Sensor_Enable:
  3788  0076                     ??_memcpy:	
  3789                           ; 1 bytes @ 0x6
  3790                           
  3791  0076                     ??_TX_Whole_String:	
  3792                           ; 1 bytes @ 0x6
  3793                           
  3794  0076                     ??_nanf:	
  3795                           ; 1 bytes @ 0x6
  3796                           
  3797  0076                     ??_Read_ADC_Num:	
  3798                           ; 1 bytes @ 0x6
  3799                           
  3800  0076                     ??___lwdiv:	
  3801                           ; 1 bytes @ 0x6
  3802                           
  3803  0076                     ??___xxtofl:	
  3804                           ; 1 bytes @ 0x6
  3805                           
  3806  0076                     Read_ADC_Num@convertedValue:	
  3807                           ; 1 bytes @ 0x6
  3808                           
  3809  0076                     ___flge@ff2:	
  3810                           ; 2 bytes @ 0x6
  3811                           
  3812  0076                     nanf@u:	
  3813                           ; 4 bytes @ 0x6
  3814                           
  3815                           
  3816                           ; 4 bytes @ 0x6
  3817  0076                     	ds	1
  3818  0077                     ??_abs:
  3819  0077                     ??_MTOUCH_Button_InitializeAll:	
  3820                           ; 1 bytes @ 0x7
  3821                           
  3822  0077                     MTOUCH_Sensor_Enable@sensor:	
  3823                           ; 1 bytes @ 0x7
  3824                           
  3825  0077                     ___lwdiv@quotient:	
  3826                           ; 1 bytes @ 0x7
  3827                           
  3828                           
  3829                           ; 2 bytes @ 0x7
  3830  0077                     	ds	1
  3831  0078                     ??_MTOUCH_Sensor_Initialize:
  3832  0078                     MTOUCH_Button_InitializeAll@button:	
  3833                           ; 1 bytes @ 0x8
  3834                           
  3835                           
  3836                           ; 1 bytes @ 0x8
  3837  0078                     	ds	1
  3838  0079                     MTOUCH_Sensor_Initialize@sensor:
  3839  0079                     ___lwdiv@counter:	
  3840                           ; 1 bytes @ 0x9
  3841                           
  3842                           
  3843                           ; 1 bytes @ 0x9
  3844  0079                     	ds	1
  3845  007A                     ??_Init_Function:
  3846  007A                     ??_Read_PT100_Temp:	
  3847                           ; 1 bytes @ 0xA
  3848                           
  3849  007A                     ??_StartStop_Dimmer:	
  3850                           ; 1 bytes @ 0xA
  3851                           
  3852  007A                     ??_SetDimmer:	
  3853                           ; 1 bytes @ 0xA
  3854                           
  3855  007A                     ??_MTOUCH_Initialize:	
  3856                           ; 1 bytes @ 0xA
  3857                           
  3858  007A                     ??_SYSTEM_Initialize:	
  3859                           ; 1 bytes @ 0xA
  3860                           
  3861  007A                     ??_main:	
  3862                           ; 1 bytes @ 0xA
  3863                           
  3864  007A                     ??_ChangeADCtoVoltage:	
  3865                           ; 1 bytes @ 0xA
  3866                           
  3867  007A                     ??_Measure_R_PT100_2Wire:	
  3868                           ; 1 bytes @ 0xA
  3869                           
  3870  007A                     ??_Measure_Temp_PT100_2Wire:	
  3871                           ; 1 bytes @ 0xA
  3872                           
  3873  007A                     ??___flsub:	
  3874                           ; 1 bytes @ 0xA
  3875                           
  3876                           
  3877                           	psect	cstackBANK0
  3878  0020                     __pcstackBANK0:	
  3879                           ; 1 bytes @ 0xA
  3880                           
  3881  0020                     ??_MTOUCH_Sensor_InitializeAll:
  3882  0020                     ??___flge:	
  3883                           ; 1 bytes @ 0x0
  3884                           
  3885  0020                     ?_get_delay:	
  3886                           ; 1 bytes @ 0x0
  3887                           
  3888  0020                     ?_fputs:	
  3889                           ; 2 bytes @ 0x0
  3890                           
  3891  0020                     ?___aodiv:	
  3892                           ; 2 bytes @ 0x0
  3893                           
  3894  0020                     ?___aomod:	
  3895                           ; 8 bytes @ 0x0
  3896                           
  3897  0020                     ___xxtofl@sign:	
  3898                           ; 8 bytes @ 0x0
  3899                           
  3900  0020                     memcpy@tmp:	
  3901                           ; 1 bytes @ 0x0
  3902                           
  3903  0020                     fputs@fp:	
  3904                           ; 1 bytes @ 0x0
  3905                           
  3906  0020                     TX_Whole_String@size_of_string:	
  3907                           ; 1 bytes @ 0x0
  3908                           
  3909  0020                     get_delay@ms:	
  3910                           ; 2 bytes @ 0x0
  3911                           
  3912  0020                     __Umul8_16@product:	
  3913                           ; 2 bytes @ 0x0
  3914                           
  3915  0020                     ___aodiv@divisor:	
  3916                           ; 2 bytes @ 0x0
  3917                           
  3918  0020                     ___aomod@divisor:	
  3919                           ; 8 bytes @ 0x0
  3920                           
  3921                           
  3922                           ; 8 bytes @ 0x0
  3923  0020                     	ds	1
  3924  0021                     ??_fputs:
  3925  0021                     MTOUCH_Sensor_InitializeAll@sensor:	
  3926                           ; 1 bytes @ 0x1
  3927                           
  3928  0021                     ___xxtofl@exp:	
  3929                           ; 1 bytes @ 0x1
  3930                           
  3931  0021                     memcpy@s:	
  3932                           ; 1 bytes @ 0x1
  3933                           
  3934                           
  3935                           ; 2 bytes @ 0x1
  3936  0021                     	ds	1
  3937  0022                     ??_get_delay:
  3938  0022                     TX_Whole_String@input_string:	
  3939                           ; 1 bytes @ 0x2
  3940                           
  3941  0022                     __Umul8_16@word_mpld:	
  3942                           ; 1 bytes @ 0x2
  3943                           
  3944  0022                     ___xxtofl@arg:	
  3945                           ; 2 bytes @ 0x2
  3946                           
  3947                           
  3948                           ; 4 bytes @ 0x2
  3949  0022                     	ds	1
  3950  0023                     TX_Whole_String@i:
  3951  0023                     memcpy@d1:	
  3952                           ; 1 bytes @ 0x3
  3953                           
  3954                           
  3955                           ; 1 bytes @ 0x3
  3956  0023                     	ds	1
  3957  0024                     __Umul8_16@multiplier:
  3958  0024                     memcpy@d:	
  3959                           ; 1 bytes @ 0x4
  3960                           
  3961  0024                     fputs@c:	
  3962                           ; 1 bytes @ 0x4
  3963                           
  3964                           
  3965                           ; 1 bytes @ 0x4
  3966  0024                     	ds	1
  3967  0025                     fputs@i:
  3968                           
  3969                           ; 2 bytes @ 0x5
  3970  0025                     	ds	1
  3971  0026                     ?___flmul:
  3972  0026                     ___flmul@b:	
  3973                           ; 4 bytes @ 0x6
  3974                           
  3975                           
  3976                           ; 4 bytes @ 0x6
  3977  0026                     	ds	1
  3978  0027                     fputs@s:
  3979                           
  3980                           ; 1 bytes @ 0x7
  3981  0027                     	ds	1
  3982  0028                     ?_pad:
  3983  0028                     pad@buf:	
  3984                           ; 2 bytes @ 0x8
  3985                           
  3986  0028                     ___aodiv@dividend:	
  3987                           ; 1 bytes @ 0x8
  3988                           
  3989  0028                     ___aomod@dividend:	
  3990                           ; 8 bytes @ 0x8
  3991                           
  3992                           
  3993                           ; 8 bytes @ 0x8
  3994  0028                     	ds	1
  3995  0029                     pad@p:
  3996                           
  3997                           ; 2 bytes @ 0x9
  3998  0029                     	ds	1
  3999  002A                     get_delay@buf:
  4000  002A                     ___flmul@a:	
  4001                           ; 4 bytes @ 0xA
  4002                           
  4003                           
  4004                           ; 4 bytes @ 0xA
  4005  002A                     	ds	1
  4006  002B                     ??_pad:
  4007                           
  4008                           ; 1 bytes @ 0xB
  4009  002B                     	ds	1
  4010  002C                     pad@i:
  4011                           
  4012                           ; 2 bytes @ 0xC
  4013  002C                     	ds	2
  4014  002E                     ??___flmul:
  4015  002E                     pad@w:	
  4016                           ; 1 bytes @ 0xE
  4017                           
  4018                           
  4019                           ; 2 bytes @ 0xE
  4020  002E                     	ds	2
  4021  0030                     ___aodiv@counter:
  4022  0030                     pad@fp:	
  4023                           ; 1 bytes @ 0x10
  4024                           
  4025                           
  4026                           ; 1 bytes @ 0x10
  4027  0030                     	ds	1
  4028  0031                     ___aodiv@sign:
  4029                           
  4030                           ; 1 bytes @ 0x11
  4031  0031                     	ds	1
  4032  0032                     ___aodiv@quotient:
  4033                           
  4034                           ; 8 bytes @ 0x12
  4035  0032                     	ds	1
  4036  0033                     ___flmul@sign:
  4037                           
  4038                           ; 1 bytes @ 0x13
  4039  0033                     	ds	1
  4040  0034                     ___flmul@aexp:
  4041                           
  4042                           ; 1 bytes @ 0x14
  4043  0034                     	ds	1
  4044  0035                     ___flmul@bexp:
  4045                           
  4046                           ; 1 bytes @ 0x15
  4047  0035                     	ds	1
  4048  0036                     ___flmul@grs:
  4049                           
  4050                           ; 4 bytes @ 0x16
  4051  0036                     	ds	4
  4052  003A                     ?_dtoa:
  4053  003A                     ___flmul@prod:	
  4054                           ; 2 bytes @ 0x1A
  4055                           
  4056  003A                     dtoa@d:	
  4057                           ; 4 bytes @ 0x1A
  4058                           
  4059                           
  4060                           ; 8 bytes @ 0x1A
  4061  003A                     	ds	4
  4062  003E                     ___flmul@temp:
  4063                           
  4064                           ; 2 bytes @ 0x1E
  4065  003E                     	ds	2
  4066  0040                     ?___fladd:
  4067  0040                     ___fladd@b:	
  4068                           ; 4 bytes @ 0x20
  4069                           
  4070                           
  4071                           ; 4 bytes @ 0x20
  4072  0040                     	ds	2
  4073  0042                     ??_dtoa:
  4074                           
  4075                           ; 1 bytes @ 0x22
  4076  0042                     	ds	2
  4077  0044                     ___fladd@a:
  4078                           
  4079                           ; 4 bytes @ 0x24
  4080  0044                     	ds	1
  4081  0045                     dtoa@fp:
  4082                           
  4083                           ; 1 bytes @ 0x25
  4084  0045                     	ds	1
  4085  0046                     _dtoa$2504:
  4086                           
  4087                           ; 2 bytes @ 0x26
  4088  0046                     	ds	2
  4089  0048                     ??___fladd:
  4090  0048                     dtoa@p:	
  4091                           ; 1 bytes @ 0x28
  4092                           
  4093                           
  4094                           ; 2 bytes @ 0x28
  4095  0048                     	ds	2
  4096  004A                     dtoa@w:
  4097                           
  4098                           ; 2 bytes @ 0x2A
  4099  004A                     	ds	2
  4100  004C                     dtoa@s:
  4101                           
  4102                           ; 2 bytes @ 0x2C
  4103  004C                     	ds	2
  4104  004E                     dtoa@n:
  4105                           
  4106                           ; 8 bytes @ 0x2E
  4107  004E                     	ds	2
  4108  0050                     ___fladd@signs:
  4109                           
  4110                           ; 1 bytes @ 0x30
  4111  0050                     	ds	1
  4112  0051                     ___fladd@aexp:
  4113                           
  4114                           ; 1 bytes @ 0x31
  4115  0051                     	ds	1
  4116  0052                     ___fladd@bexp:
  4117                           
  4118                           ; 1 bytes @ 0x32
  4119  0052                     	ds	1
  4120  0053                     ___fladd@grs:
  4121                           
  4122                           ; 1 bytes @ 0x33
  4123  0053                     	ds	1
  4124  0054                     ?_sqrtf:
  4125  0054                     ?___flsub:	
  4126                           ; 4 bytes @ 0x34
  4127                           
  4128  0054                     ___flsub@a:	
  4129                           ; 4 bytes @ 0x34
  4130                           
  4131  0054                     sqrtf@x:	
  4132                           ; 4 bytes @ 0x34
  4133                           
  4134                           
  4135                           ; 4 bytes @ 0x34
  4136  0054                     	ds	2
  4137  0056                     dtoa@i:
  4138                           
  4139                           ; 2 bytes @ 0x36
  4140  0056                     	ds	2
  4141  0058                     ??_sqrtf:
  4142  0058                     ?_vfpfcnvrt:	
  4143                           ; 1 bytes @ 0x38
  4144                           
  4145  0058                     vfpfcnvrt@fmt:	
  4146                           ; 2 bytes @ 0x38
  4147                           
  4148  0058                     ___flsub@b:	
  4149                           ; 1 bytes @ 0x38
  4150                           
  4151                           
  4152                           ; 4 bytes @ 0x38
  4153  0058                     	ds	1
  4154  0059                     vfpfcnvrt@ap:
  4155                           
  4156                           ; 1 bytes @ 0x39
  4157  0059                     	ds	1
  4158  005A                     ??_vfpfcnvrt:
  4159                           
  4160                           ; 1 bytes @ 0x3A
  4161  005A                     	ds	5
  4162  005F                     vfpfcnvrt@ll:
  4163                           
  4164                           ; 8 bytes @ 0x3F
  4165  005F                     	ds	1
  4166  0060                     ?___fldiv:
  4167  0060                     ___fldiv@a:	
  4168                           ; 4 bytes @ 0x40
  4169                           
  4170                           
  4171                           ; 4 bytes @ 0x40
  4172  0060                     	ds	4
  4173  0064                     ___fldiv@b:
  4174                           
  4175                           ; 4 bytes @ 0x44
  4176  0064                     	ds	3
  4177  0067                     vfpfcnvrt@fp:
  4178                           
  4179                           ; 1 bytes @ 0x47
  4180  0067                     	ds	1
  4181  0068                     ??___fldiv:
  4182  0068                     ?_vfprintf:	
  4183                           ; 1 bytes @ 0x48
  4184                           
  4185  0068                     vfprintf@fmt:	
  4186                           ; 2 bytes @ 0x48
  4187                           
  4188                           
  4189                           ; 2 bytes @ 0x48
  4190  0068                     	ds	2
  4191  006A                     vfprintf@ap:
  4192                           
  4193                           ; 1 bytes @ 0x4A
  4194  006A                     	ds	1
  4195  006B                     ??_vfprintf:
  4196                           
  4197                           ; 1 bytes @ 0x4B
  4198  006B                     	ds	2
  4199  006D                     ___fltol@sign1:
  4200  006D                     vfprintf@fp:	
  4201                           ; 1 bytes @ 0x4D
  4202                           
  4203                           
  4204                           ; 1 bytes @ 0x4D
  4205  006D                     	ds	1
  4206  006E                     ___fltol@exp1:
  4207  006E                     vfprintf@cfmt:	
  4208                           ; 1 bytes @ 0x4E
  4209                           
  4210                           
  4211                           ; 2 bytes @ 0x4E
  4212  006E                     	ds	1
  4213  006F                     StartStop_Dimmer@OnOff:
  4214                           
  4215                           ; 1 bytes @ 0x4F
  4216  006F                     	ds	1
  4217                           
  4218                           	psect	maintext
  4219  1124                     __pmaintext:	
  4220 ;;
  4221 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4222 ;;
  4223 ;; *************** function _main *****************
  4224 ;; Defined at:
  4225 ;;		line 79 in file "main.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  Temp_PT100      2   33[BANK2 ] unsigned short 
  4230 ;;  del             2   31[BANK2 ] unsigned short 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : B1F/0
  4237 ;;		On exit  : 1F/2
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4241 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4243 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4244 ;;Total ram usage:        4 bytes
  4245 ;; Hardware stack levels required when called:   13
  4246 ;; This function calls:
  4247 ;;		_Config_Heater
  4248 ;;		_IOCAF2_SetInterruptHandler
  4249 ;;		_Init_Function
  4250 ;;		_Read_PT100_Temp
  4251 ;;		_SYSTEM_Initialize
  4252 ;;		_TMR1_SetInterruptHandler
  4253 ;;		_TMR2_SetInterruptHandler
  4254 ;;		_TMR4_SetInterruptHandler
  4255 ;;		_TX_Whole_String
  4256 ;;		___fltol
  4257 ;;		_get_delay
  4258 ;;		_sprintf
  4259 ;; This function is called by:
  4260 ;;		Startup code after reset
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           
  4265                           ;psect for function _main
  4266  1124                     _main:
  4267                           
  4268                           ;main.c: 81:     delay del = get_delay(0);
  4269                           
  4270                           ;incstack = 0
  4271                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4272  1124  3000               	movlw	0
  4273  1125  00A0               	movwf	get_delay@ms
  4274  1126  00A1               	movwf	get_delay@ms+1
  4275  1127  319F  2751  3191   	fcall	_get_delay
  4276  112A  0821               	movf	?_get_delay+1,w
  4277  112B  0022               	movlb	2	; select bank2
  4278  112C  00C0               	movwf	(main@del+1)^(0+256)
  4279  112D  0020               	movlb	0	; select bank0
  4280  112E  0820               	movf	?_get_delay,w
  4281  112F  0022               	movlb	2	; select bank2
  4282  1130  00BF               	movwf	main@del^(0+256)
  4283                           
  4284                           ;main.c: 83:     SYSTEM_Initialize();
  4285  1131  319C  24F9  3191   	fcall	_SYSTEM_Initialize
  4286                           
  4287                           ;main.c: 84:     Init_Function();
  4288  1134  319C  24AD  3191   	fcall	_Init_Function
  4289                           
  4290                           ;main.c: 87:     (INTCONbits.GIE = 1);
  4291  1137  178B               	bsf	11,7	;volatile
  4292                           
  4293                           ;main.c: 88:     (INTCONbits.PEIE = 1);
  4294  1138  170B               	bsf	11,6	;volatile
  4295                           
  4296                           ;main.c: 90:     IOCAF2_SetInterruptHandler(Zero_Detection_isr);
  4297  1139  30E9               	movlw	low _Zero_Detection_isr
  4298  113A  00F2               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
  4299  113B  301A               	movlw	high _Zero_Detection_isr
  4300  113C  00F3               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
  4301  113D  319A  22C5  3191   	fcall	_IOCAF2_SetInterruptHandler
  4302                           
  4303                           ;main.c: 91:     TMR1_SetInterruptHandler(TMR1_Generate_Delay_ms_isr);
  4304  1140  30B9               	movlw	low _TMR1_Generate_Delay_ms_isr
  4305  1141  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4306  1142  301A               	movlw	high _TMR1_Generate_Delay_ms_isr
  4307  1143  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4308  1144  319A  22CB  3191   	fcall	_TMR1_SetInterruptHandler
  4309                           
  4310                           ;main.c: 92:     TMR2_SetInterruptHandler(TMR2_Drive_TRIAC_isr);
  4311  1147  3071               	movlw	low _TMR2_Drive_TRIAC_isr
  4312  1148  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  4313  1149  301D               	movlw	high _TMR2_Drive_TRIAC_isr
  4314  114A  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  4315  114B  319A  22D1  3191   	fcall	_TMR2_SetInterruptHandler
  4316                           
  4317                           ;main.c: 93:     TMR4_SetInterruptHandler(TMR4_Wroking_Blink_AlarmLED_isr);
  4318  114E  3094               	movlw	low _TMR4_Wroking_Blink_AlarmLED_isr
  4319  114F  00F2               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  4320  1150  301C               	movlw	high _TMR4_Wroking_Blink_AlarmLED_isr
  4321  1151  00F3               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  4322  1152  319A  22D7  3191   	fcall	_TMR4_SetInterruptHandler
  4323  1155                     l6477:
  4324                           
  4325                           ;main.c: 101:         Config_Heater();
  4326  1155  3180  2066  3191   	fcall	_Config_Heater
  4327                           
  4328                           ;main.c: 103:         if (del == ticker_g){
  4329  1158  0022               	movlb	2	; select bank2
  4330  1159  0852               	movf	(_ticker_g+1)^(0+256),w
  4331  115A  0640               	xorwf	(main@del+1)^(0+256),w
  4332  115B  1D03               	skipz
  4333  115C  295F               	goto	u7135
  4334  115D  0851               	movf	_ticker_g^(0+256),w
  4335  115E  063F               	xorwf	main@del^(0+256),w
  4336  115F                     u7135:
  4337  115F  1D03               	skipz
  4338  1160  2955               	goto	l6477
  4339                           
  4340                           ;main.c: 105:             Temp_PT100 = Read_PT100_Temp();
  4341  1161  3190  20AF  3191   	fcall	_Read_PT100_Temp
  4342  1164  086C               	movf	(?_Read_PT100_Temp+3)^(0+128),w
  4343  1165  0022               	movlb	2	; select bank2
  4344  1166  00B1               	movwf	(___fltol@f1+3)^(0+256)
  4345  1167  0021               	movlb	1	; select bank1
  4346  1168  086B               	movf	(?_Read_PT100_Temp+2)^(0+128),w
  4347  1169  0022               	movlb	2	; select bank2
  4348  116A  00B0               	movwf	(___fltol@f1+2)^(0+256)
  4349  116B  0021               	movlb	1	; select bank1
  4350  116C  086A               	movf	(?_Read_PT100_Temp+1)^(0+128),w
  4351  116D  0022               	movlb	2	; select bank2
  4352  116E  00AF               	movwf	(___fltol@f1+1)^(0+256)
  4353  116F  0021               	movlb	1	; select bank1
  4354  1170  0869               	movf	?_Read_PT100_Temp^(0+128),w
  4355  1171  0022               	movlb	2	; select bank2
  4356  1172  00AE               	movwf	___fltol@f1^(0+256)
  4357  1173  3190  203F  3191   	fcall	___fltol
  4358  1176  0022               	movlb	2	; select bank2
  4359  1177  082F               	movf	(?___fltol+1)^(0+256),w
  4360  1178  00C2               	movwf	(main@Temp_PT100+1)^(0+256)
  4361  1179  082E               	movf	?___fltol^(0+256),w
  4362  117A  00C1               	movwf	main@Temp_PT100^(0+256)
  4363                           
  4364                           ;main.c: 106:             sprintf(Buff_g, "%d Celsius\n", Temp_PT100);
  4365  117B  3020               	movlw	low (STR_1| (0+32768))
  4366  117C  0021               	movlb	1	; select bank1
  4367  117D  00A0               	movwf	sprintf@fmt^(0+128)
  4368  117E  3098               	movlw	high (STR_1| (0+32768))
  4369  117F  00A1               	movwf	(sprintf@fmt^(0+128)+1)
  4370  1180  0022               	movlb	2	; select bank2
  4371  1181  0842               	movf	(main@Temp_PT100+1)^(0+256),w
  4372  1182  0021               	movlb	1	; select bank1
  4373  1183  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  4374  1184  0022               	movlb	2	; select bank2
  4375  1185  0841               	movf	main@Temp_PT100^(0+256),w
  4376  1186  0021               	movlb	1	; select bank1
  4377  1187  00A2               	movwf	(?_sprintf^(0+128)+2)
  4378  1188  30B8               	movlw	(low (_Buff_g| (0+256)))& (0+255)
  4379  1189  319D  25DF  3191   	fcall	_sprintf
  4380                           
  4381                           ;main.c: 107:             TX_Whole_String(Buff_g);
  4382  118C  30B8               	movlw	(low (_Buff_g| (0+256)))& (0+255)
  4383  118D  319E  265E  3191   	fcall	_TX_Whole_String
  4384                           
  4385                           ;main.c: 108:             del = get_delay(500);
  4386  1190  30F4               	movlw	244
  4387  1191  00A0               	movwf	get_delay@ms
  4388  1192  3001               	movlw	1
  4389  1193  00A1               	movwf	get_delay@ms+1
  4390  1194  319F  2751  3191   	fcall	_get_delay
  4391  1197  0821               	movf	?_get_delay+1,w
  4392  1198  0022               	movlb	2	; select bank2
  4393  1199  00C0               	movwf	(main@del+1)^(0+256)
  4394  119A  0020               	movlb	0	; select bank0
  4395  119B  0820               	movf	?_get_delay,w
  4396  119C  0022               	movlb	2	; select bank2
  4397  119D  00BF               	movwf	main@del^(0+256)
  4398  119E  2955               	goto	l6477
  4399  119F                     __end_of_main:
  4400                           
  4401                           	psect	text1
  4402  1DDF                     __ptext1:	
  4403 ;; *************** function _sprintf *****************
  4404 ;; Defined at:
  4405 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_sprintf.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  s               1    wreg     PTR unsigned char 
  4408 ;;		 -> Buff_g(20), 
  4409 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  4410 ;;		 -> STR_1(12), 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;  s               1    8[BANK1 ] PTR unsigned char 
  4413 ;;		 -> Buff_g(20), 
  4414 ;;  f               5    9[BANK1 ] struct _IO_FILE
  4415 ;;  ret             2    0        int 
  4416 ;;  ap              1    7[BANK1 ] PTR void [1]
  4417 ;;		 -> ?_sprintf(2), 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  2    0[BANK1 ] int 
  4420 ;; Registers used:
  4421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4422 ;; Tracked objects:
  4423 ;;		On entry : 1F/1
  4424 ;;		On exit  : 1F/1
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4427 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4428 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4429 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4430 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  4431 ;;Total ram usage:       14 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:   12
  4434 ;; This function calls:
  4435 ;;		_vfprintf
  4436 ;; This function is called by:
  4437 ;;		_main
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           
  4442                           ;psect for function _sprintf
  4443  1DDF                     _sprintf:
  4444                           
  4445                           ;incstack = 0
  4446                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4447                           ;sprintf@s stored from wreg
  4448  1DDF  00A8               	movwf	sprintf@s^(0+128)
  4449  1DE0  30A2               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4450  1DE1  00A4               	movwf	??_sprintf^(0+128)
  4451  1DE2  0824               	movf	??_sprintf^(0+128),w
  4452  1DE3  00A7               	movwf	sprintf@ap^(0+128)
  4453  1DE4  0828               	movf	sprintf@s^(0+128),w
  4454  1DE5  00A4               	movwf	??_sprintf^(0+128)
  4455  1DE6  0824               	movf	??_sprintf^(0+128),w
  4456  1DE7  00A9               	movwf	sprintf@f^(0+128)
  4457  1DE8  01AA               	clrf	(sprintf@f^(0+128)+1)
  4458  1DE9  01AB               	clrf	((sprintf@f+1)^(0+128)+1)
  4459  1DEA  01AC               	clrf	(sprintf@f^(0+128)+3)
  4460  1DEB  01AD               	clrf	((sprintf@f+1)^(0+128)+3)
  4461  1DEC  0821               	movf	(sprintf@fmt+1)^(0+128),w
  4462  1DED  0020               	movlb	0	; select bank0
  4463  1DEE  00E9               	movwf	vfprintf@fmt+1
  4464  1DEF  0021               	movlb	1	; select bank1
  4465  1DF0  0820               	movf	sprintf@fmt^(0+128),w
  4466  1DF1  0020               	movlb	0	; select bank0
  4467  1DF2  00E8               	movwf	vfprintf@fmt
  4468  1DF3  30A7               	movlw	(low (sprintf@ap| 0))& (0+255)
  4469  1DF4  0021               	movlb	1	; select bank1
  4470  1DF5  00A4               	movwf	??_sprintf^(0+128)
  4471  1DF6  0824               	movf	??_sprintf^(0+128),w
  4472  1DF7  0020               	movlb	0	; select bank0
  4473  1DF8  00EA               	movwf	vfprintf@ap
  4474  1DF9  30A9               	movlw	(low (sprintf@f| 0))& (0+255)
  4475  1DFA  319E  2631         	fcall	_vfprintf
  4476  1DFC  0021               	movlb	1	; select bank1
  4477  1DFD  082A               	movf	(sprintf@f^(0+128)+1),w
  4478  1DFE  0728               	addwf	sprintf@s^(0+128),w
  4479  1DFF  00A4               	movwf	??_sprintf^(0+128)
  4480  1E00  0824               	movf	??_sprintf^(0+128),w
  4481  1E01  0086               	movwf	6
  4482  1E02  3001               	movlw	1	; select bank2/3
  4483  1E03  0087               	movwf	7
  4484  1E04  0181               	clrf	1
  4485  1E05  0008               	return
  4486  1E06                     __end_of_sprintf:
  4487                           
  4488                           	psect	text2
  4489  1E31                     __ptext2:	
  4490 ;; *************** function _vfprintf *****************
  4491 ;; Defined at:
  4492 ;;		line 1390 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  fp              1    wreg     PTR struct _IO_FILE
  4495 ;;		 -> sprintf@f(5), 
  4496 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  4497 ;;		 -> STR_1(12), 
  4498 ;;  ap              1   74[BANK0 ] PTR PTR void 
  4499 ;;		 -> sprintf@ap(1), 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  fp              1   77[BANK0 ] PTR struct _IO_FILE
  4502 ;;		 -> sprintf@f(5), 
  4503 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  4504 ;;		 -> STR_1(12), 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  2   72[BANK0 ] int 
  4507 ;; Registers used:
  4508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4509 ;; Tracked objects:
  4510 ;;		On entry : 1F/0
  4511 ;;		On exit  : 1F/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4514 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4516 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4517 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4518 ;;Total ram usage:        8 bytes
  4519 ;; Hardware stack levels used:    1
  4520 ;; Hardware stack levels required when called:   11
  4521 ;; This function calls:
  4522 ;;		_vfpfcnvrt
  4523 ;; This function is called by:
  4524 ;;		_sprintf
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           
  4529                           ;psect for function _vfprintf
  4530  1E31                     _vfprintf:
  4531                           
  4532                           ;incstack = 0
  4533                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4534                           ;vfprintf@fp stored from wreg
  4535  1E31  00ED               	movwf	vfprintf@fp
  4536                           
  4537                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  4538  1E32  0869               	movf	vfprintf@fmt+1,w
  4539  1E33  00EF               	movwf	vfprintf@cfmt+1
  4540  1E34  0868               	movf	vfprintf@fmt,w
  4541  1E35  00EE               	movwf	vfprintf@cfmt
  4542                           
  4543                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  4544  1E36  0022               	movlb	2	; select bank2
  4545  1E37  01C5               	clrf	_nout^(0+256)
  4546  1E38  01C6               	clrf	(_nout+1)^(0+256)
  4547  1E39                     l6259:	
  4548                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  4549                           
  4550                           
  4551                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  4552  1E39  0020               	movlb	0	; select bank0
  4553  1E3A  086E               	movf	vfprintf@cfmt,w
  4554  1E3B  0084               	movwf	4
  4555  1E3C  086F               	movf	vfprintf@cfmt+1,w
  4556  1E3D  0085               	movwf	5
  4557  1E3E  0012               	moviw fsr0++
  4558  1E3F  1903               	btfsc	3,2
  4559  1E40  2E55               	goto	l6261
  4560                           
  4561                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  4562  1E41  306E               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4563  1E42  00EB               	movwf	??_vfprintf
  4564  1E43  086B               	movf	??_vfprintf,w
  4565  1E44  00D8               	movwf	vfpfcnvrt@fmt
  4566  1E45  086A               	movf	vfprintf@ap,w
  4567  1E46  00EC               	movwf	??_vfprintf+1
  4568  1E47  086C               	movf	??_vfprintf+1,w
  4569  1E48  00D9               	movwf	vfpfcnvrt@ap
  4570  1E49  086D               	movf	vfprintf@fp,w
  4571  1E4A  3193  2346  319E   	fcall	_vfpfcnvrt
  4572  1E4D  0858               	movf	?_vfpfcnvrt,w
  4573  1E4E  0022               	movlb	2	; select bank2
  4574  1E4F  07C5               	addwf	_nout^(0+256),f
  4575  1E50  0020               	movlb	0	; select bank0
  4576  1E51  0859               	movf	?_vfpfcnvrt+1,w
  4577  1E52  0022               	movlb	2	; select bank2
  4578  1E53  3DC6               	addwfc	(_nout+1)^(0+256),f
  4579  1E54  2E39               	goto	l6259
  4580  1E55                     l6261:
  4581                           
  4582                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  4583  1E55  0022               	movlb	2	; select bank2
  4584  1E56  0846               	movf	(_nout+1)^(0+256),w
  4585  1E57  0020               	movlb	0	; select bank0
  4586  1E58  00E9               	movwf	?_vfprintf+1
  4587  1E59  0022               	movlb	2	; select bank2
  4588  1E5A  0845               	movf	_nout^(0+256),w
  4589  1E5B  0020               	movlb	0	; select bank0
  4590  1E5C  00E8               	movwf	?_vfprintf
  4591  1E5D  0008               	return
  4592  1E5E                     __end_of_vfprintf:
  4593                           
  4594                           	psect	text3
  4595  1346                     __ptext3:	
  4596 ;; *************** function _vfpfcnvrt *****************
  4597 ;; Defined at:
  4598 ;;		line 692 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  fp              1    wreg     PTR struct _IO_FILE
  4601 ;;		 -> sprintf@f(5), 
  4602 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
  4603 ;;		 -> vfprintf@cfmt(2), 
  4604 ;;  ap              1   57[BANK0 ] PTR PTR void 
  4605 ;;		 -> sprintf@ap(1), 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  4608 ;;		 -> sprintf@f(5), 
  4609 ;;  ll              8   63[BANK0 ] long long 
  4610 ;;  llu             8    0        unsigned long long 
  4611 ;;  f               4    0        unsigned long long 
  4612 ;;  ct              3    0        unsigned char [3]
  4613 ;;  vp              2    0        PTR void 
  4614 ;;  i               2    0        int 
  4615 ;;  done            2    0        int 
  4616 ;;  cp              2    0        PTR unsigned char 
  4617 ;;  c               1    0        unsigned char 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  2   56[BANK0 ] int 
  4620 ;; Registers used:
  4621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 1F/0
  4624 ;;		On exit  : 1F/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4627 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4629 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;Total ram usage:       16 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:   10
  4634 ;; This function calls:
  4635 ;;		_dtoa
  4636 ;;		_fputc
  4637 ;; This function is called by:
  4638 ;;		_vfprintf
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           
  4643                           ;psect for function _vfpfcnvrt
  4644  1346                     _vfpfcnvrt:
  4645                           
  4646                           ;incstack = 0
  4647                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4648                           ;vfpfcnvrt@fp stored from wreg
  4649  1346  00E7               	movwf	vfpfcnvrt@fp
  4650                           
  4651                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  4652  1347  0858               	movf	vfpfcnvrt@fmt,w
  4653  1348  0086               	movwf	6
  4654  1349  0187               	clrf	7
  4655  134A  3F40               	moviw [0]fsr1
  4656  134B  00DA               	movwf	??_vfpfcnvrt
  4657  134C  3F41               	moviw [1]fsr1
  4658  134D  00DB               	movwf	??_vfpfcnvrt+1
  4659  134E  085A               	movf	??_vfpfcnvrt,w
  4660  134F  0084               	movwf	4
  4661  1350  085B               	movf	??_vfpfcnvrt+1,w
  4662  1351  0085               	movwf	5
  4663  1352  0012               	moviw fsr0++
  4664  1353  3A25               	xorlw	37
  4665  1354  1D03               	btfss	3,2
  4666  1355  2BF1               	goto	l6197
  4667                           
  4668                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  4669  1356  0858               	movf	vfpfcnvrt@fmt,w
  4670  1357  0086               	movwf	6
  4671  1358  0187               	clrf	7
  4672  1359  3001               	movlw	1
  4673  135A  0781               	addwf	1,f
  4674  135B  3141               	addfsr 1,1
  4675  135C  1803               	skipnc
  4676  135D  0A81               	incf	1,f
  4677                           
  4678                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  4679  135E  0022               	movlb	2	; select bank2
  4680  135F  01C7               	clrf	_width^(0+256)
  4681  1360  01C8               	clrf	(_width+1)^(0+256)
  4682  1361  01FA               	clrf	_flags
  4683  1362  01FB               	clrf	_flags+1
  4684                           
  4685                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  4686  1363  30FF               	movlw	255
  4687  1364  00C9               	movwf	_prec^(0+256)
  4688  1365  30FF               	movlw	255
  4689  1366  00CA               	movwf	(_prec^(0+256)+1)
  4690                           
  4691                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  4692  1367  0020               	movlb	0	; select bank0
  4693  1368  0858               	movf	vfpfcnvrt@fmt,w
  4694  1369  0086               	movwf	6
  4695  136A  0187               	clrf	7
  4696  136B  3F40               	moviw [0]fsr1
  4697  136C  00DA               	movwf	??_vfpfcnvrt
  4698  136D  3F41               	moviw [1]fsr1
  4699  136E  00DB               	movwf	??_vfpfcnvrt+1
  4700  136F  085A               	movf	??_vfpfcnvrt,w
  4701  1370  0084               	movwf	4
  4702  1371  085B               	movf	??_vfpfcnvrt+1,w
  4703  1372  0085               	movwf	5
  4704  1373  0012               	moviw fsr0++
  4705  1374  3A64               	xorlw	100
  4706  1375  1903               	btfsc	3,2
  4707  1376  2B86               	goto	l6173
  4708  1377  0858               	movf	vfpfcnvrt@fmt,w
  4709  1378  0086               	movwf	6
  4710  1379  0187               	clrf	7
  4711  137A  3F40               	moviw [0]fsr1
  4712  137B  00DA               	movwf	??_vfpfcnvrt
  4713  137C  3F41               	moviw [1]fsr1
  4714  137D  00DB               	movwf	??_vfpfcnvrt+1
  4715  137E  085A               	movf	??_vfpfcnvrt,w
  4716  137F  0084               	movwf	4
  4717  1380  085B               	movf	??_vfpfcnvrt+1,w
  4718  1381  0085               	movwf	5
  4719  1382  0012               	moviw fsr0++
  4720  1383  3A69               	xorlw	105
  4721  1384  1D03               	btfss	3,2
  4722  1385  2BBF               	goto	l6181
  4723  1386                     l6173:
  4724                           
  4725                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
  4726  1386  0858               	movf	vfpfcnvrt@fmt,w
  4727  1387  0086               	movwf	6
  4728  1388  0187               	clrf	7
  4729  1389  3001               	movlw	1
  4730  138A  0781               	addwf	1,f
  4731  138B  3141               	addfsr 1,1
  4732  138C  1803               	skipnc
  4733  138D  0A81               	incf	1,f
  4734                           
  4735                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  4736  138E  0859               	movf	vfpfcnvrt@ap,w
  4737  138F  0086               	movwf	6
  4738  1390  0187               	clrf	7
  4739  1391  0801               	movf	1,w
  4740  1392  0084               	movwf	4
  4741  1393  0185               	clrf	5
  4742  1394  3002               	movlw	2
  4743  1395  0781               	addwf	1,f
  4744  1396  3F00               	moviw [0]fsr0
  4745  1397  00DA               	movwf	??_vfpfcnvrt
  4746  1398  3F01               	moviw [1]fsr0
  4747  1399  00DB               	movwf	??_vfpfcnvrt+1
  4748  139A  085A               	movf	??_vfpfcnvrt,w
  4749  139B  00DF               	movwf	vfpfcnvrt@ll
  4750  139C  085B               	movf	??_vfpfcnvrt+1,w
  4751  139D  00E0               	movwf	vfpfcnvrt@ll+1
  4752  139E  0D89               	rlf	9,f
  4753  139F  3B89               	subwfb	9,f
  4754  13A0  0989               	comf	9,f
  4755  13A1  00E1               	movwf	vfpfcnvrt@ll+2
  4756  13A2  00E2               	movwf	vfpfcnvrt@ll+3
  4757  13A3  00E3               	movwf	vfpfcnvrt@ll+4
  4758  13A4  00E4               	movwf	vfpfcnvrt@ll+5
  4759  13A5  00E5               	movwf	vfpfcnvrt@ll+6
  4760  13A6  00E6               	movwf	vfpfcnvrt@ll+7
  4761                           
  4762                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
  4763  13A7  085F               	movf	vfpfcnvrt@ll,w
  4764  13A8  00BA               	movwf	dtoa@d
  4765  13A9  0860               	movf	vfpfcnvrt@ll+1,w
  4766  13AA  00BB               	movwf	dtoa@d+1
  4767  13AB  0861               	movf	vfpfcnvrt@ll+2,w
  4768  13AC  00BC               	movwf	dtoa@d+2
  4769  13AD  0862               	movf	vfpfcnvrt@ll+3,w
  4770  13AE  00BD               	movwf	dtoa@d+3
  4771  13AF  0863               	movf	vfpfcnvrt@ll+4,w
  4772  13B0  00BE               	movwf	dtoa@d+4
  4773  13B1  0864               	movf	vfpfcnvrt@ll+5,w
  4774  13B2  00BF               	movwf	dtoa@d+5
  4775  13B3  0865               	movf	vfpfcnvrt@ll+6,w
  4776  13B4  00C0               	movwf	dtoa@d+6
  4777  13B5  0866               	movf	vfpfcnvrt@ll+7,w
  4778  13B6  00C1               	movwf	dtoa@d+7
  4779  13B7  0867               	movf	vfpfcnvrt@fp,w
  4780  13B8  3194  24E4         	fcall	_dtoa
  4781  13BA  083B               	movf	?_dtoa+1,w
  4782  13BB  00D9               	movwf	?_vfpfcnvrt+1
  4783  13BC  083A               	movf	?_dtoa,w
  4784  13BD  00D8               	movwf	?_vfpfcnvrt
  4785  13BE  0008               	return
  4786  13BF                     l6181:
  4787                           
  4788                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  4789  13BF  0858               	movf	vfpfcnvrt@fmt,w
  4790  13C0  0086               	movwf	6
  4791  13C1  0187               	clrf	7
  4792  13C2  3F40               	moviw [0]fsr1
  4793  13C3  00DA               	movwf	??_vfpfcnvrt
  4794  13C4  3F41               	moviw [1]fsr1
  4795  13C5  00DB               	movwf	??_vfpfcnvrt+1
  4796  13C6  085A               	movf	??_vfpfcnvrt,w
  4797  13C7  0084               	movwf	4
  4798  13C8  085B               	movf	??_vfpfcnvrt+1,w
  4799  13C9  0085               	movwf	5
  4800  13CA  0012               	moviw fsr0++
  4801  13CB  3A25               	xorlw	37
  4802  13CC  1D03               	btfss	3,2
  4803  13CD  2BE6               	goto	l6191
  4804                           
  4805                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  4806  13CE  0858               	movf	vfpfcnvrt@fmt,w
  4807  13CF  0086               	movwf	6
  4808  13D0  0187               	clrf	7
  4809  13D1  3001               	movlw	1
  4810  13D2  0781               	addwf	1,f
  4811  13D3  3141               	addfsr 1,1
  4812  13D4  1803               	skipnc
  4813  13D5  0A81               	incf	1,f
  4814                           
  4815                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  4816  13D6  3025               	movlw	37
  4817  13D7  00F2               	movwf	fputc@c
  4818  13D8  3000               	movlw	0
  4819  13D9  00F3               	movwf	fputc@c+1
  4820  13DA  0867               	movf	vfpfcnvrt@fp,w
  4821  13DB  00DA               	movwf	??_vfpfcnvrt
  4822  13DC  085A               	movf	??_vfpfcnvrt,w
  4823  13DD  00F4               	movwf	fputc@fp
  4824  13DE  3188  2001         	fcall	_fputc
  4825  13E0                     l6187:
  4826                           
  4827                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  4828  13E0  3001               	movlw	1
  4829  13E1  0020               	movlb	0	; select bank0
  4830  13E2  00D8               	movwf	?_vfpfcnvrt
  4831  13E3  3000               	movlw	0
  4832  13E4  00D9               	movwf	?_vfpfcnvrt+1
  4833  13E5  0008               	return
  4834  13E6                     l6191:
  4835                           
  4836                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  4837  13E6  0858               	movf	vfpfcnvrt@fmt,w
  4838  13E7  0086               	movwf	6
  4839  13E8  0187               	clrf	7
  4840  13E9  3001               	movlw	1
  4841  13EA  0781               	addwf	1,f
  4842  13EB  3141               	addfsr 1,1
  4843  13EC  1803               	skipnc
  4844  13ED  0A81               	incf	1,f
  4845                           
  4846                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  4847  13EE  01D8               	clrf	?_vfpfcnvrt
  4848  13EF  01D9               	clrf	?_vfpfcnvrt+1
  4849  13F0  0008               	return
  4850  13F1                     l6197:
  4851                           
  4852                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  4853  13F1  0858               	movf	vfpfcnvrt@fmt,w
  4854  13F2  0086               	movwf	6
  4855  13F3  0187               	clrf	7
  4856  13F4  3F40               	moviw [0]fsr1
  4857  13F5  00DA               	movwf	??_vfpfcnvrt
  4858  13F6  3F41               	moviw [1]fsr1
  4859  13F7  00DB               	movwf	??_vfpfcnvrt+1
  4860  13F8  085A               	movf	??_vfpfcnvrt,w
  4861  13F9  0084               	movwf	4
  4862  13FA  085B               	movf	??_vfpfcnvrt+1,w
  4863  13FB  0085               	movwf	5
  4864  13FC  0800               	movf	0,w	;code access
  4865  13FD  00DC               	movwf	??_vfpfcnvrt+2
  4866  13FE  01DD               	clrf	??_vfpfcnvrt+3
  4867  13FF  085C               	movf	??_vfpfcnvrt+2,w
  4868  1400  00F2               	movwf	fputc@c
  4869  1401  085D               	movf	??_vfpfcnvrt+3,w
  4870  1402  00F3               	movwf	fputc@c+1
  4871  1403  0867               	movf	vfpfcnvrt@fp,w
  4872  1404  00DE               	movwf	??_vfpfcnvrt+4
  4873  1405  085E               	movf	??_vfpfcnvrt+4,w
  4874  1406  00F4               	movwf	fputc@fp
  4875  1407  3188  2001  3193   	fcall	_fputc
  4876                           
  4877                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  4878  140A  0020               	movlb	0	; select bank0
  4879  140B  0858               	movf	vfpfcnvrt@fmt,w
  4880  140C  0086               	movwf	6
  4881  140D  0187               	clrf	7
  4882  140E  3001               	movlw	1
  4883  140F  0781               	addwf	1,f
  4884  1410  3141               	addfsr 1,1
  4885  1411  1803               	skipnc
  4886  1412  0A81               	incf	1,f
  4887  1413  2BE0               	goto	l6187
  4888  1414                     __end_of_vfpfcnvrt:
  4889                           
  4890                           	psect	text4
  4891  14E4                     __ptext4:	
  4892 ;; *************** function _dtoa *****************
  4893 ;; Defined at:
  4894 ;;		line 287 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  fp              1    wreg     PTR struct _IO_FILE
  4897 ;;		 -> sprintf@f(5), 
  4898 ;;  d               8   26[BANK0 ] long long 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  fp              1   37[BANK0 ] PTR struct _IO_FILE
  4901 ;;		 -> sprintf@f(5), 
  4902 ;;  n               8   46[BANK0 ] long long 
  4903 ;;  i               2   54[BANK0 ] int 
  4904 ;;  s               2   44[BANK0 ] int 
  4905 ;;  w               2   42[BANK0 ] int 
  4906 ;;  p               2   40[BANK0 ] int 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  2   26[BANK0 ] int 
  4909 ;; Registers used:
  4910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4911 ;; Tracked objects:
  4912 ;;		On entry : 1F/0
  4913 ;;		On exit  : 1F/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4916 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4917 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4918 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4919 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4920 ;;Total ram usage:       30 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    9
  4923 ;; This function calls:
  4924 ;;		___aodiv
  4925 ;;		___aomod
  4926 ;;		_abs
  4927 ;;		_pad
  4928 ;; This function is called by:
  4929 ;;		_vfpfcnvrt
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           
  4934                           ;psect for function _dtoa
  4935  14E4                     _dtoa:
  4936                           
  4937                           ;incstack = 0
  4938                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4939                           ;dtoa@fp stored from wreg
  4940  14E4  00C5               	movwf	dtoa@fp
  4941                           
  4942                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.31/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .31/pic/sources/c99/common/doprnt.c: 293:     n = d;
  4943  14E5  083A               	movf	dtoa@d,w
  4944  14E6  00CE               	movwf	dtoa@n
  4945  14E7  083B               	movf	dtoa@d+1,w
  4946  14E8  00CF               	movwf	dtoa@n+1
  4947  14E9  083C               	movf	dtoa@d+2,w
  4948  14EA  00D0               	movwf	dtoa@n+2
  4949  14EB  083D               	movf	dtoa@d+3,w
  4950  14EC  00D1               	movwf	dtoa@n+3
  4951  14ED  083E               	movf	dtoa@d+4,w
  4952  14EE  00D2               	movwf	dtoa@n+4
  4953  14EF  083F               	movf	dtoa@d+5,w
  4954  14F0  00D3               	movwf	dtoa@n+5
  4955  14F1  0840               	movf	dtoa@d+6,w
  4956  14F2  00D4               	movwf	dtoa@n+6
  4957  14F3  0841               	movf	dtoa@d+7,w
  4958  14F4  00D5               	movwf	dtoa@n+7
  4959                           
  4960                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
  4961  14F5  304E               	movlw	low dtoa@n
  4962  14F6  0086               	movwf	6
  4963  14F7  3000               	movlw	high dtoa@n
  4964  14F8  0087               	movwf	7
  4965  14F9  3F47               	moviw [7]fsr1
  4966  14FA  00C2               	movwf	??_dtoa
  4967  14FB  1FC2               	btfss	??_dtoa,7
  4968  14FC  2CFF               	goto	u6640
  4969  14FD  3001               	movlw	1
  4970  14FE  2D00               	goto	u6650
  4971  14FF                     u6640:
  4972  14FF  3000               	movlw	0
  4973  1500                     u6650:
  4974  1500  0020               	movlb	0	; select bank0
  4975  1501  00C3               	movwf	??_dtoa+1
  4976  1502  01C4               	clrf	??_dtoa+2
  4977  1503  0843               	movf	??_dtoa+1,w
  4978  1504  00CC               	movwf	dtoa@s
  4979  1505  0844               	movf	??_dtoa+2,w
  4980  1506  00CD               	movwf	dtoa@s+1
  4981                           
  4982                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  4983  1507  084C               	movf	dtoa@s,w
  4984  1508  044D               	iorwf	dtoa@s+1,w
  4985  1509  1903               	btfsc	3,2
  4986  150A  2D29               	goto	l1882
  4987                           
  4988                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  4989  150B  09CE               	comf	dtoa@n,f
  4990  150C  09CF               	comf	dtoa@n+1,f
  4991  150D  09D0               	comf	dtoa@n+2,f
  4992  150E  09D1               	comf	dtoa@n+3,f
  4993  150F  09D2               	comf	dtoa@n+4,f
  4994  1510  09D3               	comf	dtoa@n+5,f
  4995  1511  09D4               	comf	dtoa@n+6,f
  4996  1512  09D5               	comf	dtoa@n+7,f
  4997  1513  0ACE               	incf	dtoa@n,f
  4998  1514  1D03               	skipz
  4999  1515  2D29               	goto	l1882
  5000  1516  0ACF               	incf	dtoa@n+1,f
  5001  1517  1D03               	skipz
  5002  1518  2D29               	goto	l1882
  5003  1519  0AD0               	incf	dtoa@n+2,f
  5004  151A  1D03               	skipz
  5005  151B  2D29               	goto	l1882
  5006  151C  0AD1               	incf	dtoa@n+3,f
  5007  151D  1D03               	skipz
  5008  151E  2D29               	goto	l1882
  5009  151F  0AD2               	incf	dtoa@n+4,f
  5010  1520  1D03               	skipz
  5011  1521  2D29               	goto	l1882
  5012  1522  0AD3               	incf	dtoa@n+5,f
  5013  1523  1D03               	skipz
  5014  1524  2D29               	goto	l1882
  5015  1525  0AD4               	incf	dtoa@n+6,f
  5016  1526  1D03               	skipz
  5017  1527  2D29               	goto	l1882
  5018  1528  0AD5               	incf	dtoa@n+7,f
  5019  1529                     l1882:	
  5020                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 297:     }
  5021                           
  5022                           
  5023                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  5024  1529  0022               	movlb	2	; select bank2
  5025  152A  1BCA               	btfsc	(_prec+1)^(0+256),7
  5026  152B  2D30               	goto	l1883
  5027                           
  5028                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  5029  152C  30FD               	movlw	253
  5030  152D  05FA               	andwf	_flags,f
  5031  152E  30FF               	movlw	255
  5032  152F  05FB               	andwf	_flags+1,f
  5033  1530                     l1883:	
  5034                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 302:     }
  5035                           
  5036                           
  5037                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  5038  1530  084A               	movf	(_prec+1)^(0+256),w
  5039  1531  3A80               	xorlw	128
  5040  1532  0020               	movlb	0	; select bank0
  5041  1533  00C2               	movwf	??_dtoa
  5042  1534  3080               	movlw	128
  5043  1535  0242               	subwf	??_dtoa,w
  5044  1536  1D03               	skipz
  5045  1537  2D3B               	goto	u6695
  5046  1538  3001               	movlw	1
  5047  1539  0022               	movlb	2	; select bank2
  5048  153A  0249               	subwf	_prec^(0+256),w
  5049  153B                     u6695:
  5050  153B  1803               	skipnc
  5051  153C  2D43               	goto	l6007
  5052  153D  3001               	movlw	1
  5053  153E  0020               	movlb	0	; select bank0
  5054  153F  00C8               	movwf	dtoa@p
  5055  1540  3000               	movlw	0
  5056  1541  00C9               	movwf	dtoa@p+1
  5057  1542  2D4B               	goto	l1887
  5058  1543                     l6007:
  5059  1543  0022               	movlb	2	; select bank2
  5060  1544  084A               	movf	(_prec+1)^(0+256),w
  5061  1545  0020               	movlb	0	; select bank0
  5062  1546  00C9               	movwf	dtoa@p+1
  5063  1547  0022               	movlb	2	; select bank2
  5064  1548  0849               	movf	_prec^(0+256),w
  5065  1549  0020               	movlb	0	; select bank0
  5066  154A  00C8               	movwf	dtoa@p
  5067  154B                     l1887:
  5068                           
  5069                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 304:     w = width;
  5070  154B  0022               	movlb	2	; select bank2
  5071  154C  0848               	movf	(_width+1)^(0+256),w
  5072  154D  0020               	movlb	0	; select bank0
  5073  154E  00CB               	movwf	dtoa@w+1
  5074  154F  0022               	movlb	2	; select bank2
  5075  1550  0847               	movf	_width^(0+256),w
  5076  1551  0020               	movlb	0	; select bank0
  5077  1552  00CA               	movwf	dtoa@w
  5078                           
  5079                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  5080  1553  084C               	movf	dtoa@s,w
  5081  1554  044D               	iorwf	dtoa@s+1,w
  5082  1555  1D03               	btfss	3,2
  5083  1556  2D59               	goto	l6013
  5084  1557  1D7A               	btfss	_flags,2
  5085  1558  2D5D               	goto	l1888
  5086  1559                     l6013:
  5087                           
  5088                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 306:         --w;
  5089  1559  30FF               	movlw	255
  5090  155A  07CA               	addwf	dtoa@w,f
  5091  155B  30FF               	movlw	255
  5092  155C  3DCB               	addwfc	dtoa@w+1,f
  5093  155D                     l1888:	
  5094                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 307:     }
  5095                           
  5096                           
  5097                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  5098  155D  301F               	movlw	31
  5099  155E  00D6               	movwf	dtoa@i
  5100  155F  3000               	movlw	0
  5101  1560  00D7               	movwf	dtoa@i+1
  5102                           
  5103                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  5104  1561  0024               	movlb	4	; select bank4
  5105  1562  01BF               	clrf	(_dbuf^(0+512)+31)
  5106                           
  5107                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5108  1563  2DEE               	goto	l1891
  5109  1564                     l6027:
  5110  1564  0020               	movlb	0	; select bank0
  5111  1565  084E               	movf	dtoa@n,w
  5112  1566  044F               	iorwf	dtoa@n+1,w
  5113  1567  0450               	iorwf	dtoa@n+2,w
  5114  1568  0451               	iorwf	dtoa@n+3,w
  5115  1569  0452               	iorwf	dtoa@n+4,w
  5116  156A  0453               	iorwf	dtoa@n+5,w
  5117  156B  0454               	iorwf	dtoa@n+6,w
  5118  156C  0455               	iorwf	dtoa@n+7,w
  5119  156D  1D03               	skipz
  5120  156E  2D87               	goto	l6017
  5121  156F  0849               	movf	dtoa@p+1,w
  5122  1570  3A80               	xorlw	128
  5123  1571  00C2               	movwf	??_dtoa
  5124  1572  3080               	movlw	128
  5125  1573  0242               	subwf	??_dtoa,w
  5126  1574  1D03               	skipz
  5127  1575  2D78               	goto	u6745
  5128  1576  3001               	movlw	1
  5129  1577  0248               	subwf	dtoa@p,w
  5130  1578                     u6745:
  5131  1578  1803               	skipnc
  5132  1579  2D87               	goto	l6017
  5133  157A  0020               	movlb	0	; select bank0
  5134  157B  084B               	movf	dtoa@w+1,w
  5135  157C  3A80               	xorlw	128
  5136  157D  00C2               	movwf	??_dtoa
  5137  157E  3080               	movlw	128
  5138  157F  0242               	subwf	??_dtoa,w
  5139  1580  1D03               	skipz
  5140  1581  2D84               	goto	u6755
  5141  1582  3001               	movlw	1
  5142  1583  024A               	subwf	dtoa@w,w
  5143  1584                     u6755:
  5144  1584  1803               	btfsc	3,0
  5145  1585  1CFA               	btfss	_flags,1
  5146  1586  2DFA               	goto	l6035
  5147  1587                     l6017:
  5148                           
  5149                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 313:         --i;
  5150  1587  30FF               	movlw	255
  5151  1588  0020               	movlb	0	; select bank0
  5152  1589  07D6               	addwf	dtoa@i,f
  5153  158A  30FF               	movlw	255
  5154  158B  3DD7               	addwfc	dtoa@i+1,f
  5155                           
  5156                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  5157  158C  300A               	movlw	10
  5158  158D  00A0               	movwf	___aomod@divisor
  5159  158E  01A1               	clrf	___aomod@divisor+1
  5160  158F  01A2               	clrf	___aomod@divisor+2
  5161  1590  01A3               	clrf	___aomod@divisor+3
  5162  1591  01A4               	clrf	___aomod@divisor+4
  5163  1592  01A5               	clrf	___aomod@divisor+5
  5164  1593  01A6               	clrf	___aomod@divisor+6
  5165  1594  01A7               	clrf	___aomod@divisor+7
  5166  1595  084E               	movf	dtoa@n,w
  5167  1596  00A8               	movwf	___aomod@dividend
  5168  1597  084F               	movf	dtoa@n+1,w
  5169  1598  00A9               	movwf	___aomod@dividend+1
  5170  1599  0850               	movf	dtoa@n+2,w
  5171  159A  00AA               	movwf	___aomod@dividend+2
  5172  159B  0851               	movf	dtoa@n+3,w
  5173  159C  00AB               	movwf	___aomod@dividend+3
  5174  159D  0852               	movf	dtoa@n+4,w
  5175  159E  00AC               	movwf	___aomod@dividend+4
  5176  159F  0853               	movf	dtoa@n+5,w
  5177  15A0  00AD               	movwf	___aomod@dividend+5
  5178  15A1  0854               	movf	dtoa@n+6,w
  5179  15A2  00AE               	movwf	___aomod@dividend+6
  5180  15A3  0855               	movf	dtoa@n+7,w
  5181  15A4  00AF               	movwf	___aomod@dividend+7
  5182  15A5  3188  2047  3194   	fcall	___aomod
  5183  15A8  0821               	movf	?___aomod+1,w
  5184  15A9  00F6               	movwf	abs@a+1
  5185  15AA  0820               	movf	?___aomod,w
  5186  15AB  00F5               	movwf	abs@a
  5187  15AC  319C  2465  3194   	fcall	_abs
  5188  15AF  0875               	movf	?_abs,w
  5189  15B0  3E30               	addlw	48
  5190  15B1  0020               	movlb	0	; select bank0
  5191  15B2  00C2               	movwf	??_dtoa
  5192  15B3  0856               	movf	dtoa@i,w
  5193  15B4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5194  15B5  0086               	movwf	6
  5195  15B6  3002               	movlw	2	; select bank4/5
  5196  15B7  0087               	movwf	7
  5197  15B8  0842               	movf	??_dtoa,w
  5198  15B9  0081               	movwf	1
  5199                           
  5200                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 315:         --p;
  5201  15BA  30FF               	movlw	255
  5202  15BB  07C8               	addwf	dtoa@p,f
  5203  15BC  30FF               	movlw	255
  5204  15BD  3DC9               	addwfc	dtoa@p+1,f
  5205                           
  5206                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 316:         --w;
  5207  15BE  30FF               	movlw	255
  5208  15BF  07CA               	addwf	dtoa@w,f
  5209  15C0  30FF               	movlw	255
  5210  15C1  3DCB               	addwfc	dtoa@w+1,f
  5211                           
  5212                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  5213  15C2  300A               	movlw	10
  5214  15C3  00A0               	movwf	___aodiv@divisor
  5215  15C4  01A1               	clrf	___aodiv@divisor+1
  5216  15C5  01A2               	clrf	___aodiv@divisor+2
  5217  15C6  01A3               	clrf	___aodiv@divisor+3
  5218  15C7  01A4               	clrf	___aodiv@divisor+4
  5219  15C8  01A5               	clrf	___aodiv@divisor+5
  5220  15C9  01A6               	clrf	___aodiv@divisor+6
  5221  15CA  01A7               	clrf	___aodiv@divisor+7
  5222  15CB  084E               	movf	dtoa@n,w
  5223  15CC  00A8               	movwf	___aodiv@dividend
  5224  15CD  084F               	movf	dtoa@n+1,w
  5225  15CE  00A9               	movwf	___aodiv@dividend+1
  5226  15CF  0850               	movf	dtoa@n+2,w
  5227  15D0  00AA               	movwf	___aodiv@dividend+2
  5228  15D1  0851               	movf	dtoa@n+3,w
  5229  15D2  00AB               	movwf	___aodiv@dividend+3
  5230  15D3  0852               	movf	dtoa@n+4,w
  5231  15D4  00AC               	movwf	___aodiv@dividend+4
  5232  15D5  0853               	movf	dtoa@n+5,w
  5233  15D6  00AD               	movwf	___aodiv@dividend+5
  5234  15D7  0854               	movf	dtoa@n+6,w
  5235  15D8  00AE               	movwf	___aodiv@dividend+6
  5236  15D9  0855               	movf	dtoa@n+7,w
  5237  15DA  00AF               	movwf	___aodiv@dividend+7
  5238  15DB  3186  26F7  3194   	fcall	___aodiv
  5239  15DE  0820               	movf	?___aodiv,w
  5240  15DF  00CE               	movwf	dtoa@n
  5241  15E0  0821               	movf	?___aodiv+1,w
  5242  15E1  00CF               	movwf	dtoa@n+1
  5243  15E2  0822               	movf	?___aodiv+2,w
  5244  15E3  00D0               	movwf	dtoa@n+2
  5245  15E4  0823               	movf	?___aodiv+3,w
  5246  15E5  00D1               	movwf	dtoa@n+3
  5247  15E6  0824               	movf	?___aodiv+4,w
  5248  15E7  00D2               	movwf	dtoa@n+4
  5249  15E8  0825               	movf	?___aodiv+5,w
  5250  15E9  00D3               	movwf	dtoa@n+5
  5251  15EA  0826               	movf	?___aodiv+6,w
  5252  15EB  00D4               	movwf	dtoa@n+6
  5253  15EC  0827               	movf	?___aodiv+7,w
  5254  15ED  00D5               	movwf	dtoa@n+7
  5255  15EE                     l1891:	
  5256                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 318:     }
  5257                           
  5258                           
  5259                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5260  15EE  0020               	movlb	0	; select bank0
  5261  15EF  0857               	movf	dtoa@i+1,w
  5262  15F0  3A80               	xorlw	128
  5263  15F1  00C2               	movwf	??_dtoa
  5264  15F2  3080               	movlw	128
  5265  15F3  0242               	subwf	??_dtoa,w
  5266  15F4  1D03               	skipz
  5267  15F5  2DF8               	goto	u6725
  5268  15F6  3001               	movlw	1
  5269  15F7  0256               	subwf	dtoa@i,w
  5270  15F8                     u6725:
  5271  15F8  1803               	btfsc	3,0
  5272  15F9  2D64               	goto	l6027
  5273  15FA                     l6035:
  5274                           
  5275                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  5276  15FA  0020               	movlb	0	; select bank0
  5277  15FB  084C               	movf	dtoa@s,w
  5278  15FC  044D               	iorwf	dtoa@s+1,w
  5279  15FD  1D03               	btfss	3,2
  5280  15FE  2E01               	goto	l6039
  5281  15FF  1D7A               	btfss	_flags,2
  5282  1600  2E18               	goto	l6049
  5283  1601                     l6039:
  5284                           
  5285                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 322:         --i;
  5286  1601  30FF               	movlw	255
  5287  1602  07D6               	addwf	dtoa@i,f
  5288  1603  30FF               	movlw	255
  5289  1604  3DD7               	addwfc	dtoa@i+1,f
  5290                           
  5291                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  5292  1605  084C               	movf	dtoa@s,w
  5293  1606  044D               	iorwf	dtoa@s+1,w
  5294  1607  1D03               	btfss	3,2
  5295  1608  2E0B               	goto	l6045
  5296  1609  302B               	movlw	43
  5297  160A  2E0C               	goto	L1
  5298  160B                     l6045:
  5299  160B  302D               	movlw	45
  5300  160C                     L1:
  5301  160C  00C6               	movwf	_dtoa$2504
  5302  160D  3000               	movlw	0
  5303  160E  00C7               	movwf	_dtoa$2504+1
  5304  160F  0846               	movf	_dtoa$2504,w
  5305  1610  00C2               	movwf	??_dtoa
  5306  1611  0856               	movf	dtoa@i,w
  5307  1612  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5308  1613  0086               	movwf	6
  5309  1614  3002               	movlw	2	; select bank4/5
  5310  1615  0087               	movwf	7
  5311  1616  0842               	movf	??_dtoa,w
  5312  1617  0081               	movwf	1
  5313  1618                     l6049:
  5314                           
  5315                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  5316  1618  0856               	movf	dtoa@i,w
  5317  1619  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5318  161A  00C2               	movwf	??_dtoa
  5319  161B  0842               	movf	??_dtoa,w
  5320  161C  00A8               	movwf	pad@buf
  5321  161D  084B               	movf	dtoa@w+1,w
  5322  161E  00AA               	movwf	pad@p+1
  5323  161F  084A               	movf	dtoa@w,w
  5324  1620  00A9               	movwf	pad@p
  5325  1621  0845               	movf	dtoa@fp,w
  5326  1622  319F  2704         	fcall	_pad
  5327  1624  0829               	movf	?_pad+1,w
  5328  1625  00BB               	movwf	?_dtoa+1
  5329  1626  0828               	movf	?_pad,w
  5330  1627  00BA               	movwf	?_dtoa
  5331  1628  0008               	return
  5332  1629                     __end_of_dtoa:
  5333                           
  5334                           	psect	text5
  5335  1F04                     __ptext5:	
  5336 ;; *************** function _pad *****************
  5337 ;; Defined at:
  5338 ;;		line 72 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  fp              1    wreg     PTR struct _IO_FILE
  5341 ;;		 -> sprintf@f(5), 
  5342 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  5343 ;;		 -> dbuf(32), 
  5344 ;;  p               2    9[BANK0 ] int 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  fp              1   16[BANK0 ] PTR struct _IO_FILE
  5347 ;;		 -> sprintf@f(5), 
  5348 ;;  w               2   14[BANK0 ] int 
  5349 ;;  i               2   12[BANK0 ] int 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  2    8[BANK0 ] int 
  5352 ;; Registers used:
  5353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5354 ;; Tracked objects:
  5355 ;;		On entry : 1F/0
  5356 ;;		On exit  : 1F/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5359 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5360 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5361 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5362 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5363 ;;Total ram usage:        9 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:    8
  5366 ;; This function calls:
  5367 ;;		_fputc
  5368 ;;		_fputs
  5369 ;;		_strlen
  5370 ;; This function is called by:
  5371 ;;		_dtoa
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           
  5376                           ;psect for function _pad
  5377  1F04                     _pad:
  5378                           
  5379                           ;incstack = 0
  5380                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5381                           ;pad@fp stored from wreg
  5382  1F04  00B0               	movwf	pad@fp
  5383                           
  5384                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.31/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  5385  1F05  1C7A               	btfss	_flags,0
  5386  1F06  2F0F               	goto	l5585
  5387                           
  5388                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  5389  1F07  0830               	movf	pad@fp,w
  5390  1F08  00AB               	movwf	??_pad
  5391  1F09  082B               	movf	??_pad,w
  5392  1F0A  00A0               	movwf	fputs@fp
  5393  1F0B  0828               	movf	pad@buf,w
  5394  1F0C  319D  2593  319F   	fcall	_fputs
  5395  1F0F                     l5585:
  5396                           
  5397                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  5398  1F0F  1BAA               	btfsc	pad@p+1,7
  5399  1F10  2F16               	goto	l5589
  5400  1F11  082A               	movf	pad@p+1,w
  5401  1F12  00AF               	movwf	pad@w+1
  5402  1F13  0829               	movf	pad@p,w
  5403  1F14  00AE               	movwf	pad@w
  5404  1F15  2F18               	goto	l1874
  5405  1F16                     l5589:
  5406  1F16  01AE               	clrf	pad@w
  5407  1F17  01AF               	clrf	pad@w+1
  5408  1F18                     l1874:
  5409                           
  5410                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  5411  1F18  01AC               	clrf	pad@i
  5412  1F19  01AD               	clrf	pad@i+1
  5413  1F1A                     l5595:	
  5414                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  5415                           
  5416                           
  5417                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  5418  1F1A  082D               	movf	pad@i+1,w
  5419  1F1B  3A80               	xorlw	128
  5420  1F1C  00AB               	movwf	??_pad
  5421  1F1D  082F               	movf	pad@w+1,w
  5422  1F1E  3A80               	xorlw	128
  5423  1F1F  022B               	subwf	??_pad,w
  5424  1F20  1D03               	skipz
  5425  1F21  2F24               	goto	u5875
  5426  1F22  082E               	movf	pad@w,w
  5427  1F23  022C               	subwf	pad@i,w
  5428  1F24                     u5875:
  5429  1F24  1803               	btfsc	3,0
  5430  1F25  2F38               	goto	l1877
  5431                           
  5432                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  5433  1F26  3020               	movlw	32
  5434  1F27  00F2               	movwf	fputc@c
  5435  1F28  3000               	movlw	0
  5436  1F29  00F3               	movwf	fputc@c+1
  5437  1F2A  0020               	movlb	0	; select bank0
  5438  1F2B  0830               	movf	pad@fp,w
  5439  1F2C  00AB               	movwf	??_pad
  5440  1F2D  082B               	movf	??_pad,w
  5441  1F2E  00F4               	movwf	fputc@fp
  5442  1F2F  3188  2001  319F   	fcall	_fputc
  5443                           
  5444                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 86:         ++i;
  5445  1F32  3001               	movlw	1
  5446  1F33  0020               	movlb	0	; select bank0
  5447  1F34  07AC               	addwf	pad@i,f
  5448  1F35  3000               	movlw	0
  5449  1F36  3DAD               	addwfc	pad@i+1,f
  5450  1F37  2F1A               	goto	l5595
  5451  1F38                     l1877:
  5452                           
  5453                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  5454  1F38  187A               	btfsc	_flags,0
  5455  1F39  2F43               	goto	l5599
  5456                           
  5457                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  5458  1F3A  0020               	movlb	0	; select bank0
  5459  1F3B  0830               	movf	pad@fp,w
  5460  1F3C  00AB               	movwf	??_pad
  5461  1F3D  082B               	movf	??_pad,w
  5462  1F3E  00A0               	movwf	fputs@fp
  5463  1F3F  0828               	movf	pad@buf,w
  5464  1F40  319D  2593  319F   	fcall	_fputs
  5465  1F43                     l5599:
  5466                           
  5467                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  5468  1F43  0020               	movlb	0	; select bank0
  5469  1F44  0828               	movf	pad@buf,w
  5470  1F45  00F2               	movwf	strlen@s
  5471  1F46  3002               	movlw	2
  5472  1F47  00F3               	movwf	strlen@s+1
  5473  1F48  319C  244E         	fcall	_strlen
  5474  1F4A  082E               	movf	pad@w,w
  5475  1F4B  0772               	addwf	?_strlen,w
  5476  1F4C  00A8               	movwf	?_pad
  5477  1F4D  082F               	movf	pad@w+1,w
  5478  1F4E  3D73               	addwfc	?_strlen+1,w
  5479  1F4F  00A9               	movwf	?_pad+1
  5480  1F50  0008               	return
  5481  1F51                     __end_of_pad:
  5482                           
  5483                           	psect	text6
  5484  1D93                     __ptext6:	
  5485 ;; *************** function _fputs *****************
  5486 ;; Defined at:
  5487 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputs.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;  s               1    wreg     PTR const unsigned char 
  5490 ;;		 -> dbuf(32), 
  5491 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  5492 ;;		 -> sprintf@f(5), 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  5495 ;;		 -> dbuf(32), 
  5496 ;;  i               2    5[BANK0 ] int 
  5497 ;;  c               1    4[BANK0 ] unsigned char 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  2    0[BANK0 ] int 
  5500 ;; Registers used:
  5501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5502 ;; Tracked objects:
  5503 ;;		On entry : 1F/0
  5504 ;;		On exit  : 1F/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5507 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5509 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5510 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5511 ;;Total ram usage:        8 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:    7
  5514 ;; This function calls:
  5515 ;;		_fputc
  5516 ;; This function is called by:
  5517 ;;		_pad
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           
  5522                           ;psect for function _fputs
  5523  1D93                     _fputs:
  5524                           
  5525                           ;incstack = 0
  5526                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5527                           ;fputs@s stored from wreg
  5528  1D93  00A7               	movwf	fputs@s
  5529  1D94  01A5               	clrf	fputs@i
  5530  1D95  01A6               	clrf	fputs@i+1
  5531  1D96                     l5361:
  5532  1D96  0825               	movf	fputs@i,w
  5533  1D97  0727               	addwf	fputs@s,w
  5534  1D98  00A1               	movwf	??_fputs
  5535  1D99  0821               	movf	??_fputs,w
  5536  1D9A  0086               	movwf	6
  5537  1D9B  3002               	movlw	2	; select bank4/5
  5538  1D9C  0087               	movwf	7
  5539  1D9D  0801               	movf	1,w
  5540  1D9E  00A2               	movwf	??_fputs+1
  5541  1D9F  0822               	movf	??_fputs+1,w
  5542  1DA0  00A4               	movwf	fputs@c
  5543  1DA1  0824               	movf	fputs@c,w
  5544  1DA2  1903               	btfsc	3,2
  5545  1DA3  0008               	return
  5546  1DA4  0824               	movf	fputs@c,w
  5547  1DA5  00A1               	movwf	??_fputs
  5548  1DA6  01A2               	clrf	??_fputs+1
  5549  1DA7  0821               	movf	??_fputs,w
  5550  1DA8  00F2               	movwf	fputc@c
  5551  1DA9  0822               	movf	??_fputs+1,w
  5552  1DAA  00F3               	movwf	fputc@c+1
  5553  1DAB  0820               	movf	fputs@fp,w
  5554  1DAC  00A3               	movwf	??_fputs+2
  5555  1DAD  0823               	movf	??_fputs+2,w
  5556  1DAE  00F4               	movwf	fputc@fp
  5557  1DAF  3188  2001  319D   	fcall	_fputc
  5558  1DB2  3001               	movlw	1
  5559  1DB3  0020               	movlb	0	; select bank0
  5560  1DB4  07A5               	addwf	fputs@i,f
  5561  1DB5  3000               	movlw	0
  5562  1DB6  3DA6               	addwfc	fputs@i+1,f
  5563  1DB7  2D96               	goto	l5361
  5564  1DB8                     __end_of_fputs:
  5565                           
  5566                           	psect	text7
  5567  0801                     __ptext7:	
  5568 ;; *************** function _fputc *****************
  5569 ;; Defined at:
  5570 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputc.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  c               2    2[COMMON] int 
  5573 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  5574 ;;		 -> sprintf@f(5), 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;		None
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  2    2[COMMON] int 
  5579 ;; Registers used:
  5580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5581 ;; Tracked objects:
  5582 ;;		On entry : 1F/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5586 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5589 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5590 ;;Total ram usage:        8 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    6
  5593 ;; This function calls:
  5594 ;;		_putch
  5595 ;; This function is called by:
  5596 ;;		_pad
  5597 ;;		_vfpfcnvrt
  5598 ;;		_fputs
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           
  5603                           ;psect for function _fputc
  5604  0801                     _fputc:
  5605                           
  5606                           ;incstack = 0
  5607                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5608  0801  0874               	movf	fputc@fp,w
  5609  0802  1D03               	btfss	3,2
  5610  0803  0874               	movf	fputc@fp,w
  5611  0804  1D03               	btfss	3,2
  5612  0805  280A               	goto	l3659
  5613  0806  0872               	movf	fputc@c,w
  5614  0807  3180  2003         	fcall	_putch
  5615  0809  0008               	return
  5616  080A                     l3659:
  5617  080A  0874               	movf	fputc@fp,w
  5618  080B  3E03               	addlw	3
  5619  080C  0086               	movwf	6
  5620  080D  0187               	clrf	7
  5621  080E  0016               	moviw fsr1++
  5622  080F  0401               	iorwf	1,w
  5623  0810  1903               	btfsc	3,2
  5624  0811  282D               	goto	l3663
  5625  0812  0874               	movf	fputc@fp,w
  5626  0813  3E03               	addlw	3
  5627  0814  0086               	movwf	6
  5628  0815  0187               	clrf	7
  5629  0816  3F40               	moviw [0]fsr1
  5630  0817  00F5               	movwf	??_fputc
  5631  0818  3F41               	moviw [1]fsr1
  5632  0819  00F6               	movwf	??_fputc+1
  5633  081A  0A74               	incf	fputc@fp,w
  5634  081B  0086               	movwf	6
  5635  081C  0187               	clrf	7
  5636  081D  3F40               	moviw [0]fsr1
  5637  081E  00F7               	movwf	??_fputc+2
  5638  081F  3F41               	moviw [1]fsr1
  5639  0820  00F8               	movwf	??_fputc+3
  5640  0821  0878               	movf	??_fputc+3,w
  5641  0822  3A80               	xorlw	128
  5642  0823  00F9               	movwf	??_fputc+4
  5643  0824  0876               	movf	??_fputc+1,w
  5644  0825  3A80               	xorlw	128
  5645  0826  0279               	subwf	??_fputc+4,w
  5646  0827  1D03               	skipz
  5647  0828  282B               	goto	u2675
  5648  0829  0875               	movf	??_fputc,w
  5649  082A  0277               	subwf	??_fputc+2,w
  5650  082B                     u2675:
  5651  082B  1803               	skipnc
  5652  082C  0008               	return
  5653  082D                     l3663:
  5654  082D  0872               	movf	fputc@c,w
  5655  082E  00F5               	movwf	??_fputc
  5656  082F  0874               	movf	fputc@fp,w
  5657  0830  0086               	movwf	6
  5658  0831  0187               	clrf	7
  5659  0832  0A74               	incf	fputc@fp,w
  5660  0833  0084               	movwf	4
  5661  0834  0185               	clrf	5
  5662  0835  0800               	movf	0,w
  5663  0836  0701               	addwf	1,w
  5664  0837  00F6               	movwf	??_fputc+1
  5665  0838  0876               	movf	??_fputc+1,w
  5666  0839  0086               	movwf	6
  5667  083A  3001               	movlw	1	; select bank2/3
  5668  083B  0087               	movwf	7
  5669  083C  0875               	movf	??_fputc,w
  5670  083D  0081               	movwf	1
  5671  083E  0A74               	incf	fputc@fp,w
  5672  083F  0086               	movwf	6
  5673  0840  0187               	clrf	7
  5674  0841  3001               	movlw	1
  5675  0842  0781               	addwf	1,f
  5676  0843  3141               	addfsr 1,1
  5677  0844  1803               	skipnc
  5678  0845  0A81               	incf	1,f
  5679  0846  0008               	return
  5680  0847                     __end_of_fputc:
  5681                           
  5682                           	psect	text8
  5683  0003                     __ptext8:	
  5684 ;; *************** function _putch *****************
  5685 ;; Defined at:
  5686 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/putch.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  c               1    wreg     unsigned char 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  c               1    0[COMMON] unsigned char 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      void 
  5693 ;; Registers used:
  5694 ;;		wreg
  5695 ;; Tracked objects:
  5696 ;;		On entry : 1F/0
  5697 ;;		On exit  : 1F/0
  5698 ;;		Unchanged: 1F/0
  5699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;Total ram usage:        0 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; Hardware stack levels required when called:    5
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_fputc
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           
  5715                           ;psect for function _putch
  5716  0003                     _putch:
  5717                           
  5718                           ;incstack = 0
  5719                           ; Regs used in _putch: [wreg]
  5720  0003  0008               	return
  5721  0004                     __end_of_putch:
  5722                           
  5723                           	psect	text9
  5724  1C65                     __ptext9:	
  5725 ;; *************** function _abs *****************
  5726 ;; Defined at:
  5727 ;;		line 1 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/abs.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;  a               2    5[COMMON] int 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;		None
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  2    5[COMMON] int 
  5734 ;; Registers used:
  5735 ;;		wreg, status,2, status,0
  5736 ;; Tracked objects:
  5737 ;;		On entry : 1F/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;Total ram usage:        4 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:    5
  5748 ;; This function calls:
  5749 ;;		Nothing
  5750 ;; This function is called by:
  5751 ;;		_dtoa
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           
  5756                           ;psect for function _abs
  5757  1C65                     _abs:
  5758                           
  5759                           ;incstack = 0
  5760                           ; Regs used in _abs: [wreg+status,2+status,0]
  5761  1C65  0876               	movf	abs@a+1,w
  5762  1C66  3A80               	xorlw	128
  5763  1C67  00F7               	movwf	??_abs
  5764  1C68  3080               	movlw	128
  5765  1C69  0277               	subwf	??_abs,w
  5766  1C6A  1D03               	skipz
  5767  1C6B  2C6E               	goto	u2745
  5768  1C6C  3001               	movlw	1
  5769  1C6D  0275               	subwf	abs@a,w
  5770  1C6E                     u2745:
  5771  1C6E  1803               	skipnc
  5772  1C6F  0008               	return
  5773  1C70  0975               	comf	abs@a,w
  5774  1C71  00F7               	movwf	??_abs
  5775  1C72  0976               	comf	abs@a+1,w
  5776  1C73  00F8               	movwf	??_abs+1
  5777  1C74  0AF7               	incf	??_abs,f
  5778  1C75  1903               	skipnz
  5779  1C76  0AF8               	incf	??_abs+1,f
  5780  1C77  0877               	movf	??_abs,w
  5781  1C78  00F5               	movwf	?_abs
  5782  1C79  0878               	movf	??_abs+1,w
  5783  1C7A  00F6               	movwf	?_abs+1
  5784  1C7B  0008               	return
  5785  1C7C                     __end_of_abs:
  5786                           
  5787                           	psect	text10
  5788  0847                     __ptext10:	
  5789 ;; *************** function ___aomod *****************
  5790 ;; Defined at:
  5791 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aomod.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  divisor         8    0[BANK0 ] long long 
  5794 ;;  dividend        8    8[BANK0 ] long long 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  sign            1    4[COMMON] unsigned char 
  5797 ;;  counter         1    3[COMMON] unsigned char 
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  8    0[BANK0 ] long long 
  5800 ;; Registers used:
  5801 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5802 ;; Tracked objects:
  5803 ;;		On entry : 1F/0
  5804 ;;		On exit  : 1F/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5807 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;Total ram usage:       19 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; Hardware stack levels required when called:    5
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		_dtoa
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           
  5822                           ;psect for function ___aomod
  5823  0847                     ___aomod:
  5824                           
  5825                           ;incstack = 0
  5826                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  5827  0847  01F4               	clrf	___aomod@sign
  5828  0848  3028               	movlw	low ___aomod@dividend
  5829  0849  0086               	movwf	6
  5830  084A  3000               	movlw	high ___aomod@dividend
  5831  084B  0087               	movwf	7
  5832  084C  3F47               	moviw [7]fsr1
  5833  084D  00F2               	movwf	??___aomod
  5834  084E  1FF2               	btfss	??___aomod,7
  5835  084F  2871               	goto	l3793
  5836  0850  0020               	movlb	0	; select bank0
  5837  0851  09A8               	comf	___aomod@dividend,f
  5838  0852  09A9               	comf	___aomod@dividend+1,f
  5839  0853  09AA               	comf	___aomod@dividend+2,f
  5840  0854  09AB               	comf	___aomod@dividend+3,f
  5841  0855  09AC               	comf	___aomod@dividend+4,f
  5842  0856  09AD               	comf	___aomod@dividend+5,f
  5843  0857  09AE               	comf	___aomod@dividend+6,f
  5844  0858  09AF               	comf	___aomod@dividend+7,f
  5845  0859  0AA8               	incf	___aomod@dividend,f
  5846  085A  1D03               	skipz
  5847  085B  286F               	goto	u291lld
  5848  085C  0AA9               	incf	___aomod@dividend+1,f
  5849  085D  1D03               	skipz
  5850  085E  286F               	goto	u291lld
  5851  085F  0AAA               	incf	___aomod@dividend+2,f
  5852  0860  1D03               	skipz
  5853  0861  286F               	goto	u291lld
  5854  0862  0AAB               	incf	___aomod@dividend+3,f
  5855  0863  1D03               	skipz
  5856  0864  286F               	goto	u291lld
  5857  0865  0AAC               	incf	___aomod@dividend+4,f
  5858  0866  1D03               	skipz
  5859  0867  286F               	goto	u291lld
  5860  0868  0AAD               	incf	___aomod@dividend+5,f
  5861  0869  1D03               	skipz
  5862  086A  286F               	goto	u291lld
  5863  086B  0AAE               	incf	___aomod@dividend+6,f
  5864  086C  1D03               	skipz
  5865  086D  286F               	goto	u291lld
  5866  086E  0AAF               	incf	___aomod@dividend+7,f
  5867  086F                     u291lld:
  5868  086F  01F4               	clrf	___aomod@sign
  5869  0870  0AF4               	incf	___aomod@sign,f
  5870  0871                     l3793:
  5871  0871  3020               	movlw	low ___aomod@divisor
  5872  0872  0086               	movwf	6
  5873  0873  3000               	movlw	high ___aomod@divisor
  5874  0874  0087               	movwf	7
  5875  0875  3F47               	moviw [7]fsr1
  5876  0876  00F2               	movwf	??___aomod
  5877  0877  1FF2               	btfss	??___aomod,7
  5878  0878  2898               	goto	l3797
  5879  0879  0020               	movlb	0	; select bank0
  5880  087A  09A0               	comf	___aomod@divisor,f
  5881  087B  09A1               	comf	___aomod@divisor+1,f
  5882  087C  09A2               	comf	___aomod@divisor+2,f
  5883  087D  09A3               	comf	___aomod@divisor+3,f
  5884  087E  09A4               	comf	___aomod@divisor+4,f
  5885  087F  09A5               	comf	___aomod@divisor+5,f
  5886  0880  09A6               	comf	___aomod@divisor+6,f
  5887  0881  09A7               	comf	___aomod@divisor+7,f
  5888  0882  0AA0               	incf	___aomod@divisor,f
  5889  0883  1D03               	skipz
  5890  0884  2898               	goto	l3797
  5891  0885  0AA1               	incf	___aomod@divisor+1,f
  5892  0886  1D03               	skipz
  5893  0887  2898               	goto	l3797
  5894  0888  0AA2               	incf	___aomod@divisor+2,f
  5895  0889  1D03               	skipz
  5896  088A  2898               	goto	l3797
  5897  088B  0AA3               	incf	___aomod@divisor+3,f
  5898  088C  1D03               	skipz
  5899  088D  2898               	goto	l3797
  5900  088E  0AA4               	incf	___aomod@divisor+4,f
  5901  088F  1D03               	skipz
  5902  0890  2898               	goto	l3797
  5903  0891  0AA5               	incf	___aomod@divisor+5,f
  5904  0892  1D03               	skipz
  5905  0893  2898               	goto	l3797
  5906  0894  0AA6               	incf	___aomod@divisor+6,f
  5907  0895  1D03               	skipz
  5908  0896  2898               	goto	l3797
  5909  0897  0AA7               	incf	___aomod@divisor+7,f
  5910  0898                     l3797:
  5911  0898  0020               	movlb	0	; select bank0
  5912  0899  0820               	movf	___aomod@divisor,w
  5913  089A  0421               	iorwf	___aomod@divisor+1,w
  5914  089B  0422               	iorwf	___aomod@divisor+2,w
  5915  089C  0423               	iorwf	___aomod@divisor+3,w
  5916  089D  0424               	iorwf	___aomod@divisor+4,w
  5917  089E  0425               	iorwf	___aomod@divisor+5,w
  5918  089F  0426               	iorwf	___aomod@divisor+6,w
  5919  08A0  0427               	iorwf	___aomod@divisor+7,w
  5920  08A1  1903               	skipnz
  5921  08A2  28F0               	goto	l3813
  5922  08A3  01F3               	clrf	___aomod@counter
  5923  08A4  0AF3               	incf	___aomod@counter,f
  5924  08A5                     l3805:
  5925  08A5  1BA7               	btfsc	___aomod@divisor+7,7
  5926  08A6  28B4               	goto	l3807
  5927  08A7  35A0               	lslf	___aomod@divisor,f
  5928  08A8  0DA1               	rlf	___aomod@divisor+1,f
  5929  08A9  0DA2               	rlf	___aomod@divisor+2,f
  5930  08AA  0DA3               	rlf	___aomod@divisor+3,f
  5931  08AB  0DA4               	rlf	___aomod@divisor+4,f
  5932  08AC  0DA5               	rlf	___aomod@divisor+5,f
  5933  08AD  0DA6               	rlf	___aomod@divisor+6,f
  5934  08AE  0DA7               	rlf	___aomod@divisor+7,f
  5935  08AF  3001               	movlw	1
  5936  08B0  00F2               	movwf	??___aomod
  5937  08B1  0872               	movf	??___aomod,w
  5938  08B2  07F3               	addwf	___aomod@counter,f
  5939  08B3  28A5               	goto	l3805
  5940  08B4                     l3807:
  5941  08B4  0827               	movf	___aomod@divisor+7,w
  5942  08B5  022F               	subwf	___aomod@dividend+7,w
  5943  08B6  1D03               	skipz
  5944  08B7  28D2               	goto	u2965
  5945  08B8  0826               	movf	___aomod@divisor+6,w
  5946  08B9  022E               	subwf	___aomod@dividend+6,w
  5947  08BA  1D03               	skipz
  5948  08BB  28D2               	goto	u2965
  5949  08BC  0825               	movf	___aomod@divisor+5,w
  5950  08BD  022D               	subwf	___aomod@dividend+5,w
  5951  08BE  1D03               	skipz
  5952  08BF  28D2               	goto	u2965
  5953  08C0  0824               	movf	___aomod@divisor+4,w
  5954  08C1  022C               	subwf	___aomod@dividend+4,w
  5955  08C2  1D03               	skipz
  5956  08C3  28D2               	goto	u2965
  5957  08C4  0823               	movf	___aomod@divisor+3,w
  5958  08C5  022B               	subwf	___aomod@dividend+3,w
  5959  08C6  1D03               	skipz
  5960  08C7  28D2               	goto	u2965
  5961  08C8  0822               	movf	___aomod@divisor+2,w
  5962  08C9  022A               	subwf	___aomod@dividend+2,w
  5963  08CA  1D03               	skipz
  5964  08CB  28D2               	goto	u2965
  5965  08CC  0821               	movf	___aomod@divisor+1,w
  5966  08CD  0229               	subwf	___aomod@dividend+1,w
  5967  08CE  1D03               	skipz
  5968  08CF  28D2               	goto	u2965
  5969  08D0  0820               	movf	___aomod@divisor,w
  5970  08D1  0228               	subwf	___aomod@dividend,w
  5971  08D2                     u2965:
  5972  08D2  1C03               	skipc
  5973  08D3  28E4               	goto	l3811
  5974  08D4  0820               	movf	___aomod@divisor,w
  5975  08D5  02A8               	subwf	___aomod@dividend,f
  5976  08D6  0821               	movf	___aomod@divisor+1,w
  5977  08D7  3BA9               	subwfb	___aomod@dividend+1,f
  5978  08D8  0822               	movf	___aomod@divisor+2,w
  5979  08D9  3BAA               	subwfb	___aomod@dividend+2,f
  5980  08DA  0823               	movf	___aomod@divisor+3,w
  5981  08DB  3BAB               	subwfb	___aomod@dividend+3,f
  5982  08DC  0824               	movf	___aomod@divisor+4,w
  5983  08DD  3BAC               	subwfb	___aomod@dividend+4,f
  5984  08DE  0825               	movf	___aomod@divisor+5,w
  5985  08DF  3BAD               	subwfb	___aomod@dividend+5,f
  5986  08E0  0826               	movf	___aomod@divisor+6,w
  5987  08E1  3BAE               	subwfb	___aomod@dividend+6,f
  5988  08E2  0827               	movf	___aomod@divisor+7,w
  5989  08E3  3BAF               	subwfb	___aomod@dividend+7,f
  5990  08E4                     l3811:
  5991  08E4  36A7               	lsrf	___aomod@divisor+7,f
  5992  08E5  0CA6               	rrf	___aomod@divisor+6,f
  5993  08E6  0CA5               	rrf	___aomod@divisor+5,f
  5994  08E7  0CA4               	rrf	___aomod@divisor+4,f
  5995  08E8  0CA3               	rrf	___aomod@divisor+3,f
  5996  08E9  0CA2               	rrf	___aomod@divisor+2,f
  5997  08EA  0CA1               	rrf	___aomod@divisor+1,f
  5998  08EB  0CA0               	rrf	___aomod@divisor,f
  5999  08EC  3001               	movlw	1
  6000  08ED  02F3               	subwf	___aomod@counter,f
  6001  08EE  1D03               	btfss	3,2
  6002  08EF  28B4               	goto	l3807
  6003  08F0                     l3813:
  6004  08F0  0874               	movf	___aomod@sign,w
  6005  08F1  1903               	btfsc	3,2
  6006  08F2  2911               	goto	l1484
  6007  08F3  09A8               	comf	___aomod@dividend,f
  6008  08F4  09A9               	comf	___aomod@dividend+1,f
  6009  08F5  09AA               	comf	___aomod@dividend+2,f
  6010  08F6  09AB               	comf	___aomod@dividend+3,f
  6011  08F7  09AC               	comf	___aomod@dividend+4,f
  6012  08F8  09AD               	comf	___aomod@dividend+5,f
  6013  08F9  09AE               	comf	___aomod@dividend+6,f
  6014  08FA  09AF               	comf	___aomod@dividend+7,f
  6015  08FB  0AA8               	incf	___aomod@dividend,f
  6016  08FC  1D03               	skipz
  6017  08FD  2911               	goto	l1484
  6018  08FE  0AA9               	incf	___aomod@dividend+1,f
  6019  08FF  1D03               	skipz
  6020  0900  2911               	goto	l1484
  6021  0901  0AAA               	incf	___aomod@dividend+2,f
  6022  0902  1D03               	skipz
  6023  0903  2911               	goto	l1484
  6024  0904  0AAB               	incf	___aomod@dividend+3,f
  6025  0905  1D03               	skipz
  6026  0906  2911               	goto	l1484
  6027  0907  0AAC               	incf	___aomod@dividend+4,f
  6028  0908  1D03               	skipz
  6029  0909  2911               	goto	l1484
  6030  090A  0AAD               	incf	___aomod@dividend+5,f
  6031  090B  1D03               	skipz
  6032  090C  2911               	goto	l1484
  6033  090D  0AAE               	incf	___aomod@dividend+6,f
  6034  090E  1D03               	skipz
  6035  090F  2911               	goto	l1484
  6036  0910  0AAF               	incf	___aomod@dividend+7,f
  6037  0911                     l1484:
  6038  0911  0020               	movlb	0	; select bank0
  6039  0912  0828               	movf	___aomod@dividend,w
  6040  0913  00A0               	movwf	?___aomod
  6041  0914  0829               	movf	___aomod@dividend+1,w
  6042  0915  00A1               	movwf	?___aomod+1
  6043  0916  082A               	movf	___aomod@dividend+2,w
  6044  0917  00A2               	movwf	?___aomod+2
  6045  0918  082B               	movf	___aomod@dividend+3,w
  6046  0919  00A3               	movwf	?___aomod+3
  6047  091A  082C               	movf	___aomod@dividend+4,w
  6048  091B  00A4               	movwf	?___aomod+4
  6049  091C  082D               	movf	___aomod@dividend+5,w
  6050  091D  00A5               	movwf	?___aomod+5
  6051  091E  082E               	movf	___aomod@dividend+6,w
  6052  091F  00A6               	movwf	?___aomod+6
  6053  0920  082F               	movf	___aomod@dividend+7,w
  6054  0921  00A7               	movwf	?___aomod+7
  6055  0922  0008               	return
  6056  0923                     __end_of___aomod:
  6057                           
  6058                           	psect	text11
  6059  06F7                     __ptext11:	
  6060 ;; *************** function ___aodiv *****************
  6061 ;; Defined at:
  6062 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aodiv.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  divisor         8    0[BANK0 ] long long 
  6065 ;;  dividend        8    8[BANK0 ] long long 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  quotient        8   18[BANK0 ] long long 
  6068 ;;  sign            1   17[BANK0 ] unsigned char 
  6069 ;;  counter         1   16[BANK0 ] unsigned char 
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  8    0[BANK0 ] long long 
  6072 ;; Registers used:
  6073 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6074 ;; Tracked objects:
  6075 ;;		On entry : 1F/0
  6076 ;;		On exit  : 1F/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6079 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6080 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6082 ;;      Totals:         1      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6083 ;;Total ram usage:       27 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    5
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_dtoa
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           
  6094                           ;psect for function ___aodiv
  6095  06F7                     ___aodiv:
  6096                           
  6097                           ;incstack = 0
  6098                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6099  06F7  01B1               	clrf	___aodiv@sign
  6100  06F8  3020               	movlw	low ___aodiv@divisor
  6101  06F9  0086               	movwf	6
  6102  06FA  3000               	movlw	high ___aodiv@divisor
  6103  06FB  0087               	movwf	7
  6104  06FC  3F47               	moviw [7]fsr1
  6105  06FD  00F2               	movwf	??___aodiv
  6106  06FE  1FF2               	btfss	??___aodiv,7
  6107  06FF  2F22               	goto	l3755
  6108  0700  0020               	movlb	0	; select bank0
  6109  0701  09A0               	comf	___aodiv@divisor,f
  6110  0702  09A1               	comf	___aodiv@divisor+1,f
  6111  0703  09A2               	comf	___aodiv@divisor+2,f
  6112  0704  09A3               	comf	___aodiv@divisor+3,f
  6113  0705  09A4               	comf	___aodiv@divisor+4,f
  6114  0706  09A5               	comf	___aodiv@divisor+5,f
  6115  0707  09A6               	comf	___aodiv@divisor+6,f
  6116  0708  09A7               	comf	___aodiv@divisor+7,f
  6117  0709  0AA0               	incf	___aodiv@divisor,f
  6118  070A  1D03               	skipz
  6119  070B  2F1F               	goto	u280lld
  6120  070C  0AA1               	incf	___aodiv@divisor+1,f
  6121  070D  1D03               	skipz
  6122  070E  2F1F               	goto	u280lld
  6123  070F  0AA2               	incf	___aodiv@divisor+2,f
  6124  0710  1D03               	skipz
  6125  0711  2F1F               	goto	u280lld
  6126  0712  0AA3               	incf	___aodiv@divisor+3,f
  6127  0713  1D03               	skipz
  6128  0714  2F1F               	goto	u280lld
  6129  0715  0AA4               	incf	___aodiv@divisor+4,f
  6130  0716  1D03               	skipz
  6131  0717  2F1F               	goto	u280lld
  6132  0718  0AA5               	incf	___aodiv@divisor+5,f
  6133  0719  1D03               	skipz
  6134  071A  2F1F               	goto	u280lld
  6135  071B  0AA6               	incf	___aodiv@divisor+6,f
  6136  071C  1D03               	skipz
  6137  071D  2F1F               	goto	u280lld
  6138  071E  0AA7               	incf	___aodiv@divisor+7,f
  6139  071F                     u280lld:
  6140  071F  0020               	movlb	0	; select bank0
  6141  0720  01B1               	clrf	___aodiv@sign
  6142  0721  0AB1               	incf	___aodiv@sign,f
  6143  0722                     l3755:
  6144  0722  3028               	movlw	low ___aodiv@dividend
  6145  0723  0086               	movwf	6
  6146  0724  3000               	movlw	high ___aodiv@dividend
  6147  0725  0087               	movwf	7
  6148  0726  3F47               	moviw [7]fsr1
  6149  0727  00F2               	movwf	??___aodiv
  6150  0728  1FF2               	btfss	??___aodiv,7
  6151  0729  2F4E               	goto	l3761
  6152  072A  0020               	movlb	0	; select bank0
  6153  072B  09A8               	comf	___aodiv@dividend,f
  6154  072C  09A9               	comf	___aodiv@dividend+1,f
  6155  072D  09AA               	comf	___aodiv@dividend+2,f
  6156  072E  09AB               	comf	___aodiv@dividend+3,f
  6157  072F  09AC               	comf	___aodiv@dividend+4,f
  6158  0730  09AD               	comf	___aodiv@dividend+5,f
  6159  0731  09AE               	comf	___aodiv@dividend+6,f
  6160  0732  09AF               	comf	___aodiv@dividend+7,f
  6161  0733  0AA8               	incf	___aodiv@dividend,f
  6162  0734  1D03               	skipz
  6163  0735  2F49               	goto	l3759
  6164  0736  0AA9               	incf	___aodiv@dividend+1,f
  6165  0737  1D03               	skipz
  6166  0738  2F49               	goto	l3759
  6167  0739  0AAA               	incf	___aodiv@dividend+2,f
  6168  073A  1D03               	skipz
  6169  073B  2F49               	goto	l3759
  6170  073C  0AAB               	incf	___aodiv@dividend+3,f
  6171  073D  1D03               	skipz
  6172  073E  2F49               	goto	l3759
  6173  073F  0AAC               	incf	___aodiv@dividend+4,f
  6174  0740  1D03               	skipz
  6175  0741  2F49               	goto	l3759
  6176  0742  0AAD               	incf	___aodiv@dividend+5,f
  6177  0743  1D03               	skipz
  6178  0744  2F49               	goto	l3759
  6179  0745  0AAE               	incf	___aodiv@dividend+6,f
  6180  0746  1D03               	skipz
  6181  0747  2F49               	goto	l3759
  6182  0748  0AAF               	incf	___aodiv@dividend+7,f
  6183  0749                     l3759:
  6184  0749  3001               	movlw	1
  6185  074A  00F2               	movwf	??___aodiv
  6186  074B  0872               	movf	??___aodiv,w
  6187  074C  0020               	movlb	0	; select bank0
  6188  074D  06B1               	xorwf	___aodiv@sign,f
  6189  074E                     l3761:
  6190  074E  3032               	movlw	low ___aodiv@quotient
  6191  074F  0086               	movwf	6
  6192  0750  3000               	movlw	high ___aodiv@quotient
  6193  0751  0087               	movwf	7
  6194  0752  3008               	movlw	8
  6195  0753  00F2               	movwf	??___aodiv
  6196  0754  3000               	movlw	0
  6197  0755                     u2830:
  6198  0755  001E               	movwi fsr1++
  6199  0756  0BF2               	decfsz	??___aodiv,f
  6200  0757  2F55               	goto	u2830
  6201  0758  0020               	movlb	0	; select bank0
  6202  0759  0820               	movf	___aodiv@divisor,w
  6203  075A  0421               	iorwf	___aodiv@divisor+1,w
  6204  075B  0422               	iorwf	___aodiv@divisor+2,w
  6205  075C  0423               	iorwf	___aodiv@divisor+3,w
  6206  075D  0424               	iorwf	___aodiv@divisor+4,w
  6207  075E  0425               	iorwf	___aodiv@divisor+5,w
  6208  075F  0426               	iorwf	___aodiv@divisor+6,w
  6209  0760  0427               	iorwf	___aodiv@divisor+7,w
  6210  0761  1903               	skipnz
  6211  0762  2FB9               	goto	l3783
  6212  0763  01B0               	clrf	___aodiv@counter
  6213  0764  0AB0               	incf	___aodiv@counter,f
  6214  0765                     l3771:
  6215  0765  1BA7               	btfsc	___aodiv@divisor+7,7
  6216  0766  2F74               	goto	l3773
  6217  0767  35A0               	lslf	___aodiv@divisor,f
  6218  0768  0DA1               	rlf	___aodiv@divisor+1,f
  6219  0769  0DA2               	rlf	___aodiv@divisor+2,f
  6220  076A  0DA3               	rlf	___aodiv@divisor+3,f
  6221  076B  0DA4               	rlf	___aodiv@divisor+4,f
  6222  076C  0DA5               	rlf	___aodiv@divisor+5,f
  6223  076D  0DA6               	rlf	___aodiv@divisor+6,f
  6224  076E  0DA7               	rlf	___aodiv@divisor+7,f
  6225  076F  3001               	movlw	1
  6226  0770  00F2               	movwf	??___aodiv
  6227  0771  0872               	movf	??___aodiv,w
  6228  0772  07B0               	addwf	___aodiv@counter,f
  6229  0773  2F65               	goto	l3771
  6230  0774                     l3773:
  6231  0774  35B2               	lslf	___aodiv@quotient,f
  6232  0775  0DB3               	rlf	___aodiv@quotient+1,f
  6233  0776  0DB4               	rlf	___aodiv@quotient+2,f
  6234  0777  0DB5               	rlf	___aodiv@quotient+3,f
  6235  0778  0DB6               	rlf	___aodiv@quotient+4,f
  6236  0779  0DB7               	rlf	___aodiv@quotient+5,f
  6237  077A  0DB8               	rlf	___aodiv@quotient+6,f
  6238  077B  0DB9               	rlf	___aodiv@quotient+7,f
  6239  077C  0827               	movf	___aodiv@divisor+7,w
  6240  077D  022F               	subwf	___aodiv@dividend+7,w
  6241  077E  1D03               	skipz
  6242  077F  2F9A               	goto	u2865
  6243  0780  0826               	movf	___aodiv@divisor+6,w
  6244  0781  022E               	subwf	___aodiv@dividend+6,w
  6245  0782  1D03               	skipz
  6246  0783  2F9A               	goto	u2865
  6247  0784  0825               	movf	___aodiv@divisor+5,w
  6248  0785  022D               	subwf	___aodiv@dividend+5,w
  6249  0786  1D03               	skipz
  6250  0787  2F9A               	goto	u2865
  6251  0788  0824               	movf	___aodiv@divisor+4,w
  6252  0789  022C               	subwf	___aodiv@dividend+4,w
  6253  078A  1D03               	skipz
  6254  078B  2F9A               	goto	u2865
  6255  078C  0823               	movf	___aodiv@divisor+3,w
  6256  078D  022B               	subwf	___aodiv@dividend+3,w
  6257  078E  1D03               	skipz
  6258  078F  2F9A               	goto	u2865
  6259  0790  0822               	movf	___aodiv@divisor+2,w
  6260  0791  022A               	subwf	___aodiv@dividend+2,w
  6261  0792  1D03               	skipz
  6262  0793  2F9A               	goto	u2865
  6263  0794  0821               	movf	___aodiv@divisor+1,w
  6264  0795  0229               	subwf	___aodiv@dividend+1,w
  6265  0796  1D03               	skipz
  6266  0797  2F9A               	goto	u2865
  6267  0798  0820               	movf	___aodiv@divisor,w
  6268  0799  0228               	subwf	___aodiv@dividend,w
  6269  079A                     u2865:
  6270  079A  1C03               	skipc
  6271  079B  2FAD               	goto	l3781
  6272  079C  0820               	movf	___aodiv@divisor,w
  6273  079D  02A8               	subwf	___aodiv@dividend,f
  6274  079E  0821               	movf	___aodiv@divisor+1,w
  6275  079F  3BA9               	subwfb	___aodiv@dividend+1,f
  6276  07A0  0822               	movf	___aodiv@divisor+2,w
  6277  07A1  3BAA               	subwfb	___aodiv@dividend+2,f
  6278  07A2  0823               	movf	___aodiv@divisor+3,w
  6279  07A3  3BAB               	subwfb	___aodiv@dividend+3,f
  6280  07A4  0824               	movf	___aodiv@divisor+4,w
  6281  07A5  3BAC               	subwfb	___aodiv@dividend+4,f
  6282  07A6  0825               	movf	___aodiv@divisor+5,w
  6283  07A7  3BAD               	subwfb	___aodiv@dividend+5,f
  6284  07A8  0826               	movf	___aodiv@divisor+6,w
  6285  07A9  3BAE               	subwfb	___aodiv@dividend+6,f
  6286  07AA  0827               	movf	___aodiv@divisor+7,w
  6287  07AB  3BAF               	subwfb	___aodiv@dividend+7,f
  6288  07AC  1432               	bsf	___aodiv@quotient,0
  6289  07AD                     l3781:
  6290  07AD  36A7               	lsrf	___aodiv@divisor+7,f
  6291  07AE  0CA6               	rrf	___aodiv@divisor+6,f
  6292  07AF  0CA5               	rrf	___aodiv@divisor+5,f
  6293  07B0  0CA4               	rrf	___aodiv@divisor+4,f
  6294  07B1  0CA3               	rrf	___aodiv@divisor+3,f
  6295  07B2  0CA2               	rrf	___aodiv@divisor+2,f
  6296  07B3  0CA1               	rrf	___aodiv@divisor+1,f
  6297  07B4  0CA0               	rrf	___aodiv@divisor,f
  6298  07B5  3001               	movlw	1
  6299  07B6  02B0               	subwf	___aodiv@counter,f
  6300  07B7  1D03               	btfss	3,2
  6301  07B8  2F74               	goto	l3773
  6302  07B9                     l3783:
  6303  07B9  0831               	movf	___aodiv@sign,w
  6304  07BA  1903               	btfsc	3,2
  6305  07BB  2FDA               	goto	l1471
  6306  07BC  09B2               	comf	___aodiv@quotient,f
  6307  07BD  09B3               	comf	___aodiv@quotient+1,f
  6308  07BE  09B4               	comf	___aodiv@quotient+2,f
  6309  07BF  09B5               	comf	___aodiv@quotient+3,f
  6310  07C0  09B6               	comf	___aodiv@quotient+4,f
  6311  07C1  09B7               	comf	___aodiv@quotient+5,f
  6312  07C2  09B8               	comf	___aodiv@quotient+6,f
  6313  07C3  09B9               	comf	___aodiv@quotient+7,f
  6314  07C4  0AB2               	incf	___aodiv@quotient,f
  6315  07C5  1D03               	skipz
  6316  07C6  2FDA               	goto	l1471
  6317  07C7  0AB3               	incf	___aodiv@quotient+1,f
  6318  07C8  1D03               	skipz
  6319  07C9  2FDA               	goto	l1471
  6320  07CA  0AB4               	incf	___aodiv@quotient+2,f
  6321  07CB  1D03               	skipz
  6322  07CC  2FDA               	goto	l1471
  6323  07CD  0AB5               	incf	___aodiv@quotient+3,f
  6324  07CE  1D03               	skipz
  6325  07CF  2FDA               	goto	l1471
  6326  07D0  0AB6               	incf	___aodiv@quotient+4,f
  6327  07D1  1D03               	skipz
  6328  07D2  2FDA               	goto	l1471
  6329  07D3  0AB7               	incf	___aodiv@quotient+5,f
  6330  07D4  1D03               	skipz
  6331  07D5  2FDA               	goto	l1471
  6332  07D6  0AB8               	incf	___aodiv@quotient+6,f
  6333  07D7  1D03               	skipz
  6334  07D8  2FDA               	goto	l1471
  6335  07D9  0AB9               	incf	___aodiv@quotient+7,f
  6336  07DA                     l1471:
  6337  07DA  0020               	movlb	0	; select bank0
  6338  07DB  0832               	movf	___aodiv@quotient,w
  6339  07DC  00A0               	movwf	?___aodiv
  6340  07DD  0833               	movf	___aodiv@quotient+1,w
  6341  07DE  00A1               	movwf	?___aodiv+1
  6342  07DF  0834               	movf	___aodiv@quotient+2,w
  6343  07E0  00A2               	movwf	?___aodiv+2
  6344  07E1  0835               	movf	___aodiv@quotient+3,w
  6345  07E2  00A3               	movwf	?___aodiv+3
  6346  07E3  0836               	movf	___aodiv@quotient+4,w
  6347  07E4  00A4               	movwf	?___aodiv+4
  6348  07E5  0837               	movf	___aodiv@quotient+5,w
  6349  07E6  00A5               	movwf	?___aodiv+5
  6350  07E7  0838               	movf	___aodiv@quotient+6,w
  6351  07E8  00A6               	movwf	?___aodiv+6
  6352  07E9  0839               	movf	___aodiv@quotient+7,w
  6353  07EA  00A7               	movwf	?___aodiv+7
  6354  07EB  0008               	return
  6355  07EC                     __end_of___aodiv:
  6356                           
  6357                           	psect	text12
  6358  1E5E                     __ptext12:	
  6359 ;; *************** function _TX_Whole_String *****************
  6360 ;; Defined at:
  6361 ;;		line 143 in file "main.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  input_string    1    wreg     PTR unsigned char 
  6364 ;;		 -> Buff_g(20), 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  input_string    1    2[BANK0 ] PTR unsigned char 
  6367 ;;		 -> Buff_g(20), 
  6368 ;;  i               1    3[BANK0 ] unsigned char 
  6369 ;;  size_of_stri    2    0[BANK0 ] unsigned short 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      void 
  6372 ;; Registers used:
  6373 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6374 ;; Tracked objects:
  6375 ;;		On entry : 1F/1
  6376 ;;		On exit  : 1F/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6382 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;Total ram usage:        6 bytes
  6384 ;; Hardware stack levels used:    1
  6385 ;; Hardware stack levels required when called:    7
  6386 ;; This function calls:
  6387 ;;		_TX_Command
  6388 ;;		_strlen
  6389 ;; This function is called by:
  6390 ;;		_main
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           
  6395                           ;psect for function _TX_Whole_String
  6396  1E5E                     _TX_Whole_String:
  6397                           
  6398                           ;incstack = 0
  6399                           ; Regs used in _TX_Whole_String: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6400                           ;TX_Whole_String@input_string stored from wreg
  6401  1E5E  0020               	movlb	0	; select bank0
  6402  1E5F  00A2               	movwf	TX_Whole_String@input_string
  6403                           
  6404                           ;main.c: 145:     uint16_t size_of_string = strlen(input_string);
  6405  1E60  0822               	movf	TX_Whole_String@input_string,w
  6406  1E61  00F2               	movwf	strlen@s
  6407  1E62  3001               	movlw	1
  6408  1E63  00F3               	movwf	strlen@s+1
  6409  1E64  319C  244E  319E   	fcall	_strlen
  6410  1E67  0873               	movf	?_strlen+1,w
  6411  1E68  00A1               	movwf	TX_Whole_String@size_of_string+1
  6412  1E69  0872               	movf	?_strlen,w
  6413  1E6A  00A0               	movwf	TX_Whole_String@size_of_string
  6414                           
  6415                           ;main.c: 147:     for (uint8_t i = 0; i < size_of_string; i++){
  6416  1E6B  01A3               	clrf	TX_Whole_String@i
  6417  1E6C                     l6455:
  6418  1E6C  0823               	movf	TX_Whole_String@i,w
  6419  1E6D  00F6               	movwf	??_TX_Whole_String
  6420  1E6E  01F7               	clrf	??_TX_Whole_String+1
  6421  1E6F  0821               	movf	TX_Whole_String@size_of_string+1,w
  6422  1E70  0277               	subwf	??_TX_Whole_String+1,w
  6423  1E71  1D03               	skipz
  6424  1E72  2E75               	goto	u7125
  6425  1E73  0820               	movf	TX_Whole_String@size_of_string,w
  6426  1E74  0276               	subwf	??_TX_Whole_String,w
  6427  1E75                     u7125:
  6428  1E75  1803               	btfsc	3,0
  6429  1E76  0008               	return
  6430                           
  6431                           ;main.c: 149:         TX_Command(input_string[i]);
  6432  1E77  0823               	movf	TX_Whole_String@i,w
  6433  1E78  0722               	addwf	TX_Whole_String@input_string,w
  6434  1E79  00F6               	movwf	??_TX_Whole_String
  6435  1E7A  0876               	movf	??_TX_Whole_String,w
  6436  1E7B  0086               	movwf	6
  6437  1E7C  3001               	movlw	1	; select bank2/3
  6438  1E7D  0087               	movwf	7
  6439  1E7E  0801               	movf	1,w
  6440  1E7F  319B  232E  319E   	fcall	_TX_Command
  6441                           
  6442                           ;main.c: 150:         _delay((unsigned long)((5)*(8000000/4000.0)));
  6443  1E82  300D               	movlw	13
  6444  1E83  00F6               	movwf	??_TX_Whole_String
  6445  1E84  30FC               	movlw	252
  6446  1E85                     u7147:
  6447  1E85  0B89               	decfsz	9,f
  6448  1E86  2E85               	goto	u7147
  6449  1E87  0BF6               	decfsz	??_TX_Whole_String,f
  6450  1E88  2E85               	goto	u7147
  6451                           
  6452                           ;main.c: 152:     }
  6453  1E89  3001               	movlw	1
  6454  1E8A  00F6               	movwf	??_TX_Whole_String
  6455  1E8B  0876               	movf	??_TX_Whole_String,w
  6456  1E8C  0020               	movlb	0	; select bank0
  6457  1E8D  07A3               	addwf	TX_Whole_String@i,f
  6458  1E8E  2E6C               	goto	l6455
  6459  1E8F                     __end_of_TX_Whole_String:
  6460                           
  6461                           	psect	text13
  6462  1C4E                     __ptext13:	
  6463 ;; *************** function _strlen *****************
  6464 ;; Defined at:
  6465 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strlen.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  s               2    2[COMMON] PTR const unsigned char 
  6468 ;;		 -> dbuf(32), Buff_g(20), 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  a               2    4[COMMON] PTR const unsigned char 
  6471 ;;		 -> dbuf(32), Buff_g(20), 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  2    2[COMMON] unsigned int 
  6474 ;; Registers used:
  6475 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6476 ;; Tracked objects:
  6477 ;;		On entry : 1F/0
  6478 ;;		On exit  : 1F/0
  6479 ;;		Unchanged: 1F/0
  6480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6482 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6484 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6485 ;;Total ram usage:        4 bytes
  6486 ;; Hardware stack levels used:    1
  6487 ;; Hardware stack levels required when called:    5
  6488 ;; This function calls:
  6489 ;;		Nothing
  6490 ;; This function is called by:
  6491 ;;		_TX_Whole_String
  6492 ;;		_pad
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           
  6497                           ;psect for function _strlen
  6498  1C4E                     _strlen:
  6499                           
  6500                           ;incstack = 0
  6501                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6502  1C4E  0873               	movf	strlen@s+1,w
  6503  1C4F  00F5               	movwf	strlen@a+1
  6504  1C50  0872               	movf	strlen@s,w
  6505  1C51  00F4               	movwf	strlen@a
  6506  1C52                     l5335:
  6507  1C52  0872               	movf	strlen@s,w
  6508  1C53  0086               	movwf	6
  6509  1C54  0873               	movf	strlen@s+1,w
  6510  1C55  0087               	movwf	7
  6511  1C56  0801               	movf	1,w
  6512  1C57  1903               	btfsc	3,2
  6513  1C58  2C5E               	goto	l5337
  6514  1C59  3001               	movlw	1
  6515  1C5A  07F2               	addwf	strlen@s,f
  6516  1C5B  3000               	movlw	0
  6517  1C5C  3DF3               	addwfc	strlen@s+1,f
  6518  1C5D  2C52               	goto	l5335
  6519  1C5E                     l5337:
  6520  1C5E  0874               	movf	strlen@a,w
  6521  1C5F  0272               	subwf	strlen@s,w
  6522  1C60  00F2               	movwf	?_strlen
  6523  1C61  0875               	movf	strlen@a+1,w
  6524  1C62  3B73               	subwfb	strlen@s+1,w
  6525  1C63  00F3               	movwf	?_strlen+1
  6526  1C64  0008               	return
  6527  1C65                     __end_of_strlen:
  6528                           
  6529                           	psect	text14
  6530  1B2E                     __ptext14:	
  6531 ;; *************** function _TX_Command *****************
  6532 ;; Defined at:
  6533 ;;		line 134 in file "main.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;  txData          1    wreg     unsigned char 
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;  txData          1    3[COMMON] unsigned char 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  1    wreg      void 
  6540 ;; Registers used:
  6541 ;;		wreg, status,2, status,0, pclath, cstack
  6542 ;; Tracked objects:
  6543 ;;		On entry : 1F/0
  6544 ;;		On exit  : 1C/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6551 ;;Total ram usage:        1 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    6
  6554 ;; This function calls:
  6555 ;;		_EUSART_Write
  6556 ;;		_EUSART_is_tx_ready
  6557 ;; This function is called by:
  6558 ;;		_TX_Whole_String
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           
  6563                           ;psect for function _TX_Command
  6564  1B2E                     _TX_Command:
  6565                           
  6566                           ;incstack = 0
  6567                           ; Regs used in _TX_Command: [wreg+status,2+status,0+pclath+cstack]
  6568                           ;TX_Command@txData stored from wreg
  6569  1B2E  00F3               	movwf	TX_Command@txData
  6570                           
  6571                           ;main.c: 136:     if (EUSART_is_tx_ready()) {
  6572  1B2F  319B  2324  319B   	fcall	_EUSART_is_tx_ready
  6573  1B32  3A00               	xorlw	0
  6574  1B33  1903               	skipnz
  6575  1B34  0008               	return
  6576                           
  6577                           ;main.c: 138:         EUSART_Write(txData);
  6578  1B35  0873               	movf	TX_Command@txData,w
  6579  1B36  3190  2001         	fcall	_EUSART_Write
  6580  1B38  0008               	return
  6581  1B39                     __end_of_TX_Command:
  6582                           
  6583                           	psect	text15
  6584  1B24                     __ptext15:	
  6585 ;; *************** function _EUSART_is_tx_ready *****************
  6586 ;; Defined at:
  6587 ;;		line 94 in file "mcc_generated_files/eusart.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;		None
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;		None
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  1    wreg      _Bool 
  6594 ;; Registers used:
  6595 ;;		wreg, status,2
  6596 ;; Tracked objects:
  6597 ;;		On entry : 1F/0
  6598 ;;		On exit  : 1C/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6605 ;;Total ram usage:        1 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; Hardware stack levels required when called:    5
  6608 ;; This function calls:
  6609 ;;		Nothing
  6610 ;; This function is called by:
  6611 ;;		_TX_Command
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           
  6616                           ;psect for function _EUSART_is_tx_ready
  6617  1B24                     _EUSART_is_tx_ready:
  6618                           
  6619                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
  6620                           
  6621                           ;incstack = 0
  6622                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  6623  1B24  01F2               	clrf	_EUSART_is_tx_ready$1174
  6624  1B25  1E11               	btfss	17,4	;volatile
  6625  1B26  2B2C               	goto	l4579
  6626  1B27  0023               	movlb	3	; select bank3
  6627  1B28  1E9E               	btfss	30,5	;volatile
  6628  1B29  2B2C               	goto	l4579
  6629  1B2A  01F2               	clrf	_EUSART_is_tx_ready$1174
  6630  1B2B  0AF2               	incf	_EUSART_is_tx_ready$1174,f
  6631  1B2C                     l4579:
  6632  1B2C  0872               	movf	_EUSART_is_tx_ready$1174,w
  6633  1B2D  0008               	return
  6634  1B2E                     __end_of_EUSART_is_tx_ready:
  6635                           
  6636                           	psect	text16
  6637  1001                     __ptext16:	
  6638 ;; *************** function _EUSART_Write *****************
  6639 ;; Defined at:
  6640 ;;		line 132 in file "mcc_generated_files/eusart.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  txData          1    wreg     unsigned char 
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;  txData          1    2[COMMON] unsigned char 
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  1    wreg      void 
  6647 ;; Registers used:
  6648 ;;		wreg
  6649 ;; Tracked objects:
  6650 ;;		On entry : 1C/0
  6651 ;;		On exit  : 1F/3
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6658 ;;Total ram usage:        1 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:    5
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		_TX_Command
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           
  6669                           ;psect for function _EUSART_Write
  6670  1001                     _EUSART_Write:
  6671                           
  6672                           ;incstack = 0
  6673                           ; Regs used in _EUSART_Write: [wreg]
  6674                           ;EUSART_Write@txData stored from wreg
  6675  1001  00F2               	movwf	EUSART_Write@txData
  6676  1002                     l672:	
  6677                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  6678                           
  6679                           
  6680                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  6681  1002  0020               	movlb	0	; select bank0
  6682  1003  1E11               	btfss	17,4	;volatile
  6683  1004  2802               	goto	l672
  6684                           
  6685                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  6686  1005  0872               	movf	EUSART_Write@txData,w
  6687  1006  0023               	movlb	3	; select bank3
  6688  1007  009A               	movwf	26	;volatile
  6689  1008  0008               	return
  6690  1009                     __end_of_EUSART_Write:
  6691                           
  6692                           	psect	text17
  6693  1CF9                     __ptext17:	
  6694 ;; *************** function _SYSTEM_Initialize *****************
  6695 ;; Defined at:
  6696 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      void 
  6703 ;; Registers used:
  6704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6705 ;; Tracked objects:
  6706 ;;		On entry : 1F/2
  6707 ;;		On exit  : 1F/1
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6714 ;;Total ram usage:        0 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; Hardware stack levels required when called:   10
  6717 ;; This function calls:
  6718 ;;		_ADC_Initialize
  6719 ;;		_EUSART_Initialize
  6720 ;;		_MTOUCH_Initialize
  6721 ;;		_OSCILLATOR_Initialize
  6722 ;;		_PIN_MANAGER_Initialize
  6723 ;;		_TMR1_Initialize
  6724 ;;		_TMR2_Initialize
  6725 ;;		_TMR4_Initialize
  6726 ;;		_WDT_Initialize
  6727 ;; This function is called by:
  6728 ;;		_main
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           
  6733                           ;psect for function _SYSTEM_Initialize
  6734  1CF9                     _SYSTEM_Initialize:
  6735                           
  6736                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6737                           
  6738                           ;incstack = 0
  6739                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6740  1CF9  319D  25B8  319C   	fcall	_PIN_MANAGER_Initialize
  6741                           
  6742                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6743  1CFC  319A  22F7  319C   	fcall	_OSCILLATOR_Initialize
  6744                           
  6745                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  6746  1CFF  319A  2296  319C   	fcall	_WDT_Initialize
  6747                           
  6748                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  6749  1D02  319A  22F0  319C   	fcall	_ADC_Initialize
  6750                           
  6751                           ;mcc_generated_files/mcc.c: 57:     TMR4_Initialize();
  6752  1D05  319C  2413  319C   	fcall	_TMR4_Initialize
  6753                           
  6754                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  6755  1D08  319B  23AD  319C   	fcall	_TMR2_Initialize
  6756                           
  6757                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  6758  1D0B  319C  24C6  319C   	fcall	_TMR1_Initialize
  6759                           
  6760                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
  6761  1D0E  319D  2550  319C   	fcall	_EUSART_Initialize
  6762                           
  6763                           ;mcc_generated_files/mcc.c: 61:     MTOUCH_Initialize();
  6764  1D11  319B  2368         	fcall	_MTOUCH_Initialize
  6765  1D13  0008               	return
  6766  1D14                     __end_of_SYSTEM_Initialize:
  6767                           
  6768                           	psect	text18
  6769  1A96                     __ptext18:	
  6770 ;; *************** function _WDT_Initialize *****************
  6771 ;; Defined at:
  6772 ;;		line 74 in file "mcc_generated_files/mcc.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;		None
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;		None
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1    wreg      void 
  6779 ;; Registers used:
  6780 ;;		wreg
  6781 ;; Tracked objects:
  6782 ;;		On entry : 1F/2
  6783 ;;		On exit  : 1F/1
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6790 ;;Total ram usage:        0 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; Hardware stack levels required when called:    5
  6793 ;; This function calls:
  6794 ;;		Nothing
  6795 ;; This function is called by:
  6796 ;;		_SYSTEM_Initialize
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           
  6801                           ;psect for function _WDT_Initialize
  6802  1A96                     _WDT_Initialize:
  6803                           
  6804                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x16;
  6805                           
  6806                           ;incstack = 0
  6807                           ; Regs used in _WDT_Initialize: [wreg]
  6808  1A96  3016               	movlw	22
  6809  1A97  0021               	movlb	1	; select bank1
  6810  1A98  0097               	movwf	23	;volatile
  6811  1A99  0008               	return
  6812  1A9A                     __end_of_WDT_Initialize:
  6813                           
  6814                           	psect	text19
  6815  1C13                     __ptext19:	
  6816 ;; *************** function _TMR4_Initialize *****************
  6817 ;; Defined at:
  6818 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;		None
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  1    wreg      void 
  6825 ;; Registers used:
  6826 ;;		wreg, status,2, status,0, pclath, cstack
  6827 ;; Tracked objects:
  6828 ;;		On entry : 1F/1
  6829 ;;		On exit  : 1F/8
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6836 ;;Total ram usage:        0 bytes
  6837 ;; Hardware stack levels used:    1
  6838 ;; Hardware stack levels required when called:    6
  6839 ;; This function calls:
  6840 ;;		_TMR4_SetInterruptHandler
  6841 ;; This function is called by:
  6842 ;;		_SYSTEM_Initialize
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           
  6847                           ;psect for function _TMR4_Initialize
  6848  1C13                     _TMR4_Initialize:
  6849                           
  6850                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0x7C;
  6851                           
  6852                           ;incstack = 0
  6853                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6854  1C13  307C               	movlw	124
  6855  1C14  0028               	movlb	8	; select bank8
  6856  1C15  0096               	movwf	22	;volatile
  6857                           
  6858                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  6859  1C16  0195               	clrf	21	;volatile
  6860                           
  6861                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  6862  1C17  0020               	movlb	0	; select bank0
  6863  1C18  1093               	bcf	19,1	;volatile
  6864                           
  6865                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  6866  1C19  0021               	movlb	1	; select bank1
  6867  1C1A  1493               	bsf	19,1	;volatile
  6868                           
  6869                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  6870  1C1B  3000               	movlw	low _TMR4_DefaultInterruptHandler
  6871  1C1C  00F2               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  6872  1C1D  3008               	movlw	high _TMR4_DefaultInterruptHandler
  6873  1C1E  00F3               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  6874  1C1F  319A  22D7         	fcall	_TMR4_SetInterruptHandler
  6875                           
  6876                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x02;
  6877  1C21  3002               	movlw	2
  6878  1C22  0028               	movlb	8	; select bank8
  6879  1C23  0097               	movwf	23	;volatile
  6880  1C24  0008               	return
  6881  1C25                     __end_of_TMR4_Initialize:
  6882                           
  6883                           	psect	text20
  6884  1AD7                     __ptext20:	
  6885 ;; *************** function _TMR4_SetInterruptHandler *****************
  6886 ;; Defined at:
  6887 ;;		line 132 in file "mcc_generated_files/tmr4.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  6890 ;;		 -> TMR4_Wroking_Blink_AlarmLED_isr(1), TMR4_DefaultInterruptHandler(1), 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;		None
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  1    wreg      void 
  6895 ;; Registers used:
  6896 ;;		wreg
  6897 ;; Tracked objects:
  6898 ;;		On entry : 1D/3
  6899 ;;		On exit  : 1F/3
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6906 ;;Total ram usage:        2 bytes
  6907 ;; Hardware stack levels used:    1
  6908 ;; Hardware stack levels required when called:    5
  6909 ;; This function calls:
  6910 ;;		Nothing
  6911 ;; This function is called by:
  6912 ;;		_TMR4_Initialize
  6913 ;;		_main
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917                           
  6918                           ;psect for function _TMR4_SetInterruptHandler
  6919  1AD7                     _TMR4_SetInterruptHandler:
  6920                           
  6921                           ;mcc_generated_files/tmr4.c: 133:     TMR4_InterruptHandler = InterruptHandler;
  6922                           
  6923                           ;incstack = 0
  6924                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  6925  1AD7  0873               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
  6926  1AD8  0023               	movlb	3	; select bank3
  6927  1AD9  00D1               	movwf	(_TMR4_InterruptHandler+1)^(0+384)
  6928  1ADA  0872               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
  6929  1ADB  00D0               	movwf	_TMR4_InterruptHandler^(0+384)
  6930  1ADC  0008               	return
  6931  1ADD                     __end_of_TMR4_SetInterruptHandler:
  6932                           
  6933                           	psect	text21
  6934  1BAD                     __ptext21:	
  6935 ;; *************** function _TMR2_Initialize *****************
  6936 ;; Defined at:
  6937 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;		None
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;		None
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      void 
  6944 ;; Registers used:
  6945 ;;		wreg, status,2, status,0, pclath, cstack
  6946 ;; Tracked objects:
  6947 ;;		On entry : 1F/8
  6948 ;;		On exit  : 1F/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6955 ;;Total ram usage:        0 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    6
  6958 ;; This function calls:
  6959 ;;		_TMR2_SetInterruptHandler
  6960 ;; This function is called by:
  6961 ;;		_SYSTEM_Initialize
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           
  6966                           ;psect for function _TMR2_Initialize
  6967  1BAD                     _TMR2_Initialize:
  6968                           
  6969                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xC7;
  6970                           
  6971                           ;incstack = 0
  6972                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6973  1BAD  30C7               	movlw	199
  6974  1BAE  0020               	movlb	0	; select bank0
  6975  1BAF  009B               	movwf	27	;volatile
  6976                           
  6977                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  6978  1BB0  019A               	clrf	26	;volatile
  6979                           
  6980                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  6981  1BB1  1091               	bcf	17,1	;volatile
  6982                           
  6983                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  6984  1BB2  0021               	movlb	1	; select bank1
  6985  1BB3  1491               	bsf	17,1	;volatile
  6986                           
  6987                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  6988  1BB4  3000               	movlw	low _TMR2_DefaultInterruptHandler
  6989  1BB5  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  6990  1BB6  3010               	movlw	high _TMR2_DefaultInterruptHandler
  6991  1BB7  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  6992  1BB8  319A  22D1         	fcall	_TMR2_SetInterruptHandler
  6993                           
  6994                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x00;
  6995  1BBA  0020               	movlb	0	; select bank0
  6996  1BBB  019C               	clrf	28	;volatile
  6997  1BBC  0008               	return
  6998  1BBD                     __end_of_TMR2_Initialize:
  6999                           
  7000                           	psect	text22
  7001  1AD1                     __ptext22:	
  7002 ;; *************** function _TMR2_SetInterruptHandler *****************
  7003 ;; Defined at:
  7004 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  7007 ;;		 -> TMR2_Drive_TRIAC_isr(1), TMR2_DefaultInterruptHandler(1), 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      void 
  7012 ;; Registers used:
  7013 ;;		wreg
  7014 ;; Tracked objects:
  7015 ;;		On entry : 1D/3
  7016 ;;		On exit  : 1F/3
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7023 ;;Total ram usage:        2 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:    5
  7026 ;; This function calls:
  7027 ;;		Nothing
  7028 ;; This function is called by:
  7029 ;;		_TMR2_Initialize
  7030 ;;		_main
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           
  7035                           ;psect for function _TMR2_SetInterruptHandler
  7036  1AD1                     _TMR2_SetInterruptHandler:
  7037                           
  7038                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  7039                           
  7040                           ;incstack = 0
  7041                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  7042  1AD1  0873               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  7043  1AD2  0023               	movlb	3	; select bank3
  7044  1AD3  00D3               	movwf	(_TMR2_InterruptHandler+1)^(0+384)
  7045  1AD4  0872               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  7046  1AD5  00D2               	movwf	_TMR2_InterruptHandler^(0+384)
  7047  1AD6  0008               	return
  7048  1AD7                     __end_of_TMR2_SetInterruptHandler:
  7049                           
  7050                           	psect	text23
  7051  1CC6                     __ptext23:	
  7052 ;; *************** function _TMR1_Initialize *****************
  7053 ;; Defined at:
  7054 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;		None
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;		None
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  1    wreg      void 
  7061 ;; Registers used:
  7062 ;;		wreg, status,2, status,0, pclath, cstack
  7063 ;; Tracked objects:
  7064 ;;		On entry : 1F/0
  7065 ;;		On exit  : 1F/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7072 ;;Total ram usage:        0 bytes
  7073 ;; Hardware stack levels used:    1
  7074 ;; Hardware stack levels required when called:    6
  7075 ;; This function calls:
  7076 ;;		_TMR1_SetInterruptHandler
  7077 ;; This function is called by:
  7078 ;;		_SYSTEM_Initialize
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           
  7083                           ;psect for function _TMR1_Initialize
  7084  1CC6                     _TMR1_Initialize:
  7085                           
  7086                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7087                           
  7088                           ;incstack = 0
  7089                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7090  1CC6  0199               	clrf	25	;volatile
  7091                           
  7092                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x0B;
  7093  1CC7  300B               	movlw	11
  7094  1CC8  0097               	movwf	23	;volatile
  7095                           
  7096                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xDC;
  7097  1CC9  30DC               	movlw	220
  7098  1CCA  0096               	movwf	22	;volatile
  7099                           
  7100                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  7101  1CCB  1011               	bcf	17,0	;volatile
  7102                           
  7103                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7104  1CCC  0817               	movf	23,w	;volatile
  7105  1CCD  0023               	movlb	3	; select bank3
  7106  1CCE  00CF               	movwf	(_timer1ReloadVal+1)^(0+384)	;volatile
  7107  1CCF  0020               	movlb	0	; select bank0
  7108  1CD0  0816               	movf	22,w	;volatile
  7109  1CD1  0023               	movlb	3	; select bank3
  7110  1CD2  00CE               	movwf	_timer1ReloadVal^(0+384)	;volatile
  7111                           
  7112                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  7113  1CD3  0021               	movlb	1	; select bank1
  7114  1CD4  1411               	bsf	17,0	;volatile
  7115                           
  7116                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  7117  1CD5  3086               	movlw	low _TMR1_DefaultInterruptHandler
  7118  1CD6  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7119  1CD7  301A               	movlw	high _TMR1_DefaultInterruptHandler
  7120  1CD8  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7121  1CD9  319A  22CB         	fcall	_TMR1_SetInterruptHandler
  7122                           
  7123                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  7124  1CDB  3031               	movlw	49
  7125  1CDC  0020               	movlb	0	; select bank0
  7126  1CDD  0098               	movwf	24	;volatile
  7127  1CDE  0008               	return
  7128  1CDF                     __end_of_TMR1_Initialize:
  7129                           
  7130                           	psect	text24
  7131  1ACB                     __ptext24:	
  7132 ;; *************** function _TMR1_SetInterruptHandler *****************
  7133 ;; Defined at:
  7134 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  7137 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR1_Generate_Delay_ms_isr(1), 
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;		None
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  1    wreg      void 
  7142 ;; Registers used:
  7143 ;;		wreg
  7144 ;; Tracked objects:
  7145 ;;		On entry : 1D/3
  7146 ;;		On exit  : 1F/3
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7153 ;;Total ram usage:        2 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; Hardware stack levels required when called:    5
  7156 ;; This function calls:
  7157 ;;		Nothing
  7158 ;; This function is called by:
  7159 ;;		_main
  7160 ;;		_TMR1_Initialize
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           
  7165                           ;psect for function _TMR1_SetInterruptHandler
  7166  1ACB                     _TMR1_SetInterruptHandler:
  7167                           
  7168                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  7169                           
  7170                           ;incstack = 0
  7171                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  7172  1ACB  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  7173  1ACC  0023               	movlb	3	; select bank3
  7174  1ACD  00CD               	movwf	(_TMR1_InterruptHandler+1)^(0+384)
  7175  1ACE  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  7176  1ACF  00CC               	movwf	_TMR1_InterruptHandler^(0+384)
  7177  1AD0  0008               	return
  7178  1AD1                     __end_of_TMR1_SetInterruptHandler:
  7179                           
  7180                           	psect	text25
  7181  1DB8                     __ptext25:	
  7182 ;; *************** function _PIN_MANAGER_Initialize *****************
  7183 ;; Defined at:
  7184 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;		None
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;		None
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  1    wreg      void 
  7191 ;; Registers used:
  7192 ;;		wreg, status,2, status,0, pclath, cstack
  7193 ;; Tracked objects:
  7194 ;;		On entry : 1F/2
  7195 ;;		On exit  : 1F/3
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7202 ;;Total ram usage:        0 bytes
  7203 ;; Hardware stack levels used:    1
  7204 ;; Hardware stack levels required when called:    6
  7205 ;; This function calls:
  7206 ;;		_IOCAF2_SetInterruptHandler
  7207 ;; This function is called by:
  7208 ;;		_SYSTEM_Initialize
  7209 ;; This function uses a non-reentrant model
  7210 ;;
  7211                           
  7212                           
  7213                           ;psect for function _PIN_MANAGER_Initialize
  7214  1DB8                     _PIN_MANAGER_Initialize:
  7215                           
  7216                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7217                           
  7218                           ;incstack = 0
  7219                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7220  1DB8  018C               	clrf	12	;volatile
  7221                           
  7222                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7223  1DB9  018D               	clrf	13	;volatile
  7224                           
  7225                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7226  1DBA  018E               	clrf	14	;volatile
  7227                           
  7228                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x2F;
  7229  1DBB  302F               	movlw	47
  7230  1DBC  0021               	movlb	1	; select bank1
  7231  1DBD  008C               	movwf	12	;volatile
  7232                           
  7233                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
  7234  1DBE  3070               	movlw	112
  7235  1DBF  008D               	movwf	13	;volatile
  7236                           
  7237                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x03;
  7238  1DC0  3003               	movlw	3
  7239  1DC1  008E               	movwf	14	;volatile
  7240                           
  7241                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x03;
  7242  1DC2  3003               	movlw	3
  7243  1DC3  0023               	movlb	3	; select bank3
  7244  1DC4  008E               	movwf	14	;volatile
  7245                           
  7246                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x10;
  7247  1DC5  3010               	movlw	16
  7248  1DC6  008D               	movwf	13	;volatile
  7249                           
  7250                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x03;
  7251  1DC7  3003               	movlw	3
  7252  1DC8  008C               	movwf	12	;volatile
  7253                           
  7254                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  7255  1DC9  0024               	movlb	4	; select bank4
  7256  1DCA  018D               	clrf	13	;volatile
  7257                           
  7258                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x04;
  7259  1DCB  3004               	movlw	4
  7260  1DCC  008C               	movwf	12	;volatile
  7261                           
  7262                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  7263  1DCD  018E               	clrf	14	;volatile
  7264                           
  7265                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 0;
  7266  1DCE  0021               	movlb	1	; select bank1
  7267  1DCF  1395               	bcf	21,7	;volatile
  7268                           
  7269                           ;mcc_generated_files/pin_manager.c: 92:     APFCON0 = 0x00;
  7270  1DD0  0022               	movlb	2	; select bank2
  7271  1DD1  019D               	clrf	29	;volatile
  7272                           
  7273                           ;mcc_generated_files/pin_manager.c: 93:     APFCON1 = 0x00;
  7274  1DD2  019E               	clrf	30	;volatile
  7275                           
  7276                           ;mcc_generated_files/pin_manager.c: 99:     IOCAFbits.IOCAF2 = 0;
  7277  1DD3  0027               	movlb	7	; select bank7
  7278  1DD4  1113               	bcf	19,2	;volatile
  7279                           
  7280                           ;mcc_generated_files/pin_manager.c: 101:     IOCANbits.IOCAN2 = 0;
  7281  1DD5  1112               	bcf	18,2	;volatile
  7282                           
  7283                           ;mcc_generated_files/pin_manager.c: 103:     IOCAPbits.IOCAP2 = 1;
  7284  1DD6  1511               	bsf	17,2	;volatile
  7285                           
  7286                           ;mcc_generated_files/pin_manager.c: 108:     IOCAF2_SetInterruptHandler(IOCAF2_DefaultIn
      +                          terruptHandler);
  7287  1DD7  3085               	movlw	low _IOCAF2_DefaultInterruptHandler
  7288  1DD8  00F2               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
  7289  1DD9  301A               	movlw	high _IOCAF2_DefaultInterruptHandler
  7290  1DDA  00F3               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
  7291  1DDB  319A  22C5         	fcall	_IOCAF2_SetInterruptHandler
  7292                           
  7293                           ;mcc_generated_files/pin_manager.c: 111:     INTCONbits.IOCIE = 1;
  7294  1DDD  158B               	bsf	11,3	;volatile
  7295  1DDE  0008               	return
  7296  1DDF                     __end_of_PIN_MANAGER_Initialize:
  7297                           
  7298                           	psect	text26
  7299  1AC5                     __ptext26:	
  7300 ;; *************** function _IOCAF2_SetInterruptHandler *****************
  7301 ;; Defined at:
  7302 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  7305 ;;		 -> Zero_Detection_isr(1), IOCAF2_DefaultInterruptHandler(1), 
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;		None
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  1    wreg      void 
  7310 ;; Registers used:
  7311 ;;		wreg
  7312 ;; Tracked objects:
  7313 ;;		On entry : 19/1
  7314 ;;		On exit  : 1F/3
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7320 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7321 ;;Total ram usage:        2 bytes
  7322 ;; Hardware stack levels used:    1
  7323 ;; Hardware stack levels required when called:    5
  7324 ;; This function calls:
  7325 ;;		Nothing
  7326 ;; This function is called by:
  7327 ;;		_PIN_MANAGER_Initialize
  7328 ;;		_main
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           
  7333                           ;psect for function _IOCAF2_SetInterruptHandler
  7334  1AC5                     _IOCAF2_SetInterruptHandler:
  7335                           
  7336                           ;mcc_generated_files/pin_manager.c: 143:     IOCAF2_InterruptHandler = InterruptHandler;
  7337                           
  7338                           ;incstack = 0
  7339                           ; Regs used in _IOCAF2_SetInterruptHandler: [wreg]
  7340  1AC5  0873               	movf	IOCAF2_SetInterruptHandler@InterruptHandler+1,w
  7341  1AC6  0023               	movlb	3	; select bank3
  7342  1AC7  00DB               	movwf	(_IOCAF2_InterruptHandler+1)^(0+384)
  7343  1AC8  0872               	movf	IOCAF2_SetInterruptHandler@InterruptHandler,w
  7344  1AC9  00DA               	movwf	_IOCAF2_InterruptHandler^(0+384)
  7345  1ACA  0008               	return
  7346  1ACB                     __end_of_IOCAF2_SetInterruptHandler:
  7347                           
  7348                           	psect	text27
  7349  1AF7                     __ptext27:	
  7350 ;; *************** function _OSCILLATOR_Initialize *****************
  7351 ;; Defined at:
  7352 ;;		line 64 in file "mcc_generated_files/mcc.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1    wreg      void 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2
  7361 ;; Tracked objects:
  7362 ;;		On entry : 1F/3
  7363 ;;		On exit  : 1F/2
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7370 ;;Total ram usage:        0 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    5
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_SYSTEM_Initialize
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           
  7381                           ;psect for function _OSCILLATOR_Initialize
  7382  1AF7                     _OSCILLATOR_Initialize:
  7383                           
  7384                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x70;
  7385                           
  7386                           ;incstack = 0
  7387                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7388  1AF7  3070               	movlw	112
  7389  1AF8  0021               	movlb	1	; select bank1
  7390  1AF9  0099               	movwf	25	;volatile
  7391                           
  7392                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  7393  1AFA  0198               	clrf	24	;volatile
  7394                           
  7395                           ;mcc_generated_files/mcc.c: 71:     BORCON = 0x00;
  7396  1AFB  0022               	movlb	2	; select bank2
  7397  1AFC  0196               	clrf	22	;volatile
  7398  1AFD  0008               	return
  7399  1AFE                     __end_of_OSCILLATOR_Initialize:
  7400                           
  7401                           	psect	text28
  7402  1B68                     __ptext28:	
  7403 ;; *************** function _MTOUCH_Initialize *****************
  7404 ;; Defined at:
  7405 ;;		line 81 in file "mcc_generated_files/mtouch/mtouch.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;		None
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1    wreg      void 
  7412 ;; Registers used:
  7413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7414 ;; Tracked objects:
  7415 ;;		On entry : 1F/2
  7416 ;;		On exit  : 1F/1
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7423 ;;Total ram usage:        0 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:    9
  7426 ;; This function calls:
  7427 ;;		_MTOUCH_Button_InitializeAll
  7428 ;;		_MTOUCH_Sensor_InitializeAll
  7429 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  7430 ;;		_MTOUCH_Sensor_Scan_Initialize
  7431 ;; This function is called by:
  7432 ;;		_SYSTEM_Initialize
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           
  7437                           ;psect for function _MTOUCH_Initialize
  7438  1B68                     _MTOUCH_Initialize:
  7439                           
  7440                           ;mcc_generated_files/mtouch/mtouch.c: 83:     MTOUCH_Sensor_InitializeAll();
  7441                           
  7442                           ;incstack = 0
  7443                           ; Regs used in _MTOUCH_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7444  1B68  319B  239D  319B   	fcall	_MTOUCH_Sensor_InitializeAll
  7445                           
  7446                           ;mcc_generated_files/mtouch/mtouch.c: 84:     MTOUCH_Button_InitializeAll();
  7447  1B6B  319C  24DF  319B   	fcall	_MTOUCH_Button_InitializeAll
  7448                           
  7449                           ;mcc_generated_files/mtouch/mtouch.c: 85:     MTOUCH_Sensor_Sampled_ResetAll();
  7450  1B6E  319C  2425  319B   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  7451                           
  7452                           ;mcc_generated_files/mtouch/mtouch.c: 86:     MTOUCH_Sensor_Scan_Initialize();
  7453  1B71  319A  22AE         	fcall	_MTOUCH_Sensor_Scan_Initialize
  7454  1B73  0008               	return
  7455  1B74                     __end_of_MTOUCH_Initialize:
  7456                           
  7457                           	psect	text29
  7458  1AAE                     __ptext29:	
  7459 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  7460 ;; Defined at:
  7461 ;;		line 172 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;		None
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;		None
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      void 
  7468 ;; Registers used:
  7469 ;;		wreg, status,2
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 1F/1
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;Total ram usage:        0 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; Hardware stack levels required when called:    5
  7482 ;; This function calls:
  7483 ;;		Nothing
  7484 ;; This function is called by:
  7485 ;;		_MTOUCH_Initialize
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           
  7490                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
  7491  1AAE                     _MTOUCH_Sensor_Scan_Initialize:
  7492                           
  7493                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 175:     ADCON0 = (uint8_t)0;
  7494                           
  7495                           ;incstack = 0
  7496                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2]
  7497  1AAE  0021               	movlb	1	; select bank1
  7498  1AAF  019D               	clrf	29	;volatile
  7499                           
  7500                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 176:     ADCON1 = (uint8_t)( 0x1<<7 | 0x1<<
      +                          4 | 0x0 );
  7501  1AB0  3090               	movlw	144
  7502  1AB1  009E               	movwf	30	;volatile
  7503  1AB2  0008               	return
  7504  1AB3                     __end_of_MTOUCH_Sensor_Scan_Initialize:
  7505                           
  7506                           	psect	text30
  7507  1C25                     __ptext30:	
  7508 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  7509 ;; Defined at:
  7510 ;;		line 547 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;		None
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  sensor          1    4[COMMON] PTR struct .
  7515 ;;		 -> mtouch_sensor(18), 
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      void 
  7518 ;; Registers used:
  7519 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;Total ram usage:        2 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; Hardware stack levels required when called:    6
  7532 ;; This function calls:
  7533 ;;		_Sensor_Sampled_Reset
  7534 ;; This function is called by:
  7535 ;;		_MTOUCH_Initialize
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           
  7540                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
  7541  1C25                     _MTOUCH_Sensor_Sampled_ResetAll:
  7542                           
  7543                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 549:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 550:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[(2u)-1];sensor++)
  7544                           
  7545                           ;incstack = 0
  7546                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  7547  1C25  30A6               	movlw	(low (_mtouch_sensor| (0+256)))& (0+255)
  7548  1C26  00F3               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  7549  1C27  0873               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  7550  1C28  00F4               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
  7551  1C29                     L2:
  7552  1C29  30AF               	movlw	(low ((_mtouch_sensor| (0+256)+9)))& (0+255)
  7553  1C2A  00F3               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  7554  1C2B  0874               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  7555  1C2C  0273               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  7556  1C2D  1C03               	btfss	3,0
  7557  1C2E  0008               	return
  7558                           
  7559                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 551:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 552:         Sensor_Sampled_Reset(sensor);
  7560  1C2F  0874               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  7561  1C30  319A  22FE  319C   	fcall	_Sensor_Sampled_Reset
  7562                           
  7563                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 553:     }
  7564  1C33  3009               	movlw	9
  7565  1C34  00F3               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  7566  1C35  0873               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  7567  1C36  07F4               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
  7568  1C37  2C29               	goto	L2
  7569  1C38                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:
  7570                           
  7571                           	psect	text31
  7572  1B9D                     __ptext31:	
  7573 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
  7574 ;; Defined at:
  7575 ;;		line 157 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;		None
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;  sensor          1    1[BANK0 ] enum E2661
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  1    wreg      void 
  7582 ;; Registers used:
  7583 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7584 ;; Tracked objects:
  7585 ;;		On entry : 1F/2
  7586 ;;		On exit  : 1F/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7590 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7591 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7592 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7593 ;;Total ram usage:        2 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; Hardware stack levels required when called:    8
  7596 ;; This function calls:
  7597 ;;		_MTOUCH_Sensor_Initialize
  7598 ;; This function is called by:
  7599 ;;		_MTOUCH_Initialize
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           
  7604                           ;psect for function _MTOUCH_Sensor_InitializeAll
  7605  1B9D                     _MTOUCH_Sensor_InitializeAll:
  7606                           
  7607                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 159:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 160:     for (sensor = 0; sensor < (2u); sens
      +                          or++)
  7608                           
  7609                           ;incstack = 0
  7610                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7611  1B9D  0020               	movlb	0	; select bank0
  7612  1B9E  01A1               	clrf	MTOUCH_Sensor_InitializeAll@sensor
  7613  1B9F                     l6059:
  7614                           
  7615                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 161:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 162:         MTOUCH_Sensor_Initialize(sensor);
  7616  1B9F  0821               	movf	MTOUCH_Sensor_InitializeAll@sensor,w
  7617  1BA0  319B  23F0  319B   	fcall	_MTOUCH_Sensor_Initialize
  7618                           
  7619                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 163:     }
  7620  1BA3  3001               	movlw	1
  7621  1BA4  0020               	movlb	0	; select bank0
  7622  1BA5  00A0               	movwf	??_MTOUCH_Sensor_InitializeAll
  7623  1BA6  0820               	movf	??_MTOUCH_Sensor_InitializeAll,w
  7624  1BA7  07A1               	addwf	MTOUCH_Sensor_InitializeAll@sensor,f
  7625  1BA8  3002               	movlw	2
  7626  1BA9  0221               	subwf	MTOUCH_Sensor_InitializeAll@sensor,w
  7627  1BAA  1803               	btfsc	3,0
  7628  1BAB  0008               	return
  7629  1BAC  2B9F               	goto	l6059
  7630  1BAD                     __end_of_MTOUCH_Sensor_InitializeAll:
  7631                           
  7632                           	psect	text32
  7633  1BF0                     __ptext32:	
  7634 ;; *************** function _MTOUCH_Sensor_Initialize *****************
  7635 ;; Defined at:
  7636 ;;		line 143 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;  sensor          1    wreg     enum E2661
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;  sensor          1    9[COMMON] enum E2661
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  1    wreg      enum E2664
  7643 ;; Registers used:
  7644 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7645 ;; Tracked objects:
  7646 ;;		On entry : 1F/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7654 ;;Total ram usage:        2 bytes
  7655 ;; Hardware stack levels used:    1
  7656 ;; Hardware stack levels required when called:    7
  7657 ;; This function calls:
  7658 ;;		_MTOUCH_Sensor_Enable
  7659 ;;		_Sensor_Sampled_Reset
  7660 ;;		___bmul
  7661 ;; This function is called by:
  7662 ;;		_MTOUCH_Sensor_InitializeAll
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           
  7667                           ;psect for function _MTOUCH_Sensor_Initialize
  7668  1BF0                     _MTOUCH_Sensor_Initialize:
  7669                           
  7670                           ;incstack = 0
  7671                           ; Regs used in _MTOUCH_Sensor_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  7672                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
  7673  1BF0  00F9               	movwf	MTOUCH_Sensor_Initialize@sensor
  7674                           
  7675                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 143: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           144: {;mcc_generated_files/mtouch/mtouch_sensor.c: 145:     MTOUCH_Sensor_Enable(sensor
      +                          );
  7676  1BF1  0879               	movf	MTOUCH_Sensor_Initialize@sensor,w
  7677  1BF2  319C  2401  319B   	fcall	_MTOUCH_Sensor_Enable
  7678                           
  7679                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 146:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
  7680  1BF5  3009               	movlw	9
  7681  1BF6  00F8               	movwf	??_MTOUCH_Sensor_Initialize
  7682  1BF7  0878               	movf	??_MTOUCH_Sensor_Initialize,w
  7683  1BF8  00F2               	movwf	___bmul@multiplicand
  7684  1BF9  0879               	movf	MTOUCH_Sensor_Initialize@sensor,w
  7685  1BFA  319B  23DF  319B   	fcall	___bmul
  7686  1BFD  3EA6               	addlw	(low (_mtouch_sensor| (0+256)))& (0+255)
  7687  1BFE  319A  22FE         	fcall	_Sensor_Sampled_Reset
  7688  1C00  0008               	return
  7689  1C01                     __end_of_MTOUCH_Sensor_Initialize:
  7690                           
  7691                           	psect	text33
  7692  1AFE                     __ptext33:	
  7693 ;; *************** function _Sensor_Sampled_Reset *****************
  7694 ;; Defined at:
  7695 ;;		line 564 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  sensor          1    wreg     PTR struct .
  7698 ;;		 -> mtouch_sensor(18), 
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;  sensor          1    2[COMMON] PTR struct .
  7701 ;;		 -> mtouch_sensor(18), 
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  1    wreg      void 
  7704 ;; Registers used:
  7705 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;Total ram usage:        1 bytes
  7716 ;; Hardware stack levels used:    1
  7717 ;; Hardware stack levels required when called:    5
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_MTOUCH_Sensor_Initialize
  7722 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           
  7727                           ;psect for function _Sensor_Sampled_Reset
  7728  1AFE                     _Sensor_Sampled_Reset:
  7729                           
  7730                           ;incstack = 0
  7731                           ; Regs used in _Sensor_Sampled_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7732                           ;Sensor_Sampled_Reset@sensor stored from wreg
  7733  1AFE  00F2               	movwf	Sensor_Sampled_Reset@sensor
  7734                           
  7735                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 564: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          565: {;mcc_generated_files/mtouch/mtouch_sensor.c: 566:     sensor->sampled = 0;
  7736  1AFF  0872               	movf	Sensor_Sampled_Reset@sensor,w
  7737  1B00  3E08               	addlw	8
  7738  1B01  0086               	movwf	6
  7739  1B02  3001               	movlw	1	; select bank2/3
  7740  1B03  0087               	movwf	7
  7741  1B04  1081               	bcf	1,1
  7742  1B05  0008               	return
  7743  1B06                     __end_of_Sensor_Sampled_Reset:
  7744                           
  7745                           	psect	text34
  7746  1C01                     __ptext34:	
  7747 ;; *************** function _MTOUCH_Sensor_Enable *****************
  7748 ;; Defined at:
  7749 ;;		line 481 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;  sensor          1    wreg     enum E2661
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  sensor          1    7[COMMON] enum E2661
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      void 
  7756 ;; Registers used:
  7757 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7758 ;; Tracked objects:
  7759 ;;		On entry : 1F/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7767 ;;Total ram usage:        2 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; Hardware stack levels required when called:    6
  7770 ;; This function calls:
  7771 ;;		___bmul
  7772 ;; This function is called by:
  7773 ;;		_MTOUCH_Sensor_Initialize
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           
  7778                           ;psect for function _MTOUCH_Sensor_Enable
  7779  1C01                     _MTOUCH_Sensor_Enable:
  7780                           
  7781                           ;incstack = 0
  7782                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7783                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
  7784  1C01  00F7               	movwf	MTOUCH_Sensor_Enable@sensor
  7785                           
  7786                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 481: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 482: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 483:     if(sensor < (2u))
  7787  1C02  3002               	movlw	2
  7788  1C03  0277               	subwf	MTOUCH_Sensor_Enable@sensor,w
  7789  1C04  1803               	skipnc
  7790  1C05  0008               	return
  7791                           
  7792                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 484:         mtouch_sensor[sensor].enabled 
      +                          = 1;
  7793  1C06  3009               	movlw	9
  7794  1C07  00F6               	movwf	??_MTOUCH_Sensor_Enable
  7795  1C08  0876               	movf	??_MTOUCH_Sensor_Enable,w
  7796  1C09  00F2               	movwf	___bmul@multiplicand
  7797  1C0A  0877               	movf	MTOUCH_Sensor_Enable@sensor,w
  7798  1C0B  319B  23DF         	fcall	___bmul
  7799  1C0D  3EAE               	addlw	(low ((_mtouch_sensor| (0+256)+8)))& (0+255)
  7800  1C0E  0086               	movwf	6
  7801  1C0F  3001               	movlw	1	; select bank3/4
  7802  1C10  0087               	movwf	7
  7803  1C11  1401               	bsf	1,0
  7804  1C12  0008               	return
  7805  1C13                     __end_of_MTOUCH_Sensor_Enable:
  7806                           
  7807                           	psect	text35
  7808  1BDF                     __ptext35:	
  7809 ;; *************** function ___bmul *****************
  7810 ;; Defined at:
  7811 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul8.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;  multiplier      1    wreg     unsigned char 
  7814 ;;  multiplicand    1    2[COMMON] unsigned char 
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;  multiplier      1    5[COMMON] unsigned char 
  7817 ;;  product         1    4[COMMON] unsigned char 
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  1    wreg      unsigned char 
  7820 ;; Registers used:
  7821 ;;		wreg, status,2, status,0
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7827 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7828 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;Total ram usage:        4 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:    5
  7834 ;; This function calls:
  7835 ;;		Nothing
  7836 ;; This function is called by:
  7837 ;;		_MTOUCH_Sensor_Initialize
  7838 ;;		_MTOUCH_Sensor_Enable
  7839 ;;		_MTOUCH_Sensor_RawSample_Get
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           
  7844                           ;psect for function ___bmul
  7845  1BDF                     ___bmul:
  7846                           
  7847                           ;incstack = 0
  7848                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7849                           ;___bmul@multiplier stored from wreg
  7850  1BDF  00F5               	movwf	___bmul@multiplier
  7851  1BE0  01F4               	clrf	___bmul@product
  7852  1BE1                     l5343:
  7853  1BE1  1C75               	btfss	___bmul@multiplier,0
  7854  1BE2  2BE7               	goto	l5347
  7855  1BE3  0872               	movf	___bmul@multiplicand,w
  7856  1BE4  00F3               	movwf	??___bmul
  7857  1BE5  0873               	movf	??___bmul,w
  7858  1BE6  07F4               	addwf	___bmul@product,f
  7859  1BE7                     l5347:
  7860  1BE7  1003               	clrc
  7861  1BE8  0DF2               	rlf	___bmul@multiplicand,f
  7862  1BE9  1003               	clrc
  7863  1BEA  0CF5               	rrf	___bmul@multiplier,f
  7864  1BEB  0875               	movf	___bmul@multiplier,w
  7865  1BEC  1D03               	btfss	3,2
  7866  1BED  2BE1               	goto	l5343
  7867  1BEE  0874               	movf	___bmul@product,w
  7868  1BEF  0008               	return
  7869  1BF0                     __end_of___bmul:
  7870                           
  7871                           	psect	text36
  7872  1CDF                     __ptext36:	
  7873 ;; *************** function _MTOUCH_Button_InitializeAll *****************
  7874 ;; Defined at:
  7875 ;;		line 163 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;		None
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;  button          1    8[COMMON] enum E2819
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  1    wreg      void 
  7882 ;; Registers used:
  7883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7884 ;; Tracked objects:
  7885 ;;		On entry : 1F/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7893 ;;Total ram usage:        2 bytes
  7894 ;; Hardware stack levels used:    1
  7895 ;; Hardware stack levels required when called:    7
  7896 ;; This function calls:
  7897 ;;		_MTOUCH_Button_Initialize
  7898 ;;		_memcpy
  7899 ;; This function is called by:
  7900 ;;		_MTOUCH_Initialize
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903                           
  7904                           
  7905                           ;psect for function _MTOUCH_Button_InitializeAll
  7906  1CDF                     _MTOUCH_Button_InitializeAll:
  7907                           
  7908                           ;mcc_generated_files/mtouch/mtouch_button.c: 165:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 167:     memcpy(mtouch_button,mtouch_button_i
      +                          nit,sizeof(mtouch_button_init));
  7909                           
  7910                           ;incstack = 0
  7911                           ; Regs used in _MTOUCH_Button_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7912  1CDF  3000               	movlw	low (_mtouch_button_init| (0+32768))
  7913  1CE0  00F2               	movwf	memcpy@s1
  7914  1CE1  3098               	movlw	high (_mtouch_button_init| (0+32768))
  7915  1CE2  00F3               	movwf	memcpy@s1+1
  7916  1CE3  3020               	movlw	32
  7917  1CE4  00F4               	movwf	memcpy@n
  7918  1CE5  3000               	movlw	0
  7919  1CE6  00F5               	movwf	memcpy@n+1
  7920  1CE7  3040               	movlw	(low (_mtouch_button| (0+512)))& (0+255)
  7921  1CE8  319E  2606  319C   	fcall	_memcpy
  7922                           
  7923                           ;mcc_generated_files/mtouch/mtouch_button.c: 169:     for (button = 0; button < 2u; butt
      +                          on++)
  7924  1CEB  01F8               	clrf	MTOUCH_Button_InitializeAll@button
  7925  1CEC                     l6083:
  7926                           
  7927                           ;mcc_generated_files/mtouch/mtouch_button.c: 170:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 171:         MTOUCH_Button_Initialize(button);
  7928  1CEC  0878               	movf	MTOUCH_Button_InitializeAll@button,w
  7929  1CED  3190  2009  319C   	fcall	_MTOUCH_Button_Initialize
  7930                           
  7931                           ;mcc_generated_files/mtouch/mtouch_button.c: 172:     }
  7932  1CF0  3001               	movlw	1
  7933  1CF1  00F7               	movwf	??_MTOUCH_Button_InitializeAll
  7934  1CF2  0877               	movf	??_MTOUCH_Button_InitializeAll,w
  7935  1CF3  07F8               	addwf	MTOUCH_Button_InitializeAll@button,f
  7936  1CF4  3002               	movlw	2
  7937  1CF5  0278               	subwf	MTOUCH_Button_InitializeAll@button,w
  7938  1CF6  1803               	btfsc	3,0
  7939  1CF7  0008               	return
  7940  1CF8  2CEC               	goto	l6083
  7941  1CF9                     __end_of_MTOUCH_Button_InitializeAll:
  7942                           
  7943                           	psect	text37
  7944  1E06                     __ptext37:	
  7945 ;; *************** function _memcpy *****************
  7946 ;; Defined at:
  7947 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/memcpy.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  d1              1    wreg     PTR void 
  7950 ;;		 -> mtouch_button(32), 
  7951 ;;  s1              2    2[COMMON] PTR const void 
  7952 ;;		 -> mtouch_button_init(32), 
  7953 ;;  n               2    4[COMMON] unsigned int 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  d1              1    3[BANK0 ] PTR void 
  7956 ;;		 -> mtouch_button(32), 
  7957 ;;  s               2    1[BANK0 ] PTR const unsigned char 
  7958 ;;		 -> mtouch_button_init(32), 
  7959 ;;  d               1    4[BANK0 ] PTR unsigned char 
  7960 ;;		 -> mtouch_button(32), 
  7961 ;;  tmp             1    0[BANK0 ] unsigned char 
  7962 ;; Return value:  Size  Location     Type
  7963 ;;                  1    wreg      PTR void 
  7964 ;; Registers used:
  7965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7966 ;; Tracked objects:
  7967 ;;		On entry : 1F/0
  7968 ;;		On exit  : 1F/0
  7969 ;;		Unchanged: 0/0
  7970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7972 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7974 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;Total ram usage:       10 bytes
  7976 ;; Hardware stack levels used:    1
  7977 ;; Hardware stack levels required when called:    5
  7978 ;; This function calls:
  7979 ;;		Nothing
  7980 ;; This function is called by:
  7981 ;;		_MTOUCH_Button_InitializeAll
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           
  7986                           ;psect for function _memcpy
  7987  1E06                     _memcpy:
  7988                           
  7989                           ;incstack = 0
  7990                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  7991                           ;memcpy@d1 stored from wreg
  7992  1E06  00A3               	movwf	memcpy@d1
  7993  1E07  0873               	movf	memcpy@s1+1,w
  7994  1E08  00A2               	movwf	memcpy@s+1
  7995  1E09  0872               	movf	memcpy@s1,w
  7996  1E0A  00A1               	movwf	memcpy@s
  7997  1E0B  0823               	movf	memcpy@d1,w
  7998  1E0C  00F6               	movwf	??_memcpy
  7999  1E0D  0876               	movf	??_memcpy,w
  8000  1E0E  00A4               	movwf	memcpy@d
  8001  1E0F                     l5629:
  8002  1E0F  3001               	movlw	1
  8003  1E10  02F4               	subwf	memcpy@n,f
  8004  1E11  3000               	movlw	0
  8005  1E12  3BF5               	subwfb	memcpy@n+1,f
  8006  1E13  0A74               	incf	memcpy@n,w
  8007  1E14  1903               	btfsc	3,2
  8008  1E15  0A75               	incf	memcpy@n+1,w
  8009  1E16  1903               	btfsc	3,2
  8010  1E17  0008               	return
  8011  1E18  0821               	movf	memcpy@s,w
  8012  1E19  0084               	movwf	4
  8013  1E1A  0822               	movf	memcpy@s+1,w
  8014  1E1B  0085               	movwf	5
  8015  1E1C  0800               	movf	0,w	;code access
  8016  1E1D  00F6               	movwf	??_memcpy
  8017  1E1E  0876               	movf	??_memcpy,w
  8018  1E1F  00A0               	movwf	memcpy@tmp
  8019  1E20  3001               	movlw	1
  8020  1E21  07A1               	addwf	memcpy@s,f
  8021  1E22  3000               	movlw	0
  8022  1E23  3DA2               	addwfc	memcpy@s+1,f
  8023  1E24  0820               	movf	memcpy@tmp,w
  8024  1E25  00F6               	movwf	??_memcpy
  8025  1E26  0824               	movf	memcpy@d,w
  8026  1E27  0086               	movwf	6
  8027  1E28  3002               	movlw	2	; select bank4/5
  8028  1E29  0087               	movwf	7
  8029  1E2A  0876               	movf	??_memcpy,w
  8030  1E2B  0081               	movwf	1
  8031  1E2C  3001               	movlw	1
  8032  1E2D  00F6               	movwf	??_memcpy
  8033  1E2E  0876               	movf	??_memcpy,w
  8034  1E2F  07A4               	addwf	memcpy@d,f
  8035  1E30  2E0F               	goto	l5629
  8036  1E31                     __end_of_memcpy:
  8037                           
  8038                           	psect	text38
  8039  1009                     __ptext38:	
  8040 ;; *************** function _MTOUCH_Button_Initialize *****************
  8041 ;; Defined at:
  8042 ;;		line 151 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  name            1    wreg     enum E2819
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  name            1    4[COMMON] enum E2819
  8047 ;;  button          1    5[COMMON] PTR struct .
  8048 ;;		 -> mtouch_button(32), 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  1    wreg      void 
  8051 ;; Registers used:
  8052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8060 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8061 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8062 ;;Total ram usage:        4 bytes
  8063 ;; Hardware stack levels used:    1
  8064 ;; Hardware stack levels required when called:    6
  8065 ;; This function calls:
  8066 ;;		_MTOUCH_Sensor_Calibrate
  8067 ;; This function is called by:
  8068 ;;		_MTOUCH_Button_InitializeAll
  8069 ;;		_Button_State_NotPressed
  8070 ;;		_Button_State_Pressed
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074                           
  8075                           ;psect for function _MTOUCH_Button_Initialize
  8076  1009                     _MTOUCH_Button_Initialize:
  8077                           
  8078                           ;incstack = 0
  8079                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  8080                           ;MTOUCH_Button_Initialize@name stored from wreg
  8081  1009  00F4               	movwf	MTOUCH_Button_Initialize@name
  8082                           
  8083                           ;mcc_generated_files/mtouch/mtouch_button.c: 151: void MTOUCH_Button_Initialize(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 152: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 153:     mtouch_button_t* button = &mtouch_button[name];
  8084  100A  0874               	movf	MTOUCH_Button_Initialize@name,w
  8085  100B  00F2               	movwf	??_MTOUCH_Button_Initialize
  8086  100C  3003               	movlw	3
  8087  100D                     u5895:
  8088  100D  35F2               	lslf	??_MTOUCH_Button_Initialize,f
  8089  100E  3EFF               	addlw	-1
  8090  100F  1D03               	skipz
  8091  1010  280D               	goto	u5895
  8092  1011  3572               	lslf	??_MTOUCH_Button_Initialize,w
  8093  1012  3E40               	addlw	(low (_mtouch_button| (0+512)))& (0+255)
  8094  1013  00F3               	movwf	??_MTOUCH_Button_Initialize+1
  8095  1014  0873               	movf	??_MTOUCH_Button_Initialize+1,w
  8096  1015  00F5               	movwf	MTOUCH_Button_Initialize@button
  8097                           
  8098                           ;mcc_generated_files/mtouch/mtouch_button.c: 155:     button->state = MTOUCH_BUTTON_STAT
      +                          E_initializing;
  8099  1016  0875               	movf	MTOUCH_Button_Initialize@button,w
  8100  1017  3E02               	addlw	2
  8101  1018  0086               	movwf	6
  8102  1019  3002               	movlw	2	; select bank4/5
  8103  101A  0087               	movwf	7
  8104  101B  0181               	clrf	1
  8105                           
  8106                           ;mcc_generated_files/mtouch/mtouch_button.c: 156:     button->baseline = (mtouch_button_
      +                          baseline_t)0;
  8107  101C  0875               	movf	MTOUCH_Button_Initialize@button,w
  8108  101D  3E05               	addlw	5
  8109  101E  0086               	movwf	6
  8110  101F  3002               	movlw	2	; select bank4/5
  8111  1020  0087               	movwf	7
  8112  1021  3000               	movlw	0
  8113  1022  3FC0               	movwi [0]fsr1
  8114  1023  3000               	movlw	0
  8115  1024  3FC1               	movwi [1]fsr1
  8116  1025  3FC2               	movwi [2]fsr1
  8117  1026  3FC3               	movwi [3]fsr1
  8118                           
  8119                           ;mcc_generated_files/mtouch/mtouch_button.c: 157:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
  8120  1027  0875               	movf	MTOUCH_Button_Initialize@button,w
  8121  1028  3E0A               	addlw	10
  8122  1029  0086               	movwf	6
  8123  102A  3002               	movlw	2	; select bank4/5
  8124  102B  0087               	movwf	7
  8125  102C  3000               	movlw	0
  8126  102D  3FC0               	movwi [0]fsr1
  8127  102E  3FC1               	movwi [1]fsr1
  8128                           
  8129                           ;mcc_generated_files/mtouch/mtouch_button.c: 158:     button->baseline_count = (mtouch_b
      +                          utton_baselinecounter_t)0;
  8130  102F  0875               	movf	MTOUCH_Button_Initialize@button,w
  8131  1030  3E0C               	addlw	12
  8132  1031  0086               	movwf	6
  8133  1032  3002               	movlw	2	; select bank4/5
  8134  1033  0087               	movwf	7
  8135  1034  3000               	movlw	0
  8136  1035  3FC0               	movwi [0]fsr1
  8137  1036  3FC1               	movwi [1]fsr1
  8138                           
  8139                           ;mcc_generated_files/mtouch/mtouch_button.c: 160:     MTOUCH_Sensor_Calibrate(button->se
      +                          nsor);
  8140  1037  0A75               	incf	MTOUCH_Button_Initialize@button,w
  8141  1038  0086               	movwf	6
  8142  1039  3002               	movlw	2	; select bank4/5
  8143  103A  0087               	movwf	7
  8144  103B  0801               	movf	1,w
  8145  103C  3180  2002         	fcall	_MTOUCH_Sensor_Calibrate
  8146  103E  0008               	return
  8147  103F                     __end_of_MTOUCH_Button_Initialize:
  8148                           
  8149                           	psect	text39
  8150  0002                     __ptext39:	
  8151 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
  8152 ;; Defined at:
  8153 ;;		line 535 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  sensor          1    wreg     enum E2661
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;  sensor          1    0[COMMON] enum E2661
  8158 ;; Return value:  Size  Location     Type
  8159 ;;                  1    wreg      void 
  8160 ;; Registers used:
  8161 ;;		wreg
  8162 ;; Tracked objects:
  8163 ;;		On entry : 0/0
  8164 ;;		On exit  : 0/0
  8165 ;;		Unchanged: 0/0
  8166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8171 ;;Total ram usage:        0 bytes
  8172 ;; Hardware stack levels used:    1
  8173 ;; Hardware stack levels required when called:    5
  8174 ;; This function calls:
  8175 ;;		Nothing
  8176 ;; This function is called by:
  8177 ;;		_MTOUCH_Button_Initialize
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           
  8182                           ;psect for function _MTOUCH_Sensor_Calibrate
  8183  0002                     _MTOUCH_Sensor_Calibrate:
  8184                           
  8185                           ;incstack = 0
  8186                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg]
  8187  0002  0008               	return
  8188  0003                     __end_of_MTOUCH_Sensor_Calibrate:
  8189                           
  8190                           	psect	text40
  8191  1D50                     __ptext40:	
  8192 ;; *************** function _EUSART_Initialize *****************
  8193 ;; Defined at:
  8194 ;;		line 66 in file "mcc_generated_files/eusart.c"
  8195 ;; Parameters:    Size  Location     Type
  8196 ;;		None
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;		None
  8199 ;; Return value:  Size  Location     Type
  8200 ;;                  1    wreg      void 
  8201 ;; Registers used:
  8202 ;;		wreg, status,2, status,0, pclath, cstack
  8203 ;; Tracked objects:
  8204 ;;		On entry : 1F/0
  8205 ;;		On exit  : 1F/2
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;Total ram usage:        0 bytes
  8213 ;; Hardware stack levels used:    1
  8214 ;; Hardware stack levels required when called:    6
  8215 ;; This function calls:
  8216 ;;		_EUSART_SetErrorHandler
  8217 ;;		_EUSART_SetFramingErrorHandler
  8218 ;;		_EUSART_SetOverrunErrorHandler
  8219 ;; This function is called by:
  8220 ;;		_SYSTEM_Initialize
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           
  8225                           ;psect for function _EUSART_Initialize
  8226  1D50                     _EUSART_Initialize:
  8227                           
  8228                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  8229                           
  8230                           ;incstack = 0
  8231                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8232  1D50  3008               	movlw	8
  8233  1D51  0023               	movlb	3	; select bank3
  8234  1D52  009F               	movwf	31	;volatile
  8235                           
  8236                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  8237  1D53  3090               	movlw	144
  8238  1D54  009D               	movwf	29	;volatile
  8239                           
  8240                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  8241  1D55  3024               	movlw	36
  8242  1D56  009E               	movwf	30	;volatile
  8243                           
  8244                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xCF;
  8245  1D57  30CF               	movlw	207
  8246  1D58  009B               	movwf	27	;volatile
  8247                           
  8248                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  8249  1D59  019C               	clrf	28	;volatile
  8250                           
  8251                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8252  1D5A  3000               	movlw	0
  8253  1D5B  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8254  1D5C  3000               	movlw	0
  8255  1D5D  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8256  1D5E  319A  22A4  319D   	fcall	_EUSART_SetFramingErrorHandler
  8257                           
  8258                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8259  1D61  3000               	movlw	0
  8260  1D62  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8261  1D63  3000               	movlw	0
  8262  1D64  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8263  1D65  319A  22A9  319D   	fcall	_EUSART_SetOverrunErrorHandler
  8264                           
  8265                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8266  1D68  3000               	movlw	0
  8267  1D69  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler
  8268  1D6A  3000               	movlw	0
  8269  1D6B  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8270  1D6C  319A  229F         	fcall	_EUSART_SetErrorHandler
  8271                           
  8272                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  8273  1D6E  0022               	movlb	2	; select bank2
  8274  1D6F  01DC               	clrf	_eusartRxLastError^(0+256)	;volatile
  8275  1D70  0008               	return
  8276  1D71                     __end_of_EUSART_Initialize:
  8277                           
  8278                           	psect	text41
  8279  1AA9                     __ptext41:	
  8280 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8281 ;; Defined at:
  8282 ;;		line 161 in file "mcc_generated_files/eusart.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  8285 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;		None
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  1    wreg      void 
  8290 ;; Registers used:
  8291 ;;		wreg
  8292 ;; Tracked objects:
  8293 ;;		On entry : 1F/3
  8294 ;;		On exit  : 1F/3
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8301 ;;Total ram usage:        2 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; Hardware stack levels required when called:    5
  8304 ;; This function calls:
  8305 ;;		Nothing
  8306 ;; This function is called by:
  8307 ;;		_EUSART_Initialize
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           
  8312                           ;psect for function _EUSART_SetOverrunErrorHandler
  8313  1AA9                     _EUSART_SetOverrunErrorHandler:
  8314                           
  8315                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  8316                           
  8317                           ;incstack = 0
  8318                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8319  1AA9  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8320  1AAA  00D7               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+384)
  8321  1AAB  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8322  1AAC  00D6               	movwf	_EUSART_OverrunErrorHandler^(0+384)
  8323  1AAD  0008               	return
  8324  1AAE                     __end_of_EUSART_SetOverrunErrorHandler:
  8325                           
  8326                           	psect	text42
  8327  1AA4                     __ptext42:	
  8328 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8329 ;; Defined at:
  8330 ;;		line 157 in file "mcc_generated_files/eusart.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  8333 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;		None
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  1    wreg      void 
  8338 ;; Registers used:
  8339 ;;		wreg
  8340 ;; Tracked objects:
  8341 ;;		On entry : 1F/3
  8342 ;;		On exit  : 1F/3
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8349 ;;Total ram usage:        2 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:    5
  8352 ;; This function calls:
  8353 ;;		Nothing
  8354 ;; This function is called by:
  8355 ;;		_EUSART_Initialize
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           
  8360                           ;psect for function _EUSART_SetFramingErrorHandler
  8361  1AA4                     _EUSART_SetFramingErrorHandler:
  8362                           
  8363                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  8364                           
  8365                           ;incstack = 0
  8366                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8367  1AA4  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8368  1AA5  00D9               	movwf	(_EUSART_FramingErrorHandler+1)^(0+384)
  8369  1AA6  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8370  1AA7  00D8               	movwf	_EUSART_FramingErrorHandler^(0+384)
  8371  1AA8  0008               	return
  8372  1AA9                     __end_of_EUSART_SetFramingErrorHandler:
  8373                           
  8374                           	psect	text43
  8375  1A9F                     __ptext43:	
  8376 ;; *************** function _EUSART_SetErrorHandler *****************
  8377 ;; Defined at:
  8378 ;;		line 165 in file "mcc_generated_files/eusart.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  8381 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;		None
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1    wreg      void 
  8386 ;; Registers used:
  8387 ;;		wreg
  8388 ;; Tracked objects:
  8389 ;;		On entry : 1F/3
  8390 ;;		On exit  : 1F/3
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8393 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;Total ram usage:        2 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; Hardware stack levels required when called:    5
  8400 ;; This function calls:
  8401 ;;		Nothing
  8402 ;; This function is called by:
  8403 ;;		_EUSART_Initialize
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           
  8408                           ;psect for function _EUSART_SetErrorHandler
  8409  1A9F                     _EUSART_SetErrorHandler:
  8410                           
  8411                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  8412                           
  8413                           ;incstack = 0
  8414                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8415  1A9F  0873               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  8416  1AA0  00D5               	movwf	(_EUSART_ErrorHandler+1)^(0+384)
  8417  1AA1  0872               	movf	EUSART_SetErrorHandler@interruptHandler,w
  8418  1AA2  00D4               	movwf	_EUSART_ErrorHandler^(0+384)
  8419  1AA3  0008               	return
  8420  1AA4                     __end_of_EUSART_SetErrorHandler:
  8421                           
  8422                           	psect	text44
  8423  1AF0                     __ptext44:	
  8424 ;; *************** function _ADC_Initialize *****************
  8425 ;; Defined at:
  8426 ;;		line 67 in file "mcc_generated_files/adc.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;		None
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;		None
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  1    wreg      void 
  8433 ;; Registers used:
  8434 ;;		wreg, status,2
  8435 ;; Tracked objects:
  8436 ;;		On entry : 1F/1
  8437 ;;		On exit  : 1F/1
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8444 ;;Total ram usage:        0 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; Hardware stack levels required when called:    5
  8447 ;; This function calls:
  8448 ;;		Nothing
  8449 ;; This function is called by:
  8450 ;;		_SYSTEM_Initialize
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           
  8455                           ;psect for function _ADC_Initialize
  8456  1AF0                     _ADC_Initialize:
  8457                           
  8458                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x10;
  8459                           
  8460                           ;incstack = 0
  8461                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  8462  1AF0  3010               	movlw	16
  8463  1AF1  009E               	movwf	30	;volatile
  8464                           
  8465                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  8466  1AF2  019B               	clrf	27	;volatile
  8467                           
  8468                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  8469  1AF3  019C               	clrf	28	;volatile
  8470                           
  8471                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  8472  1AF4  3001               	movlw	1
  8473  1AF5  009D               	movwf	29	;volatile
  8474  1AF6  0008               	return
  8475  1AF7                     __end_of_ADC_Initialize:
  8476                           
  8477                           	psect	text45
  8478  10AF                     __ptext45:	
  8479 ;; *************** function _Read_PT100_Temp *****************
  8480 ;; Defined at:
  8481 ;;		line 209 in file "main.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;		None
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  Temp_PT100      4    8[BANK2 ] float 
  8486 ;;  R_PT100         4    4[BANK2 ] float 
  8487 ;;  ADC_volt        4    0[BANK2 ] float 
  8488 ;;  ADC_num         2   12[BANK2 ] unsigned short 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  4   73[BANK1 ] float 
  8491 ;; Registers used:
  8492 ;;		wreg, status,2, status,0, pclath, cstack
  8493 ;; Tracked objects:
  8494 ;;		On entry : 1F/2
  8495 ;;		On exit  : 1F/1
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8498 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8499 ;;      Locals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0
  8500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;      Totals:         0       0       4      14       0       0       0       0       0       0       0       0       
      +0       0
  8502 ;;Total ram usage:       18 bytes
  8503 ;; Hardware stack levels used:    1
  8504 ;; Hardware stack levels required when called:    9
  8505 ;; This function calls:
  8506 ;;		_ADC_StartConversion
  8507 ;;		_ChangeADCtoVoltage
  8508 ;;		_Measure_R_PT100_2Wire
  8509 ;;		_Measure_Temp_PT100_2Wire
  8510 ;;		_Read_ADC_Num
  8511 ;; This function is called by:
  8512 ;;		_main
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           
  8517                           ;psect for function _Read_PT100_Temp
  8518  10AF                     _Read_PT100_Temp:
  8519                           
  8520                           ;main.c: 216:     ADC_StartConversion();
  8521                           
  8522                           ;incstack = 0
  8523                           ; Regs used in _Read_PT100_Temp: [wreg+status,2+status,0+pclath+cstack]
  8524  10AF  319A  2293  3190   	fcall	_ADC_StartConversion
  8525                           
  8526                           ;main.c: 218:     ADC_num = Read_ADC_Num();
  8527  10B2  319B  23CE  3190   	fcall	_Read_ADC_Num
  8528  10B5  0875               	movf	?_Read_ADC_Num+1,w
  8529  10B6  0022               	movlb	2	; select bank2
  8530  10B7  00AD               	movwf	(Read_PT100_Temp@ADC_num+1)^(0+256)
  8531  10B8  0874               	movf	?_Read_ADC_Num,w
  8532  10B9  00AC               	movwf	Read_PT100_Temp@ADC_num^(0+256)
  8533                           
  8534                           ;main.c: 220:     ADC_volt = ChangeADCtoVoltage(ADC_num);
  8535  10BA  082D               	movf	(Read_PT100_Temp@ADC_num+1)^(0+256),w
  8536  10BB  0021               	movlb	1	; select bank1
  8537  10BC  00D6               	movwf	(ChangeADCtoVoltage@ADC_number+1)^(0+128)
  8538  10BD  0022               	movlb	2	; select bank2
  8539  10BE  082C               	movf	Read_PT100_Temp@ADC_num^(0+256),w
  8540  10BF  0021               	movlb	1	; select bank1
  8541  10C0  00D5               	movwf	ChangeADCtoVoltage@ADC_number^(0+128)
  8542  10C1  319E  26C3  3190   	fcall	_ChangeADCtoVoltage
  8543  10C4  0858               	movf	(?_ChangeADCtoVoltage+3)^(0+128),w
  8544  10C5  0022               	movlb	2	; select bank2
  8545  10C6  00A3               	movwf	(Read_PT100_Temp@ADC_volt+3)^(0+256)
  8546  10C7  0021               	movlb	1	; select bank1
  8547  10C8  0857               	movf	(?_ChangeADCtoVoltage+2)^(0+128),w
  8548  10C9  0022               	movlb	2	; select bank2
  8549  10CA  00A2               	movwf	(Read_PT100_Temp@ADC_volt+2)^(0+256)
  8550  10CB  0021               	movlb	1	; select bank1
  8551  10CC  0856               	movf	(?_ChangeADCtoVoltage+1)^(0+128),w
  8552  10CD  0022               	movlb	2	; select bank2
  8553  10CE  00A1               	movwf	(Read_PT100_Temp@ADC_volt+1)^(0+256)
  8554  10CF  0021               	movlb	1	; select bank1
  8555  10D0  0855               	movf	?_ChangeADCtoVoltage^(0+128),w
  8556  10D1  0022               	movlb	2	; select bank2
  8557  10D2  00A0               	movwf	Read_PT100_Temp@ADC_volt^(0+256)
  8558                           
  8559                           ;main.c: 222:     R_PT100 = Measure_R_PT100_2Wire(ADC_volt);
  8560  10D3  0823               	movf	(Read_PT100_Temp@ADC_volt+3)^(0+256),w
  8561  10D4  0021               	movlb	1	; select bank1
  8562  10D5  00D8               	movwf	(Measure_R_PT100_2Wire@ADC_volt+3)^(0+128)
  8563  10D6  0022               	movlb	2	; select bank2
  8564  10D7  0822               	movf	(Read_PT100_Temp@ADC_volt+2)^(0+256),w
  8565  10D8  0021               	movlb	1	; select bank1
  8566  10D9  00D7               	movwf	(Measure_R_PT100_2Wire@ADC_volt+2)^(0+128)
  8567  10DA  0022               	movlb	2	; select bank2
  8568  10DB  0821               	movf	(Read_PT100_Temp@ADC_volt+1)^(0+256),w
  8569  10DC  0021               	movlb	1	; select bank1
  8570  10DD  00D6               	movwf	(Measure_R_PT100_2Wire@ADC_volt+1)^(0+128)
  8571  10DE  0022               	movlb	2	; select bank2
  8572  10DF  0820               	movf	Read_PT100_Temp@ADC_volt^(0+256),w
  8573  10E0  0021               	movlb	1	; select bank1
  8574  10E1  00D5               	movwf	Measure_R_PT100_2Wire@ADC_volt^(0+128)
  8575  10E2  319F  27A1  3190   	fcall	_Measure_R_PT100_2Wire
  8576  10E5  0858               	movf	(?_Measure_R_PT100_2Wire+3)^(0+128),w
  8577  10E6  0022               	movlb	2	; select bank2
  8578  10E7  00A7               	movwf	(Read_PT100_Temp@R_PT100+3)^(0+256)
  8579  10E8  0021               	movlb	1	; select bank1
  8580  10E9  0857               	movf	(?_Measure_R_PT100_2Wire+2)^(0+128),w
  8581  10EA  0022               	movlb	2	; select bank2
  8582  10EB  00A6               	movwf	(Read_PT100_Temp@R_PT100+2)^(0+256)
  8583  10EC  0021               	movlb	1	; select bank1
  8584  10ED  0856               	movf	(?_Measure_R_PT100_2Wire+1)^(0+128),w
  8585  10EE  0022               	movlb	2	; select bank2
  8586  10EF  00A5               	movwf	(Read_PT100_Temp@R_PT100+1)^(0+256)
  8587  10F0  0021               	movlb	1	; select bank1
  8588  10F1  0855               	movf	?_Measure_R_PT100_2Wire^(0+128),w
  8589  10F2  0022               	movlb	2	; select bank2
  8590  10F3  00A4               	movwf	Read_PT100_Temp@R_PT100^(0+256)
  8591                           
  8592                           ;main.c: 224:     Temp_PT100 = Measure_Temp_PT100_2Wire(R_PT100);
  8593  10F4  0827               	movf	(Read_PT100_Temp@R_PT100+3)^(0+256),w
  8594  10F5  0021               	movlb	1	; select bank1
  8595  10F6  00D8               	movwf	(Measure_Temp_PT100_2Wire@R_PT100+3)^(0+128)
  8596  10F7  0022               	movlb	2	; select bank2
  8597  10F8  0826               	movf	(Read_PT100_Temp@R_PT100+2)^(0+256),w
  8598  10F9  0021               	movlb	1	; select bank1
  8599  10FA  00D7               	movwf	(Measure_Temp_PT100_2Wire@R_PT100+2)^(0+128)
  8600  10FB  0022               	movlb	2	; select bank2
  8601  10FC  0825               	movf	(Read_PT100_Temp@R_PT100+1)^(0+256),w
  8602  10FD  0021               	movlb	1	; select bank1
  8603  10FE  00D6               	movwf	(Measure_Temp_PT100_2Wire@R_PT100+1)^(0+128)
  8604  10FF  0022               	movlb	2	; select bank2
  8605  1100  0824               	movf	Read_PT100_Temp@R_PT100^(0+256),w
  8606  1101  0021               	movlb	1	; select bank1
  8607  1102  00D5               	movwf	Measure_Temp_PT100_2Wire@R_PT100^(0+128)
  8608  1103  3194  2414         	fcall	_Measure_Temp_PT100_2Wire
  8609  1105  0858               	movf	(?_Measure_Temp_PT100_2Wire+3)^(0+128),w
  8610  1106  0022               	movlb	2	; select bank2
  8611  1107  00AB               	movwf	(Read_PT100_Temp@Temp_PT100+3)^(0+256)
  8612  1108  0021               	movlb	1	; select bank1
  8613  1109  0857               	movf	(?_Measure_Temp_PT100_2Wire+2)^(0+128),w
  8614  110A  0022               	movlb	2	; select bank2
  8615  110B  00AA               	movwf	(Read_PT100_Temp@Temp_PT100+2)^(0+256)
  8616  110C  0021               	movlb	1	; select bank1
  8617  110D  0856               	movf	(?_Measure_Temp_PT100_2Wire+1)^(0+128),w
  8618  110E  0022               	movlb	2	; select bank2
  8619  110F  00A9               	movwf	(Read_PT100_Temp@Temp_PT100+1)^(0+256)
  8620  1110  0021               	movlb	1	; select bank1
  8621  1111  0855               	movf	?_Measure_Temp_PT100_2Wire^(0+128),w
  8622  1112  0022               	movlb	2	; select bank2
  8623  1113  00A8               	movwf	Read_PT100_Temp@Temp_PT100^(0+256)
  8624                           
  8625                           ;main.c: 226:     return Temp_PT100;
  8626  1114  082B               	movf	(Read_PT100_Temp@Temp_PT100+3)^(0+256),w
  8627  1115  0021               	movlb	1	; select bank1
  8628  1116  00EC               	movwf	(?_Read_PT100_Temp+3)^(0+128)
  8629  1117  0022               	movlb	2	; select bank2
  8630  1118  082A               	movf	(Read_PT100_Temp@Temp_PT100+2)^(0+256),w
  8631  1119  0021               	movlb	1	; select bank1
  8632  111A  00EB               	movwf	(?_Read_PT100_Temp+2)^(0+128)
  8633  111B  0022               	movlb	2	; select bank2
  8634  111C  0829               	movf	(Read_PT100_Temp@Temp_PT100+1)^(0+256),w
  8635  111D  0021               	movlb	1	; select bank1
  8636  111E  00EA               	movwf	(?_Read_PT100_Temp+1)^(0+128)
  8637  111F  0022               	movlb	2	; select bank2
  8638  1120  0828               	movf	Read_PT100_Temp@Temp_PT100^(0+256),w
  8639  1121  0021               	movlb	1	; select bank1
  8640  1122  00E9               	movwf	?_Read_PT100_Temp^(0+128)
  8641  1123  0008               	return
  8642  1124                     __end_of_Read_PT100_Temp:
  8643                           
  8644                           	psect	text46
  8645  1BCE                     __ptext46:	
  8646 ;; *************** function _Read_ADC_Num *****************
  8647 ;; Defined at:
  8648 ;;		line 168 in file "main.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;		None
  8651 ;; Auto vars:     Size  Location     Type
  8652 ;;  convertedVal    2    6[COMMON] unsigned short 
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  2    4[COMMON] unsigned short 
  8655 ;; Registers used:
  8656 ;;		wreg, status,0, pclath, cstack
  8657 ;; Tracked objects:
  8658 ;;		On entry : 1F/1
  8659 ;;		On exit  : 1F/1
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8665 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8666 ;;Total ram usage:        4 bytes
  8667 ;; Hardware stack levels used:    1
  8668 ;; Hardware stack levels required when called:    6
  8669 ;; This function calls:
  8670 ;;		_ADC_GetConversionResult
  8671 ;;		_ADC_IsConversionDone
  8672 ;; This function is called by:
  8673 ;;		_Read_PT100_Temp
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           
  8678                           ;psect for function _Read_ADC_Num
  8679  1BCE                     _Read_ADC_Num:
  8680  1BCE                     l4959:	
  8681                           ;main.c: 170:     uint16_t convertedValue;;main.c: 172:     while(!ADC_IsConversionDone(
      +                          ));
  8682                           
  8683                           ;incstack = 0
  8684                           ; Regs used in _Read_ADC_Num: [wreg+status,0+pclath+cstack]
  8685                           
  8686  1BCE  319A  22BF  319B   	fcall	_ADC_IsConversionDone
  8687  1BD1  3A00               	xorlw	0
  8688  1BD2  1903               	skipnz
  8689  1BD3  2BCE               	goto	l4959
  8690                           
  8691                           ;main.c: 173:     convertedValue = ADC_GetConversionResult();
  8692  1BD4  319A  229A         	fcall	_ADC_GetConversionResult
  8693  1BD6  0873               	movf	?_ADC_GetConversionResult+1,w
  8694  1BD7  00F7               	movwf	Read_ADC_Num@convertedValue+1
  8695  1BD8  0872               	movf	?_ADC_GetConversionResult,w
  8696  1BD9  00F6               	movwf	Read_ADC_Num@convertedValue
  8697                           
  8698                           ;main.c: 175:     return convertedValue;
  8699  1BDA  0877               	movf	Read_ADC_Num@convertedValue+1,w
  8700  1BDB  00F5               	movwf	?_Read_ADC_Num+1
  8701  1BDC  0876               	movf	Read_ADC_Num@convertedValue,w
  8702  1BDD  00F4               	movwf	?_Read_ADC_Num
  8703  1BDE  0008               	return
  8704  1BDF                     __end_of_Read_ADC_Num:
  8705                           
  8706                           	psect	text47
  8707  1ABF                     __ptext47:	
  8708 ;; *************** function _ADC_IsConversionDone *****************
  8709 ;; Defined at:
  8710 ;;		line 100 in file "mcc_generated_files/adc.c"
  8711 ;; Parameters:    Size  Location     Type
  8712 ;;		None
  8713 ;; Auto vars:     Size  Location     Type
  8714 ;;		None
  8715 ;; Return value:  Size  Location     Type
  8716 ;;                  1    wreg      _Bool 
  8717 ;; Registers used:
  8718 ;;		wreg, status,0
  8719 ;; Tracked objects:
  8720 ;;		On entry : 1F/1
  8721 ;;		On exit  : 1F/1
  8722 ;;		Unchanged: 0/0
  8723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8728 ;;Total ram usage:        0 bytes
  8729 ;; Hardware stack levels used:    1
  8730 ;; Hardware stack levels required when called:    5
  8731 ;; This function calls:
  8732 ;;		Nothing
  8733 ;; This function is called by:
  8734 ;;		_Read_ADC_Num
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           
  8739                           ;psect for function _ADC_IsConversionDone
  8740  1ABF                     _ADC_IsConversionDone:
  8741                           
  8742                           ;mcc_generated_files/adc.c: 103:    return ((_Bool)(!ADCON0bits.GO_nDONE));
  8743                           
  8744                           ;incstack = 0
  8745                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  8746  1ABF  1003               	clrc
  8747  1AC0  1C9D               	btfss	29,1	;volatile
  8748  1AC1  1403               	setc
  8749  1AC2  3000               	movlw	0
  8750  1AC3  3D09               	addwfc	9,w
  8751  1AC4  0008               	return
  8752  1AC5                     __end_of_ADC_IsConversionDone:
  8753                           
  8754                           	psect	text48
  8755  1A9A                     __ptext48:	
  8756 ;; *************** function _ADC_GetConversionResult *****************
  8757 ;; Defined at:
  8758 ;;		line 106 in file "mcc_generated_files/adc.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;		None
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  2    2[COMMON] unsigned short 
  8765 ;; Registers used:
  8766 ;;		wreg
  8767 ;; Tracked objects:
  8768 ;;		On entry : 1F/1
  8769 ;;		On exit  : 1F/1
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8776 ;;Total ram usage:        2 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; Hardware stack levels required when called:    5
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		_Read_ADC_Num
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           
  8787                           ;psect for function _ADC_GetConversionResult
  8788  1A9A                     _ADC_GetConversionResult:
  8789                           
  8790                           ;mcc_generated_files/adc.c: 109:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8791                           
  8792                           ;incstack = 0
  8793                           ; Regs used in _ADC_GetConversionResult: [wreg]
  8794  1A9A  081C               	movf	28,w	;volatile
  8795  1A9B  00F3               	movwf	?_ADC_GetConversionResult+1
  8796  1A9C  081B               	movf	27,w	;volatile
  8797  1A9D  00F2               	movwf	?_ADC_GetConversionResult
  8798  1A9E  0008               	return
  8799  1A9F                     __end_of_ADC_GetConversionResult:
  8800                           
  8801                           	psect	text49
  8802  1414                     __ptext49:	
  8803 ;; *************** function _Measure_Temp_PT100_2Wire *****************
  8804 ;; Defined at:
  8805 ;;		line 198 in file "main.c"
  8806 ;; Parameters:    Size  Location     Type
  8807 ;;  R_PT100         4   53[BANK1 ] float 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  Temp_PT100      4   57[BANK1 ] float 
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  4   53[BANK1 ] float 
  8812 ;; Registers used:
  8813 ;;		wreg, status,2, status,0, pclath, cstack
  8814 ;; Tracked objects:
  8815 ;;		On entry : 1F/1
  8816 ;;		On exit  : 1F/1
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8819 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8820 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8822 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  8823 ;;Total ram usage:       20 bytes
  8824 ;; Hardware stack levels used:    1
  8825 ;; Hardware stack levels required when called:    8
  8826 ;; This function calls:
  8827 ;;		___fladd
  8828 ;;		___fldiv
  8829 ;;		___flmul
  8830 ;;		_sqrtf
  8831 ;; This function is called by:
  8832 ;;		_Read_PT100_Temp
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           
  8837                           ;psect for function _Measure_Temp_PT100_2Wire
  8838  1414                     _Measure_Temp_PT100_2Wire:
  8839                           
  8840                           ;main.c: 200:     float Temp_PT100;;main.c: 202:     Temp_PT100 = ((-3.9083E-03 + sqrtf(
      +                          17.58480889E-06 + -23.10E-09 * R_PT100)) / -1.155E-06) - Tolerance_Temp_const;
  8841                           
  8842                           ;incstack = 0
  8843                           ; Regs used in _Measure_Temp_PT100_2Wire: [wreg+status,2+status,0+pclath+cstack]
  8844  1414  3037               	movlw	55
  8845  1415  0020               	movlb	0	; select bank0
  8846  1416  00C3               	movwf	___fladd@b+3
  8847  1417  3093               	movlw	147
  8848  1418  00C2               	movwf	___fladd@b+2
  8849  1419  3083               	movlw	131
  8850  141A  00C1               	movwf	___fladd@b+1
  8851  141B  3017               	movlw	23
  8852  141C  00C0               	movwf	___fladd@b
  8853  141D  30B2               	movlw	178
  8854  141E  00A9               	movwf	___flmul@b+3
  8855  141F  30C6               	movlw	198
  8856  1420  00A8               	movwf	___flmul@b+2
  8857  1421  306D               	movlw	109
  8858  1422  00A7               	movwf	___flmul@b+1
  8859  1423  3070               	movlw	112
  8860  1424  00A6               	movwf	___flmul@b
  8861  1425  0021               	movlb	1	; select bank1
  8862  1426  0858               	movf	(Measure_Temp_PT100_2Wire@R_PT100+3)^(0+128),w
  8863  1427  0020               	movlb	0	; select bank0
  8864  1428  00AD               	movwf	___flmul@a+3
  8865  1429  0021               	movlb	1	; select bank1
  8866  142A  0857               	movf	(Measure_Temp_PT100_2Wire@R_PT100+2)^(0+128),w
  8867  142B  0020               	movlb	0	; select bank0
  8868  142C  00AC               	movwf	___flmul@a+2
  8869  142D  0021               	movlb	1	; select bank1
  8870  142E  0856               	movf	(Measure_Temp_PT100_2Wire@R_PT100+1)^(0+128),w
  8871  142F  0020               	movlb	0	; select bank0
  8872  1430  00AB               	movwf	___flmul@a+1
  8873  1431  0021               	movlb	1	; select bank1
  8874  1432  0855               	movf	Measure_Temp_PT100_2Wire@R_PT100^(0+128),w
  8875  1433  0020               	movlb	0	; select bank0
  8876  1434  00AA               	movwf	___flmul@a
  8877  1435  318B  2304  3194   	fcall	___flmul
  8878  1438  0829               	movf	?___flmul+3,w
  8879  1439  00C7               	movwf	___fladd@a+3
  8880  143A  0828               	movf	?___flmul+2,w
  8881  143B  00C6               	movwf	___fladd@a+2
  8882  143C  0827               	movf	?___flmul+1,w
  8883  143D  00C5               	movwf	___fladd@a+1
  8884  143E  0826               	movf	?___flmul,w
  8885  143F  00C4               	movwf	___fladd@a
  8886  1440  3189  2123  3194   	fcall	___fladd
  8887  1443  0843               	movf	?___fladd+3,w
  8888  1444  0021               	movlb	1	; select bank1
  8889  1445  00E0               	movwf	(_Measure_Temp_PT100_2Wire$2973+3)^(0+128)
  8890  1446  0020               	movlb	0	; select bank0
  8891  1447  0842               	movf	?___fladd+2,w
  8892  1448  0021               	movlb	1	; select bank1
  8893  1449  00DF               	movwf	(_Measure_Temp_PT100_2Wire$2973+2)^(0+128)
  8894  144A  0020               	movlb	0	; select bank0
  8895  144B  0841               	movf	?___fladd+1,w
  8896  144C  0021               	movlb	1	; select bank1
  8897  144D  00DE               	movwf	(_Measure_Temp_PT100_2Wire$2973+1)^(0+128)
  8898  144E  0020               	movlb	0	; select bank0
  8899  144F  0840               	movf	?___fladd,w
  8900  1450  0021               	movlb	1	; select bank1
  8901  1451  00DD               	movwf	_Measure_Temp_PT100_2Wire$2973^(0+128)
  8902                           
  8903                           ;main.c: 200:     float Temp_PT100;;main.c: 202:     Temp_PT100 = ((-3.9083E-03 + sqrtf(
      +                          17.58480889E-06 + -23.10E-09 * R_PT100)) / -1.155E-06) - Tolerance_Temp_const;
  8904  1452  0860               	movf	(_Measure_Temp_PT100_2Wire$2973+3)^(0+128),w
  8905  1453  0020               	movlb	0	; select bank0
  8906  1454  00D7               	movwf	sqrtf@x+3
  8907  1455  0021               	movlb	1	; select bank1
  8908  1456  085F               	movf	(_Measure_Temp_PT100_2Wire$2973+2)^(0+128),w
  8909  1457  0020               	movlb	0	; select bank0
  8910  1458  00D6               	movwf	sqrtf@x+2
  8911  1459  0021               	movlb	1	; select bank1
  8912  145A  085E               	movf	(_Measure_Temp_PT100_2Wire$2973+1)^(0+128),w
  8913  145B  0020               	movlb	0	; select bank0
  8914  145C  00D5               	movwf	sqrtf@x+1
  8915  145D  0021               	movlb	1	; select bank1
  8916  145E  085D               	movf	_Measure_Temp_PT100_2Wire$2973^(0+128),w
  8917  145F  0020               	movlb	0	; select bank0
  8918  1460  00D4               	movwf	sqrtf@x
  8919  1461  318D  251C  3194   	fcall	_sqrtf
  8920  1464  0857               	movf	?_sqrtf+3,w
  8921  1465  0021               	movlb	1	; select bank1
  8922  1466  00E4               	movwf	(_Measure_Temp_PT100_2Wire$2974+3)^(0+128)
  8923  1467  0020               	movlb	0	; select bank0
  8924  1468  0856               	movf	?_sqrtf+2,w
  8925  1469  0021               	movlb	1	; select bank1
  8926  146A  00E3               	movwf	(_Measure_Temp_PT100_2Wire$2974+2)^(0+128)
  8927  146B  0020               	movlb	0	; select bank0
  8928  146C  0855               	movf	?_sqrtf+1,w
  8929  146D  0021               	movlb	1	; select bank1
  8930  146E  00E2               	movwf	(_Measure_Temp_PT100_2Wire$2974+1)^(0+128)
  8931  146F  0020               	movlb	0	; select bank0
  8932  1470  0854               	movf	?_sqrtf,w
  8933  1471  0021               	movlb	1	; select bank1
  8934  1472  00E1               	movwf	_Measure_Temp_PT100_2Wire$2974^(0+128)
  8935                           
  8936                           ;main.c: 200:     float Temp_PT100;;main.c: 202:     Temp_PT100 = ((-3.9083E-03 + sqrtf(
      +                          17.58480889E-06 + -23.10E-09 * R_PT100)) / -1.155E-06) - Tolerance_Temp_const;
  8937  1473  30B5               	movlw	181
  8938  1474  0020               	movlb	0	; select bank0
  8939  1475  00E3               	movwf	___fldiv@a+3
  8940  1476  309B               	movlw	155
  8941  1477  00E2               	movwf	___fldiv@a+2
  8942  1478  3005               	movlw	5
  8943  1479  00E1               	movwf	___fldiv@a+1
  8944  147A  307F               	movlw	127
  8945  147B  00E0               	movwf	___fldiv@a
  8946  147C  30BB               	movlw	187
  8947  147D  00C3               	movwf	___fladd@b+3
  8948  147E  3080               	movlw	128
  8949  147F  00C2               	movwf	___fladd@b+2
  8950  1480  3011               	movlw	17
  8951  1481  00C1               	movwf	___fladd@b+1
  8952  1482  3032               	movlw	50
  8953  1483  00C0               	movwf	___fladd@b
  8954  1484  0021               	movlb	1	; select bank1
  8955  1485  0864               	movf	(_Measure_Temp_PT100_2Wire$2974+3)^(0+128),w
  8956  1486  0020               	movlb	0	; select bank0
  8957  1487  00C7               	movwf	___fladd@a+3
  8958  1488  0021               	movlb	1	; select bank1
  8959  1489  0863               	movf	(_Measure_Temp_PT100_2Wire$2974+2)^(0+128),w
  8960  148A  0020               	movlb	0	; select bank0
  8961  148B  00C6               	movwf	___fladd@a+2
  8962  148C  0021               	movlb	1	; select bank1
  8963  148D  0862               	movf	(_Measure_Temp_PT100_2Wire$2974+1)^(0+128),w
  8964  148E  0020               	movlb	0	; select bank0
  8965  148F  00C5               	movwf	___fladd@a+1
  8966  1490  0021               	movlb	1	; select bank1
  8967  1491  0861               	movf	_Measure_Temp_PT100_2Wire$2974^(0+128),w
  8968  1492  0020               	movlb	0	; select bank0
  8969  1493  00C4               	movwf	___fladd@a
  8970  1494  3189  2123  3194   	fcall	___fladd
  8971  1497  0843               	movf	?___fladd+3,w
  8972  1498  00E7               	movwf	___fldiv@b+3
  8973  1499  0842               	movf	?___fladd+2,w
  8974  149A  00E6               	movwf	___fldiv@b+2
  8975  149B  0841               	movf	?___fladd+1,w
  8976  149C  00E5               	movwf	___fldiv@b+1
  8977  149D  0840               	movf	?___fladd,w
  8978  149E  00E4               	movwf	___fldiv@b
  8979  149F  3196  2629  3194   	fcall	___fldiv
  8980  14A2  0863               	movf	?___fldiv+3,w
  8981  14A3  0021               	movlb	1	; select bank1
  8982  14A4  00E8               	movwf	(_Measure_Temp_PT100_2Wire$2975+3)^(0+128)
  8983  14A5  0020               	movlb	0	; select bank0
  8984  14A6  0862               	movf	?___fldiv+2,w
  8985  14A7  0021               	movlb	1	; select bank1
  8986  14A8  00E7               	movwf	(_Measure_Temp_PT100_2Wire$2975+2)^(0+128)
  8987  14A9  0020               	movlb	0	; select bank0
  8988  14AA  0861               	movf	?___fldiv+1,w
  8989  14AB  0021               	movlb	1	; select bank1
  8990  14AC  00E6               	movwf	(_Measure_Temp_PT100_2Wire$2975+1)^(0+128)
  8991  14AD  0020               	movlb	0	; select bank0
  8992  14AE  0860               	movf	?___fldiv,w
  8993  14AF  0021               	movlb	1	; select bank1
  8994  14B0  00E5               	movwf	_Measure_Temp_PT100_2Wire$2975^(0+128)
  8995                           
  8996                           ;main.c: 200:     float Temp_PT100;;main.c: 202:     Temp_PT100 = ((-3.9083E-03 + sqrtf(
      +                          17.58480889E-06 + -23.10E-09 * R_PT100)) / -1.155E-06) - Tolerance_Temp_const;
  8997  14B1  30C2               	movlw	194
  8998  14B2  0020               	movlb	0	; select bank0
  8999  14B3  00C3               	movwf	___fladd@b+3
  9000  14B4  3014               	movlw	20
  9001  14B5  00C2               	movwf	___fladd@b+2
  9002  14B6  30CC               	movlw	204
  9003  14B7  00C1               	movwf	___fladd@b+1
  9004  14B8  30CD               	movlw	205
  9005  14B9  00C0               	movwf	___fladd@b
  9006  14BA  0021               	movlb	1	; select bank1
  9007  14BB  0868               	movf	(_Measure_Temp_PT100_2Wire$2975+3)^(0+128),w
  9008  14BC  0020               	movlb	0	; select bank0
  9009  14BD  00C7               	movwf	___fladd@a+3
  9010  14BE  0021               	movlb	1	; select bank1
  9011  14BF  0867               	movf	(_Measure_Temp_PT100_2Wire$2975+2)^(0+128),w
  9012  14C0  0020               	movlb	0	; select bank0
  9013  14C1  00C6               	movwf	___fladd@a+2
  9014  14C2  0021               	movlb	1	; select bank1
  9015  14C3  0866               	movf	(_Measure_Temp_PT100_2Wire$2975+1)^(0+128),w
  9016  14C4  0020               	movlb	0	; select bank0
  9017  14C5  00C5               	movwf	___fladd@a+1
  9018  14C6  0021               	movlb	1	; select bank1
  9019  14C7  0865               	movf	_Measure_Temp_PT100_2Wire$2975^(0+128),w
  9020  14C8  0020               	movlb	0	; select bank0
  9021  14C9  00C4               	movwf	___fladd@a
  9022  14CA  3189  2123         	fcall	___fladd
  9023  14CC  0843               	movf	?___fladd+3,w
  9024  14CD  0021               	movlb	1	; select bank1
  9025  14CE  00DC               	movwf	(Measure_Temp_PT100_2Wire@Temp_PT100+3)^(0+128)
  9026  14CF  0020               	movlb	0	; select bank0
  9027  14D0  0842               	movf	?___fladd+2,w
  9028  14D1  0021               	movlb	1	; select bank1
  9029  14D2  00DB               	movwf	(Measure_Temp_PT100_2Wire@Temp_PT100+2)^(0+128)
  9030  14D3  0020               	movlb	0	; select bank0
  9031  14D4  0841               	movf	?___fladd+1,w
  9032  14D5  0021               	movlb	1	; select bank1
  9033  14D6  00DA               	movwf	(Measure_Temp_PT100_2Wire@Temp_PT100+1)^(0+128)
  9034  14D7  0020               	movlb	0	; select bank0
  9035  14D8  0840               	movf	?___fladd,w
  9036  14D9  0021               	movlb	1	; select bank1
  9037  14DA  00D9               	movwf	Measure_Temp_PT100_2Wire@Temp_PT100^(0+128)
  9038                           
  9039                           ;main.c: 204:     return Temp_PT100;
  9040  14DB  085C               	movf	(Measure_Temp_PT100_2Wire@Temp_PT100+3)^(0+128),w
  9041  14DC  00D8               	movwf	(?_Measure_Temp_PT100_2Wire+3)^(0+128)
  9042  14DD  085B               	movf	(Measure_Temp_PT100_2Wire@Temp_PT100+2)^(0+128),w
  9043  14DE  00D7               	movwf	(?_Measure_Temp_PT100_2Wire+2)^(0+128)
  9044  14DF  085A               	movf	(Measure_Temp_PT100_2Wire@Temp_PT100+1)^(0+128),w
  9045  14E0  00D6               	movwf	(?_Measure_Temp_PT100_2Wire+1)^(0+128)
  9046  14E1  0859               	movf	Measure_Temp_PT100_2Wire@Temp_PT100^(0+128),w
  9047  14E2  00D5               	movwf	?_Measure_Temp_PT100_2Wire^(0+128)
  9048  14E3  0008               	return
  9049  14E4                     __end_of_Measure_Temp_PT100_2Wire:
  9050                           
  9051                           	psect	text50
  9052  0D1C                     __ptext50:	
  9053 ;; *************** function _sqrtf *****************
  9054 ;; Defined at:
  9055 ;;		line 22 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sqrtf.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;  x               4   52[BANK0 ] float 
  9058 ;; Auto vars:     Size  Location     Type
  9059 ;;  ix              4   36[BANK1 ] long 
  9060 ;;  r               4   32[BANK1 ] unsigned long 
  9061 ;;  m               4   28[BANK1 ] long 
  9062 ;;  z               4   24[BANK1 ] float 
  9063 ;;  t               4   20[BANK1 ] long 
  9064 ;;  q               4   16[BANK1 ] long 
  9065 ;;  __xc8_float_    4   12[BANK1 ] struct .
  9066 ;;  i               4    8[BANK1 ] long 
  9067 ;;  s               4    4[BANK1 ] long 
  9068 ;;  sign            4    0        long 
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  4   52[BANK0 ] float 
  9071 ;; Registers used:
  9072 ;;		wreg, status,2, status,0, pclath, cstack
  9073 ;; Tracked objects:
  9074 ;;		On entry : 1F/0
  9075 ;;		On exit  : 1F/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9078 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Locals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Totals:         0      12      40       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;Total ram usage:       52 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; Hardware stack levels required when called:    7
  9085 ;; This function calls:
  9086 ;;		___fladd
  9087 ;;		___flge
  9088 ;;		___flmul
  9089 ;;		_nanf
  9090 ;; This function is called by:
  9091 ;;		_Measure_Temp_PT100_2Wire
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           
  9096                           ;psect for function _sqrtf
  9097  0D1C                     _sqrtf:
  9098                           
  9099                           ;incstack = 0
  9100                           ; Regs used in _sqrtf: [wreg+status,2+status,0+pclath+cstack]
  9101  0D1C  0857               	movf	sqrtf@x+3,w
  9102  0D1D  0021               	movlb	1	; select bank1
  9103  0D1E  00AF               	movwf	(sqrtf@__xc8_float_word+3)^(0+128)
  9104  0D1F  0020               	movlb	0	; select bank0
  9105  0D20  0856               	movf	sqrtf@x+2,w
  9106  0D21  0021               	movlb	1	; select bank1
  9107  0D22  00AE               	movwf	(sqrtf@__xc8_float_word+2)^(0+128)
  9108  0D23  0020               	movlb	0	; select bank0
  9109  0D24  0855               	movf	sqrtf@x+1,w
  9110  0D25  0021               	movlb	1	; select bank1
  9111  0D26  00AD               	movwf	(sqrtf@__xc8_float_word+1)^(0+128)
  9112  0D27  0020               	movlb	0	; select bank0
  9113  0D28  0854               	movf	sqrtf@x,w
  9114  0D29  0021               	movlb	1	; select bank1
  9115  0D2A  00AC               	movwf	sqrtf@__xc8_float_word^(0+128)
  9116  0D2B  082F               	movf	(sqrtf@__xc8_float_word+3)^(0+128),w
  9117  0D2C  00C7               	movwf	(sqrtf@ix+3)^(0+128)
  9118  0D2D  082E               	movf	(sqrtf@__xc8_float_word+2)^(0+128),w
  9119  0D2E  00C6               	movwf	(sqrtf@ix+2)^(0+128)
  9120  0D2F  082D               	movf	(sqrtf@__xc8_float_word+1)^(0+128),w
  9121  0D30  00C5               	movwf	(sqrtf@ix+1)^(0+128)
  9122  0D31  082C               	movf	sqrtf@__xc8_float_word^(0+128),w
  9123  0D32  00C4               	movwf	sqrtf@ix^(0+128)
  9124  0D33  3000               	movlw	0
  9125  0D34  0544               	andwf	sqrtf@ix^(0+128),w
  9126  0D35  0020               	movlb	0	; select bank0
  9127  0D36  00D8               	movwf	??_sqrtf
  9128  0D37  3000               	movlw	0
  9129  0D38  0021               	movlb	1	; select bank1
  9130  0D39  0545               	andwf	(sqrtf@ix+1)^(0+128),w
  9131  0D3A  0020               	movlb	0	; select bank0
  9132  0D3B  00D9               	movwf	??_sqrtf+1
  9133  0D3C  3080               	movlw	128
  9134  0D3D  0021               	movlb	1	; select bank1
  9135  0D3E  0546               	andwf	(sqrtf@ix+2)^(0+128),w
  9136  0D3F  0020               	movlb	0	; select bank0
  9137  0D40  00DA               	movwf	??_sqrtf+2
  9138  0D41  307F               	movlw	127
  9139  0D42  0021               	movlb	1	; select bank1
  9140  0D43  0547               	andwf	(sqrtf@ix+3)^(0+128),w
  9141  0D44  0020               	movlb	0	; select bank0
  9142  0D45  00DB               	movwf	??_sqrtf+3
  9143  0D46  3080               	movlw	128
  9144  0D47  065A               	xorwf	??_sqrtf+2,w
  9145  0D48  307F               	movlw	127
  9146  0D49  1903               	skipnz
  9147  0D4A  065B               	xorwf	??_sqrtf+3,w
  9148  0D4B  0458               	iorwf	??_sqrtf,w
  9149  0D4C  0459               	iorwf	??_sqrtf+1,w
  9150  0D4D  1D03               	btfss	3,2
  9151  0D4E  2D7E               	goto	l6097
  9152  0D4F  0020               	movlb	0	; select bank0
  9153  0D50  0857               	movf	sqrtf@x+3,w
  9154  0D51  00C3               	movwf	___fladd@b+3
  9155  0D52  0856               	movf	sqrtf@x+2,w
  9156  0D53  00C2               	movwf	___fladd@b+2
  9157  0D54  0855               	movf	sqrtf@x+1,w
  9158  0D55  00C1               	movwf	___fladd@b+1
  9159  0D56  0854               	movf	sqrtf@x,w
  9160  0D57  00C0               	movwf	___fladd@b
  9161  0D58  0857               	movf	sqrtf@x+3,w
  9162  0D59  00A9               	movwf	___flmul@b+3
  9163  0D5A  0856               	movf	sqrtf@x+2,w
  9164  0D5B  00A8               	movwf	___flmul@b+2
  9165  0D5C  0855               	movf	sqrtf@x+1,w
  9166  0D5D  00A7               	movwf	___flmul@b+1
  9167  0D5E  0854               	movf	sqrtf@x,w
  9168  0D5F  00A6               	movwf	___flmul@b
  9169  0D60  0857               	movf	sqrtf@x+3,w
  9170  0D61  00AD               	movwf	___flmul@a+3
  9171  0D62  0856               	movf	sqrtf@x+2,w
  9172  0D63  00AC               	movwf	___flmul@a+2
  9173  0D64  0855               	movf	sqrtf@x+1,w
  9174  0D65  00AB               	movwf	___flmul@a+1
  9175  0D66  0854               	movf	sqrtf@x,w
  9176  0D67  00AA               	movwf	___flmul@a
  9177  0D68  318B  2304  318D   	fcall	___flmul
  9178  0D6B  0829               	movf	?___flmul+3,w
  9179  0D6C  00C7               	movwf	___fladd@a+3
  9180  0D6D  0828               	movf	?___flmul+2,w
  9181  0D6E  00C6               	movwf	___fladd@a+2
  9182  0D6F  0827               	movf	?___flmul+1,w
  9183  0D70  00C5               	movwf	___fladd@a+1
  9184  0D71  0826               	movf	?___flmul,w
  9185  0D72  00C4               	movwf	___fladd@a
  9186  0D73  3189  2123         	fcall	___fladd
  9187  0D75  0843               	movf	?___fladd+3,w
  9188  0D76  00D7               	movwf	?_sqrtf+3
  9189  0D77  0842               	movf	?___fladd+2,w
  9190  0D78  00D6               	movwf	?_sqrtf+2
  9191  0D79  0841               	movf	?___fladd+1,w
  9192  0D7A  00D5               	movwf	?_sqrtf+1
  9193  0D7B  0840               	movf	?___fladd,w
  9194  0D7C  00D4               	movwf	?_sqrtf
  9195  0D7D  0008               	return
  9196  0D7E                     l6097:
  9197  0D7E  0021               	movlb	1	; select bank1
  9198  0D7F  1BC7               	btfsc	(sqrtf@ix+3)^(0+128),7
  9199  0D80  2D8E               	goto	l6099
  9200  0D81  0847               	movf	(sqrtf@ix+3)^(0+128),w
  9201  0D82  1D03               	btfss	3,2
  9202  0D83  2DC0               	goto	l6109
  9203  0D84  0846               	movf	(sqrtf@ix+2)^(0+128),w
  9204  0D85  1D03               	btfss	3,2
  9205  0D86  2DC0               	goto	l6109
  9206  0D87  0845               	movf	(sqrtf@ix+1)^(0+128),w
  9207  0D88  1D03               	btfss	3,2
  9208  0D89  2DC0               	goto	l6109
  9209  0D8A  3001               	movlw	1
  9210  0D8B  0244               	subwf	sqrtf@ix^(0+128),w
  9211  0D8C  1803               	btfsc	3,0
  9212  0D8D  2DC0               	goto	l6109
  9213  0D8E                     l6099:
  9214  0D8E  30FF               	movlw	255
  9215  0D8F  0021               	movlb	1	; select bank1
  9216  0D90  0544               	andwf	sqrtf@ix^(0+128),w
  9217  0D91  0020               	movlb	0	; select bank0
  9218  0D92  00D8               	movwf	??_sqrtf
  9219  0D93  30FF               	movlw	255
  9220  0D94  0021               	movlb	1	; select bank1
  9221  0D95  0545               	andwf	(sqrtf@ix+1)^(0+128),w
  9222  0D96  0020               	movlb	0	; select bank0
  9223  0D97  00D9               	movwf	??_sqrtf+1
  9224  0D98  30FF               	movlw	255
  9225  0D99  0021               	movlb	1	; select bank1
  9226  0D9A  0546               	andwf	(sqrtf@ix+2)^(0+128),w
  9227  0D9B  0020               	movlb	0	; select bank0
  9228  0D9C  00DA               	movwf	??_sqrtf+2
  9229  0D9D  307F               	movlw	127
  9230  0D9E  0021               	movlb	1	; select bank1
  9231  0D9F  0547               	andwf	(sqrtf@ix+3)^(0+128),w
  9232  0DA0  0020               	movlb	0	; select bank0
  9233  0DA1  00DB               	movwf	??_sqrtf+3
  9234  0DA2  085B               	movf	??_sqrtf+3,w
  9235  0DA3  045A               	iorwf	??_sqrtf+2,w
  9236  0DA4  0459               	iorwf	??_sqrtf+1,w
  9237  0DA5  0458               	iorwf	??_sqrtf,w
  9238  0DA6  1903               	btfsc	3,2
  9239  0DA7  0008               	return
  9240  0DA8  0021               	movlb	1	; select bank1
  9241  0DA9  1FC7               	btfss	(sqrtf@ix+3)^(0+128),7
  9242  0DAA  2DC0               	goto	l6109
  9243  0DAB  3021               	movlw	33
  9244  0DAC  0022               	movlb	2	; select bank2
  9245  0DAD  00C3               	movwf	_errno^(0+256)
  9246  0DAE  3000               	movlw	0
  9247  0DAF  00C4               	movwf	(_errno^(0+256)+1)
  9248  0DB0  302B               	movlw	low ((STR_1+11)| (0+32768))
  9249  0DB1  00F2               	movwf	nanf@s
  9250  0DB2  3098               	movlw	high ((STR_1+11)| (0+32768))
  9251  0DB3  00F3               	movwf	nanf@s+1
  9252  0DB4  319B  23BD         	fcall	_nanf
  9253  0DB6  0875               	movf	?_nanf+3,w
  9254  0DB7  0020               	movlb	0	; select bank0
  9255  0DB8  00D7               	movwf	?_sqrtf+3
  9256  0DB9  0874               	movf	?_nanf+2,w
  9257  0DBA  00D6               	movwf	?_sqrtf+2
  9258  0DBB  0873               	movf	?_nanf+1,w
  9259  0DBC  00D5               	movwf	?_sqrtf+1
  9260  0DBD  0872               	movf	?_nanf,w
  9261  0DBE  00D4               	movwf	?_sqrtf
  9262  0DBF  0008               	return
  9263  0DC0                     l6109:
  9264  0DC0  0021               	movlb	1	; select bank1
  9265  0DC1  0844               	movf	sqrtf@ix^(0+128),w
  9266  0DC2  0020               	movlb	0	; select bank0
  9267  0DC3  00D8               	movwf	??_sqrtf
  9268  0DC4  0021               	movlb	1	; select bank1
  9269  0DC5  0845               	movf	(sqrtf@ix+1)^(0+128),w
  9270  0DC6  0020               	movlb	0	; select bank0
  9271  0DC7  00D9               	movwf	??_sqrtf+1
  9272  0DC8  0021               	movlb	1	; select bank1
  9273  0DC9  0846               	movf	(sqrtf@ix+2)^(0+128),w
  9274  0DCA  0020               	movlb	0	; select bank0
  9275  0DCB  00DA               	movwf	??_sqrtf+2
  9276  0DCC  0021               	movlb	1	; select bank1
  9277  0DCD  0847               	movf	(sqrtf@ix+3)^(0+128),w
  9278  0DCE  0020               	movlb	0	; select bank0
  9279  0DCF  00DB               	movwf	??_sqrtf+3
  9280  0DD0  3017               	movlw	23
  9281  0DD1  00DC               	movwf	??_sqrtf+4
  9282  0DD2                     u6885:
  9283  0DD2  37DB               	asrf	??_sqrtf+3,f
  9284  0DD3  0CDA               	rrf	??_sqrtf+2,f
  9285  0DD4  0CD9               	rrf	??_sqrtf+1,f
  9286  0DD5  0CD8               	rrf	??_sqrtf,f
  9287  0DD6  0BDC               	decfsz	??_sqrtf+4,f
  9288  0DD7  2DD2               	goto	u6885
  9289  0DD8  085B               	movf	??_sqrtf+3,w
  9290  0DD9  0021               	movlb	1	; select bank1
  9291  0DDA  00BF               	movwf	(sqrtf@m+3)^(0+128)
  9292  0DDB  0020               	movlb	0	; select bank0
  9293  0DDC  085A               	movf	??_sqrtf+2,w
  9294  0DDD  0021               	movlb	1	; select bank1
  9295  0DDE  00BE               	movwf	(sqrtf@m+2)^(0+128)
  9296  0DDF  0020               	movlb	0	; select bank0
  9297  0DE0  0859               	movf	??_sqrtf+1,w
  9298  0DE1  0021               	movlb	1	; select bank1
  9299  0DE2  00BD               	movwf	(sqrtf@m+1)^(0+128)
  9300  0DE3  0020               	movlb	0	; select bank0
  9301  0DE4  0858               	movf	??_sqrtf,w
  9302  0DE5  0021               	movlb	1	; select bank1
  9303  0DE6  00BC               	movwf	sqrtf@m^(0+128)
  9304  0DE7  083F               	movf	(sqrtf@m+3)^(0+128),w
  9305  0DE8  043E               	iorwf	(sqrtf@m+2)^(0+128),w
  9306  0DE9  043D               	iorwf	(sqrtf@m+1)^(0+128),w
  9307  0DEA  043C               	iorwf	sqrtf@m^(0+128),w
  9308  0DEB  1D03               	skipz
  9309  0DEC  2E2F               	goto	l1958
  9310  0DED  3000               	movlw	0
  9311  0DEE  00AB               	movwf	(sqrtf@i+3)^(0+128)
  9312  0DEF  3000               	movlw	0
  9313  0DF0  00AA               	movwf	(sqrtf@i+2)^(0+128)
  9314  0DF1  3000               	movlw	0
  9315  0DF2  00A9               	movwf	(sqrtf@i+1)^(0+128)
  9316  0DF3  3000               	movlw	0
  9317  0DF4  00A8               	movwf	sqrtf@i^(0+128)
  9318  0DF5                     l6119:
  9319  0DF5  1BC6               	btfsc	(sqrtf@ix+2)^(0+128),7
  9320  0DF6  2E07               	goto	l6121
  9321  0DF7  3001               	movlw	1
  9322  0DF8                     u6905:
  9323  0DF8  35C4               	lslf	sqrtf@ix^(0+128),f
  9324  0DF9  0DC5               	rlf	(sqrtf@ix+1)^(0+128),f
  9325  0DFA  0DC6               	rlf	(sqrtf@ix+2)^(0+128),f
  9326  0DFB  0DC7               	rlf	(sqrtf@ix+3)^(0+128),f
  9327  0DFC  0B89               	decfsz	9,f
  9328  0DFD  2DF8               	goto	u6905
  9329  0DFE  3001               	movlw	1
  9330  0DFF  07A8               	addwf	sqrtf@i^(0+128),f
  9331  0E00  3000               	movlw	0
  9332  0E01  3DA9               	addwfc	(sqrtf@i+1)^(0+128),f
  9333  0E02  3000               	movlw	0
  9334  0E03  3DAA               	addwfc	(sqrtf@i+2)^(0+128),f
  9335  0E04  3000               	movlw	0
  9336  0E05  3DAB               	addwfc	(sqrtf@i+3)^(0+128),f
  9337  0E06  2DF5               	goto	l6119
  9338  0E07                     l6121:
  9339  0E07  30FF               	movlw	255
  9340  0E08  0020               	movlb	0	; select bank0
  9341  0E09  00D8               	movwf	??_sqrtf
  9342  0E0A  30FF               	movlw	255
  9343  0E0B  00D9               	movwf	??_sqrtf+1
  9344  0E0C  30FF               	movlw	255
  9345  0E0D  00DA               	movwf	??_sqrtf+2
  9346  0E0E  30FF               	movlw	255
  9347  0E0F  00DB               	movwf	??_sqrtf+3
  9348  0E10  0021               	movlb	1	; select bank1
  9349  0E11  0828               	movf	sqrtf@i^(0+128),w
  9350  0E12  0020               	movlb	0	; select bank0
  9351  0E13  07D8               	addwf	??_sqrtf,f
  9352  0E14  0021               	movlb	1	; select bank1
  9353  0E15  0829               	movf	(sqrtf@i+1)^(0+128),w
  9354  0E16  0020               	movlb	0	; select bank0
  9355  0E17  3DD9               	addwfc	??_sqrtf+1,f
  9356  0E18  0021               	movlb	1	; select bank1
  9357  0E19  082A               	movf	(sqrtf@i+2)^(0+128),w
  9358  0E1A  0020               	movlb	0	; select bank0
  9359  0E1B  3DDA               	addwfc	??_sqrtf+2,f
  9360  0E1C  0021               	movlb	1	; select bank1
  9361  0E1D  082B               	movf	(sqrtf@i+3)^(0+128),w
  9362  0E1E  0020               	movlb	0	; select bank0
  9363  0E1F  3DDB               	addwfc	??_sqrtf+3,f
  9364  0E20  0858               	movf	??_sqrtf,w
  9365  0E21  0021               	movlb	1	; select bank1
  9366  0E22  02BC               	subwf	sqrtf@m^(0+128),f
  9367  0E23  0020               	movlb	0	; select bank0
  9368  0E24  0859               	movf	??_sqrtf+1,w
  9369  0E25  0021               	movlb	1	; select bank1
  9370  0E26  3BBD               	subwfb	(sqrtf@m+1)^(0+128),f
  9371  0E27  0020               	movlb	0	; select bank0
  9372  0E28  085A               	movf	??_sqrtf+2,w
  9373  0E29  0021               	movlb	1	; select bank1
  9374  0E2A  3BBE               	subwfb	(sqrtf@m+2)^(0+128),f
  9375  0E2B  0020               	movlb	0	; select bank0
  9376  0E2C  085B               	movf	??_sqrtf+3,w
  9377  0E2D  0021               	movlb	1	; select bank1
  9378  0E2E  3BBF               	subwfb	(sqrtf@m+3)^(0+128),f
  9379  0E2F                     l1958:
  9380  0E2F  3081               	movlw	129
  9381  0E30  07BC               	addwf	sqrtf@m^(0+128),f
  9382  0E31  30FF               	movlw	255
  9383  0E32  3DBD               	addwfc	(sqrtf@m+1)^(0+128),f
  9384  0E33  30FF               	movlw	255
  9385  0E34  3DBE               	addwfc	(sqrtf@m+2)^(0+128),f
  9386  0E35  30FF               	movlw	255
  9387  0E36  3DBF               	addwfc	(sqrtf@m+3)^(0+128),f
  9388  0E37  3000               	movlw	0
  9389  0E38  0020               	movlb	0	; select bank0
  9390  0E39  00D8               	movwf	??_sqrtf
  9391  0E3A  3000               	movlw	0
  9392  0E3B  00D9               	movwf	??_sqrtf+1
  9393  0E3C  3080               	movlw	128
  9394  0E3D  00DA               	movwf	??_sqrtf+2
  9395  0E3E  3000               	movlw	0
  9396  0E3F  00DB               	movwf	??_sqrtf+3
  9397  0E40  30FF               	movlw	255
  9398  0E41  0021               	movlb	1	; select bank1
  9399  0E42  0544               	andwf	sqrtf@ix^(0+128),w
  9400  0E43  0020               	movlb	0	; select bank0
  9401  0E44  00DC               	movwf	??_sqrtf+4
  9402  0E45  30FF               	movlw	255
  9403  0E46  0021               	movlb	1	; select bank1
  9404  0E47  0545               	andwf	(sqrtf@ix+1)^(0+128),w
  9405  0E48  0020               	movlb	0	; select bank0
  9406  0E49  00DD               	movwf	??_sqrtf+5
  9407  0E4A  307F               	movlw	127
  9408  0E4B  0021               	movlb	1	; select bank1
  9409  0E4C  0546               	andwf	(sqrtf@ix+2)^(0+128),w
  9410  0E4D  0020               	movlb	0	; select bank0
  9411  0E4E  00DE               	movwf	??_sqrtf+6
  9412  0E4F  3000               	movlw	0
  9413  0E50  0021               	movlb	1	; select bank1
  9414  0E51  0547               	andwf	(sqrtf@ix+3)^(0+128),w
  9415  0E52  0020               	movlb	0	; select bank0
  9416  0E53  00DF               	movwf	??_sqrtf+7
  9417  0E54  085C               	movf	??_sqrtf+4,w
  9418  0E55  04D8               	iorwf	??_sqrtf,f
  9419  0E56  085D               	movf	??_sqrtf+5,w
  9420  0E57  04D9               	iorwf	??_sqrtf+1,f
  9421  0E58  085E               	movf	??_sqrtf+6,w
  9422  0E59  04DA               	iorwf	??_sqrtf+2,f
  9423  0E5A  085F               	movf	??_sqrtf+7,w
  9424  0E5B  04DB               	iorwf	??_sqrtf+3,f
  9425  0E5C  085B               	movf	??_sqrtf+3,w
  9426  0E5D  0021               	movlb	1	; select bank1
  9427  0E5E  00C7               	movwf	(sqrtf@ix+3)^(0+128)
  9428  0E5F  0020               	movlb	0	; select bank0
  9429  0E60  085A               	movf	??_sqrtf+2,w
  9430  0E61  0021               	movlb	1	; select bank1
  9431  0E62  00C6               	movwf	(sqrtf@ix+2)^(0+128)
  9432  0E63  0020               	movlb	0	; select bank0
  9433  0E64  0859               	movf	??_sqrtf+1,w
  9434  0E65  0021               	movlb	1	; select bank1
  9435  0E66  00C5               	movwf	(sqrtf@ix+1)^(0+128)
  9436  0E67  0020               	movlb	0	; select bank0
  9437  0E68  0858               	movf	??_sqrtf,w
  9438  0E69  0021               	movlb	1	; select bank1
  9439  0E6A  00C4               	movwf	sqrtf@ix^(0+128)
  9440  0E6B  1C3C               	btfss	sqrtf@m^(0+128),0
  9441  0E6C  2E75               	goto	l1962
  9442  0E6D  0844               	movf	sqrtf@ix^(0+128),w
  9443  0E6E  07C4               	addwf	sqrtf@ix^(0+128),f
  9444  0E6F  0845               	movf	(sqrtf@ix+1)^(0+128),w
  9445  0E70  3DC5               	addwfc	(sqrtf@ix+1)^(0+128),f
  9446  0E71  0846               	movf	(sqrtf@ix+2)^(0+128),w
  9447  0E72  3DC6               	addwfc	(sqrtf@ix+2)^(0+128),f
  9448  0E73  0847               	movf	(sqrtf@ix+3)^(0+128),w
  9449  0E74  3DC7               	addwfc	(sqrtf@ix+3)^(0+128),f
  9450  0E75                     l1962:
  9451  0E75  3001               	movlw	1
  9452  0E76  0020               	movlb	0	; select bank0
  9453  0E77  00D8               	movwf	??_sqrtf
  9454  0E78                     u6935:
  9455  0E78  0021               	movlb	1	; select bank1
  9456  0E79  37BF               	asrf	(sqrtf@m+3)^(0+128),f
  9457  0E7A  0CBE               	rrf	(sqrtf@m+2)^(0+128),f
  9458  0E7B  0CBD               	rrf	(sqrtf@m+1)^(0+128),f
  9459  0E7C  0CBC               	rrf	sqrtf@m^(0+128),f
  9460  0E7D  0020               	movlb	0	; select bank0
  9461  0E7E  0BD8               	decfsz	??_sqrtf& (0+127),f
  9462  0E7F  2E78               	goto	u6935
  9463  0E80  0021               	movlb	1	; select bank1
  9464  0E81  0844               	movf	sqrtf@ix^(0+128),w
  9465  0E82  07C4               	addwf	sqrtf@ix^(0+128),f
  9466  0E83  0845               	movf	(sqrtf@ix+1)^(0+128),w
  9467  0E84  3DC5               	addwfc	(sqrtf@ix+1)^(0+128),f
  9468  0E85  0846               	movf	(sqrtf@ix+2)^(0+128),w
  9469  0E86  3DC6               	addwfc	(sqrtf@ix+2)^(0+128),f
  9470  0E87  0847               	movf	(sqrtf@ix+3)^(0+128),w
  9471  0E88  3DC7               	addwfc	(sqrtf@ix+3)^(0+128),f
  9472  0E89  3000               	movlw	0
  9473  0E8A  00A7               	movwf	(sqrtf@s+3)^(0+128)
  9474  0E8B  3000               	movlw	0
  9475  0E8C  00A6               	movwf	(sqrtf@s+2)^(0+128)
  9476  0E8D  3000               	movlw	0
  9477  0E8E  00A5               	movwf	(sqrtf@s+1)^(0+128)
  9478  0E8F  3000               	movlw	0
  9479  0E90  00A4               	movwf	sqrtf@s^(0+128)
  9480  0E91  0827               	movf	(sqrtf@s+3)^(0+128),w
  9481  0E92  00B3               	movwf	(sqrtf@q+3)^(0+128)
  9482  0E93  0826               	movf	(sqrtf@s+2)^(0+128),w
  9483  0E94  00B2               	movwf	(sqrtf@q+2)^(0+128)
  9484  0E95  0825               	movf	(sqrtf@s+1)^(0+128),w
  9485  0E96  00B1               	movwf	(sqrtf@q+1)^(0+128)
  9486  0E97  0824               	movf	sqrtf@s^(0+128),w
  9487  0E98  00B0               	movwf	sqrtf@q^(0+128)
  9488  0E99  3001               	movlw	1
  9489  0E9A  00C3               	movwf	(sqrtf@r+3)^(0+128)
  9490  0E9B  3000               	movlw	0
  9491  0E9C  00C2               	movwf	(sqrtf@r+2)^(0+128)
  9492  0E9D  3000               	movlw	0
  9493  0E9E  00C1               	movwf	(sqrtf@r+1)^(0+128)
  9494  0E9F  3000               	movlw	0
  9495  0EA0  00C0               	movwf	sqrtf@r^(0+128)
  9496  0EA1                     l6133:
  9497  0EA1  0843               	movf	(sqrtf@r+3)^(0+128),w
  9498  0EA2  0442               	iorwf	(sqrtf@r+2)^(0+128),w
  9499  0EA3  0441               	iorwf	(sqrtf@r+1)^(0+128),w
  9500  0EA4  0440               	iorwf	sqrtf@r^(0+128),w
  9501  0EA5  1903               	btfsc	3,2
  9502  0EA6  2F23               	goto	l6135
  9503  0EA7  0840               	movf	sqrtf@r^(0+128),w
  9504  0EA8  0724               	addwf	sqrtf@s^(0+128),w
  9505  0EA9  0020               	movlb	0	; select bank0
  9506  0EAA  00D8               	movwf	??_sqrtf
  9507  0EAB  0021               	movlb	1	; select bank1
  9508  0EAC  0841               	movf	(sqrtf@r+1)^(0+128),w
  9509  0EAD  3D25               	addwfc	(sqrtf@s+1)^(0+128),w
  9510  0EAE  0020               	movlb	0	; select bank0
  9511  0EAF  00D9               	movwf	??_sqrtf+1
  9512  0EB0  0021               	movlb	1	; select bank1
  9513  0EB1  0842               	movf	(sqrtf@r+2)^(0+128),w
  9514  0EB2  3D26               	addwfc	(sqrtf@s+2)^(0+128),w
  9515  0EB3  0020               	movlb	0	; select bank0
  9516  0EB4  00DA               	movwf	??_sqrtf+2
  9517  0EB5  0021               	movlb	1	; select bank1
  9518  0EB6  0843               	movf	(sqrtf@r+3)^(0+128),w
  9519  0EB7  3D27               	addwfc	(sqrtf@s+3)^(0+128),w
  9520  0EB8  0020               	movlb	0	; select bank0
  9521  0EB9  00DB               	movwf	??_sqrtf+3
  9522  0EBA  085B               	movf	??_sqrtf+3,w
  9523  0EBB  0021               	movlb	1	; select bank1
  9524  0EBC  00B7               	movwf	(sqrtf@t+3)^(0+128)
  9525  0EBD  0020               	movlb	0	; select bank0
  9526  0EBE  085A               	movf	??_sqrtf+2,w
  9527  0EBF  0021               	movlb	1	; select bank1
  9528  0EC0  00B6               	movwf	(sqrtf@t+2)^(0+128)
  9529  0EC1  0020               	movlb	0	; select bank0
  9530  0EC2  0859               	movf	??_sqrtf+1,w
  9531  0EC3  0021               	movlb	1	; select bank1
  9532  0EC4  00B5               	movwf	(sqrtf@t+1)^(0+128)
  9533  0EC5  0020               	movlb	0	; select bank0
  9534  0EC6  0858               	movf	??_sqrtf,w
  9535  0EC7  0021               	movlb	1	; select bank1
  9536  0EC8  00B4               	movwf	sqrtf@t^(0+128)
  9537  0EC9  0847               	movf	(sqrtf@ix+3)^(0+128),w
  9538  0ECA  3A80               	xorlw	128
  9539  0ECB  0020               	movlb	0	; select bank0
  9540  0ECC  00D8               	movwf	??_sqrtf
  9541  0ECD  0021               	movlb	1	; select bank1
  9542  0ECE  0837               	movf	(sqrtf@t+3)^(0+128),w
  9543  0ECF  3A80               	xorlw	128
  9544  0ED0  0020               	movlb	0	; select bank0
  9545  0ED1  0258               	subwf	??_sqrtf,w
  9546  0ED2  0021               	movlb	1	; select bank1
  9547  0ED3  1D03               	skipz
  9548  0ED4  2EDF               	goto	u6943
  9549  0ED5  0836               	movf	(sqrtf@t+2)^(0+128),w
  9550  0ED6  0246               	subwf	(sqrtf@ix+2)^(0+128),w
  9551  0ED7  1D03               	skipz
  9552  0ED8  2EDF               	goto	u6943
  9553  0ED9  0835               	movf	(sqrtf@t+1)^(0+128),w
  9554  0EDA  0245               	subwf	(sqrtf@ix+1)^(0+128),w
  9555  0EDB  1D03               	skipz
  9556  0EDC  2EDF               	goto	u6943
  9557  0EDD  0834               	movf	sqrtf@t^(0+128),w
  9558  0EDE  0244               	subwf	sqrtf@ix^(0+128),w
  9559  0EDF                     u6943:
  9560  0EDF  1C03               	skipc
  9561  0EE0  2F13               	goto	l1965
  9562  0EE1  0840               	movf	sqrtf@r^(0+128),w
  9563  0EE2  0734               	addwf	sqrtf@t^(0+128),w
  9564  0EE3  0020               	movlb	0	; select bank0
  9565  0EE4  00D8               	movwf	??_sqrtf
  9566  0EE5  0021               	movlb	1	; select bank1
  9567  0EE6  0841               	movf	(sqrtf@r+1)^(0+128),w
  9568  0EE7  3D35               	addwfc	(sqrtf@t+1)^(0+128),w
  9569  0EE8  0020               	movlb	0	; select bank0
  9570  0EE9  00D9               	movwf	??_sqrtf+1
  9571  0EEA  0021               	movlb	1	; select bank1
  9572  0EEB  0842               	movf	(sqrtf@r+2)^(0+128),w
  9573  0EEC  3D36               	addwfc	(sqrtf@t+2)^(0+128),w
  9574  0EED  0020               	movlb	0	; select bank0
  9575  0EEE  00DA               	movwf	??_sqrtf+2
  9576  0EEF  0021               	movlb	1	; select bank1
  9577  0EF0  0843               	movf	(sqrtf@r+3)^(0+128),w
  9578  0EF1  3D37               	addwfc	(sqrtf@t+3)^(0+128),w
  9579  0EF2  0020               	movlb	0	; select bank0
  9580  0EF3  00DB               	movwf	??_sqrtf+3
  9581  0EF4  085B               	movf	??_sqrtf+3,w
  9582  0EF5  0021               	movlb	1	; select bank1
  9583  0EF6  00A7               	movwf	(sqrtf@s+3)^(0+128)
  9584  0EF7  0020               	movlb	0	; select bank0
  9585  0EF8  085A               	movf	??_sqrtf+2,w
  9586  0EF9  0021               	movlb	1	; select bank1
  9587  0EFA  00A6               	movwf	(sqrtf@s+2)^(0+128)
  9588  0EFB  0020               	movlb	0	; select bank0
  9589  0EFC  0859               	movf	??_sqrtf+1,w
  9590  0EFD  0021               	movlb	1	; select bank1
  9591  0EFE  00A5               	movwf	(sqrtf@s+1)^(0+128)
  9592  0EFF  0020               	movlb	0	; select bank0
  9593  0F00  0858               	movf	??_sqrtf,w
  9594  0F01  0021               	movlb	1	; select bank1
  9595  0F02  00A4               	movwf	sqrtf@s^(0+128)
  9596  0F03  0834               	movf	sqrtf@t^(0+128),w
  9597  0F04  02C4               	subwf	sqrtf@ix^(0+128),f
  9598  0F05  0835               	movf	(sqrtf@t+1)^(0+128),w
  9599  0F06  3BC5               	subwfb	(sqrtf@ix+1)^(0+128),f
  9600  0F07  0836               	movf	(sqrtf@t+2)^(0+128),w
  9601  0F08  3BC6               	subwfb	(sqrtf@ix+2)^(0+128),f
  9602  0F09  0837               	movf	(sqrtf@t+3)^(0+128),w
  9603  0F0A  3BC7               	subwfb	(sqrtf@ix+3)^(0+128),f
  9604  0F0B  0840               	movf	sqrtf@r^(0+128),w
  9605  0F0C  07B0               	addwf	sqrtf@q^(0+128),f
  9606  0F0D  0841               	movf	(sqrtf@r+1)^(0+128),w
  9607  0F0E  3DB1               	addwfc	(sqrtf@q+1)^(0+128),f
  9608  0F0F  0842               	movf	(sqrtf@r+2)^(0+128),w
  9609  0F10  3DB2               	addwfc	(sqrtf@q+2)^(0+128),f
  9610  0F11  0843               	movf	(sqrtf@r+3)^(0+128),w
  9611  0F12  3DB3               	addwfc	(sqrtf@q+3)^(0+128),f
  9612  0F13                     l1965:
  9613  0F13  0844               	movf	sqrtf@ix^(0+128),w
  9614  0F14  07C4               	addwf	sqrtf@ix^(0+128),f
  9615  0F15  0845               	movf	(sqrtf@ix+1)^(0+128),w
  9616  0F16  3DC5               	addwfc	(sqrtf@ix+1)^(0+128),f
  9617  0F17  0846               	movf	(sqrtf@ix+2)^(0+128),w
  9618  0F18  3DC6               	addwfc	(sqrtf@ix+2)^(0+128),f
  9619  0F19  0847               	movf	(sqrtf@ix+3)^(0+128),w
  9620  0F1A  3DC7               	addwfc	(sqrtf@ix+3)^(0+128),f
  9621  0F1B  3001               	movlw	1
  9622  0F1C                     u6955:
  9623  0F1C  36C3               	lsrf	(sqrtf@r+3)^(0+128),f
  9624  0F1D  0CC2               	rrf	(sqrtf@r+2)^(0+128),f
  9625  0F1E  0CC1               	rrf	(sqrtf@r+1)^(0+128),f
  9626  0F1F  0CC0               	rrf	sqrtf@r^(0+128),f
  9627  0F20  0B89               	decfsz	9,f
  9628  0F21  2F1C               	goto	u6955
  9629  0F22  2EA1               	goto	l6133
  9630  0F23                     l6135:
  9631  0F23  0847               	movf	(sqrtf@ix+3)^(0+128),w
  9632  0F24  0446               	iorwf	(sqrtf@ix+2)^(0+128),w
  9633  0F25  0445               	iorwf	(sqrtf@ix+1)^(0+128),w
  9634  0F26  0444               	iorwf	sqrtf@ix^(0+128),w
  9635  0F27  1903               	skipnz
  9636  0F28  2F90               	goto	l6149
  9637  0F29  303F               	movlw	63
  9638  0F2A  00BB               	movwf	(sqrtf@z+3)^(0+128)
  9639  0F2B  3080               	movlw	128
  9640  0F2C  00BA               	movwf	(sqrtf@z+2)^(0+128)
  9641  0F2D  3000               	movlw	0
  9642  0F2E  00B9               	movwf	(sqrtf@z+1)^(0+128)
  9643  0F2F  3000               	movlw	0
  9644  0F30  00B8               	movwf	sqrtf@z^(0+128)
  9645  0F31  083B               	movf	(sqrtf@z+3)^(0+128),w
  9646  0F32  00F5               	movwf	___flge@ff1+3
  9647  0F33  083A               	movf	(sqrtf@z+2)^(0+128),w
  9648  0F34  00F4               	movwf	___flge@ff1+2
  9649  0F35  0839               	movf	(sqrtf@z+1)^(0+128),w
  9650  0F36  00F3               	movwf	___flge@ff1+1
  9651  0F37  0838               	movf	sqrtf@z^(0+128),w
  9652  0F38  00F2               	movwf	___flge@ff1
  9653  0F39  303F               	movlw	63
  9654  0F3A  00F9               	movwf	___flge@ff2+3
  9655  0F3B  3080               	movlw	128
  9656  0F3C  00F8               	movwf	___flge@ff2+2
  9657  0F3D  3000               	movlw	0
  9658  0F3E  00F7               	movwf	___flge@ff2+1
  9659  0F3F  3000               	movlw	0
  9660  0F40  00F6               	movwf	___flge@ff2
  9661  0F41  3191  219F  318D   	fcall	___flge
  9662  0F44  1C03               	btfss	3,0
  9663  0F45  2F90               	goto	l6149
  9664  0F46  303F               	movlw	63
  9665  0F47  0021               	movlb	1	; select bank1
  9666  0F48  00BB               	movwf	(sqrtf@z+3)^(0+128)
  9667  0F49  3080               	movlw	128
  9668  0F4A  00BA               	movwf	(sqrtf@z+2)^(0+128)
  9669  0F4B  3000               	movlw	0
  9670  0F4C  00B9               	movwf	(sqrtf@z+1)^(0+128)
  9671  0F4D  3000               	movlw	0
  9672  0F4E  00B8               	movwf	sqrtf@z^(0+128)
  9673  0F4F  303F               	movlw	63
  9674  0F50  00F5               	movwf	___flge@ff1+3
  9675  0F51  3080               	movlw	128
  9676  0F52  00F4               	movwf	___flge@ff1+2
  9677  0F53  3000               	movlw	0
  9678  0F54  00F3               	movwf	___flge@ff1+1
  9679  0F55  3000               	movlw	0
  9680  0F56  00F2               	movwf	___flge@ff1
  9681  0F57  083B               	movf	(sqrtf@z+3)^(0+128),w
  9682  0F58  00F9               	movwf	___flge@ff2+3
  9683  0F59  083A               	movf	(sqrtf@z+2)^(0+128),w
  9684  0F5A  00F8               	movwf	___flge@ff2+2
  9685  0F5B  0839               	movf	(sqrtf@z+1)^(0+128),w
  9686  0F5C  00F7               	movwf	___flge@ff2+1
  9687  0F5D  0838               	movf	sqrtf@z^(0+128),w
  9688  0F5E  00F6               	movwf	___flge@ff2
  9689  0F5F  3191  219F  318D   	fcall	___flge
  9690  0F62  1803               	btfsc	3,0
  9691  0F63  2F6D               	goto	l6147
  9692  0F64  3002               	movlw	2
  9693  0F65  0021               	movlb	1	; select bank1
  9694  0F66  07B0               	addwf	sqrtf@q^(0+128),f
  9695  0F67  3000               	movlw	0
  9696  0F68  3DB1               	addwfc	(sqrtf@q+1)^(0+128),f
  9697  0F69  3000               	movlw	0
  9698  0F6A  3DB2               	addwfc	(sqrtf@q+2)^(0+128),f
  9699  0F6B  3000               	movlw	0
  9700  0F6C  2F8F               	goto	L3
  9701  0F6D                     l6147:
  9702  0F6D  3001               	movlw	1
  9703  0F6E  0021               	movlb	1	; select bank1
  9704  0F6F  0530               	andwf	sqrtf@q^(0+128),w
  9705  0F70  0020               	movlb	0	; select bank0
  9706  0F71  00D8               	movwf	??_sqrtf
  9707  0F72  3000               	movlw	0
  9708  0F73  0021               	movlb	1	; select bank1
  9709  0F74  0531               	andwf	(sqrtf@q+1)^(0+128),w
  9710  0F75  0020               	movlb	0	; select bank0
  9711  0F76  00D9               	movwf	??_sqrtf+1
  9712  0F77  3000               	movlw	0
  9713  0F78  0021               	movlb	1	; select bank1
  9714  0F79  0532               	andwf	(sqrtf@q+2)^(0+128),w
  9715  0F7A  0020               	movlb	0	; select bank0
  9716  0F7B  00DA               	movwf	??_sqrtf+2
  9717  0F7C  3000               	movlw	0
  9718  0F7D  0021               	movlb	1	; select bank1
  9719  0F7E  0533               	andwf	(sqrtf@q+3)^(0+128),w
  9720  0F7F  0020               	movlb	0	; select bank0
  9721  0F80  00DB               	movwf	??_sqrtf+3
  9722  0F81  0858               	movf	??_sqrtf,w
  9723  0F82  0021               	movlb	1	; select bank1
  9724  0F83  07B0               	addwf	sqrtf@q^(0+128),f
  9725  0F84  0020               	movlb	0	; select bank0
  9726  0F85  0859               	movf	??_sqrtf+1,w
  9727  0F86  0021               	movlb	1	; select bank1
  9728  0F87  3DB1               	addwfc	(sqrtf@q+1)^(0+128),f
  9729  0F88  0020               	movlb	0	; select bank0
  9730  0F89  085A               	movf	??_sqrtf+2,w
  9731  0F8A  0021               	movlb	1	; select bank1
  9732  0F8B  3DB2               	addwfc	(sqrtf@q+2)^(0+128),f
  9733  0F8C  0020               	movlb	0	; select bank0
  9734  0F8D  085B               	movf	??_sqrtf+3,w
  9735  0F8E  0021               	movlb	1	; select bank1
  9736  0F8F                     L3:
  9737  0F8F  3DB3               	addwfc	(sqrtf@q+3)^(0+128),f
  9738  0F90                     l6149:
  9739  0F90  0021               	movlb	1	; select bank1
  9740  0F91  0830               	movf	sqrtf@q^(0+128),w
  9741  0F92  0020               	movlb	0	; select bank0
  9742  0F93  00D8               	movwf	??_sqrtf
  9743  0F94  0021               	movlb	1	; select bank1
  9744  0F95  0831               	movf	(sqrtf@q+1)^(0+128),w
  9745  0F96  0020               	movlb	0	; select bank0
  9746  0F97  00D9               	movwf	??_sqrtf+1
  9747  0F98  0021               	movlb	1	; select bank1
  9748  0F99  0832               	movf	(sqrtf@q+2)^(0+128),w
  9749  0F9A  0020               	movlb	0	; select bank0
  9750  0F9B  00DA               	movwf	??_sqrtf+2
  9751  0F9C  0021               	movlb	1	; select bank1
  9752  0F9D  0833               	movf	(sqrtf@q+3)^(0+128),w
  9753  0F9E  0020               	movlb	0	; select bank0
  9754  0F9F  00DB               	movwf	??_sqrtf+3
  9755  0FA0  3001               	movlw	1
  9756  0FA1  00DC               	movwf	??_sqrtf+4
  9757  0FA2                     u7005:
  9758  0FA2  37DB               	asrf	??_sqrtf+3,f
  9759  0FA3  0CDA               	rrf	??_sqrtf+2,f
  9760  0FA4  0CD9               	rrf	??_sqrtf+1,f
  9761  0FA5  0CD8               	rrf	??_sqrtf,f
  9762  0FA6  0BDC               	decfsz	??_sqrtf+4,f
  9763  0FA7  2FA2               	goto	u7005
  9764  0FA8  3000               	movlw	0
  9765  0FA9  0758               	addwf	??_sqrtf,w
  9766  0FAA  0021               	movlb	1	; select bank1
  9767  0FAB  00C4               	movwf	sqrtf@ix^(0+128)
  9768  0FAC  3000               	movlw	0
  9769  0FAD  0020               	movlb	0	; select bank0
  9770  0FAE  3D59               	addwfc	??_sqrtf+1,w
  9771  0FAF  0021               	movlb	1	; select bank1
  9772  0FB0  00C5               	movwf	(sqrtf@ix+1)^(0+128)
  9773  0FB1  3000               	movlw	0
  9774  0FB2  0020               	movlb	0	; select bank0
  9775  0FB3  3D5A               	addwfc	??_sqrtf+2,w
  9776  0FB4  0021               	movlb	1	; select bank1
  9777  0FB5  00C6               	movwf	(sqrtf@ix+2)^(0+128)
  9778  0FB6  303F               	movlw	63
  9779  0FB7  0020               	movlb	0	; select bank0
  9780  0FB8  3D5B               	addwfc	??_sqrtf+3,w
  9781  0FB9  0021               	movlb	1	; select bank1
  9782  0FBA  00C7               	movwf	(sqrtf@ix+3)^(0+128)
  9783  0FBB  083C               	movf	sqrtf@m^(0+128),w
  9784  0FBC  0020               	movlb	0	; select bank0
  9785  0FBD  00D8               	movwf	??_sqrtf
  9786  0FBE  0021               	movlb	1	; select bank1
  9787  0FBF  083D               	movf	(sqrtf@m+1)^(0+128),w
  9788  0FC0  0020               	movlb	0	; select bank0
  9789  0FC1  00D9               	movwf	??_sqrtf+1
  9790  0FC2  0021               	movlb	1	; select bank1
  9791  0FC3  083E               	movf	(sqrtf@m+2)^(0+128),w
  9792  0FC4  0020               	movlb	0	; select bank0
  9793  0FC5  00DA               	movwf	??_sqrtf+2
  9794  0FC6  0021               	movlb	1	; select bank1
  9795  0FC7  083F               	movf	(sqrtf@m+3)^(0+128),w
  9796  0FC8  0020               	movlb	0	; select bank0
  9797  0FC9  00DB               	movwf	??_sqrtf+3
  9798  0FCA  3017               	movlw	23
  9799  0FCB                     u7015:
  9800  0FCB  35D8               	lslf	??_sqrtf,f
  9801  0FCC  0DD9               	rlf	??_sqrtf+1,f
  9802  0FCD  0DDA               	rlf	??_sqrtf+2,f
  9803  0FCE  0DDB               	rlf	??_sqrtf+3,f
  9804  0FCF  0B89               	decfsz	9,f
  9805  0FD0  2FCB               	goto	u7015
  9806  0FD1  0858               	movf	??_sqrtf,w
  9807  0FD2  0021               	movlb	1	; select bank1
  9808  0FD3  07C4               	addwf	sqrtf@ix^(0+128),f
  9809  0FD4  0020               	movlb	0	; select bank0
  9810  0FD5  0859               	movf	??_sqrtf+1,w
  9811  0FD6  0021               	movlb	1	; select bank1
  9812  0FD7  3DC5               	addwfc	(sqrtf@ix+1)^(0+128),f
  9813  0FD8  0020               	movlb	0	; select bank0
  9814  0FD9  085A               	movf	??_sqrtf+2,w
  9815  0FDA  0021               	movlb	1	; select bank1
  9816  0FDB  3DC6               	addwfc	(sqrtf@ix+2)^(0+128),f
  9817  0FDC  0020               	movlb	0	; select bank0
  9818  0FDD  085B               	movf	??_sqrtf+3,w
  9819  0FDE  0021               	movlb	1	; select bank1
  9820  0FDF  3DC7               	addwfc	(sqrtf@ix+3)^(0+128),f
  9821  0FE0  0847               	movf	(sqrtf@ix+3)^(0+128),w
  9822  0FE1  00AF               	movwf	(sqrtf@__xc8_float_word+3)^(0+128)
  9823  0FE2  0846               	movf	(sqrtf@ix+2)^(0+128),w
  9824  0FE3  00AE               	movwf	(sqrtf@__xc8_float_word+2)^(0+128)
  9825  0FE4  0845               	movf	(sqrtf@ix+1)^(0+128),w
  9826  0FE5  00AD               	movwf	(sqrtf@__xc8_float_word+1)^(0+128)
  9827  0FE6  0844               	movf	sqrtf@ix^(0+128),w
  9828  0FE7  00AC               	movwf	sqrtf@__xc8_float_word^(0+128)
  9829  0FE8  082F               	movf	(sqrtf@__xc8_float_word+3)^(0+128),w
  9830  0FE9  00BB               	movwf	(sqrtf@z+3)^(0+128)
  9831  0FEA  082E               	movf	(sqrtf@__xc8_float_word+2)^(0+128),w
  9832  0FEB  00BA               	movwf	(sqrtf@z+2)^(0+128)
  9833  0FEC  082D               	movf	(sqrtf@__xc8_float_word+1)^(0+128),w
  9834  0FED  00B9               	movwf	(sqrtf@z+1)^(0+128)
  9835  0FEE  082C               	movf	sqrtf@__xc8_float_word^(0+128),w
  9836  0FEF  00B8               	movwf	sqrtf@z^(0+128)
  9837  0FF0  083B               	movf	(sqrtf@z+3)^(0+128),w
  9838  0FF1  0020               	movlb	0	; select bank0
  9839  0FF2  00D7               	movwf	?_sqrtf+3
  9840  0FF3  0021               	movlb	1	; select bank1
  9841  0FF4  083A               	movf	(sqrtf@z+2)^(0+128),w
  9842  0FF5  0020               	movlb	0	; select bank0
  9843  0FF6  00D6               	movwf	?_sqrtf+2
  9844  0FF7  0021               	movlb	1	; select bank1
  9845  0FF8  0839               	movf	(sqrtf@z+1)^(0+128),w
  9846  0FF9  0020               	movlb	0	; select bank0
  9847  0FFA  00D5               	movwf	?_sqrtf+1
  9848  0FFB  0021               	movlb	1	; select bank1
  9849  0FFC  0838               	movf	sqrtf@z^(0+128),w
  9850  0FFD  0020               	movlb	0	; select bank0
  9851  0FFE  00D4               	movwf	?_sqrtf
  9852  0FFF  0008               	return
  9853  1000                     __end_of_sqrtf:
  9854                           
  9855                           	psect	text51
  9856  1BBD                     __ptext51:	
  9857 ;; *************** function _nanf *****************
  9858 ;; Defined at:
  9859 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nanf.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;  s               2    2[COMMON] PTR const unsigned char 
  9862 ;;		 -> STR_2(1), 
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;  u               4    6[COMMON] struct .
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  4    2[COMMON] float 
  9867 ;; Registers used:
  9868 ;;		wreg
  9869 ;; Tracked objects:
  9870 ;;		On entry : 1F/2
  9871 ;;		On exit  : 1F/2
  9872 ;;		Unchanged: 1F/0
  9873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9875 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9877 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9878 ;;Total ram usage:        8 bytes
  9879 ;; Hardware stack levels used:    1
  9880 ;; Hardware stack levels required when called:    5
  9881 ;; This function calls:
  9882 ;;		Nothing
  9883 ;; This function is called by:
  9884 ;;		_sqrtf
  9885 ;; This function uses a non-reentrant model
  9886 ;;
  9887                           
  9888                           
  9889                           ;psect for function _nanf
  9890  1BBD                     _nanf:
  9891                           
  9892                           ;incstack = 0
  9893                           ; Regs used in _nanf: [wreg]
  9894  1BBD  307F               	movlw	127
  9895  1BBE  00F9               	movwf	nanf@u+3
  9896  1BBF  30FF               	movlw	255
  9897  1BC0  00F8               	movwf	nanf@u+2
  9898  1BC1  30FF               	movlw	255
  9899  1BC2  00F7               	movwf	nanf@u+1
  9900  1BC3  30FF               	movlw	255
  9901  1BC4  00F6               	movwf	nanf@u
  9902  1BC5  0879               	movf	nanf@u+3,w
  9903  1BC6  00F5               	movwf	?_nanf+3
  9904  1BC7  0878               	movf	nanf@u+2,w
  9905  1BC8  00F4               	movwf	?_nanf+2
  9906  1BC9  0877               	movf	nanf@u+1,w
  9907  1BCA  00F3               	movwf	?_nanf+1
  9908  1BCB  0876               	movf	nanf@u,w
  9909  1BCC  00F2               	movwf	?_nanf
  9910  1BCD  0008               	return
  9911  1BCE                     __end_of_nanf:
  9912                           
  9913                           	psect	text52
  9914  119F                     __ptext52:	
  9915 ;; *************** function ___flge *****************
  9916 ;; Defined at:
  9917 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/flge.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;  ff1             4    2[COMMON] float 
  9920 ;;  ff2             4    6[COMMON] float 
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;		None
  9923 ;; Return value:  Size  Location     Type
  9924 ;;		None               void
  9925 ;; Registers used:
  9926 ;;		wreg, status,2, status,0
  9927 ;; Tracked objects:
  9928 ;;		On entry : 1F/1
  9929 ;;		On exit  : 1F/0
  9930 ;;		Unchanged: 0/0
  9931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9932 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9935 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9936 ;;Total ram usage:       12 bytes
  9937 ;; Hardware stack levels used:    1
  9938 ;; Hardware stack levels required when called:    5
  9939 ;; This function calls:
  9940 ;;		Nothing
  9941 ;; This function is called by:
  9942 ;;		_sqrtf
  9943 ;; This function uses a non-reentrant model
  9944 ;;
  9945                           
  9946                           
  9947                           ;psect for function ___flge
  9948  119F                     ___flge:
  9949                           
  9950                           ;incstack = 0
  9951                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9952  119F  3000               	movlw	0
  9953  11A0  0572               	andwf	___flge@ff1,w
  9954  11A1  0020               	movlb	0	; select bank0
  9955  11A2  00A0               	movwf	??___flge
  9956  11A3  3000               	movlw	0
  9957  11A4  0573               	andwf	___flge@ff1+1,w
  9958  11A5  00A1               	movwf	??___flge+1
  9959  11A6  3080               	movlw	128
  9960  11A7  0574               	andwf	___flge@ff1+2,w
  9961  11A8  00A2               	movwf	??___flge+2
  9962  11A9  307F               	movlw	127
  9963  11AA  0575               	andwf	___flge@ff1+3,w
  9964  11AB  00A3               	movwf	??___flge+3
  9965  11AC  0823               	movf	??___flge+3,w
  9966  11AD  0422               	iorwf	??___flge+2,w
  9967  11AE  0421               	iorwf	??___flge+1,w
  9968  11AF  0420               	iorwf	??___flge,w
  9969  11B0  1D03               	skipz
  9970  11B1  29BA               	goto	l1549
  9971  11B2  3000               	movlw	0
  9972  11B3  00F5               	movwf	___flge@ff1+3
  9973  11B4  3000               	movlw	0
  9974  11B5  00F4               	movwf	___flge@ff1+2
  9975  11B6  3000               	movlw	0
  9976  11B7  00F3               	movwf	___flge@ff1+1
  9977  11B8  3000               	movlw	0
  9978  11B9  00F2               	movwf	___flge@ff1
  9979  11BA                     l1549:
  9980  11BA  3000               	movlw	0
  9981  11BB  0576               	andwf	___flge@ff2,w
  9982  11BC  00A0               	movwf	??___flge
  9983  11BD  3000               	movlw	0
  9984  11BE  0577               	andwf	___flge@ff2+1,w
  9985  11BF  00A1               	movwf	??___flge+1
  9986  11C0  3080               	movlw	128
  9987  11C1  0578               	andwf	___flge@ff2+2,w
  9988  11C2  00A2               	movwf	??___flge+2
  9989  11C3  307F               	movlw	127
  9990  11C4  0579               	andwf	___flge@ff2+3,w
  9991  11C5  00A3               	movwf	??___flge+3
  9992  11C6  0823               	movf	??___flge+3,w
  9993  11C7  0422               	iorwf	??___flge+2,w
  9994  11C8  0421               	iorwf	??___flge+1,w
  9995  11C9  0420               	iorwf	??___flge,w
  9996  11CA  1D03               	skipz
  9997  11CB  29D4               	goto	l4125
  9998  11CC  3000               	movlw	0
  9999  11CD  00F9               	movwf	___flge@ff2+3
 10000  11CE  3000               	movlw	0
 10001  11CF  00F8               	movwf	___flge@ff2+2
 10002  11D0  3000               	movlw	0
 10003  11D1  00F7               	movwf	___flge@ff2+1
 10004  11D2  3000               	movlw	0
 10005  11D3  00F6               	movwf	___flge@ff2
 10006  11D4                     l4125:
 10007  11D4  1FF5               	btfss	___flge@ff1+3,7
 10008  11D5  29EE               	goto	l4129
 10009  11D6  3000               	movlw	0
 10010  11D7  00A0               	movwf	??___flge
 10011  11D8  3000               	movlw	0
 10012  11D9  00A1               	movwf	??___flge+1
 10013  11DA  3000               	movlw	0
 10014  11DB  00A2               	movwf	??___flge+2
 10015  11DC  3080               	movlw	128
 10016  11DD  00A3               	movwf	??___flge+3
 10017  11DE  0872               	movf	___flge@ff1,w
 10018  11DF  02A0               	subwf	??___flge,f
 10019  11E0  0873               	movf	___flge@ff1+1,w
 10020  11E1  3BA1               	subwfb	??___flge+1,f
 10021  11E2  0874               	movf	___flge@ff1+2,w
 10022  11E3  3BA2               	subwfb	??___flge+2,f
 10023  11E4  0875               	movf	___flge@ff1+3,w
 10024  11E5  3BA3               	subwfb	??___flge+3,f
 10025  11E6  0823               	movf	??___flge+3,w
 10026  11E7  00F5               	movwf	___flge@ff1+3
 10027  11E8  0822               	movf	??___flge+2,w
 10028  11E9  00F4               	movwf	___flge@ff1+2
 10029  11EA  0821               	movf	??___flge+1,w
 10030  11EB  00F3               	movwf	___flge@ff1+1
 10031  11EC  0820               	movf	??___flge,w
 10032  11ED  00F2               	movwf	___flge@ff1
 10033  11EE                     l4129:
 10034  11EE  1FF9               	btfss	___flge@ff2+3,7
 10035  11EF  2A08               	goto	l1552
 10036  11F0  3000               	movlw	0
 10037  11F1  00A0               	movwf	??___flge
 10038  11F2  3000               	movlw	0
 10039  11F3  00A1               	movwf	??___flge+1
 10040  11F4  3000               	movlw	0
 10041  11F5  00A2               	movwf	??___flge+2
 10042  11F6  3080               	movlw	128
 10043  11F7  00A3               	movwf	??___flge+3
 10044  11F8  0876               	movf	___flge@ff2,w
 10045  11F9  02A0               	subwf	??___flge,f
 10046  11FA  0877               	movf	___flge@ff2+1,w
 10047  11FB  3BA1               	subwfb	??___flge+1,f
 10048  11FC  0878               	movf	___flge@ff2+2,w
 10049  11FD  3BA2               	subwfb	??___flge+2,f
 10050  11FE  0879               	movf	___flge@ff2+3,w
 10051  11FF  3BA3               	subwfb	??___flge+3,f
 10052  1200  0823               	movf	??___flge+3,w
 10053  1201  00F9               	movwf	___flge@ff2+3
 10054  1202  0822               	movf	??___flge+2,w
 10055  1203  00F8               	movwf	___flge@ff2+2
 10056  1204  0821               	movf	??___flge+1,w
 10057  1205  00F7               	movwf	___flge@ff2+1
 10058  1206  0820               	movf	??___flge,w
 10059  1207  00F6               	movwf	___flge@ff2
 10060  1208                     l1552:
 10061  1208  3080               	movlw	128
 10062  1209  06F5               	xorwf	___flge@ff1+3,f
 10063  120A  3080               	movlw	128
 10064  120B  06F9               	xorwf	___flge@ff2+3,f
 10065  120C  0879               	movf	___flge@ff2+3,w
 10066  120D  0275               	subwf	___flge@ff1+3,w
 10067  120E  1D03               	skipz
 10068  120F  0008               	return
 10069  1210  0878               	movf	___flge@ff2+2,w
 10070  1211  0274               	subwf	___flge@ff1+2,w
 10071  1212  1D03               	skipz
 10072  1213  0008               	return
 10073  1214  0877               	movf	___flge@ff2+1,w
 10074  1215  0273               	subwf	___flge@ff1+1,w
 10075  1216  1D03               	skipz
 10076  1217  0008               	return
 10077  1218  0876               	movf	___flge@ff2,w
 10078  1219  0272               	subwf	___flge@ff1,w
 10079  121A  0008               	return
 10080  121B                     __end_of___flge:
 10081                           
 10082                           	psect	text53
 10083  1FA1                     __ptext53:	
 10084 ;; *************** function _Measure_R_PT100_2Wire *****************
 10085 ;; Defined at:
 10086 ;;		line 187 in file "main.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;  ADC_volt        4   53[BANK1 ] float 
 10089 ;; Auto vars:     Size  Location     Type
 10090 ;;  R_PT100         4   57[BANK1 ] float 
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  4   53[BANK1 ] float 
 10093 ;; Registers used:
 10094 ;;		wreg, status,2, status,0, pclath, cstack
 10095 ;; Tracked objects:
 10096 ;;		On entry : 1F/1
 10097 ;;		On exit  : 1F/1
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10100 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10101 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10103 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10104 ;;Total ram usage:        8 bytes
 10105 ;; Hardware stack levels used:    1
 10106 ;; Hardware stack levels required when called:    7
 10107 ;; This function calls:
 10108 ;;		___fldiv
 10109 ;;		___flmul
 10110 ;;		___flsub
 10111 ;; This function is called by:
 10112 ;;		_Read_PT100_Temp
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           
 10116                           
 10117                           ;psect for function _Measure_R_PT100_2Wire
 10118  1FA1                     _Measure_R_PT100_2Wire:
 10119                           
 10120                           ;main.c: 191:     R_PT100 = R_const * ADC_volt / (V_cc_const - ADC_volt);
 10121                           
 10122                           ;incstack = 0
 10123                           ; Regs used in _Measure_R_PT100_2Wire: [wreg+status,2+status,0+pclath+cstack]
 10124  1FA1  0858               	movf	(Measure_R_PT100_2Wire@ADC_volt+3)^(0+128),w
 10125  1FA2  0020               	movlb	0	; select bank0
 10126  1FA3  00D7               	movwf	___flsub@a+3
 10127  1FA4  0021               	movlb	1	; select bank1
 10128  1FA5  0857               	movf	(Measure_R_PT100_2Wire@ADC_volt+2)^(0+128),w
 10129  1FA6  0020               	movlb	0	; select bank0
 10130  1FA7  00D6               	movwf	___flsub@a+2
 10131  1FA8  0021               	movlb	1	; select bank1
 10132  1FA9  0856               	movf	(Measure_R_PT100_2Wire@ADC_volt+1)^(0+128),w
 10133  1FAA  0020               	movlb	0	; select bank0
 10134  1FAB  00D5               	movwf	___flsub@a+1
 10135  1FAC  0021               	movlb	1	; select bank1
 10136  1FAD  0855               	movf	Measure_R_PT100_2Wire@ADC_volt^(0+128),w
 10137  1FAE  0020               	movlb	0	; select bank0
 10138  1FAF  00D4               	movwf	___flsub@a
 10139  1FB0  3040               	movlw	64
 10140  1FB1  00DB               	movwf	___flsub@b+3
 10141  1FB2  30A0               	movlw	160
 10142  1FB3  00DA               	movwf	___flsub@b+2
 10143  1FB4  3000               	movlw	0
 10144  1FB5  00D9               	movwf	___flsub@b+1
 10145  1FB6  3000               	movlw	0
 10146  1FB7  00D8               	movwf	___flsub@b
 10147  1FB8  319D  2514  319F   	fcall	___flsub
 10148  1FBB  0857               	movf	?___flsub+3,w
 10149  1FBC  00E3               	movwf	___fldiv@a+3
 10150  1FBD  0856               	movf	?___flsub+2,w
 10151  1FBE  00E2               	movwf	___fldiv@a+2
 10152  1FBF  0855               	movf	?___flsub+1,w
 10153  1FC0  00E1               	movwf	___fldiv@a+1
 10154  1FC1  0854               	movf	?___flsub,w
 10155  1FC2  00E0               	movwf	___fldiv@a
 10156  1FC3  3042               	movlw	66
 10157  1FC4  00A9               	movwf	___flmul@b+3
 10158  1FC5  30C8               	movlw	200
 10159  1FC6  00A8               	movwf	___flmul@b+2
 10160  1FC7  3000               	movlw	0
 10161  1FC8  00A7               	movwf	___flmul@b+1
 10162  1FC9  3000               	movlw	0
 10163  1FCA  00A6               	movwf	___flmul@b
 10164  1FCB  0021               	movlb	1	; select bank1
 10165  1FCC  0858               	movf	(Measure_R_PT100_2Wire@ADC_volt+3)^(0+128),w
 10166  1FCD  0020               	movlb	0	; select bank0
 10167  1FCE  00AD               	movwf	___flmul@a+3
 10168  1FCF  0021               	movlb	1	; select bank1
 10169  1FD0  0857               	movf	(Measure_R_PT100_2Wire@ADC_volt+2)^(0+128),w
 10170  1FD1  0020               	movlb	0	; select bank0
 10171  1FD2  00AC               	movwf	___flmul@a+2
 10172  1FD3  0021               	movlb	1	; select bank1
 10173  1FD4  0856               	movf	(Measure_R_PT100_2Wire@ADC_volt+1)^(0+128),w
 10174  1FD5  0020               	movlb	0	; select bank0
 10175  1FD6  00AB               	movwf	___flmul@a+1
 10176  1FD7  0021               	movlb	1	; select bank1
 10177  1FD8  0855               	movf	Measure_R_PT100_2Wire@ADC_volt^(0+128),w
 10178  1FD9  0020               	movlb	0	; select bank0
 10179  1FDA  00AA               	movwf	___flmul@a
 10180  1FDB  318B  2304  319F   	fcall	___flmul
 10181  1FDE  0829               	movf	?___flmul+3,w
 10182  1FDF  00E7               	movwf	___fldiv@b+3
 10183  1FE0  0828               	movf	?___flmul+2,w
 10184  1FE1  00E6               	movwf	___fldiv@b+2
 10185  1FE2  0827               	movf	?___flmul+1,w
 10186  1FE3  00E5               	movwf	___fldiv@b+1
 10187  1FE4  0826               	movf	?___flmul,w
 10188  1FE5  00E4               	movwf	___fldiv@b
 10189  1FE6  3196  2629         	fcall	___fldiv
 10190  1FE8  0863               	movf	?___fldiv+3,w
 10191  1FE9  0021               	movlb	1	; select bank1
 10192  1FEA  00DC               	movwf	(Measure_R_PT100_2Wire@R_PT100+3)^(0+128)
 10193  1FEB  0020               	movlb	0	; select bank0
 10194  1FEC  0862               	movf	?___fldiv+2,w
 10195  1FED  0021               	movlb	1	; select bank1
 10196  1FEE  00DB               	movwf	(Measure_R_PT100_2Wire@R_PT100+2)^(0+128)
 10197  1FEF  0020               	movlb	0	; select bank0
 10198  1FF0  0861               	movf	?___fldiv+1,w
 10199  1FF1  0021               	movlb	1	; select bank1
 10200  1FF2  00DA               	movwf	(Measure_R_PT100_2Wire@R_PT100+1)^(0+128)
 10201  1FF3  0020               	movlb	0	; select bank0
 10202  1FF4  0860               	movf	?___fldiv,w
 10203  1FF5  0021               	movlb	1	; select bank1
 10204  1FF6  00D9               	movwf	Measure_R_PT100_2Wire@R_PT100^(0+128)
 10205                           
 10206                           ;main.c: 193:     return R_PT100;
 10207  1FF7  085C               	movf	(Measure_R_PT100_2Wire@R_PT100+3)^(0+128),w
 10208  1FF8  00D8               	movwf	(?_Measure_R_PT100_2Wire+3)^(0+128)
 10209  1FF9  085B               	movf	(Measure_R_PT100_2Wire@R_PT100+2)^(0+128),w
 10210  1FFA  00D7               	movwf	(?_Measure_R_PT100_2Wire+2)^(0+128)
 10211  1FFB  085A               	movf	(Measure_R_PT100_2Wire@R_PT100+1)^(0+128),w
 10212  1FFC  00D6               	movwf	(?_Measure_R_PT100_2Wire+1)^(0+128)
 10213  1FFD  0859               	movf	Measure_R_PT100_2Wire@R_PT100^(0+128),w
 10214  1FFE  00D5               	movwf	?_Measure_R_PT100_2Wire^(0+128)
 10215  1FFF  0008               	return
 10216  2000                     __end_of_Measure_R_PT100_2Wire:
 10217                           
 10218                           	psect	text54
 10219  1EC3                     __ptext54:	
 10220 ;; *************** function _ChangeADCtoVoltage *****************
 10221 ;; Defined at:
 10222 ;;		line 180 in file "main.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;  ADC_number      2   53[BANK1 ] unsigned short 
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;		None
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  4   53[BANK1 ] float 
 10229 ;; Registers used:
 10230 ;;		wreg, status,2, status,0, pclath, cstack
 10231 ;; Tracked objects:
 10232 ;;		On entry : 1F/1
 10233 ;;		On exit  : 1F/1
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10236 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;Total ram usage:        4 bytes
 10241 ;; Hardware stack levels used:    1
 10242 ;; Hardware stack levels required when called:    7
 10243 ;; This function calls:
 10244 ;;		___fldiv
 10245 ;;		___flmul
 10246 ;;		___xxtofl
 10247 ;; This function is called by:
 10248 ;;		_Read_PT100_Temp
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           
 10253                           ;psect for function _ChangeADCtoVoltage
 10254  1EC3                     _ChangeADCtoVoltage:
 10255                           
 10256                           ;main.c: 182:     return (float)(5.0 * ADC_number / 1023);
 10257                           
 10258                           ;incstack = 0
 10259                           ; Regs used in _ChangeADCtoVoltage: [wreg+status,2+status,0+pclath+cstack]
 10260  1EC3  3044               	movlw	68
 10261  1EC4  0020               	movlb	0	; select bank0
 10262  1EC5  00E3               	movwf	___fldiv@a+3
 10263  1EC6  307F               	movlw	127
 10264  1EC7  00E2               	movwf	___fldiv@a+2
 10265  1EC8  30C0               	movlw	192
 10266  1EC9  00E1               	movwf	___fldiv@a+1
 10267  1ECA  3000               	movlw	0
 10268  1ECB  00E0               	movwf	___fldiv@a
 10269  1ECC  3040               	movlw	64
 10270  1ECD  00A9               	movwf	___flmul@b+3
 10271  1ECE  30A0               	movlw	160
 10272  1ECF  00A8               	movwf	___flmul@b+2
 10273  1ED0  3000               	movlw	0
 10274  1ED1  00A7               	movwf	___flmul@b+1
 10275  1ED2  3000               	movlw	0
 10276  1ED3  00A6               	movwf	___flmul@b
 10277  1ED4  0021               	movlb	1	; select bank1
 10278  1ED5  0855               	movf	ChangeADCtoVoltage@ADC_number^(0+128),w
 10279  1ED6  00F2               	movwf	___xxtofl@val
 10280  1ED7  0856               	movf	(ChangeADCtoVoltage@ADC_number+1)^(0+128),w
 10281  1ED8  00F3               	movwf	___xxtofl@val+1
 10282  1ED9  01F4               	clrf	___xxtofl@val+2
 10283  1EDA  01F5               	clrf	___xxtofl@val+3
 10284  1EDB  3000               	movlw	0
 10285  1EDC  3192  22B0  319E   	fcall	___xxtofl
 10286  1EDF  0875               	movf	?___xxtofl+3,w
 10287  1EE0  00AD               	movwf	___flmul@a+3
 10288  1EE1  0874               	movf	?___xxtofl+2,w
 10289  1EE2  00AC               	movwf	___flmul@a+2
 10290  1EE3  0873               	movf	?___xxtofl+1,w
 10291  1EE4  00AB               	movwf	___flmul@a+1
 10292  1EE5  0872               	movf	?___xxtofl,w
 10293  1EE6  00AA               	movwf	___flmul@a
 10294  1EE7  318B  2304  319E   	fcall	___flmul
 10295  1EEA  0829               	movf	?___flmul+3,w
 10296  1EEB  00E7               	movwf	___fldiv@b+3
 10297  1EEC  0828               	movf	?___flmul+2,w
 10298  1EED  00E6               	movwf	___fldiv@b+2
 10299  1EEE  0827               	movf	?___flmul+1,w
 10300  1EEF  00E5               	movwf	___fldiv@b+1
 10301  1EF0  0826               	movf	?___flmul,w
 10302  1EF1  00E4               	movwf	___fldiv@b
 10303  1EF2  3196  2629         	fcall	___fldiv
 10304  1EF4  0863               	movf	?___fldiv+3,w
 10305  1EF5  0021               	movlb	1	; select bank1
 10306  1EF6  00D8               	movwf	(?_ChangeADCtoVoltage+3)^(0+128)
 10307  1EF7  0020               	movlb	0	; select bank0
 10308  1EF8  0862               	movf	?___fldiv+2,w
 10309  1EF9  0021               	movlb	1	; select bank1
 10310  1EFA  00D7               	movwf	(?_ChangeADCtoVoltage+2)^(0+128)
 10311  1EFB  0020               	movlb	0	; select bank0
 10312  1EFC  0861               	movf	?___fldiv+1,w
 10313  1EFD  0021               	movlb	1	; select bank1
 10314  1EFE  00D6               	movwf	(?_ChangeADCtoVoltage+1)^(0+128)
 10315  1EFF  0020               	movlb	0	; select bank0
 10316  1F00  0860               	movf	?___fldiv,w
 10317  1F01  0021               	movlb	1	; select bank1
 10318  1F02  00D5               	movwf	?_ChangeADCtoVoltage^(0+128)
 10319  1F03  0008               	return
 10320  1F04                     __end_of_ChangeADCtoVoltage:
 10321                           
 10322                           	psect	text55
 10323  12B0                     __ptext55:	
 10324 ;; *************** function ___xxtofl *****************
 10325 ;; Defined at:
 10326 ;;		line 10 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/xxtofl.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;  sign            1    wreg     unsigned char 
 10329 ;;  val             4    2[COMMON] long 
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;  sign            1    0[BANK0 ] unsigned char 
 10332 ;;  arg             4    2[BANK0 ] unsigned long 
 10333 ;;  exp             1    1[BANK0 ] unsigned char 
 10334 ;; Return value:  Size  Location     Type
 10335 ;;                  4    2[COMMON] unsigned char 
 10336 ;; Registers used:
 10337 ;;		wreg, status,2, status,0
 10338 ;; Tracked objects:
 10339 ;;		On entry : 1F/1
 10340 ;;		On exit  : 1F/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10345 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10346 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10347 ;;Total ram usage:       14 bytes
 10348 ;; Hardware stack levels used:    1
 10349 ;; Hardware stack levels required when called:    5
 10350 ;; This function calls:
 10351 ;;		Nothing
 10352 ;; This function is called by:
 10353 ;;		_ChangeADCtoVoltage
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           
 10358                           ;psect for function ___xxtofl
 10359  12B0                     ___xxtofl:
 10360                           
 10361                           ;incstack = 0
 10362                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10363                           ;___xxtofl@sign stored from wreg
 10364  12B0  0020               	movlb	0	; select bank0
 10365  12B1  00A0               	movwf	___xxtofl@sign
 10366  12B2  0820               	movf	___xxtofl@sign,w
 10367  12B3  1D03               	btfss	3,2
 10368  12B4  1FF5               	btfss	___xxtofl@val+3,7
 10369  12B5  2AC6               	goto	l4715
 10370  12B6  0972               	comf	___xxtofl@val,w
 10371  12B7  00A2               	movwf	___xxtofl@arg
 10372  12B8  0973               	comf	___xxtofl@val+1,w
 10373  12B9  00A3               	movwf	___xxtofl@arg+1
 10374  12BA  0974               	comf	___xxtofl@val+2,w
 10375  12BB  00A4               	movwf	___xxtofl@arg+2
 10376  12BC  0975               	comf	___xxtofl@val+3,w
 10377  12BD  00A5               	movwf	___xxtofl@arg+3
 10378  12BE  0AA2               	incf	___xxtofl@arg,f
 10379  12BF  1903               	skipnz
 10380  12C0  0AA3               	incf	___xxtofl@arg+1,f
 10381  12C1  1903               	skipnz
 10382  12C2  0AA4               	incf	___xxtofl@arg+2,f
 10383  12C3  1903               	skipnz
 10384  12C4  0AA5               	incf	___xxtofl@arg+3,f
 10385  12C5  2ACE               	goto	l1812
 10386  12C6                     l4715:
 10387  12C6  0875               	movf	___xxtofl@val+3,w
 10388  12C7  00A5               	movwf	___xxtofl@arg+3
 10389  12C8  0874               	movf	___xxtofl@val+2,w
 10390  12C9  00A4               	movwf	___xxtofl@arg+2
 10391  12CA  0873               	movf	___xxtofl@val+1,w
 10392  12CB  00A3               	movwf	___xxtofl@arg+1
 10393  12CC  0872               	movf	___xxtofl@val,w
 10394  12CD  00A2               	movwf	___xxtofl@arg
 10395  12CE                     l1812:
 10396  12CE  0875               	movf	___xxtofl@val+3,w
 10397  12CF  0474               	iorwf	___xxtofl@val+2,w
 10398  12D0  0473               	iorwf	___xxtofl@val+1,w
 10399  12D1  0472               	iorwf	___xxtofl@val,w
 10400  12D2  1D03               	skipz
 10401  12D3  2ADD               	goto	l4721
 10402  12D4  3000               	movlw	0
 10403  12D5  00F5               	movwf	?___xxtofl+3
 10404  12D6  3000               	movlw	0
 10405  12D7  00F4               	movwf	?___xxtofl+2
 10406  12D8  3000               	movlw	0
 10407  12D9  00F3               	movwf	?___xxtofl+1
 10408  12DA  3000               	movlw	0
 10409  12DB  00F2               	movwf	?___xxtofl
 10410  12DC  0008               	return
 10411  12DD                     l4721:
 10412  12DD  3096               	movlw	150
 10413  12DE  00F6               	movwf	??___xxtofl
 10414  12DF  0876               	movf	??___xxtofl,w
 10415  12E0  00A1               	movwf	___xxtofl@exp
 10416  12E1                     l4725:
 10417  12E1  30FE               	movlw	254
 10418  12E2  0525               	andwf	___xxtofl@arg+3,w
 10419  12E3  1903               	btfsc	3,2
 10420  12E4  2B04               	goto	l1818
 10421  12E5  3001               	movlw	1
 10422  12E6  00F6               	movwf	??___xxtofl
 10423  12E7  0876               	movf	??___xxtofl,w
 10424  12E8  07A1               	addwf	___xxtofl@exp,f
 10425  12E9  3001               	movlw	1
 10426  12EA                     u4825:
 10427  12EA  36A5               	lsrf	___xxtofl@arg+3,f
 10428  12EB  0CA4               	rrf	___xxtofl@arg+2,f
 10429  12EC  0CA3               	rrf	___xxtofl@arg+1,f
 10430  12ED  0CA2               	rrf	___xxtofl@arg,f
 10431  12EE  0B89               	decfsz	9,f
 10432  12EF  2AEA               	goto	u4825
 10433  12F0  2AE1               	goto	l4725
 10434  12F1                     l4727:
 10435  12F1  3001               	movlw	1
 10436  12F2  00F6               	movwf	??___xxtofl
 10437  12F3  0876               	movf	??___xxtofl,w
 10438  12F4  07A1               	addwf	___xxtofl@exp,f
 10439  12F5  3001               	movlw	1
 10440  12F6  07A2               	addwf	___xxtofl@arg,f
 10441  12F7  3000               	movlw	0
 10442  12F8  3DA3               	addwfc	___xxtofl@arg+1,f
 10443  12F9  3000               	movlw	0
 10444  12FA  3DA4               	addwfc	___xxtofl@arg+2,f
 10445  12FB  3000               	movlw	0
 10446  12FC  3DA5               	addwfc	___xxtofl@arg+3,f
 10447  12FD  3001               	movlw	1
 10448  12FE                     u4845:
 10449  12FE  36A5               	lsrf	___xxtofl@arg+3,f
 10450  12FF  0CA4               	rrf	___xxtofl@arg+2,f
 10451  1300  0CA3               	rrf	___xxtofl@arg+1,f
 10452  1301  0CA2               	rrf	___xxtofl@arg,f
 10453  1302  0B89               	decfsz	9,f
 10454  1303  2AFE               	goto	u4845
 10455  1304                     l1818:
 10456  1304  30FF               	movlw	255
 10457  1305  0525               	andwf	___xxtofl@arg+3,w
 10458  1306  1903               	btfsc	3,2
 10459  1307  2B16               	goto	l4735
 10460  1308  2AF1               	goto	l4727
 10461  1309                     l4737:
 10462  1309  3002               	movlw	2
 10463  130A  0221               	subwf	___xxtofl@exp,w
 10464  130B  1C03               	btfss	3,0
 10465  130C  2B18               	goto	l1825
 10466  130D  3001               	movlw	1
 10467  130E  02A1               	subwf	___xxtofl@exp,f
 10468  130F  3001               	movlw	1
 10469  1310                     u4865:
 10470  1310  35A2               	lslf	___xxtofl@arg,f
 10471  1311  0DA3               	rlf	___xxtofl@arg+1,f
 10472  1312  0DA4               	rlf	___xxtofl@arg+2,f
 10473  1313  0DA5               	rlf	___xxtofl@arg+3,f
 10474  1314  0B89               	decfsz	9,f
 10475  1315  2B10               	goto	u4865
 10476  1316                     l4735:
 10477  1316  1FA4               	btfss	___xxtofl@arg+2,7
 10478  1317  2B09               	goto	l4737
 10479  1318                     l1825:
 10480  1318  1821               	btfsc	___xxtofl@exp,0
 10481  1319  2B22               	goto	l1826
 10482  131A  30FF               	movlw	255
 10483  131B  05A2               	andwf	___xxtofl@arg,f
 10484  131C  30FF               	movlw	255
 10485  131D  05A3               	andwf	___xxtofl@arg+1,f
 10486  131E  307F               	movlw	127
 10487  131F  05A4               	andwf	___xxtofl@arg+2,f
 10488  1320  30FF               	movlw	255
 10489  1321  05A5               	andwf	___xxtofl@arg+3,f
 10490  1322                     l1826:
 10491  1322  1003               	clrc
 10492  1323  0CA1               	rrf	___xxtofl@exp,f
 10493  1324  0821               	movf	___xxtofl@exp,w
 10494  1325  00F6               	movwf	??___xxtofl
 10495  1326  01F7               	clrf	??___xxtofl+1
 10496  1327  01F8               	clrf	??___xxtofl+2
 10497  1328  01F9               	clrf	??___xxtofl+3
 10498  1329  3018               	movlw	24
 10499  132A                     u4905:
 10500  132A  35F6               	lslf	??___xxtofl,f
 10501  132B  0DF7               	rlf	??___xxtofl+1,f
 10502  132C  0DF8               	rlf	??___xxtofl+2,f
 10503  132D  0DF9               	rlf	??___xxtofl+3,f
 10504  132E  0B89               	decfsz	9,f
 10505  132F  2B2A               	goto	u4905
 10506  1330  0876               	movf	??___xxtofl,w
 10507  1331  04A2               	iorwf	___xxtofl@arg,f
 10508  1332  0877               	movf	??___xxtofl+1,w
 10509  1333  04A3               	iorwf	___xxtofl@arg+1,f
 10510  1334  0878               	movf	??___xxtofl+2,w
 10511  1335  04A4               	iorwf	___xxtofl@arg+2,f
 10512  1336  0879               	movf	??___xxtofl+3,w
 10513  1337  04A5               	iorwf	___xxtofl@arg+3,f
 10514  1338  0820               	movf	___xxtofl@sign,w
 10515  1339  1D03               	btfss	3,2
 10516  133A  1FF5               	btfss	___xxtofl@val+3,7
 10517  133B  2B3D               	goto	l4749
 10518  133C  17A5               	bsf	___xxtofl@arg+3,7
 10519  133D                     l4749:
 10520  133D  0825               	movf	___xxtofl@arg+3,w
 10521  133E  00F5               	movwf	?___xxtofl+3
 10522  133F  0824               	movf	___xxtofl@arg+2,w
 10523  1340  00F4               	movwf	?___xxtofl+2
 10524  1341  0823               	movf	___xxtofl@arg+1,w
 10525  1342  00F3               	movwf	?___xxtofl+1
 10526  1343  0822               	movf	___xxtofl@arg,w
 10527  1344  00F2               	movwf	?___xxtofl
 10528  1345  0008               	return
 10529  1346                     __end_of___xxtofl:
 10530                           
 10531                           	psect	text56
 10532  1A93                     __ptext56:	
 10533 ;; *************** function _ADC_StartConversion *****************
 10534 ;; Defined at:
 10535 ;;		line 93 in file "mcc_generated_files/adc.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;		None
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;		None
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  1    wreg      void 
 10542 ;; Registers used:
 10543 ;;		None
 10544 ;; Tracked objects:
 10545 ;;		On entry : 1F/2
 10546 ;;		On exit  : 1F/1
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;Total ram usage:        0 bytes
 10554 ;; Hardware stack levels used:    1
 10555 ;; Hardware stack levels required when called:    5
 10556 ;; This function calls:
 10557 ;;		Nothing
 10558 ;; This function is called by:
 10559 ;;		_Read_PT100_Temp
 10560 ;; This function uses a non-reentrant model
 10561 ;;
 10562                           
 10563                           
 10564                           ;psect for function _ADC_StartConversion
 10565  1A93                     _ADC_StartConversion:
 10566                           
 10567                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
 10568                           
 10569                           ;incstack = 0
 10570                           ; Regs used in _ADC_StartConversion: []
 10571  1A93  0021               	movlb	1	; select bank1
 10572  1A94  149D               	bsf	29,1	;volatile
 10573  1A95  0008               	return
 10574  1A96                     __end_of_ADC_StartConversion:
 10575                           
 10576                           	psect	text57
 10577  1CAD                     __ptext57:	
 10578 ;; *************** function _Init_Function *****************
 10579 ;; Defined at:
 10580 ;;		line 121 in file "main.c"
 10581 ;; Parameters:    Size  Location     Type
 10582 ;;		None
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;		None
 10585 ;; Return value:  Size  Location     Type
 10586 ;;                  1    wreg      void 
 10587 ;; Registers used:
 10588 ;;		wreg, status,2, status,0, pclath, cstack
 10589 ;; Tracked objects:
 10590 ;;		On entry : 1F/1
 10591 ;;		On exit  : 1F/1
 10592 ;;		Unchanged: 0/0
 10593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10598 ;;Total ram usage:        0 bytes
 10599 ;; Hardware stack levels used:    1
 10600 ;; Hardware stack levels required when called:    9
 10601 ;; This function calls:
 10602 ;;		_ADC_SelectChannel
 10603 ;;		_StartStop_AlarmLED
 10604 ;;		_StartStop_AlarmLED_Blink
 10605 ;;		_StartStop_Buzzer
 10606 ;;		_StartStop_Dimmer
 10607 ;;		_StartStop_Fan
 10608 ;; This function is called by:
 10609 ;;		_main
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613                           
 10614                           ;psect for function _Init_Function
 10615  1CAD                     _Init_Function:
 10616                           
 10617                           ;main.c: 123:     StartStop_AlarmLED(0);
 10618                           
 10619                           ;incstack = 0
 10620                           ; Regs used in _Init_Function: [wreg+status,2+status,0+pclath+cstack]
 10621  1CAD  3000               	movlw	0
 10622  1CAE  319B  231A  319C   	fcall	_StartStop_AlarmLED
 10623                           
 10624                           ;main.c: 124:     StartStop_AlarmLED_Blink(0);
 10625  1CB1  3000               	movlw	0
 10626  1CB2  319B  235C  319C   	fcall	_StartStop_AlarmLED_Blink
 10627                           
 10628                           ;main.c: 125:     StartStop_Fan(0);
 10629  1CB5  3000               	movlw	0
 10630  1CB6  319B  2310  319C   	fcall	_StartStop_Fan
 10631                           
 10632                           ;main.c: 126:     StartStop_Buzzer(0);
 10633  1CB9  3000               	movlw	0
 10634  1CBA  319B  2306  319C   	fcall	_StartStop_Buzzer
 10635                           
 10636                           ;main.c: 127:     StartStop_Dimmer(0);
 10637  1CBD  3000               	movlw	0
 10638  1CBE  319C  2438  319C   	fcall	_StartStop_Dimmer
 10639  1CC1  128E               	bcf	14,5	;volatile
 10640                           
 10641                           ;main.c: 130:     ADC_SelectChannel(channel_AN10);
 10642  1CC2  300A               	movlw	10
 10643  1CC3  319B  2381         	fcall	_ADC_SelectChannel
 10644  1CC5  0008               	return
 10645  1CC6                     __end_of_Init_Function:
 10646                           
 10647                           	psect	text58
 10648  1B1A                     __ptext58:	
 10649 ;; *************** function _StartStop_AlarmLED *****************
 10650 ;; Defined at:
 10651 ;;		line 290 in file "main.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;  OnOff           1    wreg     _Bool 
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;  OnOff           1    2[COMMON] _Bool 
 10656 ;; Return value:  Size  Location     Type
 10657 ;;                  1    wreg      void 
 10658 ;; Registers used:
 10659 ;;		wreg, status,2, status,0
 10660 ;; Tracked objects:
 10661 ;;		On entry : 1F/1
 10662 ;;		On exit  : 1F/2
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;Total ram usage:        1 bytes
 10670 ;; Hardware stack levels used:    1
 10671 ;; Hardware stack levels required when called:    5
 10672 ;; This function calls:
 10673 ;;		Nothing
 10674 ;; This function is called by:
 10675 ;;		_Init_Function
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679                           
 10680                           ;psect for function _StartStop_AlarmLED
 10681  1B1A                     _StartStop_AlarmLED:
 10682                           
 10683                           ;incstack = 0
 10684                           ; Regs used in _StartStop_AlarmLED: [wreg+status,2+status,0]
 10685                           ;StartStop_AlarmLED@OnOff stored from wreg
 10686  1B1A  00F2               	movwf	StartStop_AlarmLED@OnOff
 10687                           
 10688                           ;main.c: 292:     if (1 == OnOff){
 10689  1B1B  0372               	decf	StartStop_AlarmLED@OnOff,w
 10690  1B1C  1D03               	btfss	3,2
 10691  1B1D  2B21               	goto	l1041
 10692                           
 10693                           ;main.c: 294:         do { LATCbits.LATC2 = 1; } while(0);
 10694  1B1E  0022               	movlb	2	; select bank2
 10695  1B1F  150E               	bsf	14,2	;volatile
 10696  1B20  0008               	return
 10697  1B21                     l1041:	
 10698                           ;main.c: 298:         do { LATCbits.LATC2 = 0; } while(0);
 10699                           
 10700  1B21  0022               	movlb	2	; select bank2
 10701  1B22  110E               	bcf	14,2	;volatile
 10702  1B23  0008               	return
 10703  1B24                     __end_of_StartStop_AlarmLED:
 10704                           
 10705                           	psect	text59
 10706  1B81                     __ptext59:	
 10707 ;; *************** function _ADC_SelectChannel *****************
 10708 ;; Defined at:
 10709 ;;		line 85 in file "mcc_generated_files/adc.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;  channel         1    wreg     enum E2603
 10712 ;; Auto vars:     Size  Location     Type
 10713 ;;  channel         1    3[COMMON] enum E2603
 10714 ;; Return value:  Size  Location     Type
 10715 ;;                  1    wreg      void 
 10716 ;; Registers used:
 10717 ;;		wreg, status,2, status,0
 10718 ;; Tracked objects:
 10719 ;;		On entry : 1F/2
 10720 ;;		On exit  : 1F/1
 10721 ;;		Unchanged: 0/0
 10722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10725 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10727 ;;Total ram usage:        2 bytes
 10728 ;; Hardware stack levels used:    1
 10729 ;; Hardware stack levels required when called:    5
 10730 ;; This function calls:
 10731 ;;		Nothing
 10732 ;; This function is called by:
 10733 ;;		_Init_Function
 10734 ;; This function uses a non-reentrant model
 10735 ;;
 10736                           
 10737                           
 10738                           ;psect for function _ADC_SelectChannel
 10739  1B81                     _ADC_SelectChannel:
 10740                           
 10741                           ;incstack = 0
 10742                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 10743                           ;ADC_SelectChannel@channel stored from wreg
 10744  1B81  00F3               	movwf	ADC_SelectChannel@channel
 10745                           
 10746                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
 10747  1B82  0873               	movf	ADC_SelectChannel@channel,w
 10748  1B83  00F2               	movwf	??_ADC_SelectChannel
 10749  1B84  0DF2               	rlf	??_ADC_SelectChannel,f
 10750  1B85  0DF2               	rlf	??_ADC_SelectChannel,f
 10751  1B86  0021               	movlb	1	; select bank1
 10752  1B87  081D               	movf	29,w	;volatile
 10753  1B88  0672               	xorwf	??_ADC_SelectChannel,w
 10754  1B89  3983               	andlw	-125
 10755  1B8A  0672               	xorwf	??_ADC_SelectChannel,w
 10756  1B8B  009D               	movwf	29	;volatile
 10757                           
 10758                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
 10759  1B8C  141D               	bsf	29,0	;volatile
 10760  1B8D  0008               	return
 10761  1B8E                     __end_of_ADC_SelectChannel:
 10762                           
 10763                           	psect	text60
 10764  0066                     __ptext60:	
 10765 ;; *************** function _Config_Heater *****************
 10766 ;; Defined at:
 10767 ;;		line 413 in file "main.c"
 10768 ;; Parameters:    Size  Location     Type
 10769 ;;		None
 10770 ;; Auto vars:     Size  Location     Type
 10771 ;;		None
 10772 ;; Return value:  Size  Location     Type
 10773 ;;                  1    wreg      void 
 10774 ;; Registers used:
 10775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10776 ;; Tracked objects:
 10777 ;;		On entry : 1C/3
 10778 ;;		On exit  : 1C/0
 10779 ;;		Unchanged: 0/0
 10780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10783 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10784 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10785 ;;Total ram usage:        2 bytes
 10786 ;; Hardware stack levels used:    1
 10787 ;; Hardware stack levels required when called:    9
 10788 ;; This function calls:
 10789 ;;		_SetDimmer
 10790 ;;		_StartStop_AlarmLED_Blink
 10791 ;;		_StartStop_Buzzer
 10792 ;;		_StartStop_Dimmer
 10793 ;;		_StartStop_Fan
 10794 ;;		_get_delay
 10795 ;; This function is called by:
 10796 ;;		_main
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           
 10801                           ;psect for function _Config_Heater
 10802  0066                     _Config_Heater:
 10803                           
 10804                           ;main.c: 415:     static uint8_t count = 0;;main.c: 416:     static delay del = 0;;main.
      +                          c: 417:     static _Bool once = 0;;main.c: 419:     if (0 == once)
 10805                           
 10806                           ;incstack = 0
 10807                           ; Regs used in _Config_Heater: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10808  0066  0022               	movlb	2	; select bank2
 10809  0067  0859               	movf	Config_Heater@once^(0+256),w
 10810  0068  1D03               	btfss	3,2
 10811  0069  287A               	goto	l1097
 10812                           
 10813                           ;main.c: 420:     {;main.c: 422:         once = 1;
 10814  006A  01D9               	clrf	Config_Heater@once^(0+256)
 10815  006B  0AD9               	incf	Config_Heater@once^(0+256),f
 10816                           
 10817                           ;main.c: 423:         del = get_delay (0);
 10818  006C  3000               	movlw	0
 10819  006D  0020               	movlb	0	; select bank0
 10820  006E  00A0               	movwf	get_delay@ms
 10821  006F  00A1               	movwf	get_delay@ms+1
 10822  0070  319F  2751  3180   	fcall	_get_delay
 10823  0073  0821               	movf	?_get_delay+1,w
 10824  0074  0022               	movlb	2	; select bank2
 10825  0075  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 10826  0076  0020               	movlb	0	; select bank0
 10827  0077  0820               	movf	?_get_delay,w
 10828  0078  0022               	movlb	2	; select bank2
 10829  0079  00CB               	movwf	Config_Heater@del^(0+256)
 10830  007A                     l1097:	
 10831                           ;main.c: 424:     }
 10832                           
 10833                           
 10834                           ;main.c: 426:     StartStop_AlarmLED_Blink(1);
 10835  007A  3001               	movlw	1
 10836  007B  319B  235C  3180   	fcall	_StartStop_AlarmLED_Blink
 10837                           
 10838                           ;main.c: 427:     StartStop_Dimmer(1);
 10839  007E  3001               	movlw	1
 10840  007F  319C  2438  3180   	fcall	_StartStop_Dimmer
 10841                           
 10842                           ;main.c: 429:     if (del != ticker_g){
 10843  0082  0852               	movf	(_ticker_g+1)^(0+256),w
 10844  0083  064C               	xorwf	(Config_Heater@del+1)^(0+256),w
 10845  0084  1D03               	skipz
 10846  0085  2888               	goto	u7105
 10847  0086  0851               	movf	_ticker_g^(0+256),w
 10848  0087  064B               	xorwf	Config_Heater@del^(0+256),w
 10849  0088                     u7105:
 10850  0088  1D03               	btfss	3,2
 10851  0089  0008               	return
 10852                           
 10853                           ;main.c: 434:     if (1 == onceFlag){
 10854  008A  036E               	decf	_onceFlag^(0+256),w
 10855  008B  1D03               	btfss	3,2
 10856  008C  0008               	return
 10857  008D  2E48               	goto	l6407
 10858  008E                     l6287:
 10859                           
 10860                           ;main.c: 440:                 SetDimmer(10);
 10861  008E  3041               	movlw	65
 10862  008F  0022               	movlb	2	; select bank2
 10863  0090  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 10864  0091  3020               	movlw	32
 10865  0092  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 10866  0093  3000               	movlw	0
 10867  0094  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 10868  0095  3000               	movlw	0
 10869  0096  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 10870  0097  3192  221B  3180   	fcall	_SetDimmer
 10871                           
 10872                           ;main.c: 441:                 del = get_delay(1500);
 10873  009A  30DC               	movlw	220
 10874  009B  0020               	movlb	0	; select bank0
 10875  009C  00A0               	movwf	get_delay@ms
 10876  009D  3005               	movlw	5
 10877  009E  00A1               	movwf	get_delay@ms+1
 10878  009F  319F  2751         	fcall	_get_delay
 10879  00A1  0821               	movf	?_get_delay+1,w
 10880  00A2  0022               	movlb	2	; select bank2
 10881  00A3  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 10882  00A4  0020               	movlb	0	; select bank0
 10883  00A5  0820               	movf	?_get_delay,w
 10884  00A6  0022               	movlb	2	; select bank2
 10885  00A7  00CB               	movwf	Config_Heater@del^(0+256)
 10886                           
 10887                           ;main.c: 442:                 break;
 10888  00A8  0008               	return
 10889  00A9                     l6289:
 10890                           
 10891                           ;main.c: 444:                 SetDimmer(11);
 10892  00A9  3041               	movlw	65
 10893  00AA  0022               	movlb	2	; select bank2
 10894  00AB  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 10895  00AC  3030               	movlw	48
 10896  00AD  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 10897  00AE  3000               	movlw	0
 10898  00AF  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 10899  00B0  3000               	movlw	0
 10900  00B1  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 10901  00B2  3192  221B  3180   	fcall	_SetDimmer
 10902                           
 10903                           ;main.c: 445:                 del = get_delay(1500);
 10904  00B5  30DC               	movlw	220
 10905  00B6  0020               	movlb	0	; select bank0
 10906  00B7  00A0               	movwf	get_delay@ms
 10907  00B8  3005               	movlw	5
 10908  00B9  00A1               	movwf	get_delay@ms+1
 10909  00BA  319F  2751         	fcall	_get_delay
 10910  00BC  0821               	movf	?_get_delay+1,w
 10911  00BD  0022               	movlb	2	; select bank2
 10912  00BE  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 10913  00BF  0020               	movlb	0	; select bank0
 10914  00C0  0820               	movf	?_get_delay,w
 10915  00C1  0022               	movlb	2	; select bank2
 10916  00C2  00CB               	movwf	Config_Heater@del^(0+256)
 10917                           
 10918                           ;main.c: 446:                 break;
 10919  00C3  0008               	return
 10920  00C4                     l6291:
 10921                           
 10922                           ;main.c: 448:                 SetDimmer(12);
 10923  00C4  3041               	movlw	65
 10924  00C5  0022               	movlb	2	; select bank2
 10925  00C6  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 10926  00C7  3040               	movlw	64
 10927  00C8  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 10928  00C9  3000               	movlw	0
 10929  00CA  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 10930  00CB  3000               	movlw	0
 10931  00CC  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 10932  00CD  3192  221B  3180   	fcall	_SetDimmer
 10933                           
 10934                           ;main.c: 449:                 del = get_delay(1500);
 10935  00D0  30DC               	movlw	220
 10936  00D1  0020               	movlb	0	; select bank0
 10937  00D2  00A0               	movwf	get_delay@ms
 10938  00D3  3005               	movlw	5
 10939  00D4  00A1               	movwf	get_delay@ms+1
 10940  00D5  319F  2751         	fcall	_get_delay
 10941  00D7  0821               	movf	?_get_delay+1,w
 10942  00D8  0022               	movlb	2	; select bank2
 10943  00D9  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 10944  00DA  0020               	movlb	0	; select bank0
 10945  00DB  0820               	movf	?_get_delay,w
 10946  00DC  0022               	movlb	2	; select bank2
 10947  00DD  00CB               	movwf	Config_Heater@del^(0+256)
 10948                           
 10949                           ;main.c: 450:                 break;
 10950  00DE  0008               	return
 10951  00DF                     l6293:
 10952                           
 10953                           ;main.c: 452:                 SetDimmer(13);
 10954  00DF  3041               	movlw	65
 10955  00E0  0022               	movlb	2	; select bank2
 10956  00E1  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 10957  00E2  3050               	movlw	80
 10958  00E3  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 10959  00E4  3000               	movlw	0
 10960  00E5  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 10961  00E6  3000               	movlw	0
 10962  00E7  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 10963  00E8  3192  221B  3180   	fcall	_SetDimmer
 10964                           
 10965                           ;main.c: 453:                 del = get_delay(1500);
 10966  00EB  30DC               	movlw	220
 10967  00EC  0020               	movlb	0	; select bank0
 10968  00ED  00A0               	movwf	get_delay@ms
 10969  00EE  3005               	movlw	5
 10970  00EF  00A1               	movwf	get_delay@ms+1
 10971  00F0  319F  2751         	fcall	_get_delay
 10972  00F2  0821               	movf	?_get_delay+1,w
 10973  00F3  0022               	movlb	2	; select bank2
 10974  00F4  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 10975  00F5  0020               	movlb	0	; select bank0
 10976  00F6  0820               	movf	?_get_delay,w
 10977  00F7  0022               	movlb	2	; select bank2
 10978  00F8  00CB               	movwf	Config_Heater@del^(0+256)
 10979                           
 10980                           ;main.c: 454:                 break;
 10981  00F9  0008               	return
 10982  00FA                     l6295:
 10983                           
 10984                           ;main.c: 456:                 SetDimmer(14);
 10985  00FA  3041               	movlw	65
 10986  00FB  0022               	movlb	2	; select bank2
 10987  00FC  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 10988  00FD  3060               	movlw	96
 10989  00FE  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 10990  00FF  3000               	movlw	0
 10991  0100  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 10992  0101  3000               	movlw	0
 10993  0102  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 10994  0103  3192  221B  3180   	fcall	_SetDimmer
 10995                           
 10996                           ;main.c: 457:                 del = get_delay(1500);
 10997  0106  30DC               	movlw	220
 10998  0107  0020               	movlb	0	; select bank0
 10999  0108  00A0               	movwf	get_delay@ms
 11000  0109  3005               	movlw	5
 11001  010A  00A1               	movwf	get_delay@ms+1
 11002  010B  319F  2751         	fcall	_get_delay
 11003  010D  0821               	movf	?_get_delay+1,w
 11004  010E  0022               	movlb	2	; select bank2
 11005  010F  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11006  0110  0020               	movlb	0	; select bank0
 11007  0111  0820               	movf	?_get_delay,w
 11008  0112  0022               	movlb	2	; select bank2
 11009  0113  00CB               	movwf	Config_Heater@del^(0+256)
 11010                           
 11011                           ;main.c: 458:                 break;
 11012  0114  0008               	return
 11013  0115                     l6297:
 11014                           
 11015                           ;main.c: 460:                 SetDimmer(15);
 11016  0115  3041               	movlw	65
 11017  0116  0022               	movlb	2	; select bank2
 11018  0117  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11019  0118  3070               	movlw	112
 11020  0119  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11021  011A  3000               	movlw	0
 11022  011B  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11023  011C  3000               	movlw	0
 11024  011D  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11025  011E  3192  221B  3180   	fcall	_SetDimmer
 11026                           
 11027                           ;main.c: 461:                 del = get_delay(1500);
 11028  0121  30DC               	movlw	220
 11029  0122  0020               	movlb	0	; select bank0
 11030  0123  00A0               	movwf	get_delay@ms
 11031  0124  3005               	movlw	5
 11032  0125  00A1               	movwf	get_delay@ms+1
 11033  0126  319F  2751         	fcall	_get_delay
 11034  0128  0821               	movf	?_get_delay+1,w
 11035  0129  0022               	movlb	2	; select bank2
 11036  012A  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11037  012B  0020               	movlb	0	; select bank0
 11038  012C  0820               	movf	?_get_delay,w
 11039  012D  0022               	movlb	2	; select bank2
 11040  012E  00CB               	movwf	Config_Heater@del^(0+256)
 11041                           
 11042                           ;main.c: 462:                 break;
 11043  012F  0008               	return
 11044  0130                     l6299:
 11045                           
 11046                           ;main.c: 464:                 SetDimmer(16);
 11047  0130  3041               	movlw	65
 11048  0131  0022               	movlb	2	; select bank2
 11049  0132  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11050  0133  3080               	movlw	128
 11051  0134  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11052  0135  3000               	movlw	0
 11053  0136  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11054  0137  3000               	movlw	0
 11055  0138  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11056  0139  3192  221B  3180   	fcall	_SetDimmer
 11057                           
 11058                           ;main.c: 465:                 del = get_delay(1500);
 11059  013C  30DC               	movlw	220
 11060  013D  0020               	movlb	0	; select bank0
 11061  013E  00A0               	movwf	get_delay@ms
 11062  013F  3005               	movlw	5
 11063  0140  00A1               	movwf	get_delay@ms+1
 11064  0141  319F  2751         	fcall	_get_delay
 11065  0143  0821               	movf	?_get_delay+1,w
 11066  0144  0022               	movlb	2	; select bank2
 11067  0145  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11068  0146  0020               	movlb	0	; select bank0
 11069  0147  0820               	movf	?_get_delay,w
 11070  0148  0022               	movlb	2	; select bank2
 11071  0149  00CB               	movwf	Config_Heater@del^(0+256)
 11072                           
 11073                           ;main.c: 466:                 break;
 11074  014A  0008               	return
 11075  014B                     l6301:
 11076                           
 11077                           ;main.c: 468:                 SetDimmer(17);
 11078  014B  3041               	movlw	65
 11079  014C  0022               	movlb	2	; select bank2
 11080  014D  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11081  014E  3088               	movlw	136
 11082  014F  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11083  0150  3000               	movlw	0
 11084  0151  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11085  0152  3000               	movlw	0
 11086  0153  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11087  0154  3192  221B  3180   	fcall	_SetDimmer
 11088                           
 11089                           ;main.c: 469:                 del = get_delay(1500);
 11090  0157  30DC               	movlw	220
 11091  0158  0020               	movlb	0	; select bank0
 11092  0159  00A0               	movwf	get_delay@ms
 11093  015A  3005               	movlw	5
 11094  015B  00A1               	movwf	get_delay@ms+1
 11095  015C  319F  2751         	fcall	_get_delay
 11096  015E  0821               	movf	?_get_delay+1,w
 11097  015F  0022               	movlb	2	; select bank2
 11098  0160  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11099  0161  0020               	movlb	0	; select bank0
 11100  0162  0820               	movf	?_get_delay,w
 11101  0163  0022               	movlb	2	; select bank2
 11102  0164  00CB               	movwf	Config_Heater@del^(0+256)
 11103                           
 11104                           ;main.c: 470:                 break;
 11105  0165  0008               	return
 11106  0166                     l6303:
 11107                           
 11108                           ;main.c: 472:                 SetDimmer(18);
 11109  0166  3041               	movlw	65
 11110  0167  0022               	movlb	2	; select bank2
 11111  0168  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11112  0169  3090               	movlw	144
 11113  016A  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11114  016B  3000               	movlw	0
 11115  016C  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11116  016D  3000               	movlw	0
 11117  016E  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11118  016F  3192  221B  3180   	fcall	_SetDimmer
 11119                           
 11120                           ;main.c: 473:                 del = get_delay(1500);
 11121  0172  30DC               	movlw	220
 11122  0173  0020               	movlb	0	; select bank0
 11123  0174  00A0               	movwf	get_delay@ms
 11124  0175  3005               	movlw	5
 11125  0176  00A1               	movwf	get_delay@ms+1
 11126  0177  319F  2751         	fcall	_get_delay
 11127  0179  0821               	movf	?_get_delay+1,w
 11128  017A  0022               	movlb	2	; select bank2
 11129  017B  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11130  017C  0020               	movlb	0	; select bank0
 11131  017D  0820               	movf	?_get_delay,w
 11132  017E  0022               	movlb	2	; select bank2
 11133  017F  00CB               	movwf	Config_Heater@del^(0+256)
 11134                           
 11135                           ;main.c: 474:                 break;
 11136  0180  0008               	return
 11137  0181                     l6305:
 11138                           
 11139                           ;main.c: 476:                 SetDimmer(19);
 11140  0181  3041               	movlw	65
 11141  0182  0022               	movlb	2	; select bank2
 11142  0183  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11143  0184  3098               	movlw	152
 11144  0185  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11145  0186  3000               	movlw	0
 11146  0187  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11147  0188  3000               	movlw	0
 11148  0189  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11149  018A  3192  221B  3180   	fcall	_SetDimmer
 11150                           
 11151                           ;main.c: 477:                 del = get_delay(1500);
 11152  018D  30DC               	movlw	220
 11153  018E  0020               	movlb	0	; select bank0
 11154  018F  00A0               	movwf	get_delay@ms
 11155  0190  3005               	movlw	5
 11156  0191  00A1               	movwf	get_delay@ms+1
 11157  0192  319F  2751         	fcall	_get_delay
 11158  0194  0821               	movf	?_get_delay+1,w
 11159  0195  0022               	movlb	2	; select bank2
 11160  0196  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11161  0197  0020               	movlb	0	; select bank0
 11162  0198  0820               	movf	?_get_delay,w
 11163  0199  0022               	movlb	2	; select bank2
 11164  019A  00CB               	movwf	Config_Heater@del^(0+256)
 11165                           
 11166                           ;main.c: 478:                 break;
 11167  019B  0008               	return
 11168  019C                     l6307:
 11169                           
 11170                           ;main.c: 480:                 SetDimmer(20);
 11171  019C  3041               	movlw	65
 11172  019D  0022               	movlb	2	; select bank2
 11173  019E  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11174  019F  30A0               	movlw	160
 11175  01A0  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11176  01A1  3000               	movlw	0
 11177  01A2  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11178  01A3  3000               	movlw	0
 11179  01A4  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11180  01A5  3192  221B  3180   	fcall	_SetDimmer
 11181                           
 11182                           ;main.c: 481:                 del = get_delay(1500);
 11183  01A8  30DC               	movlw	220
 11184  01A9  0020               	movlb	0	; select bank0
 11185  01AA  00A0               	movwf	get_delay@ms
 11186  01AB  3005               	movlw	5
 11187  01AC  00A1               	movwf	get_delay@ms+1
 11188  01AD  319F  2751         	fcall	_get_delay
 11189  01AF  0821               	movf	?_get_delay+1,w
 11190  01B0  0022               	movlb	2	; select bank2
 11191  01B1  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11192  01B2  0020               	movlb	0	; select bank0
 11193  01B3  0820               	movf	?_get_delay,w
 11194  01B4  0022               	movlb	2	; select bank2
 11195  01B5  00CB               	movwf	Config_Heater@del^(0+256)
 11196                           
 11197                           ;main.c: 482:                 break;
 11198  01B6  0008               	return
 11199  01B7                     l6309:
 11200                           
 11201                           ;main.c: 484:                 SetDimmer(21);
 11202  01B7  3041               	movlw	65
 11203  01B8  0022               	movlb	2	; select bank2
 11204  01B9  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11205  01BA  30A8               	movlw	168
 11206  01BB  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11207  01BC  3000               	movlw	0
 11208  01BD  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11209  01BE  3000               	movlw	0
 11210  01BF  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11211  01C0  3192  221B  3180   	fcall	_SetDimmer
 11212                           
 11213                           ;main.c: 485:                 del = get_delay(1500);
 11214  01C3  30DC               	movlw	220
 11215  01C4  0020               	movlb	0	; select bank0
 11216  01C5  00A0               	movwf	get_delay@ms
 11217  01C6  3005               	movlw	5
 11218  01C7  00A1               	movwf	get_delay@ms+1
 11219  01C8  319F  2751         	fcall	_get_delay
 11220  01CA  0821               	movf	?_get_delay+1,w
 11221  01CB  0022               	movlb	2	; select bank2
 11222  01CC  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11223  01CD  0020               	movlb	0	; select bank0
 11224  01CE  0820               	movf	?_get_delay,w
 11225  01CF  0022               	movlb	2	; select bank2
 11226  01D0  00CB               	movwf	Config_Heater@del^(0+256)
 11227                           
 11228                           ;main.c: 486:                 break;
 11229  01D1  0008               	return
 11230  01D2                     l6311:
 11231                           
 11232                           ;main.c: 488:                 SetDimmer(22);
 11233  01D2  3041               	movlw	65
 11234  01D3  0022               	movlb	2	; select bank2
 11235  01D4  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11236  01D5  30B0               	movlw	176
 11237  01D6  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11238  01D7  3000               	movlw	0
 11239  01D8  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11240  01D9  3000               	movlw	0
 11241  01DA  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11242  01DB  3192  221B  3180   	fcall	_SetDimmer
 11243                           
 11244                           ;main.c: 489:                 del = get_delay(1500);
 11245  01DE  30DC               	movlw	220
 11246  01DF  0020               	movlb	0	; select bank0
 11247  01E0  00A0               	movwf	get_delay@ms
 11248  01E1  3005               	movlw	5
 11249  01E2  00A1               	movwf	get_delay@ms+1
 11250  01E3  319F  2751         	fcall	_get_delay
 11251  01E5  0821               	movf	?_get_delay+1,w
 11252  01E6  0022               	movlb	2	; select bank2
 11253  01E7  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11254  01E8  0020               	movlb	0	; select bank0
 11255  01E9  0820               	movf	?_get_delay,w
 11256  01EA  0022               	movlb	2	; select bank2
 11257  01EB  00CB               	movwf	Config_Heater@del^(0+256)
 11258                           
 11259                           ;main.c: 490:                 break;
 11260  01EC  0008               	return
 11261  01ED                     l6313:
 11262                           
 11263                           ;main.c: 492:                 SetDimmer(23);
 11264  01ED  3041               	movlw	65
 11265  01EE  0022               	movlb	2	; select bank2
 11266  01EF  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11267  01F0  30B8               	movlw	184
 11268  01F1  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11269  01F2  3000               	movlw	0
 11270  01F3  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11271  01F4  3000               	movlw	0
 11272  01F5  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11273  01F6  3192  221B  3180   	fcall	_SetDimmer
 11274                           
 11275                           ;main.c: 493:                 del = get_delay(1500);
 11276  01F9  30DC               	movlw	220
 11277  01FA  0020               	movlb	0	; select bank0
 11278  01FB  00A0               	movwf	get_delay@ms
 11279  01FC  3005               	movlw	5
 11280  01FD  00A1               	movwf	get_delay@ms+1
 11281  01FE  319F  2751         	fcall	_get_delay
 11282  0200  0821               	movf	?_get_delay+1,w
 11283  0201  0022               	movlb	2	; select bank2
 11284  0202  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11285  0203  0020               	movlb	0	; select bank0
 11286  0204  0820               	movf	?_get_delay,w
 11287  0205  0022               	movlb	2	; select bank2
 11288  0206  00CB               	movwf	Config_Heater@del^(0+256)
 11289                           
 11290                           ;main.c: 494:                 break;
 11291  0207  0008               	return
 11292  0208                     l6315:
 11293                           
 11294                           ;main.c: 496:                 SetDimmer(24);
 11295  0208  3041               	movlw	65
 11296  0209  0022               	movlb	2	; select bank2
 11297  020A  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11298  020B  30C0               	movlw	192
 11299  020C  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11300  020D  3000               	movlw	0
 11301  020E  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11302  020F  3000               	movlw	0
 11303  0210  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11304  0211  3192  221B  3180   	fcall	_SetDimmer
 11305                           
 11306                           ;main.c: 497:                 del = get_delay(1500);
 11307  0214  30DC               	movlw	220
 11308  0215  0020               	movlb	0	; select bank0
 11309  0216  00A0               	movwf	get_delay@ms
 11310  0217  3005               	movlw	5
 11311  0218  00A1               	movwf	get_delay@ms+1
 11312  0219  319F  2751         	fcall	_get_delay
 11313  021B  0821               	movf	?_get_delay+1,w
 11314  021C  0022               	movlb	2	; select bank2
 11315  021D  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11316  021E  0020               	movlb	0	; select bank0
 11317  021F  0820               	movf	?_get_delay,w
 11318  0220  0022               	movlb	2	; select bank2
 11319  0221  00CB               	movwf	Config_Heater@del^(0+256)
 11320                           
 11321                           ;main.c: 498:                 break;
 11322  0222  0008               	return
 11323  0223                     l6317:
 11324                           
 11325                           ;main.c: 500:                 SetDimmer(25);
 11326  0223  3041               	movlw	65
 11327  0224  0022               	movlb	2	; select bank2
 11328  0225  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11329  0226  30C8               	movlw	200
 11330  0227  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11331  0228  3000               	movlw	0
 11332  0229  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11333  022A  3000               	movlw	0
 11334  022B  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11335  022C  3192  221B  3180   	fcall	_SetDimmer
 11336                           
 11337                           ;main.c: 501:                 del = get_delay(1500);
 11338  022F  30DC               	movlw	220
 11339  0230  0020               	movlb	0	; select bank0
 11340  0231  00A0               	movwf	get_delay@ms
 11341  0232  3005               	movlw	5
 11342  0233  00A1               	movwf	get_delay@ms+1
 11343  0234  319F  2751         	fcall	_get_delay
 11344  0236  0821               	movf	?_get_delay+1,w
 11345  0237  0022               	movlb	2	; select bank2
 11346  0238  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11347  0239  0020               	movlb	0	; select bank0
 11348  023A  0820               	movf	?_get_delay,w
 11349  023B  0022               	movlb	2	; select bank2
 11350  023C  00CB               	movwf	Config_Heater@del^(0+256)
 11351                           
 11352                           ;main.c: 502:                 break;
 11353  023D  0008               	return
 11354  023E                     l6319:
 11355                           
 11356                           ;main.c: 504:                 SetDimmer(26);
 11357  023E  3041               	movlw	65
 11358  023F  0022               	movlb	2	; select bank2
 11359  0240  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11360  0241  30D0               	movlw	208
 11361  0242  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11362  0243  3000               	movlw	0
 11363  0244  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11364  0245  3000               	movlw	0
 11365  0246  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11366  0247  3192  221B  3180   	fcall	_SetDimmer
 11367                           
 11368                           ;main.c: 505:                 del = get_delay(1500);
 11369  024A  30DC               	movlw	220
 11370  024B  0020               	movlb	0	; select bank0
 11371  024C  00A0               	movwf	get_delay@ms
 11372  024D  3005               	movlw	5
 11373  024E  00A1               	movwf	get_delay@ms+1
 11374  024F  319F  2751         	fcall	_get_delay
 11375  0251  0821               	movf	?_get_delay+1,w
 11376  0252  0022               	movlb	2	; select bank2
 11377  0253  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11378  0254  0020               	movlb	0	; select bank0
 11379  0255  0820               	movf	?_get_delay,w
 11380  0256  0022               	movlb	2	; select bank2
 11381  0257  00CB               	movwf	Config_Heater@del^(0+256)
 11382                           
 11383                           ;main.c: 506:                 break;
 11384  0258  0008               	return
 11385  0259                     l6321:
 11386                           
 11387                           ;main.c: 508:                 SetDimmer(27);
 11388  0259  3041               	movlw	65
 11389  025A  0022               	movlb	2	; select bank2
 11390  025B  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11391  025C  30D8               	movlw	216
 11392  025D  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11393  025E  3000               	movlw	0
 11394  025F  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11395  0260  3000               	movlw	0
 11396  0261  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11397  0262  3192  221B  3180   	fcall	_SetDimmer
 11398                           
 11399                           ;main.c: 509:                 del = get_delay(1500);
 11400  0265  30DC               	movlw	220
 11401  0266  0020               	movlb	0	; select bank0
 11402  0267  00A0               	movwf	get_delay@ms
 11403  0268  3005               	movlw	5
 11404  0269  00A1               	movwf	get_delay@ms+1
 11405  026A  319F  2751         	fcall	_get_delay
 11406  026C  0821               	movf	?_get_delay+1,w
 11407  026D  0022               	movlb	2	; select bank2
 11408  026E  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11409  026F  0020               	movlb	0	; select bank0
 11410  0270  0820               	movf	?_get_delay,w
 11411  0271  0022               	movlb	2	; select bank2
 11412  0272  00CB               	movwf	Config_Heater@del^(0+256)
 11413                           
 11414                           ;main.c: 510:                 break;
 11415  0273  0008               	return
 11416  0274                     l6323:
 11417                           
 11418                           ;main.c: 512:                 SetDimmer(28);
 11419  0274  3041               	movlw	65
 11420  0275  0022               	movlb	2	; select bank2
 11421  0276  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11422  0277  30E0               	movlw	224
 11423  0278  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11424  0279  3000               	movlw	0
 11425  027A  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11426  027B  3000               	movlw	0
 11427  027C  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11428  027D  3192  221B  3180   	fcall	_SetDimmer
 11429                           
 11430                           ;main.c: 513:                 del = get_delay(1500);
 11431  0280  30DC               	movlw	220
 11432  0281  0020               	movlb	0	; select bank0
 11433  0282  00A0               	movwf	get_delay@ms
 11434  0283  3005               	movlw	5
 11435  0284  00A1               	movwf	get_delay@ms+1
 11436  0285  319F  2751         	fcall	_get_delay
 11437  0287  0821               	movf	?_get_delay+1,w
 11438  0288  0022               	movlb	2	; select bank2
 11439  0289  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11440  028A  0020               	movlb	0	; select bank0
 11441  028B  0820               	movf	?_get_delay,w
 11442  028C  0022               	movlb	2	; select bank2
 11443  028D  00CB               	movwf	Config_Heater@del^(0+256)
 11444                           
 11445                           ;main.c: 514:                 break;
 11446  028E  0008               	return
 11447  028F                     l6325:
 11448                           
 11449                           ;main.c: 516:                 SetDimmer(29);
 11450  028F  3041               	movlw	65
 11451  0290  0022               	movlb	2	; select bank2
 11452  0291  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11453  0292  30E8               	movlw	232
 11454  0293  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11455  0294  3000               	movlw	0
 11456  0295  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11457  0296  3000               	movlw	0
 11458  0297  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11459  0298  3192  221B  3180   	fcall	_SetDimmer
 11460                           
 11461                           ;main.c: 517:                 del = get_delay(1500);
 11462  029B  30DC               	movlw	220
 11463  029C  0020               	movlb	0	; select bank0
 11464  029D  00A0               	movwf	get_delay@ms
 11465  029E  3005               	movlw	5
 11466  029F  00A1               	movwf	get_delay@ms+1
 11467  02A0  319F  2751         	fcall	_get_delay
 11468  02A2  0821               	movf	?_get_delay+1,w
 11469  02A3  0022               	movlb	2	; select bank2
 11470  02A4  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11471  02A5  0020               	movlb	0	; select bank0
 11472  02A6  0820               	movf	?_get_delay,w
 11473  02A7  0022               	movlb	2	; select bank2
 11474  02A8  00CB               	movwf	Config_Heater@del^(0+256)
 11475                           
 11476                           ;main.c: 518:                 break;
 11477  02A9  0008               	return
 11478  02AA                     l6327:
 11479                           
 11480                           ;main.c: 520:                 SetDimmer(30);
 11481  02AA  3041               	movlw	65
 11482  02AB  0022               	movlb	2	; select bank2
 11483  02AC  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11484  02AD  30F0               	movlw	240
 11485  02AE  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11486  02AF  3000               	movlw	0
 11487  02B0  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11488  02B1  3000               	movlw	0
 11489  02B2  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11490  02B3  3192  221B  3180   	fcall	_SetDimmer
 11491                           
 11492                           ;main.c: 521:                 del = get_delay(1500);
 11493  02B6  30DC               	movlw	220
 11494  02B7  0020               	movlb	0	; select bank0
 11495  02B8  00A0               	movwf	get_delay@ms
 11496  02B9  3005               	movlw	5
 11497  02BA  00A1               	movwf	get_delay@ms+1
 11498  02BB  319F  2751         	fcall	_get_delay
 11499  02BD  0821               	movf	?_get_delay+1,w
 11500  02BE  0022               	movlb	2	; select bank2
 11501  02BF  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11502  02C0  0020               	movlb	0	; select bank0
 11503  02C1  0820               	movf	?_get_delay,w
 11504  02C2  0022               	movlb	2	; select bank2
 11505  02C3  00CB               	movwf	Config_Heater@del^(0+256)
 11506                           
 11507                           ;main.c: 522:                 break;
 11508  02C4  0008               	return
 11509  02C5                     l6329:
 11510                           
 11511                           ;main.c: 526:                 SetDimmer(30.5);
 11512  02C5  3041               	movlw	65
 11513  02C6  0022               	movlb	2	; select bank2
 11514  02C7  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11515  02C8  30F4               	movlw	244
 11516  02C9  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11517  02CA  3000               	movlw	0
 11518  02CB  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11519  02CC  3000               	movlw	0
 11520  02CD  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11521  02CE  3192  221B  3180   	fcall	_SetDimmer
 11522                           
 11523                           ;main.c: 527:                 del = get_delay(5000);
 11524  02D1  3088               	movlw	136
 11525  02D2  0020               	movlb	0	; select bank0
 11526  02D3  00A0               	movwf	get_delay@ms
 11527  02D4  3013               	movlw	19
 11528  02D5  00A1               	movwf	get_delay@ms+1
 11529  02D6  319F  2751         	fcall	_get_delay
 11530  02D8  0821               	movf	?_get_delay+1,w
 11531  02D9  0022               	movlb	2	; select bank2
 11532  02DA  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11533  02DB  0020               	movlb	0	; select bank0
 11534  02DC  0820               	movf	?_get_delay,w
 11535  02DD  0022               	movlb	2	; select bank2
 11536  02DE  00CB               	movwf	Config_Heater@del^(0+256)
 11537                           
 11538                           ;main.c: 528:                 break;
 11539  02DF  0008               	return
 11540  02E0                     l6331:
 11541                           
 11542                           ;main.c: 530:                 SetDimmer(31);
 11543  02E0  3041               	movlw	65
 11544  02E1  0022               	movlb	2	; select bank2
 11545  02E2  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11546  02E3  30F8               	movlw	248
 11547  02E4  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11548  02E5  3000               	movlw	0
 11549  02E6  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11550  02E7  3000               	movlw	0
 11551  02E8  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11552  02E9  3192  221B  3180   	fcall	_SetDimmer
 11553                           
 11554                           ;main.c: 531:                 del = get_delay(5000);
 11555  02EC  3088               	movlw	136
 11556  02ED  0020               	movlb	0	; select bank0
 11557  02EE  00A0               	movwf	get_delay@ms
 11558  02EF  3013               	movlw	19
 11559  02F0  00A1               	movwf	get_delay@ms+1
 11560  02F1  319F  2751         	fcall	_get_delay
 11561  02F3  0821               	movf	?_get_delay+1,w
 11562  02F4  0022               	movlb	2	; select bank2
 11563  02F5  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11564  02F6  0020               	movlb	0	; select bank0
 11565  02F7  0820               	movf	?_get_delay,w
 11566  02F8  0022               	movlb	2	; select bank2
 11567  02F9  00CB               	movwf	Config_Heater@del^(0+256)
 11568                           
 11569                           ;main.c: 532:                 break;
 11570  02FA  0008               	return
 11571  02FB                     l6333:
 11572                           
 11573                           ;main.c: 534:                 SetDimmer(31.5);
 11574  02FB  3041               	movlw	65
 11575  02FC  0022               	movlb	2	; select bank2
 11576  02FD  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11577  02FE  30FC               	movlw	252
 11578  02FF  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11579  0300  3000               	movlw	0
 11580  0301  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11581  0302  3000               	movlw	0
 11582  0303  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11583  0304  3192  221B  3180   	fcall	_SetDimmer
 11584                           
 11585                           ;main.c: 535:                 del = get_delay(5000);
 11586  0307  3088               	movlw	136
 11587  0308  0020               	movlb	0	; select bank0
 11588  0309  00A0               	movwf	get_delay@ms
 11589  030A  3013               	movlw	19
 11590  030B  00A1               	movwf	get_delay@ms+1
 11591  030C  319F  2751         	fcall	_get_delay
 11592  030E  0821               	movf	?_get_delay+1,w
 11593  030F  0022               	movlb	2	; select bank2
 11594  0310  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11595  0311  0020               	movlb	0	; select bank0
 11596  0312  0820               	movf	?_get_delay,w
 11597  0313  0022               	movlb	2	; select bank2
 11598  0314  00CB               	movwf	Config_Heater@del^(0+256)
 11599                           
 11600                           ;main.c: 536:                 break;
 11601  0315  0008               	return
 11602  0316                     l6335:
 11603                           
 11604                           ;main.c: 538:                 SetDimmer(32);
 11605  0316  3042               	movlw	66
 11606  0317  0022               	movlb	2	; select bank2
 11607  0318  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11608  0319  3000               	movlw	0
 11609  031A  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11610  031B  3000               	movlw	0
 11611  031C  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11612  031D  3000               	movlw	0
 11613  031E  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11614  031F  3192  221B  3180   	fcall	_SetDimmer
 11615                           
 11616                           ;main.c: 539:                 del = get_delay(5000);
 11617  0322  3088               	movlw	136
 11618  0323  0020               	movlb	0	; select bank0
 11619  0324  00A0               	movwf	get_delay@ms
 11620  0325  3013               	movlw	19
 11621  0326  00A1               	movwf	get_delay@ms+1
 11622  0327  319F  2751         	fcall	_get_delay
 11623  0329  0821               	movf	?_get_delay+1,w
 11624  032A  0022               	movlb	2	; select bank2
 11625  032B  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11626  032C  0020               	movlb	0	; select bank0
 11627  032D  0820               	movf	?_get_delay,w
 11628  032E  0022               	movlb	2	; select bank2
 11629  032F  00CB               	movwf	Config_Heater@del^(0+256)
 11630                           
 11631                           ;main.c: 540:                 break;
 11632  0330  0008               	return
 11633  0331                     l6337:
 11634                           
 11635                           ;main.c: 542:                 SetDimmer(32.5);
 11636  0331  3042               	movlw	66
 11637  0332  0022               	movlb	2	; select bank2
 11638  0333  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11639  0334  3002               	movlw	2
 11640  0335  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11641  0336  3000               	movlw	0
 11642  0337  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11643  0338  3000               	movlw	0
 11644  0339  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11645  033A  3192  221B  3180   	fcall	_SetDimmer
 11646                           
 11647                           ;main.c: 543:                 del = get_delay(5000);
 11648  033D  3088               	movlw	136
 11649  033E  0020               	movlb	0	; select bank0
 11650  033F  00A0               	movwf	get_delay@ms
 11651  0340  3013               	movlw	19
 11652  0341  00A1               	movwf	get_delay@ms+1
 11653  0342  319F  2751         	fcall	_get_delay
 11654  0344  0821               	movf	?_get_delay+1,w
 11655  0345  0022               	movlb	2	; select bank2
 11656  0346  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11657  0347  0020               	movlb	0	; select bank0
 11658  0348  0820               	movf	?_get_delay,w
 11659  0349  0022               	movlb	2	; select bank2
 11660  034A  00CB               	movwf	Config_Heater@del^(0+256)
 11661                           
 11662                           ;main.c: 544:                 break;
 11663  034B  0008               	return
 11664  034C                     l6339:
 11665                           
 11666                           ;main.c: 546:                 SetDimmer(33);
 11667  034C  3042               	movlw	66
 11668  034D  0022               	movlb	2	; select bank2
 11669  034E  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11670  034F  3004               	movlw	4
 11671  0350  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11672  0351  3000               	movlw	0
 11673  0352  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11674  0353  3000               	movlw	0
 11675  0354  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11676  0355  3192  221B  3180   	fcall	_SetDimmer
 11677                           
 11678                           ;main.c: 547:                 del = get_delay(5000);
 11679  0358  3088               	movlw	136
 11680  0359  0020               	movlb	0	; select bank0
 11681  035A  00A0               	movwf	get_delay@ms
 11682  035B  3013               	movlw	19
 11683  035C  00A1               	movwf	get_delay@ms+1
 11684  035D  319F  2751         	fcall	_get_delay
 11685  035F  0821               	movf	?_get_delay+1,w
 11686  0360  0022               	movlb	2	; select bank2
 11687  0361  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11688  0362  0020               	movlb	0	; select bank0
 11689  0363  0820               	movf	?_get_delay,w
 11690  0364  0022               	movlb	2	; select bank2
 11691  0365  00CB               	movwf	Config_Heater@del^(0+256)
 11692                           
 11693                           ;main.c: 548:                 break;
 11694  0366  0008               	return
 11695  0367                     l6341:
 11696                           
 11697                           ;main.c: 550:                 SetDimmer(33.5);
 11698  0367  3042               	movlw	66
 11699  0368  0022               	movlb	2	; select bank2
 11700  0369  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11701  036A  3006               	movlw	6
 11702  036B  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11703  036C  3000               	movlw	0
 11704  036D  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11705  036E  3000               	movlw	0
 11706  036F  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11707  0370  3192  221B  3180   	fcall	_SetDimmer
 11708                           
 11709                           ;main.c: 551:                 del = get_delay(5000);
 11710  0373  3088               	movlw	136
 11711  0374  0020               	movlb	0	; select bank0
 11712  0375  00A0               	movwf	get_delay@ms
 11713  0376  3013               	movlw	19
 11714  0377  00A1               	movwf	get_delay@ms+1
 11715  0378  319F  2751         	fcall	_get_delay
 11716  037A  0821               	movf	?_get_delay+1,w
 11717  037B  0022               	movlb	2	; select bank2
 11718  037C  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11719  037D  0020               	movlb	0	; select bank0
 11720  037E  0820               	movf	?_get_delay,w
 11721  037F  0022               	movlb	2	; select bank2
 11722  0380  00CB               	movwf	Config_Heater@del^(0+256)
 11723                           
 11724                           ;main.c: 552:                 break;
 11725  0381  0008               	return
 11726  0382                     l6343:
 11727                           
 11728                           ;main.c: 554:                 SetDimmer(34);
 11729  0382  3042               	movlw	66
 11730  0383  0022               	movlb	2	; select bank2
 11731  0384  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11732  0385  3008               	movlw	8
 11733  0386  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11734  0387  3000               	movlw	0
 11735  0388  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11736  0389  3000               	movlw	0
 11737  038A  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11738  038B  3192  221B  3180   	fcall	_SetDimmer
 11739                           
 11740                           ;main.c: 555:                 del = get_delay(5000);
 11741  038E  3088               	movlw	136
 11742  038F  0020               	movlb	0	; select bank0
 11743  0390  00A0               	movwf	get_delay@ms
 11744  0391  3013               	movlw	19
 11745  0392  00A1               	movwf	get_delay@ms+1
 11746  0393  319F  2751         	fcall	_get_delay
 11747  0395  0821               	movf	?_get_delay+1,w
 11748  0396  0022               	movlb	2	; select bank2
 11749  0397  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11750  0398  0020               	movlb	0	; select bank0
 11751  0399  0820               	movf	?_get_delay,w
 11752  039A  0022               	movlb	2	; select bank2
 11753  039B  00CB               	movwf	Config_Heater@del^(0+256)
 11754                           
 11755                           ;main.c: 556:                 break;
 11756  039C  0008               	return
 11757  039D                     l6345:
 11758                           
 11759                           ;main.c: 558:                 SetDimmer(34.5);
 11760  039D  3042               	movlw	66
 11761  039E  0022               	movlb	2	; select bank2
 11762  039F  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11763  03A0  300A               	movlw	10
 11764  03A1  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11765  03A2  3000               	movlw	0
 11766  03A3  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11767  03A4  3000               	movlw	0
 11768  03A5  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11769  03A6  3192  221B  3180   	fcall	_SetDimmer
 11770                           
 11771                           ;main.c: 559:                 del = get_delay(5000);
 11772  03A9  3088               	movlw	136
 11773  03AA  0020               	movlb	0	; select bank0
 11774  03AB  00A0               	movwf	get_delay@ms
 11775  03AC  3013               	movlw	19
 11776  03AD  00A1               	movwf	get_delay@ms+1
 11777  03AE  319F  2751         	fcall	_get_delay
 11778  03B0  0821               	movf	?_get_delay+1,w
 11779  03B1  0022               	movlb	2	; select bank2
 11780  03B2  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11781  03B3  0020               	movlb	0	; select bank0
 11782  03B4  0820               	movf	?_get_delay,w
 11783  03B5  0022               	movlb	2	; select bank2
 11784  03B6  00CB               	movwf	Config_Heater@del^(0+256)
 11785                           
 11786                           ;main.c: 560:                 break;
 11787  03B7  0008               	return
 11788  03B8                     l6347:
 11789                           
 11790                           ;main.c: 562:                 SetDimmer(35);
 11791  03B8  3042               	movlw	66
 11792  03B9  0022               	movlb	2	; select bank2
 11793  03BA  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11794  03BB  300C               	movlw	12
 11795  03BC  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11796  03BD  3000               	movlw	0
 11797  03BE  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11798  03BF  3000               	movlw	0
 11799  03C0  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11800  03C1  3192  221B  3180   	fcall	_SetDimmer
 11801                           
 11802                           ;main.c: 563:                 del = get_delay(5000);
 11803  03C4  3088               	movlw	136
 11804  03C5  0020               	movlb	0	; select bank0
 11805  03C6  00A0               	movwf	get_delay@ms
 11806  03C7  3013               	movlw	19
 11807  03C8  00A1               	movwf	get_delay@ms+1
 11808  03C9  319F  2751         	fcall	_get_delay
 11809  03CB  0821               	movf	?_get_delay+1,w
 11810  03CC  0022               	movlb	2	; select bank2
 11811  03CD  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11812  03CE  0020               	movlb	0	; select bank0
 11813  03CF  0820               	movf	?_get_delay,w
 11814  03D0  0022               	movlb	2	; select bank2
 11815  03D1  00CB               	movwf	Config_Heater@del^(0+256)
 11816                           
 11817                           ;main.c: 564:                 break;
 11818  03D2  0008               	return
 11819  03D3                     l6349:
 11820                           
 11821                           ;main.c: 569:                 SetDimmer(37);
 11822  03D3  3042               	movlw	66
 11823  03D4  0022               	movlb	2	; select bank2
 11824  03D5  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11825  03D6  3014               	movlw	20
 11826  03D7  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11827  03D8  3000               	movlw	0
 11828  03D9  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11829  03DA  3000               	movlw	0
 11830  03DB  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11831  03DC  3192  221B  3180   	fcall	_SetDimmer
 11832                           
 11833                           ;main.c: 570:                 del = get_delay(2500);
 11834  03DF  30C4               	movlw	196
 11835  03E0  0020               	movlb	0	; select bank0
 11836  03E1  00A0               	movwf	get_delay@ms
 11837  03E2  3009               	movlw	9
 11838  03E3  00A1               	movwf	get_delay@ms+1
 11839  03E4  319F  2751         	fcall	_get_delay
 11840  03E6  0821               	movf	?_get_delay+1,w
 11841  03E7  0022               	movlb	2	; select bank2
 11842  03E8  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11843  03E9  0020               	movlb	0	; select bank0
 11844  03EA  0820               	movf	?_get_delay,w
 11845  03EB  0022               	movlb	2	; select bank2
 11846  03EC  00CB               	movwf	Config_Heater@del^(0+256)
 11847                           
 11848                           ;main.c: 571:                 break;
 11849  03ED  0008               	return
 11850  03EE                     l6351:
 11851                           
 11852                           ;main.c: 573:                 SetDimmer(39);
 11853  03EE  3042               	movlw	66
 11854  03EF  0022               	movlb	2	; select bank2
 11855  03F0  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11856  03F1  301C               	movlw	28
 11857  03F2  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11858  03F3  3000               	movlw	0
 11859  03F4  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11860  03F5  3000               	movlw	0
 11861  03F6  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11862  03F7  3192  221B  3180   	fcall	_SetDimmer
 11863                           
 11864                           ;main.c: 574:                 del = get_delay(2500);
 11865  03FA  30C4               	movlw	196
 11866  03FB  0020               	movlb	0	; select bank0
 11867  03FC  00A0               	movwf	get_delay@ms
 11868  03FD  3009               	movlw	9
 11869  03FE  00A1               	movwf	get_delay@ms+1
 11870  03FF  319F  2751         	fcall	_get_delay
 11871  0401  0821               	movf	?_get_delay+1,w
 11872  0402  0022               	movlb	2	; select bank2
 11873  0403  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11874  0404  0020               	movlb	0	; select bank0
 11875  0405  0820               	movf	?_get_delay,w
 11876  0406  0022               	movlb	2	; select bank2
 11877  0407  00CB               	movwf	Config_Heater@del^(0+256)
 11878                           
 11879                           ;main.c: 575:                 break;
 11880  0408  0008               	return
 11881  0409                     l6353:
 11882                           
 11883                           ;main.c: 577:                 SetDimmer(41);
 11884  0409  3042               	movlw	66
 11885  040A  0022               	movlb	2	; select bank2
 11886  040B  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11887  040C  3024               	movlw	36
 11888  040D  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11889  040E  3000               	movlw	0
 11890  040F  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11891  0410  3000               	movlw	0
 11892  0411  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11893  0412  3192  221B  3180   	fcall	_SetDimmer
 11894                           
 11895                           ;main.c: 578:                 del = get_delay(2500);
 11896  0415  30C4               	movlw	196
 11897  0416  0020               	movlb	0	; select bank0
 11898  0417  00A0               	movwf	get_delay@ms
 11899  0418  3009               	movlw	9
 11900  0419  00A1               	movwf	get_delay@ms+1
 11901  041A  319F  2751         	fcall	_get_delay
 11902  041C  0821               	movf	?_get_delay+1,w
 11903  041D  0022               	movlb	2	; select bank2
 11904  041E  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11905  041F  0020               	movlb	0	; select bank0
 11906  0420  0820               	movf	?_get_delay,w
 11907  0421  0022               	movlb	2	; select bank2
 11908  0422  00CB               	movwf	Config_Heater@del^(0+256)
 11909                           
 11910                           ;main.c: 579:                 break;
 11911  0423  0008               	return
 11912  0424                     l6355:
 11913                           
 11914                           ;main.c: 581:                 SetDimmer(43);
 11915  0424  3042               	movlw	66
 11916  0425  0022               	movlb	2	; select bank2
 11917  0426  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11918  0427  302C               	movlw	44
 11919  0428  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11920  0429  3000               	movlw	0
 11921  042A  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11922  042B  3000               	movlw	0
 11923  042C  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11924  042D  3192  221B  3180   	fcall	_SetDimmer
 11925                           
 11926                           ;main.c: 582:                 del = get_delay(2500);
 11927  0430  30C4               	movlw	196
 11928  0431  0020               	movlb	0	; select bank0
 11929  0432  00A0               	movwf	get_delay@ms
 11930  0433  3009               	movlw	9
 11931  0434  00A1               	movwf	get_delay@ms+1
 11932  0435  319F  2751         	fcall	_get_delay
 11933  0437  0821               	movf	?_get_delay+1,w
 11934  0438  0022               	movlb	2	; select bank2
 11935  0439  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11936  043A  0020               	movlb	0	; select bank0
 11937  043B  0820               	movf	?_get_delay,w
 11938  043C  0022               	movlb	2	; select bank2
 11939  043D  00CB               	movwf	Config_Heater@del^(0+256)
 11940                           
 11941                           ;main.c: 583:                 break;
 11942  043E  0008               	return
 11943  043F                     l6357:
 11944                           
 11945                           ;main.c: 585:                 SetDimmer(45);
 11946  043F  3042               	movlw	66
 11947  0440  0022               	movlb	2	; select bank2
 11948  0441  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11949  0442  3034               	movlw	52
 11950  0443  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11951  0444  3000               	movlw	0
 11952  0445  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11953  0446  3000               	movlw	0
 11954  0447  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11955  0448  3192  221B  3180   	fcall	_SetDimmer
 11956                           
 11957                           ;main.c: 586:                 del = get_delay(2500);
 11958  044B  30C4               	movlw	196
 11959  044C  0020               	movlb	0	; select bank0
 11960  044D  00A0               	movwf	get_delay@ms
 11961  044E  3009               	movlw	9
 11962  044F  00A1               	movwf	get_delay@ms+1
 11963  0450  319F  2751         	fcall	_get_delay
 11964  0452  0821               	movf	?_get_delay+1,w
 11965  0453  0022               	movlb	2	; select bank2
 11966  0454  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11967  0455  0020               	movlb	0	; select bank0
 11968  0456  0820               	movf	?_get_delay,w
 11969  0457  0022               	movlb	2	; select bank2
 11970  0458  00CB               	movwf	Config_Heater@del^(0+256)
 11971                           
 11972                           ;main.c: 587:                 break;
 11973  0459  0008               	return
 11974  045A                     l6359:
 11975                           
 11976                           ;main.c: 589:                 SetDimmer(47);
 11977  045A  3042               	movlw	66
 11978  045B  0022               	movlb	2	; select bank2
 11979  045C  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 11980  045D  303C               	movlw	60
 11981  045E  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 11982  045F  3000               	movlw	0
 11983  0460  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 11984  0461  3000               	movlw	0
 11985  0462  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 11986  0463  3192  221B  3180   	fcall	_SetDimmer
 11987                           
 11988                           ;main.c: 590:                 del = get_delay(2500);
 11989  0466  30C4               	movlw	196
 11990  0467  0020               	movlb	0	; select bank0
 11991  0468  00A0               	movwf	get_delay@ms
 11992  0469  3009               	movlw	9
 11993  046A  00A1               	movwf	get_delay@ms+1
 11994  046B  319F  2751         	fcall	_get_delay
 11995  046D  0821               	movf	?_get_delay+1,w
 11996  046E  0022               	movlb	2	; select bank2
 11997  046F  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 11998  0470  0020               	movlb	0	; select bank0
 11999  0471  0820               	movf	?_get_delay,w
 12000  0472  0022               	movlb	2	; select bank2
 12001  0473  00CB               	movwf	Config_Heater@del^(0+256)
 12002                           
 12003                           ;main.c: 591:                 break;
 12004  0474  0008               	return
 12005  0475                     l6361:
 12006                           
 12007                           ;main.c: 593:                 SetDimmer(49);
 12008  0475  3042               	movlw	66
 12009  0476  0022               	movlb	2	; select bank2
 12010  0477  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12011  0478  3044               	movlw	68
 12012  0479  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12013  047A  3000               	movlw	0
 12014  047B  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12015  047C  3000               	movlw	0
 12016  047D  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12017  047E  3192  221B  3180   	fcall	_SetDimmer
 12018                           
 12019                           ;main.c: 594:                 del = get_delay(2500);
 12020  0481  30C4               	movlw	196
 12021  0482  0020               	movlb	0	; select bank0
 12022  0483  00A0               	movwf	get_delay@ms
 12023  0484  3009               	movlw	9
 12024  0485  00A1               	movwf	get_delay@ms+1
 12025  0486  319F  2751         	fcall	_get_delay
 12026  0488  0821               	movf	?_get_delay+1,w
 12027  0489  0022               	movlb	2	; select bank2
 12028  048A  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12029  048B  0020               	movlb	0	; select bank0
 12030  048C  0820               	movf	?_get_delay,w
 12031  048D  0022               	movlb	2	; select bank2
 12032  048E  00CB               	movwf	Config_Heater@del^(0+256)
 12033                           
 12034                           ;main.c: 595:                 break;
 12035  048F  0008               	return
 12036  0490                     l6363:
 12037                           
 12038                           ;main.c: 597:                 SetDimmer(51);
 12039  0490  3042               	movlw	66
 12040  0491  0022               	movlb	2	; select bank2
 12041  0492  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12042  0493  304C               	movlw	76
 12043  0494  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12044  0495  3000               	movlw	0
 12045  0496  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12046  0497  3000               	movlw	0
 12047  0498  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12048  0499  3192  221B  3180   	fcall	_SetDimmer
 12049                           
 12050                           ;main.c: 598:                 del = get_delay(2500);
 12051  049C  30C4               	movlw	196
 12052  049D  0020               	movlb	0	; select bank0
 12053  049E  00A0               	movwf	get_delay@ms
 12054  049F  3009               	movlw	9
 12055  04A0  00A1               	movwf	get_delay@ms+1
 12056  04A1  319F  2751         	fcall	_get_delay
 12057  04A3  0821               	movf	?_get_delay+1,w
 12058  04A4  0022               	movlb	2	; select bank2
 12059  04A5  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12060  04A6  0020               	movlb	0	; select bank0
 12061  04A7  0820               	movf	?_get_delay,w
 12062  04A8  0022               	movlb	2	; select bank2
 12063  04A9  00CB               	movwf	Config_Heater@del^(0+256)
 12064                           
 12065                           ;main.c: 599:                 break;
 12066  04AA  0008               	return
 12067  04AB                     l6365:
 12068                           
 12069                           ;main.c: 601:                 SetDimmer(53);
 12070  04AB  3042               	movlw	66
 12071  04AC  0022               	movlb	2	; select bank2
 12072  04AD  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12073  04AE  3054               	movlw	84
 12074  04AF  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12075  04B0  3000               	movlw	0
 12076  04B1  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12077  04B2  3000               	movlw	0
 12078  04B3  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12079  04B4  3192  221B  3180   	fcall	_SetDimmer
 12080                           
 12081                           ;main.c: 602:                 del = get_delay(2500);
 12082  04B7  30C4               	movlw	196
 12083  04B8  0020               	movlb	0	; select bank0
 12084  04B9  00A0               	movwf	get_delay@ms
 12085  04BA  3009               	movlw	9
 12086  04BB  00A1               	movwf	get_delay@ms+1
 12087  04BC  319F  2751         	fcall	_get_delay
 12088  04BE  0821               	movf	?_get_delay+1,w
 12089  04BF  0022               	movlb	2	; select bank2
 12090  04C0  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12091  04C1  0020               	movlb	0	; select bank0
 12092  04C2  0820               	movf	?_get_delay,w
 12093  04C3  0022               	movlb	2	; select bank2
 12094  04C4  00CB               	movwf	Config_Heater@del^(0+256)
 12095                           
 12096                           ;main.c: 603:                 break;
 12097  04C5  0008               	return
 12098  04C6                     l6367:
 12099                           
 12100                           ;main.c: 605:                 SetDimmer(55);
 12101  04C6  3042               	movlw	66
 12102  04C7  0022               	movlb	2	; select bank2
 12103  04C8  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12104  04C9  305C               	movlw	92
 12105  04CA  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12106  04CB  3000               	movlw	0
 12107  04CC  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12108  04CD  3000               	movlw	0
 12109  04CE  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12110  04CF  3192  221B  3180   	fcall	_SetDimmer
 12111                           
 12112                           ;main.c: 606:                 del = get_delay(2500);
 12113  04D2  30C4               	movlw	196
 12114  04D3  0020               	movlb	0	; select bank0
 12115  04D4  00A0               	movwf	get_delay@ms
 12116  04D5  3009               	movlw	9
 12117  04D6  00A1               	movwf	get_delay@ms+1
 12118  04D7  319F  2751         	fcall	_get_delay
 12119  04D9  0821               	movf	?_get_delay+1,w
 12120  04DA  0022               	movlb	2	; select bank2
 12121  04DB  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12122  04DC  0020               	movlb	0	; select bank0
 12123  04DD  0820               	movf	?_get_delay,w
 12124  04DE  0022               	movlb	2	; select bank2
 12125  04DF  00CB               	movwf	Config_Heater@del^(0+256)
 12126                           
 12127                           ;main.c: 607:                 break;
 12128  04E0  0008               	return
 12129  04E1                     l6369:
 12130                           
 12131                           ;main.c: 609:                 SetDimmer(57);
 12132  04E1  3042               	movlw	66
 12133  04E2  0022               	movlb	2	; select bank2
 12134  04E3  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12135  04E4  3064               	movlw	100
 12136  04E5  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12137  04E6  3000               	movlw	0
 12138  04E7  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12139  04E8  3000               	movlw	0
 12140  04E9  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12141  04EA  3192  221B  3180   	fcall	_SetDimmer
 12142                           
 12143                           ;main.c: 610:                 del = get_delay(2500);
 12144  04ED  30C4               	movlw	196
 12145  04EE  0020               	movlb	0	; select bank0
 12146  04EF  00A0               	movwf	get_delay@ms
 12147  04F0  3009               	movlw	9
 12148  04F1  00A1               	movwf	get_delay@ms+1
 12149  04F2  319F  2751         	fcall	_get_delay
 12150  04F4  0821               	movf	?_get_delay+1,w
 12151  04F5  0022               	movlb	2	; select bank2
 12152  04F6  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12153  04F7  0020               	movlb	0	; select bank0
 12154  04F8  0820               	movf	?_get_delay,w
 12155  04F9  0022               	movlb	2	; select bank2
 12156  04FA  00CB               	movwf	Config_Heater@del^(0+256)
 12157                           
 12158                           ;main.c: 611:                 break;
 12159  04FB  0008               	return
 12160  04FC                     l6371:
 12161                           
 12162                           ;main.c: 613:                 SetDimmer(59);
 12163  04FC  3042               	movlw	66
 12164  04FD  0022               	movlb	2	; select bank2
 12165  04FE  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12166  04FF  306C               	movlw	108
 12167  0500  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12168  0501  3000               	movlw	0
 12169  0502  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12170  0503  3000               	movlw	0
 12171  0504  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12172  0505  3192  221B  3180   	fcall	_SetDimmer
 12173                           
 12174                           ;main.c: 614:                 del = get_delay(2500);
 12175  0508  30C4               	movlw	196
 12176  0509  0020               	movlb	0	; select bank0
 12177  050A  00A0               	movwf	get_delay@ms
 12178  050B  3009               	movlw	9
 12179  050C  00A1               	movwf	get_delay@ms+1
 12180  050D  319F  2751         	fcall	_get_delay
 12181  050F  0821               	movf	?_get_delay+1,w
 12182  0510  0022               	movlb	2	; select bank2
 12183  0511  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12184  0512  0020               	movlb	0	; select bank0
 12185  0513  0820               	movf	?_get_delay,w
 12186  0514  0022               	movlb	2	; select bank2
 12187  0515  00CB               	movwf	Config_Heater@del^(0+256)
 12188                           
 12189                           ;main.c: 615:                 break;
 12190  0516  0008               	return
 12191  0517                     l6373:
 12192                           
 12193                           ;main.c: 620:                 SetDimmer(61);
 12194  0517  3042               	movlw	66
 12195  0518  0022               	movlb	2	; select bank2
 12196  0519  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12197  051A  3074               	movlw	116
 12198  051B  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12199  051C  3000               	movlw	0
 12200  051D  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12201  051E  3000               	movlw	0
 12202  051F  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12203  0520  3192  221B  3180   	fcall	_SetDimmer
 12204                           
 12205                           ;main.c: 621:                 del = get_delay(500);
 12206  0523  30F4               	movlw	244
 12207  0524  0020               	movlb	0	; select bank0
 12208  0525  00A0               	movwf	get_delay@ms
 12209  0526  3001               	movlw	1
 12210  0527  00A1               	movwf	get_delay@ms+1
 12211  0528  319F  2751         	fcall	_get_delay
 12212  052A  0821               	movf	?_get_delay+1,w
 12213  052B  0022               	movlb	2	; select bank2
 12214  052C  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12215  052D  0020               	movlb	0	; select bank0
 12216  052E  0820               	movf	?_get_delay,w
 12217  052F  0022               	movlb	2	; select bank2
 12218  0530  00CB               	movwf	Config_Heater@del^(0+256)
 12219                           
 12220                           ;main.c: 622:                 break;
 12221  0531  0008               	return
 12222  0532                     l6375:
 12223                           
 12224                           ;main.c: 624:                 SetDimmer(63);
 12225  0532  3042               	movlw	66
 12226  0533  0022               	movlb	2	; select bank2
 12227  0534  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12228  0535  307C               	movlw	124
 12229  0536  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12230  0537  3000               	movlw	0
 12231  0538  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12232  0539  3000               	movlw	0
 12233  053A  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12234  053B  3192  221B  3180   	fcall	_SetDimmer
 12235                           
 12236                           ;main.c: 625:                 del = get_delay(500);
 12237  053E  30F4               	movlw	244
 12238  053F  0020               	movlb	0	; select bank0
 12239  0540  00A0               	movwf	get_delay@ms
 12240  0541  3001               	movlw	1
 12241  0542  00A1               	movwf	get_delay@ms+1
 12242  0543  319F  2751         	fcall	_get_delay
 12243  0545  0821               	movf	?_get_delay+1,w
 12244  0546  0022               	movlb	2	; select bank2
 12245  0547  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12246  0548  0020               	movlb	0	; select bank0
 12247  0549  0820               	movf	?_get_delay,w
 12248  054A  0022               	movlb	2	; select bank2
 12249  054B  00CB               	movwf	Config_Heater@del^(0+256)
 12250                           
 12251                           ;main.c: 626:                 break;
 12252  054C  0008               	return
 12253  054D                     l6377:
 12254                           
 12255                           ;main.c: 628:                 SetDimmer(65);
 12256  054D  3042               	movlw	66
 12257  054E  0022               	movlb	2	; select bank2
 12258  054F  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12259  0550  3082               	movlw	130
 12260  0551  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12261  0552  3000               	movlw	0
 12262  0553  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12263  0554  3000               	movlw	0
 12264  0555  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12265  0556  3192  221B  3180   	fcall	_SetDimmer
 12266                           
 12267                           ;main.c: 629:                 del = get_delay(500);
 12268  0559  30F4               	movlw	244
 12269  055A  0020               	movlb	0	; select bank0
 12270  055B  00A0               	movwf	get_delay@ms
 12271  055C  3001               	movlw	1
 12272  055D  00A1               	movwf	get_delay@ms+1
 12273  055E  319F  2751         	fcall	_get_delay
 12274  0560  0821               	movf	?_get_delay+1,w
 12275  0561  0022               	movlb	2	; select bank2
 12276  0562  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12277  0563  0020               	movlb	0	; select bank0
 12278  0564  0820               	movf	?_get_delay,w
 12279  0565  0022               	movlb	2	; select bank2
 12280  0566  00CB               	movwf	Config_Heater@del^(0+256)
 12281                           
 12282                           ;main.c: 630:                 break;
 12283  0567  0008               	return
 12284  0568                     l6379:
 12285                           
 12286                           ;main.c: 632:                 SetDimmer(67);
 12287  0568  3042               	movlw	66
 12288  0569  0022               	movlb	2	; select bank2
 12289  056A  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12290  056B  3086               	movlw	134
 12291  056C  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12292  056D  3000               	movlw	0
 12293  056E  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12294  056F  3000               	movlw	0
 12295  0570  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12296  0571  3192  221B  3180   	fcall	_SetDimmer
 12297                           
 12298                           ;main.c: 633:                 del = get_delay(500);
 12299  0574  30F4               	movlw	244
 12300  0575  0020               	movlb	0	; select bank0
 12301  0576  00A0               	movwf	get_delay@ms
 12302  0577  3001               	movlw	1
 12303  0578  00A1               	movwf	get_delay@ms+1
 12304  0579  319F  2751         	fcall	_get_delay
 12305  057B  0821               	movf	?_get_delay+1,w
 12306  057C  0022               	movlb	2	; select bank2
 12307  057D  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12308  057E  0020               	movlb	0	; select bank0
 12309  057F  0820               	movf	?_get_delay,w
 12310  0580  0022               	movlb	2	; select bank2
 12311  0581  00CB               	movwf	Config_Heater@del^(0+256)
 12312                           
 12313                           ;main.c: 634:                 break;
 12314  0582  0008               	return
 12315  0583                     l6381:
 12316                           
 12317                           ;main.c: 636:                 SetDimmer(69);
 12318  0583  3042               	movlw	66
 12319  0584  0022               	movlb	2	; select bank2
 12320  0585  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12321  0586  308A               	movlw	138
 12322  0587  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12323  0588  3000               	movlw	0
 12324  0589  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12325  058A  3000               	movlw	0
 12326  058B  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12327  058C  3192  221B  3180   	fcall	_SetDimmer
 12328                           
 12329                           ;main.c: 637:                 del = get_delay(500);
 12330  058F  30F4               	movlw	244
 12331  0590  0020               	movlb	0	; select bank0
 12332  0591  00A0               	movwf	get_delay@ms
 12333  0592  3001               	movlw	1
 12334  0593  00A1               	movwf	get_delay@ms+1
 12335  0594  319F  2751         	fcall	_get_delay
 12336  0596  0821               	movf	?_get_delay+1,w
 12337  0597  0022               	movlb	2	; select bank2
 12338  0598  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12339  0599  0020               	movlb	0	; select bank0
 12340  059A  0820               	movf	?_get_delay,w
 12341  059B  0022               	movlb	2	; select bank2
 12342  059C  00CB               	movwf	Config_Heater@del^(0+256)
 12343                           
 12344                           ;main.c: 638:                 break;
 12345  059D  0008               	return
 12346  059E                     l6383:
 12347                           
 12348                           ;main.c: 640:                 SetDimmer(71);
 12349  059E  3042               	movlw	66
 12350  059F  0022               	movlb	2	; select bank2
 12351  05A0  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12352  05A1  308E               	movlw	142
 12353  05A2  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12354  05A3  3000               	movlw	0
 12355  05A4  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12356  05A5  3000               	movlw	0
 12357  05A6  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12358  05A7  3192  221B  3180   	fcall	_SetDimmer
 12359                           
 12360                           ;main.c: 641:                 del = get_delay(500);
 12361  05AA  30F4               	movlw	244
 12362  05AB  0020               	movlb	0	; select bank0
 12363  05AC  00A0               	movwf	get_delay@ms
 12364  05AD  3001               	movlw	1
 12365  05AE  00A1               	movwf	get_delay@ms+1
 12366  05AF  319F  2751         	fcall	_get_delay
 12367  05B1  0821               	movf	?_get_delay+1,w
 12368  05B2  0022               	movlb	2	; select bank2
 12369  05B3  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12370  05B4  0020               	movlb	0	; select bank0
 12371  05B5  0820               	movf	?_get_delay,w
 12372  05B6  0022               	movlb	2	; select bank2
 12373  05B7  00CB               	movwf	Config_Heater@del^(0+256)
 12374                           
 12375                           ;main.c: 642:                 break;
 12376  05B8  0008               	return
 12377  05B9                     l6385:
 12378                           
 12379                           ;main.c: 644:                 SetDimmer(73);
 12380  05B9  3042               	movlw	66
 12381  05BA  0022               	movlb	2	; select bank2
 12382  05BB  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12383  05BC  3092               	movlw	146
 12384  05BD  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12385  05BE  3000               	movlw	0
 12386  05BF  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12387  05C0  3000               	movlw	0
 12388  05C1  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12389  05C2  3192  221B  3180   	fcall	_SetDimmer
 12390                           
 12391                           ;main.c: 645:                 del = get_delay(500);
 12392  05C5  30F4               	movlw	244
 12393  05C6  0020               	movlb	0	; select bank0
 12394  05C7  00A0               	movwf	get_delay@ms
 12395  05C8  3001               	movlw	1
 12396  05C9  00A1               	movwf	get_delay@ms+1
 12397  05CA  319F  2751         	fcall	_get_delay
 12398  05CC  0821               	movf	?_get_delay+1,w
 12399  05CD  0022               	movlb	2	; select bank2
 12400  05CE  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12401  05CF  0020               	movlb	0	; select bank0
 12402  05D0  0820               	movf	?_get_delay,w
 12403  05D1  0022               	movlb	2	; select bank2
 12404  05D2  00CB               	movwf	Config_Heater@del^(0+256)
 12405                           
 12406                           ;main.c: 646:                 break;
 12407  05D3  0008               	return
 12408  05D4                     l6387:
 12409                           
 12410                           ;main.c: 648:                 SetDimmer(75);
 12411  05D4  3042               	movlw	66
 12412  05D5  0022               	movlb	2	; select bank2
 12413  05D6  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12414  05D7  3096               	movlw	150
 12415  05D8  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12416  05D9  3000               	movlw	0
 12417  05DA  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12418  05DB  3000               	movlw	0
 12419  05DC  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12420  05DD  3192  221B  3180   	fcall	_SetDimmer
 12421                           
 12422                           ;main.c: 649:                 del = get_delay(500);
 12423  05E0  30F4               	movlw	244
 12424  05E1  0020               	movlb	0	; select bank0
 12425  05E2  00A0               	movwf	get_delay@ms
 12426  05E3  3001               	movlw	1
 12427  05E4  00A1               	movwf	get_delay@ms+1
 12428  05E5  319F  2751         	fcall	_get_delay
 12429  05E7  0821               	movf	?_get_delay+1,w
 12430  05E8  0022               	movlb	2	; select bank2
 12431  05E9  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12432  05EA  0020               	movlb	0	; select bank0
 12433  05EB  0820               	movf	?_get_delay,w
 12434  05EC  0022               	movlb	2	; select bank2
 12435  05ED  00CB               	movwf	Config_Heater@del^(0+256)
 12436                           
 12437                           ;main.c: 650:                 break;
 12438  05EE  0008               	return
 12439  05EF                     l6389:
 12440                           
 12441                           ;main.c: 652:                 SetDimmer(77);
 12442  05EF  3042               	movlw	66
 12443  05F0  0022               	movlb	2	; select bank2
 12444  05F1  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12445  05F2  309A               	movlw	154
 12446  05F3  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12447  05F4  3000               	movlw	0
 12448  05F5  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12449  05F6  3000               	movlw	0
 12450  05F7  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12451  05F8  3192  221B  3180   	fcall	_SetDimmer
 12452                           
 12453                           ;main.c: 653:                 del = get_delay(500);
 12454  05FB  30F4               	movlw	244
 12455  05FC  0020               	movlb	0	; select bank0
 12456  05FD  00A0               	movwf	get_delay@ms
 12457  05FE  3001               	movlw	1
 12458  05FF  00A1               	movwf	get_delay@ms+1
 12459  0600  319F  2751         	fcall	_get_delay
 12460  0602  0821               	movf	?_get_delay+1,w
 12461  0603  0022               	movlb	2	; select bank2
 12462  0604  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12463  0605  0020               	movlb	0	; select bank0
 12464  0606  0820               	movf	?_get_delay,w
 12465  0607  0022               	movlb	2	; select bank2
 12466  0608  00CB               	movwf	Config_Heater@del^(0+256)
 12467                           
 12468                           ;main.c: 654:                 break;
 12469  0609  0008               	return
 12470  060A                     l6391:
 12471                           
 12472                           ;main.c: 656:                 SetDimmer(79);
 12473  060A  3042               	movlw	66
 12474  060B  0022               	movlb	2	; select bank2
 12475  060C  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 12476  060D  309E               	movlw	158
 12477  060E  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 12478  060F  3000               	movlw	0
 12479  0610  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 12480  0611  3000               	movlw	0
 12481  0612  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 12482  0613  3192  221B  3180   	fcall	_SetDimmer
 12483                           
 12484                           ;main.c: 657:                 del = get_delay(500);
 12485  0616  30F4               	movlw	244
 12486  0617  0020               	movlb	0	; select bank0
 12487  0618  00A0               	movwf	get_delay@ms
 12488  0619  3001               	movlw	1
 12489  061A  00A1               	movwf	get_delay@ms+1
 12490  061B  319F  2751         	fcall	_get_delay
 12491  061D  0821               	movf	?_get_delay+1,w
 12492  061E  0022               	movlb	2	; select bank2
 12493  061F  00CC               	movwf	(Config_Heater@del+1)^(0+256)
 12494  0620  0020               	movlb	0	; select bank0
 12495  0621  0820               	movf	?_get_delay,w
 12496  0622  0022               	movlb	2	; select bank2
 12497  0623  00CB               	movwf	Config_Heater@del^(0+256)
 12498                           
 12499                           ;main.c: 658:                 break;
 12500  0624  0008               	return
 12501  0625                     l6393:
 12502                           
 12503                           ;main.c: 662:                 StartStop_Fan(1);
 12504  0625  3001               	movlw	1
 12505  0626  319B  2310  3180   	fcall	_StartStop_Fan
 12506                           
 12507                           ;main.c: 663:                 StartStop_Buzzer(1);
 12508  0629  3001               	movlw	1
 12509  062A  319B  2306  3180   	fcall	_StartStop_Buzzer
 12510                           
 12511                           ;main.c: 664:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
 12512  062D  300B               	movlw	11
 12513  062E  0021               	movlb	1	; select bank1
 12514  062F  00EE               	movwf	(??_Config_Heater^(0+128)+1)
 12515  0630  3026               	movlw	38
 12516  0631  00ED               	movwf	??_Config_Heater^(0+128)
 12517  0632  305D               	movlw	93
 12518  0633                     u7157:
 12519  0633  0B89               	decfsz	9,f
 12520  0634  2E33               	goto	u7157
 12521  0635  0BED               	decfsz	??_Config_Heater^(0+128),f
 12522  0636  2E33               	goto	u7157
 12523  0637  0BEE               	decfsz	(??_Config_Heater^(0+128)+1),f
 12524  0638  2E33               	goto	u7157
 12525  0639  3200               	nop2
 12526                           
 12527                           ;main.c: 665:                 StartStop_Buzzer(0);
 12528  063A  3000               	movlw	0
 12529  063B  319B  2306  3180   	fcall	_StartStop_Buzzer
 12530                           
 12531                           ;main.c: 666:                 StartStop_Dimmer(0);
 12532  063E  3000               	movlw	0
 12533  063F  319C  2438  3180   	fcall	_StartStop_Dimmer
 12534                           
 12535                           ;main.c: 667:                 StartStop_AlarmLED_Blink(0);
 12536  0642  3000               	movlw	0
 12537  0643  319B  235C         	fcall	_StartStop_AlarmLED_Blink
 12538                           
 12539                           ;main.c: 668:                 onceFlag = 0;
 12540  0645  0022               	movlb	2	; select bank2
 12541  0646  01EE               	clrf	_onceFlag^(0+256)
 12542                           
 12543                           ;main.c: 669:                 break;
 12544  0647  0008               	return
 12545  0648                     l6407:
 12546  0648  085A               	movf	Config_Heater@count^(0+256),w
 12547  0649  0ADA               	incf	Config_Heater@count^(0+256),f
 12548  064A  0021               	movlb	1	; select bank1
 12549  064B  00ED               	movwf	??_Config_Heater^(0+128)
 12550  064C  01EE               	clrf	(??_Config_Heater^(0+128)+1)
 12551                           
 12552                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12553                           ; Switch size 1, requested type "simple"
 12554                           ; Number of cases is 1, Range of values is 0 to 0
 12555                           ; switch strategies available:
 12556                           ; Name         Instructions Cycles
 12557                           ; simple_byte            4     3 (average)
 12558                           ; direct_byte            8     6 (fixed)
 12559                           ; jumptable            260     6 (fixed)
 12560                           ;	Chosen strategy is simple_byte
 12561  064D  086E               	movf	(??_Config_Heater+1)^(0+128),w
 12562  064E  3A00               	xorlw	0	; case 0
 12563  064F  1903               	skipnz
 12564  0650  2E52               	goto	l6509
 12565  0651  2EF6               	goto	l1099
 12566  0652                     l6509:
 12567                           
 12568                           ; Switch size 1, requested type "simple"
 12569                           ; Number of cases is 54, Range of values is 0 to 53
 12570                           ; switch strategies available:
 12571                           ; Name         Instructions Cycles
 12572                           ; direct_byte          114     6 (fixed)
 12573                           ; simple_byte          163    82 (average)
 12574                           ; jumptable            260     6 (fixed)
 12575                           ;	Chosen strategy is simple_byte
 12576  0652  086D               	movf	??_Config_Heater^(0+128),w
 12577  0653  3A00               	xorlw	0	; case 0
 12578  0654  1903               	skipnz
 12579  0655  288E               	goto	l6287
 12580  0656  3A01               	xorlw	1	; case 1
 12581  0657  1903               	skipnz
 12582  0658  28A9               	goto	l6289
 12583  0659  3A03               	xorlw	3	; case 2
 12584  065A  1903               	skipnz
 12585  065B  28C4               	goto	l6291
 12586  065C  3A01               	xorlw	1	; case 3
 12587  065D  1903               	skipnz
 12588  065E  28DF               	goto	l6293
 12589  065F  3A07               	xorlw	7	; case 4
 12590  0660  1903               	skipnz
 12591  0661  28FA               	goto	l6295
 12592  0662  3A01               	xorlw	1	; case 5
 12593  0663  1903               	skipnz
 12594  0664  2915               	goto	l6297
 12595  0665  3A03               	xorlw	3	; case 6
 12596  0666  1903               	skipnz
 12597  0667  2930               	goto	l6299
 12598  0668  3A01               	xorlw	1	; case 7
 12599  0669  1903               	skipnz
 12600  066A  294B               	goto	l6301
 12601  066B  3A0F               	xorlw	15	; case 8
 12602  066C  1903               	skipnz
 12603  066D  2966               	goto	l6303
 12604  066E  3A01               	xorlw	1	; case 9
 12605  066F  1903               	skipnz
 12606  0670  2981               	goto	l6305
 12607  0671  3A03               	xorlw	3	; case 10
 12608  0672  1903               	skipnz
 12609  0673  299C               	goto	l6307
 12610  0674  3A01               	xorlw	1	; case 11
 12611  0675  1903               	skipnz
 12612  0676  29B7               	goto	l6309
 12613  0677  3A07               	xorlw	7	; case 12
 12614  0678  1903               	skipnz
 12615  0679  29D2               	goto	l6311
 12616  067A  3A01               	xorlw	1	; case 13
 12617  067B  1903               	skipnz
 12618  067C  29ED               	goto	l6313
 12619  067D  3A03               	xorlw	3	; case 14
 12620  067E  1903               	skipnz
 12621  067F  2A08               	goto	l6315
 12622  0680  3A01               	xorlw	1	; case 15
 12623  0681  1903               	skipnz
 12624  0682  2A23               	goto	l6317
 12625  0683  3A1F               	xorlw	31	; case 16
 12626  0684  1903               	skipnz
 12627  0685  2A3E               	goto	l6319
 12628  0686  3A01               	xorlw	1	; case 17
 12629  0687  1903               	skipnz
 12630  0688  2A59               	goto	l6321
 12631  0689  3A03               	xorlw	3	; case 18
 12632  068A  1903               	skipnz
 12633  068B  2A74               	goto	l6323
 12634  068C  3A01               	xorlw	1	; case 19
 12635  068D  1903               	skipnz
 12636  068E  2A8F               	goto	l6325
 12637  068F  3A07               	xorlw	7	; case 20
 12638  0690  1903               	skipnz
 12639  0691  2AAA               	goto	l6327
 12640  0692  3A01               	xorlw	1	; case 21
 12641  0693  1903               	skipnz
 12642  0694  2AC5               	goto	l6329
 12643  0695  3A03               	xorlw	3	; case 22
 12644  0696  1903               	skipnz
 12645  0697  2AE0               	goto	l6331
 12646  0698  3A01               	xorlw	1	; case 23
 12647  0699  1903               	skipnz
 12648  069A  2AFB               	goto	l6333
 12649  069B  3A0F               	xorlw	15	; case 24
 12650  069C  1903               	skipnz
 12651  069D  2B16               	goto	l6335
 12652  069E  3A01               	xorlw	1	; case 25
 12653  069F  1903               	skipnz
 12654  06A0  2B31               	goto	l6337
 12655  06A1  3A03               	xorlw	3	; case 26
 12656  06A2  1903               	skipnz
 12657  06A3  2B4C               	goto	l6339
 12658  06A4  3A01               	xorlw	1	; case 27
 12659  06A5  1903               	skipnz
 12660  06A6  2B67               	goto	l6341
 12661  06A7  3A07               	xorlw	7	; case 28
 12662  06A8  1903               	skipnz
 12663  06A9  2B82               	goto	l6343
 12664  06AA  3A01               	xorlw	1	; case 29
 12665  06AB  1903               	skipnz
 12666  06AC  2B9D               	goto	l6345
 12667  06AD  3A03               	xorlw	3	; case 30
 12668  06AE  1903               	skipnz
 12669  06AF  2BB8               	goto	l6347
 12670  06B0  3A01               	xorlw	1	; case 31
 12671  06B1  1903               	skipnz
 12672  06B2  2BD3               	goto	l6349
 12673  06B3  3A3F               	xorlw	63	; case 32
 12674  06B4  1903               	skipnz
 12675  06B5  2BEE               	goto	l6351
 12676  06B6  3A01               	xorlw	1	; case 33
 12677  06B7  1903               	skipnz
 12678  06B8  2C09               	goto	l6353
 12679  06B9  3A03               	xorlw	3	; case 34
 12680  06BA  1903               	skipnz
 12681  06BB  2C24               	goto	l6355
 12682  06BC  3A01               	xorlw	1	; case 35
 12683  06BD  1903               	skipnz
 12684  06BE  2C3F               	goto	l6357
 12685  06BF  3A07               	xorlw	7	; case 36
 12686  06C0  1903               	skipnz
 12687  06C1  2C5A               	goto	l6359
 12688  06C2  3A01               	xorlw	1	; case 37
 12689  06C3  1903               	skipnz
 12690  06C4  2C75               	goto	l6361
 12691  06C5  3A03               	xorlw	3	; case 38
 12692  06C6  1903               	skipnz
 12693  06C7  2C90               	goto	l6363
 12694  06C8  3A01               	xorlw	1	; case 39
 12695  06C9  1903               	skipnz
 12696  06CA  2CAB               	goto	l6365
 12697  06CB  3A0F               	xorlw	15	; case 40
 12698  06CC  1903               	skipnz
 12699  06CD  2CC6               	goto	l6367
 12700  06CE  3A01               	xorlw	1	; case 41
 12701  06CF  1903               	skipnz
 12702  06D0  2CE1               	goto	l6369
 12703  06D1  3A03               	xorlw	3	; case 42
 12704  06D2  1903               	skipnz
 12705  06D3  2CFC               	goto	l6371
 12706  06D4  3A01               	xorlw	1	; case 43
 12707  06D5  1903               	skipnz
 12708  06D6  2D17               	goto	l6373
 12709  06D7  3A07               	xorlw	7	; case 44
 12710  06D8  1903               	skipnz
 12711  06D9  2D32               	goto	l6375
 12712  06DA  3A01               	xorlw	1	; case 45
 12713  06DB  1903               	skipnz
 12714  06DC  2D4D               	goto	l6377
 12715  06DD  3A03               	xorlw	3	; case 46
 12716  06DE  1903               	skipnz
 12717  06DF  2D68               	goto	l6379
 12718  06E0  3A01               	xorlw	1	; case 47
 12719  06E1  1903               	skipnz
 12720  06E2  2D83               	goto	l6381
 12721  06E3  3A1F               	xorlw	31	; case 48
 12722  06E4  1903               	skipnz
 12723  06E5  2D9E               	goto	l6383
 12724  06E6  3A01               	xorlw	1	; case 49
 12725  06E7  1903               	skipnz
 12726  06E8  2DB9               	goto	l6385
 12727  06E9  3A03               	xorlw	3	; case 50
 12728  06EA  1903               	skipnz
 12729  06EB  2DD4               	goto	l6387
 12730  06EC  3A01               	xorlw	1	; case 51
 12731  06ED  1903               	skipnz
 12732  06EE  2DEF               	goto	l6389
 12733  06EF  3A07               	xorlw	7	; case 52
 12734  06F0  1903               	skipnz
 12735  06F1  2E0A               	goto	l6391
 12736  06F2  3A01               	xorlw	1	; case 53
 12737  06F3  1903               	skipnz
 12738  06F4  2E25               	goto	l6393
 12739  06F5  2EF6               	goto	l1099
 12740  06F6                     l1099:
 12741  06F6  0008               	return
 12742  06F7                     __end_of_Config_Heater:
 12743                           
 12744                           	psect	text61
 12745  1F51                     __ptext61:	
 12746 ;; *************** function _get_delay *****************
 12747 ;; Defined at:
 12748 ;;		line 847 in file "main.c"
 12749 ;; Parameters:    Size  Location     Type
 12750 ;;  ms              2    0[BANK0 ] unsigned short 
 12751 ;; Auto vars:     Size  Location     Type
 12752 ;;  buf             4   10[BANK0 ] unsigned long 
 12753 ;; Return value:  Size  Location     Type
 12754 ;;                  2    0[BANK0 ] unsigned short 
 12755 ;; Registers used:
 12756 ;;		wreg, status,2, status,0, pclath, cstack
 12757 ;; Tracked objects:
 12758 ;;		On entry : 1F/0
 12759 ;;		On exit  : 1F/0
 12760 ;;		Unchanged: 0/0
 12761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12762 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12763 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12764 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12765 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12766 ;;Total ram usage:       14 bytes
 12767 ;; Hardware stack levels used:    1
 12768 ;; Hardware stack levels required when called:    6
 12769 ;; This function calls:
 12770 ;;		___lwdiv
 12771 ;; This function is called by:
 12772 ;;		_main
 12773 ;;		_Config_Heater
 12774 ;; This function uses a non-reentrant model
 12775 ;;
 12776                           
 12777                           
 12778                           ;psect for function _get_delay
 12779  1F51                     _get_delay:
 12780                           
 12781                           ;main.c: 849:     uint32_t buf = ms / tmr1_period;
 12782                           
 12783                           ;incstack = 0
 12784                           ; Regs used in _get_delay: [wreg+status,2+status,0+pclath+cstack]
 12785  1F51  30FA               	movlw	250
 12786  1F52  00F2               	movwf	___lwdiv@divisor
 12787  1F53  3000               	movlw	0
 12788  1F54  00F3               	movwf	___lwdiv@divisor+1
 12789  1F55  0821               	movf	get_delay@ms+1,w
 12790  1F56  00F5               	movwf	___lwdiv@dividend+1
 12791  1F57  0820               	movf	get_delay@ms,w
 12792  1F58  00F4               	movwf	___lwdiv@dividend
 12793  1F59  319E  268F  319F   	fcall	___lwdiv
 12794  1F5C  0872               	movf	?___lwdiv,w
 12795  1F5D  00AA               	movwf	get_delay@buf
 12796  1F5E  0873               	movf	?___lwdiv+1,w
 12797  1F5F  00AB               	movwf	get_delay@buf+1
 12798  1F60  01AC               	clrf	get_delay@buf+2
 12799  1F61  01AD               	clrf	get_delay@buf+3
 12800                           
 12801                           ;main.c: 851:     if ((ticker_g + buf) > ticker_max){
 12802  1F62  082A               	movf	get_delay@buf,w
 12803  1F63  00A2               	movwf	??_get_delay
 12804  1F64  082B               	movf	get_delay@buf+1,w
 12805  1F65  00A3               	movwf	??_get_delay+1
 12806  1F66  082C               	movf	get_delay@buf+2,w
 12807  1F67  00A4               	movwf	??_get_delay+2
 12808  1F68  082D               	movf	get_delay@buf+3,w
 12809  1F69  00A5               	movwf	??_get_delay+3
 12810  1F6A  0022               	movlb	2	; select bank2
 12811  1F6B  0851               	movf	_ticker_g^(0+256),w
 12812  1F6C  0020               	movlb	0	; select bank0
 12813  1F6D  00A6               	movwf	??_get_delay+4
 12814  1F6E  0022               	movlb	2	; select bank2
 12815  1F6F  0852               	movf	(_ticker_g+1)^(0+256),w
 12816  1F70  0020               	movlb	0	; select bank0
 12817  1F71  00A7               	movwf	??_get_delay+5
 12818  1F72  01A8               	clrf	??_get_delay+6
 12819  1F73  01A9               	clrf	??_get_delay+7
 12820  1F74  0826               	movf	??_get_delay+4,w
 12821  1F75  07A2               	addwf	??_get_delay,f
 12822  1F76  0827               	movf	??_get_delay+5,w
 12823  1F77  3DA3               	addwfc	??_get_delay+1,f
 12824  1F78  0828               	movf	??_get_delay+6,w
 12825  1F79  3DA4               	addwfc	??_get_delay+2,f
 12826  1F7A  0829               	movf	??_get_delay+7,w
 12827  1F7B  3DA5               	addwfc	??_get_delay+3,f
 12828  1F7C  0825               	movf	??_get_delay+3,w
 12829  1F7D  1D03               	btfss	3,2
 12830  1F7E  2F83               	goto	l6217
 12831  1F7F  3001               	movlw	1
 12832  1F80  0224               	subwf	??_get_delay+2,w
 12833  1F81  1C03               	btfss	3,0
 12834  1F82  2F95               	goto	l6223
 12835  1F83                     l6217:
 12836                           
 12837                           ;main.c: 853:         return (ticker_g + buf) - ticker_max;
 12838  1F83  0020               	movlb	0	; select bank0
 12839  1F84  082A               	movf	get_delay@buf,w
 12840  1F85  0022               	movlb	2	; select bank2
 12841  1F86  0751               	addwf	_ticker_g^(0+256),w
 12842  1F87  0020               	movlb	0	; select bank0
 12843  1F88  00A2               	movwf	??_get_delay
 12844  1F89  082B               	movf	get_delay@buf+1,w
 12845  1F8A  0022               	movlb	2	; select bank2
 12846  1F8B  3D52               	addwfc	(_ticker_g+1)^(0+256),w
 12847  1F8C  0020               	movlb	0	; select bank0
 12848  1F8D  00A3               	movwf	??_get_delay+1
 12849  1F8E  0822               	movf	??_get_delay,w
 12850  1F8F  3E01               	addlw	1
 12851  1F90  00A0               	movwf	?_get_delay
 12852  1F91  3000               	movlw	0
 12853  1F92  3D23               	addwfc	??_get_delay+1,w
 12854  1F93  00A1               	movwf	?_get_delay+1
 12855  1F94  0008               	return
 12856  1F95                     l6223:
 12857                           
 12858                           ;main.c: 857:         return ticker_g + buf;
 12859  1F95  0020               	movlb	0	; select bank0
 12860  1F96  082A               	movf	get_delay@buf,w
 12861  1F97  0022               	movlb	2	; select bank2
 12862  1F98  0751               	addwf	_ticker_g^(0+256),w
 12863  1F99  0020               	movlb	0	; select bank0
 12864  1F9A  00A0               	movwf	?_get_delay
 12865  1F9B  082B               	movf	get_delay@buf+1,w
 12866  1F9C  0022               	movlb	2	; select bank2
 12867  1F9D  3D52               	addwfc	(_ticker_g+1)^(0+256),w
 12868  1F9E  0020               	movlb	0	; select bank0
 12869  1F9F  00A1               	movwf	?_get_delay+1
 12870  1FA0  0008               	return
 12871  1FA1                     __end_of_get_delay:
 12872                           
 12873                           	psect	text62
 12874  1E8F                     __ptext62:	
 12875 ;; *************** function ___lwdiv *****************
 12876 ;; Defined at:
 12877 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/lwdiv.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;  divisor         2    2[COMMON] unsigned int 
 12880 ;;  dividend        2    4[COMMON] unsigned int 
 12881 ;; Auto vars:     Size  Location     Type
 12882 ;;  quotient        2    7[COMMON] unsigned int 
 12883 ;;  counter         1    9[COMMON] unsigned char 
 12884 ;; Return value:  Size  Location     Type
 12885 ;;                  2    2[COMMON] unsigned int 
 12886 ;; Registers used:
 12887 ;;		wreg, status,2, status,0
 12888 ;; Tracked objects:
 12889 ;;		On entry : 1F/0
 12890 ;;		On exit  : 1F/0
 12891 ;;		Unchanged: 1F/0
 12892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12894 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12896 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12897 ;;Total ram usage:        8 bytes
 12898 ;; Hardware stack levels used:    1
 12899 ;; Hardware stack levels required when called:    5
 12900 ;; This function calls:
 12901 ;;		Nothing
 12902 ;; This function is called by:
 12903 ;;		_get_delay
 12904 ;; This function uses a non-reentrant model
 12905 ;;
 12906                           
 12907                           
 12908                           ;psect for function ___lwdiv
 12909  1E8F                     ___lwdiv:
 12910                           
 12911                           ;incstack = 0
 12912                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12913  1E8F  01F7               	clrf	___lwdiv@quotient
 12914  1E90  01F8               	clrf	___lwdiv@quotient+1
 12915  1E91  0872               	movf	___lwdiv@divisor,w
 12916  1E92  0473               	iorwf	___lwdiv@divisor+1,w
 12917  1E93  1903               	btfsc	3,2
 12918  1E94  2EBE               	goto	l4705
 12919  1E95  01F9               	clrf	___lwdiv@counter
 12920  1E96  0AF9               	incf	___lwdiv@counter,f
 12921  1E97                     l4693:
 12922  1E97  1BF3               	btfsc	___lwdiv@divisor+1,7
 12923  1E98  2EA3               	goto	l4695
 12924  1E99  3001               	movlw	1
 12925  1E9A                     u4735:
 12926  1E9A  35F2               	lslf	___lwdiv@divisor,f
 12927  1E9B  0DF3               	rlf	___lwdiv@divisor+1,f
 12928  1E9C  0B89               	decfsz	9,f
 12929  1E9D  2E9A               	goto	u4735
 12930  1E9E  3001               	movlw	1
 12931  1E9F  00F6               	movwf	??___lwdiv
 12932  1EA0  0876               	movf	??___lwdiv,w
 12933  1EA1  07F9               	addwf	___lwdiv@counter,f
 12934  1EA2  2E97               	goto	l4693
 12935  1EA3                     l4695:
 12936  1EA3  3001               	movlw	1
 12937  1EA4                     u4755:
 12938  1EA4  35F7               	lslf	___lwdiv@quotient,f
 12939  1EA5  0DF8               	rlf	___lwdiv@quotient+1,f
 12940  1EA6  0B89               	decfsz	9,f
 12941  1EA7  2EA4               	goto	u4755
 12942  1EA8  0873               	movf	___lwdiv@divisor+1,w
 12943  1EA9  0275               	subwf	___lwdiv@dividend+1,w
 12944  1EAA  1D03               	skipz
 12945  1EAB  2EAE               	goto	u4765
 12946  1EAC  0872               	movf	___lwdiv@divisor,w
 12947  1EAD  0274               	subwf	___lwdiv@dividend,w
 12948  1EAE                     u4765:
 12949  1EAE  1C03               	skipc
 12950  1EAF  2EB5               	goto	l4701
 12951  1EB0  0872               	movf	___lwdiv@divisor,w
 12952  1EB1  02F4               	subwf	___lwdiv@dividend,f
 12953  1EB2  0873               	movf	___lwdiv@divisor+1,w
 12954  1EB3  3BF5               	subwfb	___lwdiv@dividend+1,f
 12955  1EB4  1477               	bsf	___lwdiv@quotient,0
 12956  1EB5                     l4701:
 12957  1EB5  3001               	movlw	1
 12958  1EB6                     u4775:
 12959  1EB6  36F3               	lsrf	___lwdiv@divisor+1,f
 12960  1EB7  0CF2               	rrf	___lwdiv@divisor,f
 12961  1EB8  0B89               	decfsz	9,f
 12962  1EB9  2EB6               	goto	u4775
 12963  1EBA  3001               	movlw	1
 12964  1EBB  02F9               	subwf	___lwdiv@counter,f
 12965  1EBC  1D03               	btfss	3,2
 12966  1EBD  2EA3               	goto	l4695
 12967  1EBE                     l4705:
 12968  1EBE  0878               	movf	___lwdiv@quotient+1,w
 12969  1EBF  00F3               	movwf	?___lwdiv+1
 12970  1EC0  0877               	movf	___lwdiv@quotient,w
 12971  1EC1  00F2               	movwf	?___lwdiv
 12972  1EC2  0008               	return
 12973  1EC3                     __end_of___lwdiv:
 12974                           
 12975                           	psect	text63
 12976  1B10                     __ptext63:	
 12977 ;; *************** function _StartStop_Fan *****************
 12978 ;; Defined at:
 12979 ;;		line 318 in file "main.c"
 12980 ;; Parameters:    Size  Location     Type
 12981 ;;  OnOff           1    wreg     _Bool 
 12982 ;; Auto vars:     Size  Location     Type
 12983 ;;  OnOff           1    2[COMMON] _Bool 
 12984 ;; Return value:  Size  Location     Type
 12985 ;;                  1    wreg      void 
 12986 ;; Registers used:
 12987 ;;		wreg, status,2, status,0
 12988 ;; Tracked objects:
 12989 ;;		On entry : 14/2
 12990 ;;		On exit  : 1F/2
 12991 ;;		Unchanged: 0/0
 12992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12996 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12997 ;;Total ram usage:        1 bytes
 12998 ;; Hardware stack levels used:    1
 12999 ;; Hardware stack levels required when called:    5
 13000 ;; This function calls:
 13001 ;;		Nothing
 13002 ;; This function is called by:
 13003 ;;		_Init_Function
 13004 ;;		_Config_Heater
 13005 ;; This function uses a non-reentrant model
 13006 ;;
 13007                           
 13008                           
 13009                           ;psect for function _StartStop_Fan
 13010  1B10                     _StartStop_Fan:
 13011                           
 13012                           ;incstack = 0
 13013                           ; Regs used in _StartStop_Fan: [wreg+status,2+status,0]
 13014                           ;StartStop_Fan@OnOff stored from wreg
 13015  1B10  00F2               	movwf	StartStop_Fan@OnOff
 13016                           
 13017                           ;main.c: 320:     if (1 == OnOff){
 13018  1B11  0372               	decf	StartStop_Fan@OnOff,w
 13019  1B12  1D03               	btfss	3,2
 13020  1B13  2B17               	goto	l1057
 13021                           
 13022                           ;main.c: 322:         do { LATCbits.LATC3 = 1; } while(0);
 13023  1B14  0022               	movlb	2	; select bank2
 13024  1B15  158E               	bsf	14,3	;volatile
 13025  1B16  0008               	return
 13026  1B17                     l1057:	
 13027                           ;main.c: 326:         do { LATCbits.LATC3 = 0; } while(0);
 13028                           
 13029  1B17  0022               	movlb	2	; select bank2
 13030  1B18  118E               	bcf	14,3	;volatile
 13031  1B19  0008               	return
 13032  1B1A                     __end_of_StartStop_Fan:
 13033                           
 13034                           	psect	text64
 13035  1C38                     __ptext64:	
 13036 ;; *************** function _StartStop_Dimmer *****************
 13037 ;; Defined at:
 13038 ;;		line 346 in file "main.c"
 13039 ;; Parameters:    Size  Location     Type
 13040 ;;  OnOff           1    wreg     _Bool 
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;  OnOff           1   79[BANK0 ] _Bool 
 13043 ;; Return value:  Size  Location     Type
 13044 ;;                  1    wreg      void 
 13045 ;; Registers used:
 13046 ;;		wreg, status,2, status,0, pclath, cstack
 13047 ;; Tracked objects:
 13048 ;;		On entry : 15/2
 13049 ;;		On exit  : 1F/2
 13050 ;;		Unchanged: 0/0
 13051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13055 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13056 ;;Total ram usage:        1 bytes
 13057 ;; Hardware stack levels used:    1
 13058 ;; Hardware stack levels required when called:    8
 13059 ;; This function calls:
 13060 ;;		_SetDimmer
 13061 ;; This function is called by:
 13062 ;;		_Init_Function
 13063 ;;		_Config_Heater
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           
 13068                           ;psect for function _StartStop_Dimmer
 13069  1C38                     _StartStop_Dimmer:
 13070                           
 13071                           ;incstack = 0
 13072                           ; Regs used in _StartStop_Dimmer: [wreg+status,2+status,0+pclath+cstack]
 13073                           ;StartStop_Dimmer@OnOff stored from wreg
 13074  1C38  0020               	movlb	0	; select bank0
 13075  1C39  00EF               	movwf	StartStop_Dimmer@OnOff
 13076                           
 13077                           ;main.c: 348:     if (1 == OnOff){
 13078  1C3A  036F               	decf	StartStop_Dimmer@OnOff,w
 13079  1C3B  1D03               	btfss	3,2
 13080  1C3C  2C41               	goto	l6231
 13081                           
 13082                           ;main.c: 350:         DimmerStatusFlag_g = 1;
 13083  1C3D  0022               	movlb	2	; select bank2
 13084  1C3E  01DB               	clrf	_DimmerStatusFlag_g^(0+256)
 13085  1C3F  0ADB               	incf	_DimmerStatusFlag_g^(0+256),f
 13086                           
 13087                           ;main.c: 351:     }
 13088  1C40  0008               	return
 13089  1C41                     l6231:
 13090                           
 13091                           ;main.c: 354:         SetDimmer(3);
 13092  1C41  3040               	movlw	64
 13093  1C42  0022               	movlb	2	; select bank2
 13094  1C43  00BA               	movwf	(SetDimmer@dim_percentage+3)^(0+256)
 13095  1C44  3040               	movlw	64
 13096  1C45  00B9               	movwf	(SetDimmer@dim_percentage+2)^(0+256)
 13097  1C46  3000               	movlw	0
 13098  1C47  00B8               	movwf	(SetDimmer@dim_percentage+1)^(0+256)
 13099  1C48  3000               	movlw	0
 13100  1C49  00B7               	movwf	SetDimmer@dim_percentage^(0+256)
 13101  1C4A  3192  221B         	fcall	_SetDimmer
 13102                           
 13103                           ;main.c: 355:         DimmerStatusFlag_g = 0;
 13104  1C4C  01DB               	clrf	_DimmerStatusFlag_g^(0+256)
 13105  1C4D  0008               	return
 13106  1C4E                     __end_of_StartStop_Dimmer:
 13107                           
 13108                           	psect	text65
 13109  121B                     __ptext65:	
 13110 ;; *************** function _SetDimmer *****************
 13111 ;; Defined at:
 13112 ;;		line 400 in file "main.c"
 13113 ;; Parameters:    Size  Location     Type
 13114 ;;  dim_percenta    4   23[BANK2 ] float 
 13115 ;; Auto vars:     Size  Location     Type
 13116 ;;  TRIAC_off_du    4   27[BANK2 ] float 
 13117 ;; Return value:  Size  Location     Type
 13118 ;;                  1    wreg      void 
 13119 ;; Registers used:
 13120 ;;		wreg, status,2, status,0, pclath, cstack
 13121 ;; Tracked objects:
 13122 ;;		On entry : 1F/2
 13123 ;;		On exit  : 1F/2
 13124 ;;		Unchanged: 0/0
 13125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13126 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 13127 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 13128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13129 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 13130 ;;Total ram usage:        8 bytes
 13131 ;; Hardware stack levels used:    1
 13132 ;; Hardware stack levels required when called:    7
 13133 ;; This function calls:
 13134 ;;		___fldiv
 13135 ;;		___flmul
 13136 ;;		___flsub
 13137 ;;		___fltol
 13138 ;; This function is called by:
 13139 ;;		_StartStop_Dimmer
 13140 ;;		_Config_Heater
 13141 ;; This function uses a non-reentrant model
 13142 ;;
 13143                           
 13144                           
 13145                           ;psect for function _SetDimmer
 13146  121B                     _SetDimmer:
 13147                           
 13148                           ;main.c: 407:     TRIAC_off_duration_ms = HalfCycleACDuration_const - (5.0 * dim_percent
      +                          age / 50.0);
 13149                           
 13150                           ;incstack = 0
 13151                           ; Regs used in _SetDimmer: [wreg+status,2+status,0+pclath+cstack]
 13152  121B  3042               	movlw	66
 13153  121C  0020               	movlb	0	; select bank0
 13154  121D  00E3               	movwf	___fldiv@a+3
 13155  121E  3048               	movlw	72
 13156  121F  00E2               	movwf	___fldiv@a+2
 13157  1220  3000               	movlw	0
 13158  1221  00E1               	movwf	___fldiv@a+1
 13159  1222  3000               	movlw	0
 13160  1223  00E0               	movwf	___fldiv@a
 13161  1224  3040               	movlw	64
 13162  1225  00A9               	movwf	___flmul@b+3
 13163  1226  30A0               	movlw	160
 13164  1227  00A8               	movwf	___flmul@b+2
 13165  1228  3000               	movlw	0
 13166  1229  00A7               	movwf	___flmul@b+1
 13167  122A  3000               	movlw	0
 13168  122B  00A6               	movwf	___flmul@b
 13169  122C  0022               	movlb	2	; select bank2
 13170  122D  083A               	movf	(SetDimmer@dim_percentage+3)^(0+256),w
 13171  122E  0020               	movlb	0	; select bank0
 13172  122F  00AD               	movwf	___flmul@a+3
 13173  1230  0022               	movlb	2	; select bank2
 13174  1231  0839               	movf	(SetDimmer@dim_percentage+2)^(0+256),w
 13175  1232  0020               	movlb	0	; select bank0
 13176  1233  00AC               	movwf	___flmul@a+2
 13177  1234  0022               	movlb	2	; select bank2
 13178  1235  0838               	movf	(SetDimmer@dim_percentage+1)^(0+256),w
 13179  1236  0020               	movlb	0	; select bank0
 13180  1237  00AB               	movwf	___flmul@a+1
 13181  1238  0022               	movlb	2	; select bank2
 13182  1239  0837               	movf	SetDimmer@dim_percentage^(0+256),w
 13183  123A  0020               	movlb	0	; select bank0
 13184  123B  00AA               	movwf	___flmul@a
 13185  123C  318B  2304  3192   	fcall	___flmul
 13186  123F  0829               	movf	?___flmul+3,w
 13187  1240  00E7               	movwf	___fldiv@b+3
 13188  1241  0828               	movf	?___flmul+2,w
 13189  1242  00E6               	movwf	___fldiv@b+2
 13190  1243  0827               	movf	?___flmul+1,w
 13191  1244  00E5               	movwf	___fldiv@b+1
 13192  1245  0826               	movf	?___flmul,w
 13193  1246  00E4               	movwf	___fldiv@b
 13194  1247  3196  2629  3192   	fcall	___fldiv
 13195  124A  0863               	movf	?___fldiv+3,w
 13196  124B  00D7               	movwf	___flsub@a+3
 13197  124C  0862               	movf	?___fldiv+2,w
 13198  124D  00D6               	movwf	___flsub@a+2
 13199  124E  0861               	movf	?___fldiv+1,w
 13200  124F  00D5               	movwf	___flsub@a+1
 13201  1250  0860               	movf	?___fldiv,w
 13202  1251  00D4               	movwf	___flsub@a
 13203  1252  3041               	movlw	65
 13204  1253  00DB               	movwf	___flsub@b+3
 13205  1254  3020               	movlw	32
 13206  1255  00DA               	movwf	___flsub@b+2
 13207  1256  3000               	movlw	0
 13208  1257  00D9               	movwf	___flsub@b+1
 13209  1258  3000               	movlw	0
 13210  1259  00D8               	movwf	___flsub@b
 13211  125A  319D  2514  3192   	fcall	___flsub
 13212  125D  0857               	movf	?___flsub+3,w
 13213  125E  0022               	movlb	2	; select bank2
 13214  125F  00BE               	movwf	(SetDimmer@TRIAC_off_duration_ms+3)^(0+256)
 13215  1260  0020               	movlb	0	; select bank0
 13216  1261  0856               	movf	?___flsub+2,w
 13217  1262  0022               	movlb	2	; select bank2
 13218  1263  00BD               	movwf	(SetDimmer@TRIAC_off_duration_ms+2)^(0+256)
 13219  1264  0020               	movlb	0	; select bank0
 13220  1265  0855               	movf	?___flsub+1,w
 13221  1266  0022               	movlb	2	; select bank2
 13222  1267  00BC               	movwf	(SetDimmer@TRIAC_off_duration_ms+1)^(0+256)
 13223  1268  0020               	movlb	0	; select bank0
 13224  1269  0854               	movf	?___flsub,w
 13225  126A  0022               	movlb	2	; select bank2
 13226  126B  00BB               	movwf	SetDimmer@TRIAC_off_duration_ms^(0+256)
 13227                           
 13228                           ;main.c: 408:     tmr2_required_counter_steps_g = (TRIAC_off_duration_ms * 1000) / TMR2_
      +                          Timer_Period_const;
 13229  126C  083E               	movf	(SetDimmer@TRIAC_off_duration_ms+3)^(0+256),w
 13230  126D  0020               	movlb	0	; select bank0
 13231  126E  00AD               	movwf	___flmul@a+3
 13232  126F  0022               	movlb	2	; select bank2
 13233  1270  083D               	movf	(SetDimmer@TRIAC_off_duration_ms+2)^(0+256),w
 13234  1271  0020               	movlb	0	; select bank0
 13235  1272  00AC               	movwf	___flmul@a+2
 13236  1273  0022               	movlb	2	; select bank2
 13237  1274  083C               	movf	(SetDimmer@TRIAC_off_duration_ms+1)^(0+256),w
 13238  1275  0020               	movlb	0	; select bank0
 13239  1276  00AB               	movwf	___flmul@a+1
 13240  1277  0022               	movlb	2	; select bank2
 13241  1278  083B               	movf	SetDimmer@TRIAC_off_duration_ms^(0+256),w
 13242  1279  0020               	movlb	0	; select bank0
 13243  127A  00AA               	movwf	___flmul@a
 13244  127B  3044               	movlw	68
 13245  127C  00A9               	movwf	___flmul@b+3
 13246  127D  307A               	movlw	122
 13247  127E  00A8               	movwf	___flmul@b+2
 13248  127F  3000               	movlw	0
 13249  1280  00A7               	movwf	___flmul@b+1
 13250  1281  3000               	movlw	0
 13251  1282  00A6               	movwf	___flmul@b
 13252  1283  318B  2304  3192   	fcall	___flmul
 13253  1286  0829               	movf	?___flmul+3,w
 13254  1287  00E7               	movwf	___fldiv@b+3
 13255  1288  0828               	movf	?___flmul+2,w
 13256  1289  00E6               	movwf	___fldiv@b+2
 13257  128A  0827               	movf	?___flmul+1,w
 13258  128B  00E5               	movwf	___fldiv@b+1
 13259  128C  0826               	movf	?___flmul,w
 13260  128D  00E4               	movwf	___fldiv@b
 13261  128E  3042               	movlw	66
 13262  128F  00E3               	movwf	___fldiv@a+3
 13263  1290  30C8               	movlw	200
 13264  1291  00E2               	movwf	___fldiv@a+2
 13265  1292  3000               	movlw	0
 13266  1293  00E1               	movwf	___fldiv@a+1
 13267  1294  3000               	movlw	0
 13268  1295  00E0               	movwf	___fldiv@a
 13269  1296  3196  2629  3192   	fcall	___fldiv
 13270  1299  0863               	movf	?___fldiv+3,w
 13271  129A  0022               	movlb	2	; select bank2
 13272  129B  00B1               	movwf	(___fltol@f1+3)^(0+256)
 13273  129C  0020               	movlb	0	; select bank0
 13274  129D  0862               	movf	?___fldiv+2,w
 13275  129E  0022               	movlb	2	; select bank2
 13276  129F  00B0               	movwf	(___fltol@f1+2)^(0+256)
 13277  12A0  0020               	movlb	0	; select bank0
 13278  12A1  0861               	movf	?___fldiv+1,w
 13279  12A2  0022               	movlb	2	; select bank2
 13280  12A3  00AF               	movwf	(___fltol@f1+1)^(0+256)
 13281  12A4  0020               	movlb	0	; select bank0
 13282  12A5  0860               	movf	?___fldiv,w
 13283  12A6  0022               	movlb	2	; select bank2
 13284  12A7  00AE               	movwf	___fltol@f1^(0+256)
 13285  12A8  3190  203F         	fcall	___fltol
 13286  12AA  0022               	movlb	2	; select bank2
 13287  12AB  082F               	movf	(?___fltol+1)^(0+256),w
 13288  12AC  00D4               	movwf	(_tmr2_required_counter_steps_g+1)^(0+256)
 13289  12AD  082E               	movf	?___fltol^(0+256),w
 13290  12AE  00D3               	movwf	_tmr2_required_counter_steps_g^(0+256)
 13291  12AF  0008               	return
 13292  12B0                     __end_of_SetDimmer:
 13293                           
 13294                           	psect	text66
 13295  103F                     __ptext66:	
 13296 ;; *************** function ___fltol *****************
 13297 ;; Defined at:
 13298 ;;		line 43 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/fltol.c"
 13299 ;; Parameters:    Size  Location     Type
 13300 ;;  f1              4   14[BANK2 ] void 
 13301 ;; Auto vars:     Size  Location     Type
 13302 ;;  exp1            1   78[BANK0 ] unsigned char 
 13303 ;;  sign1           1   77[BANK0 ] unsigned char 
 13304 ;; Return value:  Size  Location     Type
 13305 ;;                  4   14[BANK2 ] long 
 13306 ;; Registers used:
 13307 ;;		wreg, status,2, status,0
 13308 ;; Tracked objects:
 13309 ;;		On entry : 1F/2
 13310 ;;		On exit  : 1D/0
 13311 ;;		Unchanged: 0/0
 13312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13313 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 13314 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13315 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 13316 ;;      Totals:         0       2       0       9       0       0       0       0       0       0       0       0       
      +0       0
 13317 ;;Total ram usage:       11 bytes
 13318 ;; Hardware stack levels used:    1
 13319 ;; Hardware stack levels required when called:    5
 13320 ;; This function calls:
 13321 ;;		Nothing
 13322 ;; This function is called by:
 13323 ;;		_main
 13324 ;;		_SetDimmer
 13325 ;; This function uses a non-reentrant model
 13326 ;;
 13327                           
 13328                           
 13329                           ;psect for function ___fltol
 13330  103F                     ___fltol:
 13331                           
 13332                           ;incstack = 0
 13333                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 13334  103F  1003               	clrc
 13335  1040  0D30               	rlf	(___fltol@f1+2)^(0+256),w
 13336  1041  0D31               	rlf	(___fltol@f1+3)^(0+256),w
 13337  1042  00B2               	movwf	??___fltol^(0+256)
 13338  1043  0832               	movf	??___fltol^(0+256),w
 13339  1044  0020               	movlb	0	; select bank0
 13340  1045  00EE               	movwf	___fltol@exp1
 13341  1046  086E               	movf	___fltol@exp1,w
 13342  1047  1D03               	btfss	3,2
 13343  1048  2853               	goto	l5679
 13344  1049                     l5675:
 13345  1049  3000               	movlw	0
 13346  104A  0022               	movlb	2	; select bank2
 13347  104B  00B1               	movwf	(?___fltol+3)^(0+256)
 13348  104C  3000               	movlw	0
 13349  104D  00B0               	movwf	(?___fltol+2)^(0+256)
 13350  104E  3000               	movlw	0
 13351  104F  00AF               	movwf	(?___fltol+1)^(0+256)
 13352  1050  3000               	movlw	0
 13353  1051  00AE               	movwf	?___fltol^(0+256)
 13354  1052  0008               	return
 13355  1053                     l5679:
 13356  1053  0022               	movlb	2	; select bank2
 13357  1054  082E               	movf	___fltol@f1^(0+256),w
 13358  1055  00B2               	movwf	??___fltol^(0+256)
 13359  1056  082F               	movf	(___fltol@f1+1)^(0+256),w
 13360  1057  00B3               	movwf	(??___fltol^(0+256)+1)
 13361  1058  0830               	movf	(___fltol@f1+2)^(0+256),w
 13362  1059  00B4               	movwf	(??___fltol^(0+256)+2)
 13363  105A  0831               	movf	(___fltol@f1+3)^(0+256),w
 13364  105B  00B5               	movwf	(??___fltol^(0+256)+3)
 13365  105C  301F               	movlw	31
 13366  105D                     u6015:
 13367  105D  36B5               	lsrf	(??___fltol^(0+256)+3),f
 13368  105E  0CB4               	rrf	(??___fltol^(0+256)+2),f
 13369  105F  0CB3               	rrf	(??___fltol^(0+256)+1),f
 13370  1060  0CB2               	rrf	??___fltol^(0+256),f
 13371  1061  0B89               	decfsz	9,f
 13372  1062  285D               	goto	u6015
 13373  1063  0832               	movf	??___fltol^(0+256),w
 13374  1064  00B6               	movwf	(??___fltol+4)^(0+256)
 13375  1065  0836               	movf	(??___fltol+4)^(0+256),w
 13376  1066  0020               	movlb	0	; select bank0
 13377  1067  00ED               	movwf	___fltol@sign1
 13378  1068  0022               	movlb	2	; select bank2
 13379  1069  17B0               	bsf	(___fltol@f1^(0+256)+2),7
 13380  106A  30FF               	movlw	255
 13381  106B  05AE               	andwf	___fltol@f1^(0+256),f
 13382  106C  30FF               	movlw	255
 13383  106D  05AF               	andwf	(___fltol@f1+1)^(0+256),f
 13384  106E  30FF               	movlw	255
 13385  106F  05B0               	andwf	(___fltol@f1+2)^(0+256),f
 13386  1070  3000               	movlw	0
 13387  1071  05B1               	andwf	(___fltol@f1+3)^(0+256),f
 13388  1072  3096               	movlw	150
 13389  1073  0020               	movlb	0	; select bank0
 13390  1074  02EE               	subwf	___fltol@exp1,f
 13391  1075  1FEE               	btfss	___fltol@exp1,7
 13392  1076  288C               	goto	l5697
 13393  1077  086E               	movf	___fltol@exp1,w
 13394  1078  3A80               	xorlw	128
 13395  1079  3E97               	addlw	151
 13396  107A  1C03               	btfss	3,0
 13397  107B  2849               	goto	l5675
 13398  107C                     l5695:
 13399  107C  3001               	movlw	1
 13400  107D                     u6045:
 13401  107D  0022               	movlb	2	; select bank2
 13402  107E  36B1               	lsrf	(___fltol@f1+3)^(0+256),f
 13403  107F  0CB0               	rrf	(___fltol@f1+2)^(0+256),f
 13404  1080  0CAF               	rrf	(___fltol@f1+1)^(0+256),f
 13405  1081  0CAE               	rrf	___fltol@f1^(0+256),f
 13406  1082  0B89               	decfsz	9,f
 13407  1083  287D               	goto	u6045
 13408  1084  3001               	movlw	1
 13409  1085  00B2               	movwf	??___fltol^(0+256)
 13410  1086  0832               	movf	??___fltol^(0+256),w
 13411  1087  0020               	movlb	0	; select bank0
 13412  1088  07EE               	addwf	___fltol@exp1,f
 13413  1089  1903               	btfsc	3,2
 13414  108A  289F               	goto	l5705
 13415  108B  287C               	goto	l5695
 13416  108C                     l5697:
 13417  108C  3020               	movlw	32
 13418  108D  026E               	subwf	___fltol@exp1,w
 13419  108E  1803               	btfsc	3,0
 13420  108F  2849               	goto	l5675
 13421  1090                     l1572:
 13422  1090  086E               	movf	___fltol@exp1,w
 13423  1091  1903               	btfsc	3,2
 13424  1092  289F               	goto	l5705
 13425  1093  3001               	movlw	1
 13426  1094                     u6075:
 13427  1094  0022               	movlb	2	; select bank2
 13428  1095  35AE               	lslf	___fltol@f1^(0+256),f
 13429  1096  0DAF               	rlf	(___fltol@f1+1)^(0+256),f
 13430  1097  0DB0               	rlf	(___fltol@f1+2)^(0+256),f
 13431  1098  0DB1               	rlf	(___fltol@f1+3)^(0+256),f
 13432  1099  0B89               	decfsz	9,f
 13433  109A  2894               	goto	u6075
 13434  109B  3001               	movlw	1
 13435  109C  0020               	movlb	0	; select bank0
 13436  109D  02EE               	subwf	___fltol@exp1,f
 13437  109E  2890               	goto	l1572
 13438  109F                     l5705:
 13439  109F  086D               	movf	___fltol@sign1,w
 13440  10A0  1903               	btfsc	3,2
 13441  10A1  0008               	return
 13442  10A2  0022               	movlb	2	; select bank2
 13443  10A3  09AE               	comf	___fltol@f1^(0+256),f
 13444  10A4  09AF               	comf	(___fltol@f1+1)^(0+256),f
 13445  10A5  09B0               	comf	(___fltol@f1+2)^(0+256),f
 13446  10A6  09B1               	comf	(___fltol@f1+3)^(0+256),f
 13447  10A7  0AAE               	incf	___fltol@f1^(0+256),f
 13448  10A8  1903               	skipnz
 13449  10A9  0AAF               	incf	(___fltol@f1+1)^(0+256),f
 13450  10AA  1903               	skipnz
 13451  10AB  0AB0               	incf	(___fltol@f1+2)^(0+256),f
 13452  10AC  1903               	skipnz
 13453  10AD  0AB1               	incf	(___fltol@f1+3)^(0+256),f
 13454  10AE  0008               	return
 13455  10AF                     __end_of___fltol:
 13456                           
 13457                           	psect	text67
 13458  1D14                     __ptext67:	
 13459 ;; *************** function ___flsub *****************
 13460 ;; Defined at:
 13461 ;;		line 242 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
 13462 ;; Parameters:    Size  Location     Type
 13463 ;;  a               4   52[BANK0 ] long 
 13464 ;;  b               4   56[BANK0 ] long 
 13465 ;; Auto vars:     Size  Location     Type
 13466 ;;		None
 13467 ;; Return value:  Size  Location     Type
 13468 ;;                  4   52[BANK0 ] long 
 13469 ;; Registers used:
 13470 ;;		wreg, status,2, status,0, pclath, cstack
 13471 ;; Tracked objects:
 13472 ;;		On entry : 1F/0
 13473 ;;		On exit  : 1F/0
 13474 ;;		Unchanged: 0/0
 13475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13476 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13479 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13480 ;;Total ram usage:        8 bytes
 13481 ;; Hardware stack levels used:    1
 13482 ;; Hardware stack levels required when called:    6
 13483 ;; This function calls:
 13484 ;;		___fladd
 13485 ;; This function is called by:
 13486 ;;		_Measure_R_PT100_2Wire
 13487 ;;		_SetDimmer
 13488 ;; This function uses a non-reentrant model
 13489 ;;
 13490                           
 13491                           
 13492                           ;psect for function ___flsub
 13493  1D14                     ___flsub:
 13494                           
 13495                           ;incstack = 0
 13496                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 13497  1D14  3080               	movlw	128
 13498  1D15  06D7               	xorwf	___flsub@a+3,f
 13499  1D16  085B               	movf	___flsub@b+3,w
 13500  1D17  00C3               	movwf	___fladd@b+3
 13501  1D18  085A               	movf	___flsub@b+2,w
 13502  1D19  00C2               	movwf	___fladd@b+2
 13503  1D1A  0859               	movf	___flsub@b+1,w
 13504  1D1B  00C1               	movwf	___fladd@b+1
 13505  1D1C  0858               	movf	___flsub@b,w
 13506  1D1D  00C0               	movwf	___fladd@b
 13507  1D1E  0857               	movf	___flsub@a+3,w
 13508  1D1F  00C7               	movwf	___fladd@a+3
 13509  1D20  0856               	movf	___flsub@a+2,w
 13510  1D21  00C6               	movwf	___fladd@a+2
 13511  1D22  0855               	movf	___flsub@a+1,w
 13512  1D23  00C5               	movwf	___fladd@a+1
 13513  1D24  0854               	movf	___flsub@a,w
 13514  1D25  00C4               	movwf	___fladd@a
 13515  1D26  3189  2123         	fcall	___fladd
 13516  1D28  0843               	movf	?___fladd+3,w
 13517  1D29  00D7               	movwf	?___flsub+3
 13518  1D2A  0842               	movf	?___fladd+2,w
 13519  1D2B  00D6               	movwf	?___flsub+2
 13520  1D2C  0841               	movf	?___fladd+1,w
 13521  1D2D  00D5               	movwf	?___flsub+1
 13522  1D2E  0840               	movf	?___fladd,w
 13523  1D2F  00D4               	movwf	?___flsub
 13524  1D30  0008               	return
 13525  1D31                     __end_of___flsub:
 13526                           
 13527                           	psect	text68
 13528  0923                     __ptext68:	
 13529 ;; *************** function ___fladd *****************
 13530 ;; Defined at:
 13531 ;;		line 10 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
 13532 ;; Parameters:    Size  Location     Type
 13533 ;;  b               4   32[BANK0 ] long 
 13534 ;;  a               4   36[BANK0 ] long 
 13535 ;; Auto vars:     Size  Location     Type
 13536 ;;  grs             1   51[BANK0 ] unsigned char 
 13537 ;;  bexp            1   50[BANK0 ] unsigned char 
 13538 ;;  aexp            1   49[BANK0 ] unsigned char 
 13539 ;;  signs           1   48[BANK0 ] unsigned char 
 13540 ;; Return value:  Size  Location     Type
 13541 ;;                  4   32[BANK0 ] unsigned char 
 13542 ;; Registers used:
 13543 ;;		wreg, status,2, status,0
 13544 ;; Tracked objects:
 13545 ;;		On entry : 1F/0
 13546 ;;		On exit  : 1F/0
 13547 ;;		Unchanged: 0/0
 13548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13549 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13550 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13551 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13552 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13553 ;;Total ram usage:       20 bytes
 13554 ;; Hardware stack levels used:    1
 13555 ;; Hardware stack levels required when called:    5
 13556 ;; This function calls:
 13557 ;;		Nothing
 13558 ;; This function is called by:
 13559 ;;		_Measure_Temp_PT100_2Wire
 13560 ;;		___flsub
 13561 ;;		_sqrtf
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565                           
 13566                           ;psect for function ___fladd
 13567  0923                     ___fladd:
 13568                           
 13569                           ;incstack = 0
 13570                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 13571  0923  0843               	movf	___fladd@b+3,w
 13572  0924  3980               	andlw	128
 13573  0925  00C8               	movwf	??___fladd
 13574  0926  0848               	movf	??___fladd,w
 13575  0927  00D0               	movwf	___fladd@signs
 13576  0928  3543               	lslf	___fladd@b+3,w
 13577  0929  00C8               	movwf	??___fladd
 13578  092A  0848               	movf	??___fladd,w
 13579  092B  00D2               	movwf	___fladd@bexp
 13580  092C  1BC2               	btfsc	___fladd@b+2,7
 13581  092D  1452               	bsf	___fladd@bexp,0
 13582  092E  0852               	movf	___fladd@bexp,w
 13583  092F  1903               	btfsc	3,2
 13584  0930  293F               	goto	l5391
 13585  0931  0A52               	incf	___fladd@bexp,w
 13586  0932  1D03               	btfss	3,2
 13587  0933  293C               	goto	l5387
 13588  0934  3000               	movlw	0
 13589  0935  00C3               	movwf	___fladd@b+3
 13590  0936  3000               	movlw	0
 13591  0937  00C2               	movwf	___fladd@b+2
 13592  0938  3000               	movlw	0
 13593  0939  00C1               	movwf	___fladd@b+1
 13594  093A  3000               	movlw	0
 13595  093B  00C0               	movwf	___fladd@b
 13596  093C                     l5387:
 13597  093C  17C2               	bsf	___fladd@b+2,7
 13598  093D  01C3               	clrf	___fladd@b+3
 13599  093E  2947               	goto	l5393
 13600  093F                     l5391:
 13601  093F  3000               	movlw	0
 13602  0940  00C3               	movwf	___fladd@b+3
 13603  0941  3000               	movlw	0
 13604  0942  00C2               	movwf	___fladd@b+2
 13605  0943  3000               	movlw	0
 13606  0944  00C1               	movwf	___fladd@b+1
 13607  0945  3000               	movlw	0
 13608  0946  00C0               	movwf	___fladd@b
 13609  0947                     l5393:
 13610  0947  0847               	movf	___fladd@a+3,w
 13611  0948  3980               	andlw	128
 13612  0949  00C8               	movwf	??___fladd
 13613  094A  0848               	movf	??___fladd,w
 13614  094B  00D1               	movwf	___fladd@aexp
 13615  094C  0851               	movf	___fladd@aexp,w
 13616  094D  0650               	xorwf	___fladd@signs,w
 13617  094E  1D03               	btfss	3,2
 13618  094F  1750               	bsf	___fladd@signs,6
 13619  0950  3547               	lslf	___fladd@a+3,w
 13620  0951  00C8               	movwf	??___fladd
 13621  0952  0848               	movf	??___fladd,w
 13622  0953  00D1               	movwf	___fladd@aexp
 13623  0954  1BC6               	btfsc	___fladd@a+2,7
 13624  0955  1451               	bsf	___fladd@aexp,0
 13625  0956  0851               	movf	___fladd@aexp,w
 13626  0957  1903               	btfsc	3,2
 13627  0958  2967               	goto	l5415
 13628  0959  0A51               	incf	___fladd@aexp,w
 13629  095A  1D03               	btfss	3,2
 13630  095B  2964               	goto	l5411
 13631  095C  3000               	movlw	0
 13632  095D  00C7               	movwf	___fladd@a+3
 13633  095E  3000               	movlw	0
 13634  095F  00C6               	movwf	___fladd@a+2
 13635  0960  3000               	movlw	0
 13636  0961  00C5               	movwf	___fladd@a+1
 13637  0962  3000               	movlw	0
 13638  0963  00C4               	movwf	___fladd@a
 13639  0964                     l5411:
 13640  0964  17C6               	bsf	___fladd@a+2,7
 13641  0965  01C7               	clrf	___fladd@a+3
 13642  0966  296F               	goto	l1672
 13643  0967                     l5415:
 13644  0967  3000               	movlw	0
 13645  0968  00C7               	movwf	___fladd@a+3
 13646  0969  3000               	movlw	0
 13647  096A  00C6               	movwf	___fladd@a+2
 13648  096B  3000               	movlw	0
 13649  096C  00C5               	movwf	___fladd@a+1
 13650  096D  3000               	movlw	0
 13651  096E  00C4               	movwf	___fladd@a
 13652  096F                     l1672:
 13653  096F  0852               	movf	___fladd@bexp,w
 13654  0970  0251               	subwf	___fladd@aexp,w
 13655  0971  1803               	skipnc
 13656  0972  29B5               	goto	l5451
 13657  0973  1F50               	btfss	___fladd@signs,6
 13658  0974  2979               	goto	l5421
 13659  0975  3080               	movlw	128
 13660  0976  00C8               	movwf	??___fladd
 13661  0977  0848               	movf	??___fladd,w
 13662  0978  06D0               	xorwf	___fladd@signs,f
 13663  0979                     l5421:
 13664  0979  0852               	movf	___fladd@bexp,w
 13665  097A  00C8               	movwf	??___fladd
 13666  097B  0848               	movf	??___fladd,w
 13667  097C  00D3               	movwf	___fladd@grs
 13668  097D  0851               	movf	___fladd@aexp,w
 13669  097E  00C8               	movwf	??___fladd
 13670  097F  0848               	movf	??___fladd,w
 13671  0980  00D2               	movwf	___fladd@bexp
 13672  0981  0853               	movf	___fladd@grs,w
 13673  0982  00C8               	movwf	??___fladd
 13674  0983  0848               	movf	??___fladd,w
 13675  0984  00D1               	movwf	___fladd@aexp
 13676  0985  0840               	movf	___fladd@b,w
 13677  0986  00C8               	movwf	??___fladd
 13678  0987  0848               	movf	??___fladd,w
 13679  0988  00D3               	movwf	___fladd@grs
 13680  0989  0844               	movf	___fladd@a,w
 13681  098A  00C8               	movwf	??___fladd
 13682  098B  0848               	movf	??___fladd,w
 13683  098C  00C0               	movwf	___fladd@b
 13684  098D  0853               	movf	___fladd@grs,w
 13685  098E  00C8               	movwf	??___fladd
 13686  098F  0848               	movf	??___fladd,w
 13687  0990  00C4               	movwf	___fladd@a
 13688  0991  0841               	movf	___fladd@b+1,w
 13689  0992  00C8               	movwf	??___fladd
 13690  0993  0848               	movf	??___fladd,w
 13691  0994  00D3               	movwf	___fladd@grs
 13692  0995  0845               	movf	___fladd@a+1,w
 13693  0996  00C8               	movwf	??___fladd
 13694  0997  0848               	movf	??___fladd,w
 13695  0998  00C1               	movwf	___fladd@b+1
 13696  0999  0853               	movf	___fladd@grs,w
 13697  099A  00C8               	movwf	??___fladd
 13698  099B  0848               	movf	??___fladd,w
 13699  099C  00C5               	movwf	___fladd@a+1
 13700  099D  0842               	movf	___fladd@b+2,w
 13701  099E  00C8               	movwf	??___fladd
 13702  099F  0848               	movf	??___fladd,w
 13703  09A0  00D3               	movwf	___fladd@grs
 13704  09A1  0846               	movf	___fladd@a+2,w
 13705  09A2  00C8               	movwf	??___fladd
 13706  09A3  0848               	movf	??___fladd,w
 13707  09A4  00C2               	movwf	___fladd@b+2
 13708  09A5  0853               	movf	___fladd@grs,w
 13709  09A6  00C8               	movwf	??___fladd
 13710  09A7  0848               	movf	??___fladd,w
 13711  09A8  00C6               	movwf	___fladd@a+2
 13712  09A9  0843               	movf	___fladd@b+3,w
 13713  09AA  00C8               	movwf	??___fladd
 13714  09AB  0848               	movf	??___fladd,w
 13715  09AC  00D3               	movwf	___fladd@grs
 13716  09AD  0847               	movf	___fladd@a+3,w
 13717  09AE  00C8               	movwf	??___fladd
 13718  09AF  0848               	movf	??___fladd,w
 13719  09B0  00C3               	movwf	___fladd@b+3
 13720  09B1  0853               	movf	___fladd@grs,w
 13721  09B2  00C8               	movwf	??___fladd
 13722  09B3  0848               	movf	??___fladd,w
 13723  09B4  00C7               	movwf	___fladd@a+3
 13724  09B5                     l5451:
 13725  09B5  01D3               	clrf	___fladd@grs
 13726  09B6  0851               	movf	___fladd@aexp,w
 13727  09B7  00C8               	movwf	??___fladd
 13728  09B8  01C9               	clrf	??___fladd+1
 13729  09B9  0849               	movf	??___fladd+1,w
 13730  09BA  00CB               	movwf	??___fladd+3
 13731  09BB  0852               	movf	___fladd@bexp,w
 13732  09BC  0248               	subwf	??___fladd,w
 13733  09BD  00CA               	movwf	??___fladd+2
 13734  09BE  1C03               	skipc
 13735  09BF  03CB               	decf	??___fladd+3,f
 13736  09C0  084B               	movf	??___fladd+3,w
 13737  09C1  3A80               	xorlw	128
 13738  09C2  00CC               	movwf	??___fladd+4
 13739  09C3  3080               	movlw	128
 13740  09C4  024C               	subwf	??___fladd+4,w
 13741  09C5  1D03               	skipz
 13742  09C6  29C9               	goto	u5485
 13743  09C7  301A               	movlw	26
 13744  09C8  024A               	subwf	??___fladd+2,w
 13745  09C9                     u5485:
 13746  09C9  1C03               	skipc
 13747  09CA  29FD               	goto	l5469
 13748  09CB  0020               	movlb	0	; select bank0
 13749  09CC  0843               	movf	___fladd@b+3,w
 13750  09CD  0442               	iorwf	___fladd@b+2,w
 13751  09CE  0441               	iorwf	___fladd@b+1,w
 13752  09CF  0440               	iorwf	___fladd@b,w
 13753  09D0  1903               	btfsc	3,2
 13754  09D1  29D4               	goto	u5490
 13755  09D2  3001               	movlw	1
 13756  09D3  29D5               	goto	u5500
 13757  09D4                     u5490:
 13758  09D4  3000               	movlw	0
 13759  09D5                     u5500:
 13760  09D5  00C8               	movwf	??___fladd
 13761  09D6  0848               	movf	??___fladd,w
 13762  09D7  00D3               	movwf	___fladd@grs
 13763  09D8  3000               	movlw	0
 13764  09D9  00C3               	movwf	___fladd@b+3
 13765  09DA  3000               	movlw	0
 13766  09DB  00C2               	movwf	___fladd@b+2
 13767  09DC  3000               	movlw	0
 13768  09DD  00C1               	movwf	___fladd@b+1
 13769  09DE  3000               	movlw	0
 13770  09DF  00C0               	movwf	___fladd@b
 13771  09E0  0851               	movf	___fladd@aexp,w
 13772  09E1  00C8               	movwf	??___fladd
 13773  09E2  0848               	movf	??___fladd,w
 13774  09E3  00D2               	movwf	___fladd@bexp
 13775  09E4  2A02               	goto	l1676
 13776  09E5                     l1678:
 13777  09E5  1C53               	btfss	___fladd@grs,0
 13778  09E6  29ED               	goto	l5459
 13779  09E7  3653               	lsrf	___fladd@grs,w
 13780  09E8  3801               	iorlw	1
 13781  09E9  00C8               	movwf	??___fladd
 13782  09EA  0848               	movf	??___fladd,w
 13783  09EB  00D3               	movwf	___fladd@grs
 13784  09EC  29EF               	goto	l5461
 13785  09ED                     l5459:
 13786  09ED  1003               	clrc
 13787  09EE  0CD3               	rrf	___fladd@grs,f
 13788  09EF                     l5461:
 13789  09EF  1840               	btfsc	___fladd@b,0
 13790  09F0  17D3               	bsf	___fladd@grs,7
 13791  09F1  3001               	movlw	1
 13792  09F2  00C8               	movwf	??___fladd
 13793  09F3                     u5535:
 13794  09F3  37C3               	asrf	___fladd@b+3,f
 13795  09F4  0CC2               	rrf	___fladd@b+2,f
 13796  09F5  0CC1               	rrf	___fladd@b+1,f
 13797  09F6  0CC0               	rrf	___fladd@b,f
 13798  09F7  0BC8               	decfsz	??___fladd& (0+127),f
 13799  09F8  29F3               	goto	u5535
 13800  09F9  3001               	movlw	1
 13801  09FA  00C8               	movwf	??___fladd
 13802  09FB  0848               	movf	??___fladd,w
 13803  09FC  07D2               	addwf	___fladd@bexp,f
 13804  09FD                     l5469:
 13805  09FD  0020               	movlb	0	; select bank0
 13806  09FE  0851               	movf	___fladd@aexp,w
 13807  09FF  0252               	subwf	___fladd@bexp,w
 13808  0A00  1C03               	skipc
 13809  0A01  29E5               	goto	l1678
 13810  0A02                     l1676:
 13811  0A02  1B50               	btfsc	___fladd@signs,6
 13812  0A03  2A33               	goto	l5495
 13813  0A04  0852               	movf	___fladd@bexp,w
 13814  0A05  1D03               	btfss	3,2
 13815  0A06  2A10               	goto	l5477
 13816  0A07  3000               	movlw	0
 13817  0A08  00C3               	movwf	?___fladd+3
 13818  0A09  3000               	movlw	0
 13819  0A0A  00C2               	movwf	?___fladd+2
 13820  0A0B  3000               	movlw	0
 13821  0A0C  00C1               	movwf	?___fladd+1
 13822  0A0D  3000               	movlw	0
 13823  0A0E  00C0               	movwf	?___fladd
 13824  0A0F  0008               	return
 13825  0A10                     l5477:
 13826  0A10  0844               	movf	___fladd@a,w
 13827  0A11  07C0               	addwf	___fladd@b,f
 13828  0A12  0845               	movf	___fladd@a+1,w
 13829  0A13  3DC1               	addwfc	___fladd@b+1,f
 13830  0A14  0846               	movf	___fladd@a+2,w
 13831  0A15  3DC2               	addwfc	___fladd@b+2,f
 13832  0A16  0847               	movf	___fladd@a+3,w
 13833  0A17  3DC3               	addwfc	___fladd@b+3,f
 13834  0A18  1C43               	btfss	___fladd@b+3,0
 13835  0A19  2AAD               	goto	l5529
 13836  0A1A  1C53               	btfss	___fladd@grs,0
 13837  0A1B  2A22               	goto	l5485
 13838  0A1C  3653               	lsrf	___fladd@grs,w
 13839  0A1D  3801               	iorlw	1
 13840  0A1E  00C8               	movwf	??___fladd
 13841  0A1F  0848               	movf	??___fladd,w
 13842  0A20  00D3               	movwf	___fladd@grs
 13843  0A21  2A24               	goto	l5487
 13844  0A22                     l5485:
 13845  0A22  1003               	clrc
 13846  0A23  0CD3               	rrf	___fladd@grs,f
 13847  0A24                     l5487:
 13848  0A24  1840               	btfsc	___fladd@b,0
 13849  0A25  17D3               	bsf	___fladd@grs,7
 13850  0A26  3001               	movlw	1
 13851  0A27  00C8               	movwf	??___fladd
 13852  0A28                     u5605:
 13853  0A28  37C3               	asrf	___fladd@b+3,f
 13854  0A29  0CC2               	rrf	___fladd@b+2,f
 13855  0A2A  0CC1               	rrf	___fladd@b+1,f
 13856  0A2B  0CC0               	rrf	___fladd@b,f
 13857  0A2C  0BC8               	decfsz	??___fladd& (0+127),f
 13858  0A2D  2A28               	goto	u5605
 13859  0A2E  3001               	movlw	1
 13860  0A2F  00C8               	movwf	??___fladd
 13861  0A30  0848               	movf	??___fladd,w
 13862  0A31  07D2               	addwf	___fladd@bexp,f
 13863  0A32  2AAD               	goto	l5529
 13864  0A33                     l5495:
 13865  0A33  0843               	movf	___fladd@b+3,w
 13866  0A34  3A80               	xorlw	128
 13867  0A35  00C8               	movwf	??___fladd
 13868  0A36  0847               	movf	___fladd@a+3,w
 13869  0A37  3A80               	xorlw	128
 13870  0A38  0248               	subwf	??___fladd,w
 13871  0A39  1D03               	skipz
 13872  0A3A  2A45               	goto	u5613
 13873  0A3B  0846               	movf	___fladd@a+2,w
 13874  0A3C  0242               	subwf	___fladd@b+2,w
 13875  0A3D  1D03               	skipz
 13876  0A3E  2A45               	goto	u5613
 13877  0A3F  0845               	movf	___fladd@a+1,w
 13878  0A40  0241               	subwf	___fladd@b+1,w
 13879  0A41  1D03               	skipz
 13880  0A42  2A45               	goto	u5613
 13881  0A43  0844               	movf	___fladd@a,w
 13882  0A44  0240               	subwf	___fladd@b,w
 13883  0A45                     u5613:
 13884  0A45  1803               	skipnc
 13885  0A46  2A7D               	goto	l5505
 13886  0A47  30FF               	movlw	255
 13887  0A48  00C8               	movwf	??___fladd
 13888  0A49  30FF               	movlw	255
 13889  0A4A  00C9               	movwf	??___fladd+1
 13890  0A4B  30FF               	movlw	255
 13891  0A4C  00CA               	movwf	??___fladd+2
 13892  0A4D  30FF               	movlw	255
 13893  0A4E  00CB               	movwf	??___fladd+3
 13894  0A4F  0840               	movf	___fladd@b,w
 13895  0A50  0244               	subwf	___fladd@a,w
 13896  0A51  00CC               	movwf	??___fladd+4
 13897  0A52  0841               	movf	___fladd@b+1,w
 13898  0A53  3B45               	subwfb	___fladd@a+1,w
 13899  0A54  00CD               	movwf	??___fladd+5
 13900  0A55  0842               	movf	___fladd@b+2,w
 13901  0A56  3B46               	subwfb	___fladd@a+2,w
 13902  0A57  00CE               	movwf	??___fladd+6
 13903  0A58  0843               	movf	___fladd@b+3,w
 13904  0A59  3B47               	subwfb	___fladd@a+3,w
 13905  0A5A  00CF               	movwf	??___fladd+7
 13906  0A5B  084C               	movf	??___fladd+4,w
 13907  0A5C  07C8               	addwf	??___fladd,f
 13908  0A5D  084D               	movf	??___fladd+5,w
 13909  0A5E  3DC9               	addwfc	??___fladd+1,f
 13910  0A5F  084E               	movf	??___fladd+6,w
 13911  0A60  3DCA               	addwfc	??___fladd+2,f
 13912  0A61  084F               	movf	??___fladd+7,w
 13913  0A62  3DCB               	addwfc	??___fladd+3,f
 13914  0A63  084B               	movf	??___fladd+3,w
 13915  0A64  00C3               	movwf	___fladd@b+3
 13916  0A65  084A               	movf	??___fladd+2,w
 13917  0A66  00C2               	movwf	___fladd@b+2
 13918  0A67  0849               	movf	??___fladd+1,w
 13919  0A68  00C1               	movwf	___fladd@b+1
 13920  0A69  0848               	movf	??___fladd,w
 13921  0A6A  00C0               	movwf	___fladd@b
 13922  0A6B  3080               	movlw	128
 13923  0A6C  00C8               	movwf	??___fladd
 13924  0A6D  0848               	movf	??___fladd,w
 13925  0A6E  06D0               	xorwf	___fladd@signs,f
 13926  0A6F  09D3               	comf	___fladd@grs,f
 13927  0A70  0AD3               	incf	___fladd@grs,f
 13928  0A71  0853               	movf	___fladd@grs,w
 13929  0A72  1D03               	btfss	3,2
 13930  0A73  2A85               	goto	l1693
 13931  0A74  3001               	movlw	1
 13932  0A75  07C0               	addwf	___fladd@b,f
 13933  0A76  3000               	movlw	0
 13934  0A77  3DC1               	addwfc	___fladd@b+1,f
 13935  0A78  3000               	movlw	0
 13936  0A79  3DC2               	addwfc	___fladd@b+2,f
 13937  0A7A  3000               	movlw	0
 13938  0A7B  3DC3               	addwfc	___fladd@b+3,f
 13939  0A7C  2A85               	goto	l1693
 13940  0A7D                     l5505:
 13941  0A7D  0844               	movf	___fladd@a,w
 13942  0A7E  02C0               	subwf	___fladd@b,f
 13943  0A7F  0845               	movf	___fladd@a+1,w
 13944  0A80  3BC1               	subwfb	___fladd@b+1,f
 13945  0A81  0846               	movf	___fladd@a+2,w
 13946  0A82  3BC2               	subwfb	___fladd@b+2,f
 13947  0A83  0847               	movf	___fladd@a+3,w
 13948  0A84  3BC3               	subwfb	___fladd@b+3,f
 13949  0A85                     l1693:
 13950  0A85  0843               	movf	___fladd@b+3,w
 13951  0A86  0442               	iorwf	___fladd@b+2,w
 13952  0A87  0441               	iorwf	___fladd@b+1,w
 13953  0A88  0440               	iorwf	___fladd@b,w
 13954  0A89  1D03               	skipz
 13955  0A8A  2AAB               	goto	l5527
 13956  0A8B  0853               	movf	___fladd@grs,w
 13957  0A8C  1D03               	btfss	3,2
 13958  0A8D  2AAB               	goto	l5527
 13959  0A8E  3000               	movlw	0
 13960  0A8F  00C3               	movwf	?___fladd+3
 13961  0A90  3000               	movlw	0
 13962  0A91  00C2               	movwf	?___fladd+2
 13963  0A92  3000               	movlw	0
 13964  0A93  00C1               	movwf	?___fladd+1
 13965  0A94  3000               	movlw	0
 13966  0A95  00C0               	movwf	?___fladd
 13967  0A96  0008               	return
 13968  0A97                     l5513:
 13969  0A97  3001               	movlw	1
 13970  0A98                     u5655:
 13971  0A98  35C0               	lslf	___fladd@b,f
 13972  0A99  0DC1               	rlf	___fladd@b+1,f
 13973  0A9A  0DC2               	rlf	___fladd@b+2,f
 13974  0A9B  0DC3               	rlf	___fladd@b+3,f
 13975  0A9C  0B89               	decfsz	9,f
 13976  0A9D  2A98               	goto	u5655
 13977  0A9E  1BD3               	btfsc	___fladd@grs,7
 13978  0A9F  1440               	bsf	___fladd@b,0
 13979  0AA0  1C53               	btfss	___fladd@grs,0
 13980  0AA1  2AA4               	goto	l5521
 13981  0AA2  1403               	setc
 13982  0AA3  2AA5               	goto	L5
 13983  0AA4                     l5521:
 13984  0AA4  1003               	clrc
 13985  0AA5                     L5:
 13986  0AA5  0DD3               	rlf	___fladd@grs,f
 13987  0AA6  0852               	movf	___fladd@bexp,w
 13988  0AA7  1903               	btfsc	3,2
 13989  0AA8  2AAB               	goto	l5527
 13990  0AA9  3001               	movlw	1
 13991  0AAA  02D2               	subwf	___fladd@bexp,f
 13992  0AAB                     l5527:
 13993  0AAB  1FC2               	btfss	___fladd@b+2,7
 13994  0AAC  2A97               	goto	l5513
 13995  0AAD                     l5529:
 13996  0AAD  01D1               	clrf	___fladd@aexp
 13997  0AAE  1FD3               	btfss	___fladd@grs,7
 13998  0AAF  2AB8               	goto	l5539
 13999  0AB0  0853               	movf	___fladd@grs,w
 14000  0AB1  397F               	andlw	127
 14001  0AB2  1903               	btfsc	3,2
 14002  0AB3  1840               	btfsc	___fladd@b,0
 14003  0AB4  2AB6               	goto	l5535
 14004  0AB5  2AB8               	goto	l5539
 14005  0AB6                     l5535:
 14006  0AB6  01D1               	clrf	___fladd@aexp
 14007  0AB7  0AD1               	incf	___fladd@aexp,f
 14008  0AB8                     l5539:
 14009  0AB8  0851               	movf	___fladd@aexp,w
 14010  0AB9  1903               	btfsc	3,2
 14011  0ABA  2AE4               	goto	l1706
 14012  0ABB  3001               	movlw	1
 14013  0ABC  07C0               	addwf	___fladd@b,f
 14014  0ABD  3000               	movlw	0
 14015  0ABE  3DC1               	addwfc	___fladd@b+1,f
 14016  0ABF  3000               	movlw	0
 14017  0AC0  3DC2               	addwfc	___fladd@b+2,f
 14018  0AC1  3000               	movlw	0
 14019  0AC2  3DC3               	addwfc	___fladd@b+3,f
 14020  0AC3  1C43               	btfss	___fladd@b+3,0
 14021  0AC4  2AE4               	goto	l1706
 14022  0AC5  0840               	movf	___fladd@b,w
 14023  0AC6  00C8               	movwf	??___fladd
 14024  0AC7  0841               	movf	___fladd@b+1,w
 14025  0AC8  00C9               	movwf	??___fladd+1
 14026  0AC9  0842               	movf	___fladd@b+2,w
 14027  0ACA  00CA               	movwf	??___fladd+2
 14028  0ACB  0843               	movf	___fladd@b+3,w
 14029  0ACC  00CB               	movwf	??___fladd+3
 14030  0ACD  3001               	movlw	1
 14031  0ACE  00CC               	movwf	??___fladd+4
 14032  0ACF                     u5755:
 14033  0ACF  37CB               	asrf	??___fladd+3,f
 14034  0AD0  0CCA               	rrf	??___fladd+2,f
 14035  0AD1  0CC9               	rrf	??___fladd+1,f
 14036  0AD2  0CC8               	rrf	??___fladd,f
 14037  0AD3  0BCC               	decfsz	??___fladd+4,f
 14038  0AD4  2ACF               	goto	u5755
 14039  0AD5  084B               	movf	??___fladd+3,w
 14040  0AD6  00C3               	movwf	___fladd@b+3
 14041  0AD7  084A               	movf	??___fladd+2,w
 14042  0AD8  00C2               	movwf	___fladd@b+2
 14043  0AD9  0849               	movf	??___fladd+1,w
 14044  0ADA  00C1               	movwf	___fladd@b+1
 14045  0ADB  0848               	movf	??___fladd,w
 14046  0ADC  00C0               	movwf	___fladd@b
 14047  0ADD  0A52               	incf	___fladd@bexp,w
 14048  0ADE  1903               	btfsc	3,2
 14049  0ADF  2AE4               	goto	l1706
 14050  0AE0  3001               	movlw	1
 14051  0AE1  00C8               	movwf	??___fladd
 14052  0AE2  0848               	movf	??___fladd,w
 14053  0AE3  07D2               	addwf	___fladd@bexp,f
 14054  0AE4                     l1706:
 14055  0AE4  0A52               	incf	___fladd@bexp,w
 14056  0AE5  1D03               	btfss	3,2
 14057  0AE6  0852               	movf	___fladd@bexp,w
 14058  0AE7  1D03               	btfss	3,2
 14059  0AE8  2AF4               	goto	l5557
 14060  0AE9  3000               	movlw	0
 14061  0AEA  00C3               	movwf	___fladd@b+3
 14062  0AEB  3000               	movlw	0
 14063  0AEC  00C2               	movwf	___fladd@b+2
 14064  0AED  3000               	movlw	0
 14065  0AEE  00C1               	movwf	___fladd@b+1
 14066  0AEF  3000               	movlw	0
 14067  0AF0  00C0               	movwf	___fladd@b
 14068  0AF1  0852               	movf	___fladd@bexp,w
 14069  0AF2  1903               	btfsc	3,2
 14070  0AF3  01D0               	clrf	___fladd@signs
 14071  0AF4                     l5557:
 14072  0AF4  1C52               	btfss	___fladd@bexp,0
 14073  0AF5  2AF8               	goto	l5561
 14074  0AF6  17C2               	bsf	___fladd@b+2,7
 14075  0AF7  2AFC               	goto	l1714
 14076  0AF8                     l5561:
 14077  0AF8  307F               	movlw	127
 14078  0AF9  00C8               	movwf	??___fladd
 14079  0AFA  0848               	movf	??___fladd,w
 14080  0AFB  05C2               	andwf	___fladd@b+2,f
 14081  0AFC                     l1714:
 14082  0AFC  3652               	lsrf	___fladd@bexp,w
 14083  0AFD  00C8               	movwf	??___fladd
 14084  0AFE  0848               	movf	??___fladd,w
 14085  0AFF  00C3               	movwf	___fladd@b+3
 14086  0B00  1FD0               	btfss	___fladd@signs,7
 14087  0B01  0008               	return
 14088  0B02  17C3               	bsf	___fladd@b+3,7
 14089  0B03  0008               	return
 14090  0B04                     __end_of___fladd:
 14091                           
 14092                           	psect	text69
 14093  0B04                     __ptext69:	
 14094 ;; *************** function ___flmul *****************
 14095 ;; Defined at:
 14096 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcmul.c"
 14097 ;; Parameters:    Size  Location     Type
 14098 ;;  b               4    6[BANK0 ] unsigned char 
 14099 ;;  a               4   10[BANK0 ] unsigned char 
 14100 ;; Auto vars:     Size  Location     Type
 14101 ;;  prod            4   26[BANK0 ] struct .
 14102 ;;  grs             4   22[BANK0 ] unsigned long 
 14103 ;;  temp            2   30[BANK0 ] struct .
 14104 ;;  bexp            1   21[BANK0 ] unsigned char 
 14105 ;;  aexp            1   20[BANK0 ] unsigned char 
 14106 ;;  sign            1   19[BANK0 ] unsigned char 
 14107 ;; Return value:  Size  Location     Type
 14108 ;;                  4    6[BANK0 ] unsigned char 
 14109 ;; Registers used:
 14110 ;;		wreg, status,2, status,0, pclath, cstack
 14111 ;; Tracked objects:
 14112 ;;		On entry : 1F/0
 14113 ;;		On exit  : 1F/0
 14114 ;;		Unchanged: 0/0
 14115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14116 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14117 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14118 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14119 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14120 ;;Total ram usage:       26 bytes
 14121 ;; Hardware stack levels used:    1
 14122 ;; Hardware stack levels required when called:    6
 14123 ;; This function calls:
 14124 ;;		__Umul8_16
 14125 ;; This function is called by:
 14126 ;;		_ChangeADCtoVoltage
 14127 ;;		_Measure_R_PT100_2Wire
 14128 ;;		_Measure_Temp_PT100_2Wire
 14129 ;;		_SetDimmer
 14130 ;;		_sqrtf
 14131 ;; This function uses a non-reentrant model
 14132 ;;
 14133                           
 14134                           
 14135                           ;psect for function ___flmul
 14136  0B04                     ___flmul:
 14137                           
 14138                           ;incstack = 0
 14139                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14140  0B04  0829               	movf	___flmul@b+3,w
 14141  0B05  3980               	andlw	128
 14142  0B06  00AE               	movwf	??___flmul
 14143  0B07  082E               	movf	??___flmul,w
 14144  0B08  00B3               	movwf	___flmul@sign
 14145  0B09  3529               	lslf	___flmul@b+3,w
 14146  0B0A  00AE               	movwf	??___flmul
 14147  0B0B  082E               	movf	??___flmul,w
 14148  0B0C  00B5               	movwf	___flmul@bexp
 14149  0B0D  1BA8               	btfsc	___flmul@b+2,7
 14150  0B0E  1435               	bsf	___flmul@bexp,0
 14151  0B0F  0835               	movf	___flmul@bexp,w
 14152  0B10  1903               	btfsc	3,2
 14153  0B11  2B1F               	goto	l5871
 14154  0B12  0A35               	incf	___flmul@bexp,w
 14155  0B13  1D03               	btfss	3,2
 14156  0B14  2B1D               	goto	l5869
 14157  0B15  3000               	movlw	0
 14158  0B16  00A9               	movwf	___flmul@b+3
 14159  0B17  3000               	movlw	0
 14160  0B18  00A8               	movwf	___flmul@b+2
 14161  0B19  3000               	movlw	0
 14162  0B1A  00A7               	movwf	___flmul@b+1
 14163  0B1B  3000               	movlw	0
 14164  0B1C  00A6               	movwf	___flmul@b
 14165  0B1D                     l5869:
 14166  0B1D  17A8               	bsf	___flmul@b+2,7
 14167  0B1E  2B27               	goto	l5873
 14168  0B1F                     l5871:
 14169  0B1F  3000               	movlw	0
 14170  0B20  00A9               	movwf	___flmul@b+3
 14171  0B21  3000               	movlw	0
 14172  0B22  00A8               	movwf	___flmul@b+2
 14173  0B23  3000               	movlw	0
 14174  0B24  00A7               	movwf	___flmul@b+1
 14175  0B25  3000               	movlw	0
 14176  0B26  00A6               	movwf	___flmul@b
 14177  0B27                     l5873:
 14178  0B27  082D               	movf	___flmul@a+3,w
 14179  0B28  3980               	andlw	128
 14180  0B29  00AE               	movwf	??___flmul
 14181  0B2A  082E               	movf	??___flmul,w
 14182  0B2B  06B3               	xorwf	___flmul@sign,f
 14183  0B2C  352D               	lslf	___flmul@a+3,w
 14184  0B2D  00AE               	movwf	??___flmul
 14185  0B2E  082E               	movf	??___flmul,w
 14186  0B2F  00B4               	movwf	___flmul@aexp
 14187  0B30  1BAC               	btfsc	___flmul@a+2,7
 14188  0B31  1434               	bsf	___flmul@aexp,0
 14189  0B32  0834               	movf	___flmul@aexp,w
 14190  0B33  1903               	btfsc	3,2
 14191  0B34  2B42               	goto	l5889
 14192  0B35  0A34               	incf	___flmul@aexp,w
 14193  0B36  1D03               	btfss	3,2
 14194  0B37  2B40               	goto	l5887
 14195  0B38  3000               	movlw	0
 14196  0B39  00AD               	movwf	___flmul@a+3
 14197  0B3A  3000               	movlw	0
 14198  0B3B  00AC               	movwf	___flmul@a+2
 14199  0B3C  3000               	movlw	0
 14200  0B3D  00AB               	movwf	___flmul@a+1
 14201  0B3E  3000               	movlw	0
 14202  0B3F  00AA               	movwf	___flmul@a
 14203  0B40                     l5887:
 14204  0B40  17AC               	bsf	___flmul@a+2,7
 14205  0B41  2B4A               	goto	l5891
 14206  0B42                     l5889:
 14207  0B42  3000               	movlw	0
 14208  0B43  00AD               	movwf	___flmul@a+3
 14209  0B44  3000               	movlw	0
 14210  0B45  00AC               	movwf	___flmul@a+2
 14211  0B46  3000               	movlw	0
 14212  0B47  00AB               	movwf	___flmul@a+1
 14213  0B48  3000               	movlw	0
 14214  0B49  00AA               	movwf	___flmul@a
 14215  0B4A                     l5891:
 14216  0B4A  0834               	movf	___flmul@aexp,w
 14217  0B4B  1D03               	btfss	3,2
 14218  0B4C  0835               	movf	___flmul@bexp,w
 14219  0B4D  1D03               	btfss	3,2
 14220  0B4E  2B58               	goto	l5899
 14221  0B4F  3000               	movlw	0
 14222  0B50  00A9               	movwf	?___flmul+3
 14223  0B51  3000               	movlw	0
 14224  0B52  00A8               	movwf	?___flmul+2
 14225  0B53  3000               	movlw	0
 14226  0B54  00A7               	movwf	?___flmul+1
 14227  0B55  3000               	movlw	0
 14228  0B56  00A6               	movwf	?___flmul
 14229  0B57  0008               	return
 14230  0B58                     l5899:
 14231  0B58  0826               	movf	___flmul@b,w
 14232  0B59  00AE               	movwf	??___flmul
 14233  0B5A  082E               	movf	??___flmul,w
 14234  0B5B  00F2               	movwf	__Umul8_16@multiplicand
 14235  0B5C  082C               	movf	___flmul@a+2,w
 14236  0B5D  319D  2531  318B   	fcall	__Umul8_16
 14237  0B60  0873               	movf	?__Umul8_16+1,w
 14238  0B61  00BF               	movwf	___flmul@temp+1
 14239  0B62  0872               	movf	?__Umul8_16,w
 14240  0B63  00BE               	movwf	___flmul@temp
 14241  0B64  083E               	movf	___flmul@temp,w
 14242  0B65  00AE               	movwf	??___flmul
 14243  0B66  01AF               	clrf	??___flmul+1
 14244  0B67  01B0               	clrf	??___flmul+2
 14245  0B68  01B1               	clrf	??___flmul+3
 14246  0B69  0831               	movf	??___flmul+3,w
 14247  0B6A  00B9               	movwf	___flmul@grs+3
 14248  0B6B  0830               	movf	??___flmul+2,w
 14249  0B6C  00B8               	movwf	___flmul@grs+2
 14250  0B6D  082F               	movf	??___flmul+1,w
 14251  0B6E  00B7               	movwf	___flmul@grs+1
 14252  0B6F  082E               	movf	??___flmul,w
 14253  0B70  00B6               	movwf	___flmul@grs
 14254  0B71  083F               	movf	___flmul@temp+1,w
 14255  0B72  00AE               	movwf	??___flmul
 14256  0B73  01AF               	clrf	??___flmul+1
 14257  0B74  01B0               	clrf	??___flmul+2
 14258  0B75  01B1               	clrf	??___flmul+3
 14259  0B76  0831               	movf	??___flmul+3,w
 14260  0B77  00BD               	movwf	___flmul@prod+3
 14261  0B78  0830               	movf	??___flmul+2,w
 14262  0B79  00BC               	movwf	___flmul@prod+2
 14263  0B7A  082F               	movf	??___flmul+1,w
 14264  0B7B  00BB               	movwf	___flmul@prod+1
 14265  0B7C  082E               	movf	??___flmul,w
 14266  0B7D  00BA               	movwf	___flmul@prod
 14267  0B7E  0827               	movf	___flmul@b+1,w
 14268  0B7F  00AE               	movwf	??___flmul
 14269  0B80  082E               	movf	??___flmul,w
 14270  0B81  00F2               	movwf	__Umul8_16@multiplicand
 14271  0B82  082B               	movf	___flmul@a+1,w
 14272  0B83  319D  2531  318B   	fcall	__Umul8_16
 14273  0B86  0873               	movf	?__Umul8_16+1,w
 14274  0B87  00BF               	movwf	___flmul@temp+1
 14275  0B88  0872               	movf	?__Umul8_16,w
 14276  0B89  00BE               	movwf	___flmul@temp
 14277  0B8A  083E               	movf	___flmul@temp,w
 14278  0B8B  00AE               	movwf	??___flmul
 14279  0B8C  01AF               	clrf	??___flmul+1
 14280  0B8D  01B0               	clrf	??___flmul+2
 14281  0B8E  01B1               	clrf	??___flmul+3
 14282  0B8F  082E               	movf	??___flmul,w
 14283  0B90  07B6               	addwf	___flmul@grs,f
 14284  0B91  082F               	movf	??___flmul+1,w
 14285  0B92  3DB7               	addwfc	___flmul@grs+1,f
 14286  0B93  0830               	movf	??___flmul+2,w
 14287  0B94  3DB8               	addwfc	___flmul@grs+2,f
 14288  0B95  0831               	movf	??___flmul+3,w
 14289  0B96  3DB9               	addwfc	___flmul@grs+3,f
 14290  0B97  083F               	movf	___flmul@temp+1,w
 14291  0B98  00AE               	movwf	??___flmul
 14292  0B99  01AF               	clrf	??___flmul+1
 14293  0B9A  01B0               	clrf	??___flmul+2
 14294  0B9B  01B1               	clrf	??___flmul+3
 14295  0B9C  082E               	movf	??___flmul,w
 14296  0B9D  07BA               	addwf	___flmul@prod,f
 14297  0B9E  082F               	movf	??___flmul+1,w
 14298  0B9F  3DBB               	addwfc	___flmul@prod+1,f
 14299  0BA0  0830               	movf	??___flmul+2,w
 14300  0BA1  3DBC               	addwfc	___flmul@prod+2,f
 14301  0BA2  0831               	movf	??___flmul+3,w
 14302  0BA3  3DBD               	addwfc	___flmul@prod+3,f
 14303  0BA4  0828               	movf	___flmul@b+2,w
 14304  0BA5  00AE               	movwf	??___flmul
 14305  0BA6  082E               	movf	??___flmul,w
 14306  0BA7  00F2               	movwf	__Umul8_16@multiplicand
 14307  0BA8  082A               	movf	___flmul@a,w
 14308  0BA9  319D  2531  318B   	fcall	__Umul8_16
 14309  0BAC  0873               	movf	?__Umul8_16+1,w
 14310  0BAD  00BF               	movwf	___flmul@temp+1
 14311  0BAE  0872               	movf	?__Umul8_16,w
 14312  0BAF  00BE               	movwf	___flmul@temp
 14313  0BB0  083E               	movf	___flmul@temp,w
 14314  0BB1  00AE               	movwf	??___flmul
 14315  0BB2  01AF               	clrf	??___flmul+1
 14316  0BB3  01B0               	clrf	??___flmul+2
 14317  0BB4  01B1               	clrf	??___flmul+3
 14318  0BB5  082E               	movf	??___flmul,w
 14319  0BB6  07B6               	addwf	___flmul@grs,f
 14320  0BB7  082F               	movf	??___flmul+1,w
 14321  0BB8  3DB7               	addwfc	___flmul@grs+1,f
 14322  0BB9  0830               	movf	??___flmul+2,w
 14323  0BBA  3DB8               	addwfc	___flmul@grs+2,f
 14324  0BBB  0831               	movf	??___flmul+3,w
 14325  0BBC  3DB9               	addwfc	___flmul@grs+3,f
 14326  0BBD  083F               	movf	___flmul@temp+1,w
 14327  0BBE  00AE               	movwf	??___flmul
 14328  0BBF  01AF               	clrf	??___flmul+1
 14329  0BC0  01B0               	clrf	??___flmul+2
 14330  0BC1  01B1               	clrf	??___flmul+3
 14331  0BC2  082E               	movf	??___flmul,w
 14332  0BC3  07BA               	addwf	___flmul@prod,f
 14333  0BC4  082F               	movf	??___flmul+1,w
 14334  0BC5  3DBB               	addwfc	___flmul@prod+1,f
 14335  0BC6  0830               	movf	??___flmul+2,w
 14336  0BC7  3DBC               	addwfc	___flmul@prod+2,f
 14337  0BC8  0831               	movf	??___flmul+3,w
 14338  0BC9  3DBD               	addwfc	___flmul@prod+3,f
 14339  0BCA  3008               	movlw	8
 14340  0BCB                     u6475:
 14341  0BCB  35B6               	lslf	___flmul@grs,f
 14342  0BCC  0DB7               	rlf	___flmul@grs+1,f
 14343  0BCD  0DB8               	rlf	___flmul@grs+2,f
 14344  0BCE  0DB9               	rlf	___flmul@grs+3,f
 14345  0BCF  0B89               	decfsz	9,f
 14346  0BD0  2BCB               	goto	u6475
 14347  0BD1  0827               	movf	___flmul@b+1,w
 14348  0BD2  00AE               	movwf	??___flmul
 14349  0BD3  082E               	movf	??___flmul,w
 14350  0BD4  00F2               	movwf	__Umul8_16@multiplicand
 14351  0BD5  082A               	movf	___flmul@a,w
 14352  0BD6  319D  2531  318B   	fcall	__Umul8_16
 14353  0BD9  0873               	movf	?__Umul8_16+1,w
 14354  0BDA  00BF               	movwf	___flmul@temp+1
 14355  0BDB  0872               	movf	?__Umul8_16,w
 14356  0BDC  00BE               	movwf	___flmul@temp
 14357  0BDD  083E               	movf	___flmul@temp,w
 14358  0BDE  07B6               	addwf	___flmul@grs,f
 14359  0BDF  083F               	movf	___flmul@temp+1,w
 14360  0BE0  3DB7               	addwfc	___flmul@grs+1,f
 14361  0BE1  3000               	movlw	0
 14362  0BE2  3DB8               	addwfc	___flmul@grs+2,f
 14363  0BE3  3DB9               	addwfc	___flmul@grs+3,f
 14364  0BE4  0826               	movf	___flmul@b,w
 14365  0BE5  00AE               	movwf	??___flmul
 14366  0BE6  082E               	movf	??___flmul,w
 14367  0BE7  00F2               	movwf	__Umul8_16@multiplicand
 14368  0BE8  082B               	movf	___flmul@a+1,w
 14369  0BE9  319D  2531  318B   	fcall	__Umul8_16
 14370  0BEC  0873               	movf	?__Umul8_16+1,w
 14371  0BED  00BF               	movwf	___flmul@temp+1
 14372  0BEE  0872               	movf	?__Umul8_16,w
 14373  0BEF  00BE               	movwf	___flmul@temp
 14374  0BF0  083E               	movf	___flmul@temp,w
 14375  0BF1  07B6               	addwf	___flmul@grs,f
 14376  0BF2  083F               	movf	___flmul@temp+1,w
 14377  0BF3  3DB7               	addwfc	___flmul@grs+1,f
 14378  0BF4  3000               	movlw	0
 14379  0BF5  3DB8               	addwfc	___flmul@grs+2,f
 14380  0BF6  3DB9               	addwfc	___flmul@grs+3,f
 14381  0BF7  3008               	movlw	8
 14382  0BF8                     u6485:
 14383  0BF8  35B6               	lslf	___flmul@grs,f
 14384  0BF9  0DB7               	rlf	___flmul@grs+1,f
 14385  0BFA  0DB8               	rlf	___flmul@grs+2,f
 14386  0BFB  0DB9               	rlf	___flmul@grs+3,f
 14387  0BFC  0B89               	decfsz	9,f
 14388  0BFD  2BF8               	goto	u6485
 14389  0BFE  0826               	movf	___flmul@b,w
 14390  0BFF  00AE               	movwf	??___flmul
 14391  0C00  082E               	movf	??___flmul,w
 14392  0C01  00F2               	movwf	__Umul8_16@multiplicand
 14393  0C02  082A               	movf	___flmul@a,w
 14394  0C03  319D  2531  318B   	fcall	__Umul8_16
 14395  0C06  0873               	movf	?__Umul8_16+1,w
 14396  0C07  00BF               	movwf	___flmul@temp+1
 14397  0C08  0872               	movf	?__Umul8_16,w
 14398  0C09  00BE               	movwf	___flmul@temp
 14399  0C0A  083E               	movf	___flmul@temp,w
 14400  0C0B  07B6               	addwf	___flmul@grs,f
 14401  0C0C  083F               	movf	___flmul@temp+1,w
 14402  0C0D  3DB7               	addwfc	___flmul@grs+1,f
 14403  0C0E  3000               	movlw	0
 14404  0C0F  3DB8               	addwfc	___flmul@grs+2,f
 14405  0C10  3DB9               	addwfc	___flmul@grs+3,f
 14406  0C11  0827               	movf	___flmul@b+1,w
 14407  0C12  00AE               	movwf	??___flmul
 14408  0C13  082E               	movf	??___flmul,w
 14409  0C14  00F2               	movwf	__Umul8_16@multiplicand
 14410  0C15  082C               	movf	___flmul@a+2,w
 14411  0C16  319D  2531  318B   	fcall	__Umul8_16
 14412  0C19  0873               	movf	?__Umul8_16+1,w
 14413  0C1A  00BF               	movwf	___flmul@temp+1
 14414  0C1B  0872               	movf	?__Umul8_16,w
 14415  0C1C  00BE               	movwf	___flmul@temp
 14416  0C1D  083E               	movf	___flmul@temp,w
 14417  0C1E  07BA               	addwf	___flmul@prod,f
 14418  0C1F  083F               	movf	___flmul@temp+1,w
 14419  0C20  3DBB               	addwfc	___flmul@prod+1,f
 14420  0C21  3000               	movlw	0
 14421  0C22  3DBC               	addwfc	___flmul@prod+2,f
 14422  0C23  3DBD               	addwfc	___flmul@prod+3,f
 14423  0C24  0828               	movf	___flmul@b+2,w
 14424  0C25  00AE               	movwf	??___flmul
 14425  0C26  082E               	movf	??___flmul,w
 14426  0C27  00F2               	movwf	__Umul8_16@multiplicand
 14427  0C28  082B               	movf	___flmul@a+1,w
 14428  0C29  319D  2531  318B   	fcall	__Umul8_16
 14429  0C2C  0873               	movf	?__Umul8_16+1,w
 14430  0C2D  00BF               	movwf	___flmul@temp+1
 14431  0C2E  0872               	movf	?__Umul8_16,w
 14432  0C2F  00BE               	movwf	___flmul@temp
 14433  0C30  083E               	movf	___flmul@temp,w
 14434  0C31  07BA               	addwf	___flmul@prod,f
 14435  0C32  083F               	movf	___flmul@temp+1,w
 14436  0C33  3DBB               	addwfc	___flmul@prod+1,f
 14437  0C34  3000               	movlw	0
 14438  0C35  3DBC               	addwfc	___flmul@prod+2,f
 14439  0C36  3DBD               	addwfc	___flmul@prod+3,f
 14440  0C37  0828               	movf	___flmul@b+2,w
 14441  0C38  00AE               	movwf	??___flmul
 14442  0C39  082E               	movf	??___flmul,w
 14443  0C3A  00F2               	movwf	__Umul8_16@multiplicand
 14444  0C3B  082C               	movf	___flmul@a+2,w
 14445  0C3C  319D  2531  318B   	fcall	__Umul8_16
 14446  0C3F  0873               	movf	?__Umul8_16+1,w
 14447  0C40  00BF               	movwf	___flmul@temp+1
 14448  0C41  0872               	movf	?__Umul8_16,w
 14449  0C42  00BE               	movwf	___flmul@temp
 14450  0C43  083E               	movf	___flmul@temp,w
 14451  0C44  00AE               	movwf	??___flmul
 14452  0C45  083F               	movf	___flmul@temp+1,w
 14453  0C46  00AF               	movwf	??___flmul+1
 14454  0C47  01B0               	clrf	??___flmul+2
 14455  0C48  01B1               	clrf	??___flmul+3
 14456  0C49  3008               	movlw	8
 14457  0C4A                     u6495:
 14458  0C4A  35AE               	lslf	??___flmul,f
 14459  0C4B  0DAF               	rlf	??___flmul+1,f
 14460  0C4C  0DB0               	rlf	??___flmul+2,f
 14461  0C4D  0DB1               	rlf	??___flmul+3,f
 14462  0C4E  0B89               	decfsz	9,f
 14463  0C4F  2C4A               	goto	u6495
 14464  0C50  082E               	movf	??___flmul,w
 14465  0C51  07BA               	addwf	___flmul@prod,f
 14466  0C52  082F               	movf	??___flmul+1,w
 14467  0C53  3DBB               	addwfc	___flmul@prod+1,f
 14468  0C54  0830               	movf	??___flmul+2,w
 14469  0C55  3DBC               	addwfc	___flmul@prod+2,f
 14470  0C56  0831               	movf	??___flmul+3,w
 14471  0C57  3DBD               	addwfc	___flmul@prod+3,f
 14472  0C58  0839               	movf	___flmul@grs+3,w
 14473  0C59  00AE               	movwf	??___flmul
 14474  0C5A  01AF               	clrf	??___flmul+1
 14475  0C5B  01B0               	clrf	??___flmul+2
 14476  0C5C  01B1               	clrf	??___flmul+3
 14477  0C5D  082E               	movf	??___flmul,w
 14478  0C5E  07BA               	addwf	___flmul@prod,f
 14479  0C5F  082F               	movf	??___flmul+1,w
 14480  0C60  3DBB               	addwfc	___flmul@prod+1,f
 14481  0C61  0830               	movf	??___flmul+2,w
 14482  0C62  3DBC               	addwfc	___flmul@prod+2,f
 14483  0C63  0831               	movf	??___flmul+3,w
 14484  0C64  3DBD               	addwfc	___flmul@prod+3,f
 14485  0C65  3008               	movlw	8
 14486  0C66                     u6505:
 14487  0C66  35B6               	lslf	___flmul@grs,f
 14488  0C67  0DB7               	rlf	___flmul@grs+1,f
 14489  0C68  0DB8               	rlf	___flmul@grs+2,f
 14490  0C69  0DB9               	rlf	___flmul@grs+3,f
 14491  0C6A  0B89               	decfsz	9,f
 14492  0C6B  2C66               	goto	u6505
 14493  0C6C  0835               	movf	___flmul@bexp,w
 14494  0C6D  0734               	addwf	___flmul@aexp,w
 14495  0C6E  00AE               	movwf	??___flmul
 14496  0C6F  01AF               	clrf	??___flmul+1
 14497  0C70  0DAF               	rlf	??___flmul+1,f
 14498  0C71  082E               	movf	??___flmul,w
 14499  0C72  3E82               	addlw	130
 14500  0C73  00BE               	movwf	___flmul@temp
 14501  0C74  30FF               	movlw	255
 14502  0C75  3D2F               	addwfc	??___flmul+1,w
 14503  0C76  00BF               	movwf	___flmul@temp+1
 14504  0C77                     l5951:
 14505  0C77  1BBC               	btfsc	___flmul@prod+2,7
 14506  0C78  2C8E               	goto	l5953
 14507  0C79  3001               	movlw	1
 14508  0C7A                     u6515:
 14509  0C7A  35BA               	lslf	___flmul@prod,f
 14510  0C7B  0DBB               	rlf	___flmul@prod+1,f
 14511  0C7C  0DBC               	rlf	___flmul@prod+2,f
 14512  0C7D  0DBD               	rlf	___flmul@prod+3,f
 14513  0C7E  0B89               	decfsz	9,f
 14514  0C7F  2C7A               	goto	u6515
 14515  0C80  1BB9               	btfsc	___flmul@grs+3,7
 14516  0C81  143A               	bsf	___flmul@prod,0
 14517  0C82  3001               	movlw	1
 14518  0C83                     u6535:
 14519  0C83  35B6               	lslf	___flmul@grs,f
 14520  0C84  0DB7               	rlf	___flmul@grs+1,f
 14521  0C85  0DB8               	rlf	___flmul@grs+2,f
 14522  0C86  0DB9               	rlf	___flmul@grs+3,f
 14523  0C87  0B89               	decfsz	9,f
 14524  0C88  2C83               	goto	u6535
 14525  0C89  30FF               	movlw	255
 14526  0C8A  07BE               	addwf	___flmul@temp,f
 14527  0C8B  30FF               	movlw	255
 14528  0C8C  3DBF               	addwfc	___flmul@temp+1,f
 14529  0C8D  2C77               	goto	l5951
 14530  0C8E                     l5953:
 14531  0C8E  01B4               	clrf	___flmul@aexp
 14532  0C8F  1FB9               	btfss	___flmul@grs+3,7
 14533  0C90  2CA7               	goto	l5963
 14534  0C91  30FF               	movlw	255
 14535  0C92  0536               	andwf	___flmul@grs,w
 14536  0C93  00AE               	movwf	??___flmul
 14537  0C94  30FF               	movlw	255
 14538  0C95  0537               	andwf	___flmul@grs+1,w
 14539  0C96  00AF               	movwf	??___flmul+1
 14540  0C97  30FF               	movlw	255
 14541  0C98  0538               	andwf	___flmul@grs+2,w
 14542  0C99  00B0               	movwf	??___flmul+2
 14543  0C9A  307F               	movlw	127
 14544  0C9B  0539               	andwf	___flmul@grs+3,w
 14545  0C9C  00B1               	movwf	??___flmul+3
 14546  0C9D  0831               	movf	??___flmul+3,w
 14547  0C9E  0430               	iorwf	??___flmul+2,w
 14548  0C9F  042F               	iorwf	??___flmul+1,w
 14549  0CA0  042E               	iorwf	??___flmul,w
 14550  0CA1  1903               	skipnz
 14551  0CA2  183A               	btfsc	___flmul@prod,0
 14552  0CA3  2CA5               	goto	l5959
 14553  0CA4  2CA7               	goto	l5963
 14554  0CA5                     l5959:
 14555  0CA5  01B4               	clrf	___flmul@aexp
 14556  0CA6  0AB4               	incf	___flmul@aexp,f
 14557  0CA7                     l5963:
 14558  0CA7  0834               	movf	___flmul@aexp,w
 14559  0CA8  1903               	btfsc	3,2
 14560  0CA9  2CD0               	goto	l5973
 14561  0CAA  3001               	movlw	1
 14562  0CAB  07BA               	addwf	___flmul@prod,f
 14563  0CAC  3000               	movlw	0
 14564  0CAD  3DBB               	addwfc	___flmul@prod+1,f
 14565  0CAE  3000               	movlw	0
 14566  0CAF  3DBC               	addwfc	___flmul@prod+2,f
 14567  0CB0  3000               	movlw	0
 14568  0CB1  3DBD               	addwfc	___flmul@prod+3,f
 14569  0CB2  1C3D               	btfss	___flmul@prod+3,0
 14570  0CB3  2CD0               	goto	l5973
 14571  0CB4  083A               	movf	___flmul@prod,w
 14572  0CB5  00AE               	movwf	??___flmul
 14573  0CB6  083B               	movf	___flmul@prod+1,w
 14574  0CB7  00AF               	movwf	??___flmul+1
 14575  0CB8  083C               	movf	___flmul@prod+2,w
 14576  0CB9  00B0               	movwf	??___flmul+2
 14577  0CBA  083D               	movf	___flmul@prod+3,w
 14578  0CBB  00B1               	movwf	??___flmul+3
 14579  0CBC  3001               	movlw	1
 14580  0CBD  00B2               	movwf	??___flmul+4
 14581  0CBE                     u6605:
 14582  0CBE  37B1               	asrf	??___flmul+3,f
 14583  0CBF  0CB0               	rrf	??___flmul+2,f
 14584  0CC0  0CAF               	rrf	??___flmul+1,f
 14585  0CC1  0CAE               	rrf	??___flmul,f
 14586  0CC2  0BB2               	decfsz	??___flmul+4,f
 14587  0CC3  2CBE               	goto	u6605
 14588  0CC4  0831               	movf	??___flmul+3,w
 14589  0CC5  00BD               	movwf	___flmul@prod+3
 14590  0CC6  0830               	movf	??___flmul+2,w
 14591  0CC7  00BC               	movwf	___flmul@prod+2
 14592  0CC8  082F               	movf	??___flmul+1,w
 14593  0CC9  00BB               	movwf	___flmul@prod+1
 14594  0CCA  082E               	movf	??___flmul,w
 14595  0CCB  00BA               	movwf	___flmul@prod
 14596  0CCC  3001               	movlw	1
 14597  0CCD  07BE               	addwf	___flmul@temp,f
 14598  0CCE  3000               	movlw	0
 14599  0CCF  3DBF               	addwfc	___flmul@temp+1,f
 14600  0CD0                     l5973:
 14601  0CD0  083F               	movf	___flmul@temp+1,w
 14602  0CD1  3A80               	xorlw	128
 14603  0CD2  00AE               	movwf	??___flmul
 14604  0CD3  3080               	movlw	128
 14605  0CD4  022E               	subwf	??___flmul,w
 14606  0CD5  1D03               	skipz
 14607  0CD6  2CD9               	goto	u6615
 14608  0CD7  30FF               	movlw	255
 14609  0CD8  023E               	subwf	___flmul@temp,w
 14610  0CD9                     u6615:
 14611  0CD9  1C03               	skipc
 14612  0CDA  2CE5               	goto	l5977
 14613  0CDB  307F               	movlw	127
 14614  0CDC  0020               	movlb	0	; select bank0
 14615  0CDD  00BD               	movwf	___flmul@prod+3
 14616  0CDE  3080               	movlw	128
 14617  0CDF  00BC               	movwf	___flmul@prod+2
 14618  0CE0  3000               	movlw	0
 14619  0CE1  00BB               	movwf	___flmul@prod+1
 14620  0CE2  3000               	movlw	0
 14621  0CE3  00BA               	movwf	___flmul@prod
 14622  0CE4  2D0F               	goto	l1780
 14623  0CE5                     l5977:
 14624  0CE5  0020               	movlb	0	; select bank0
 14625  0CE6  083F               	movf	___flmul@temp+1,w
 14626  0CE7  3A80               	xorlw	128
 14627  0CE8  00AE               	movwf	??___flmul
 14628  0CE9  3080               	movlw	128
 14629  0CEA  022E               	subwf	??___flmul,w
 14630  0CEB  1D03               	skipz
 14631  0CEC  2CEF               	goto	u6625
 14632  0CED  3001               	movlw	1
 14633  0CEE  023E               	subwf	___flmul@temp,w
 14634  0CEF                     u6625:
 14635  0CEF  1803               	skipnc
 14636  0CF0  2CFC               	goto	l5983
 14637  0CF1  3000               	movlw	0
 14638  0CF2  0020               	movlb	0	; select bank0
 14639  0CF3  00BD               	movwf	___flmul@prod+3
 14640  0CF4  3000               	movlw	0
 14641  0CF5  00BC               	movwf	___flmul@prod+2
 14642  0CF6  3000               	movlw	0
 14643  0CF7  00BB               	movwf	___flmul@prod+1
 14644  0CF8  3000               	movlw	0
 14645  0CF9  00BA               	movwf	___flmul@prod
 14646  0CFA  01B3               	clrf	___flmul@sign
 14647  0CFB  2D0F               	goto	l1780
 14648  0CFC                     l5983:
 14649  0CFC  0020               	movlb	0	; select bank0
 14650  0CFD  083E               	movf	___flmul@temp,w
 14651  0CFE  00AE               	movwf	??___flmul
 14652  0CFF  082E               	movf	??___flmul,w
 14653  0D00  00B5               	movwf	___flmul@bexp
 14654  0D01  30FF               	movlw	255
 14655  0D02  05BA               	andwf	___flmul@prod,f
 14656  0D03  30FF               	movlw	255
 14657  0D04  05BB               	andwf	___flmul@prod+1,f
 14658  0D05  307F               	movlw	127
 14659  0D06  05BC               	andwf	___flmul@prod+2,f
 14660  0D07  3000               	movlw	0
 14661  0D08  05BD               	andwf	___flmul@prod+3,f
 14662  0D09  1835               	btfsc	___flmul@bexp,0
 14663  0D0A  17BC               	bsf	___flmul@prod+2,7
 14664  0D0B  3635               	lsrf	___flmul@bexp,w
 14665  0D0C  00AE               	movwf	??___flmul
 14666  0D0D  082E               	movf	??___flmul,w
 14667  0D0E  00BD               	movwf	___flmul@prod+3
 14668  0D0F                     l1780:
 14669  0D0F  0833               	movf	___flmul@sign,w
 14670  0D10  00AE               	movwf	??___flmul
 14671  0D11  082E               	movf	??___flmul,w
 14672  0D12  04BD               	iorwf	___flmul@prod+3,f
 14673  0D13  083D               	movf	___flmul@prod+3,w
 14674  0D14  00A9               	movwf	?___flmul+3
 14675  0D15  083C               	movf	___flmul@prod+2,w
 14676  0D16  00A8               	movwf	?___flmul+2
 14677  0D17  083B               	movf	___flmul@prod+1,w
 14678  0D18  00A7               	movwf	?___flmul+1
 14679  0D19  083A               	movf	___flmul@prod,w
 14680  0D1A  00A6               	movwf	?___flmul
 14681  0D1B  0008               	return
 14682  0D1C                     __end_of___flmul:
 14683                           
 14684                           	psect	text70
 14685  1D31                     __ptext70:	
 14686 ;; *************** function __Umul8_16 *****************
 14687 ;; Defined at:
 14688 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul8_16.c"
 14689 ;; Parameters:    Size  Location     Type
 14690 ;;  multiplier      1    wreg     unsigned char 
 14691 ;;  multiplicand    1    2[COMMON] unsigned char 
 14692 ;; Auto vars:     Size  Location     Type
 14693 ;;  multiplier      1    4[BANK0 ] unsigned char 
 14694 ;;  word_mpld       2    2[BANK0 ] unsigned int 
 14695 ;;  product         2    0[BANK0 ] unsigned int 
 14696 ;; Return value:  Size  Location     Type
 14697 ;;                  2    2[COMMON] unsigned int 
 14698 ;; Registers used:
 14699 ;;		wreg, status,2, status,0
 14700 ;; Tracked objects:
 14701 ;;		On entry : 1F/0
 14702 ;;		On exit  : 1F/0
 14703 ;;		Unchanged: 0/0
 14704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14706 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14707 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14708 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14709 ;;Total ram usage:        9 bytes
 14710 ;; Hardware stack levels used:    1
 14711 ;; Hardware stack levels required when called:    5
 14712 ;; This function calls:
 14713 ;;		Nothing
 14714 ;; This function is called by:
 14715 ;;		___flmul
 14716 ;; This function uses a non-reentrant model
 14717 ;;
 14718                           
 14719                           
 14720                           ;psect for function __Umul8_16
 14721  1D31                     __Umul8_16:
 14722                           
 14723                           ;incstack = 0
 14724                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 14725                           ;__Umul8_16@multiplier stored from wreg
 14726  1D31  00A4               	movwf	__Umul8_16@multiplier
 14727  1D32  01A0               	clrf	__Umul8_16@product
 14728  1D33  01A1               	clrf	__Umul8_16@product+1
 14729  1D34  0872               	movf	__Umul8_16@multiplicand,w
 14730  1D35  00F4               	movwf	??__Umul8_16
 14731  1D36  01F5               	clrf	??__Umul8_16+1
 14732  1D37  0874               	movf	??__Umul8_16,w
 14733  1D38  00A2               	movwf	__Umul8_16@word_mpld
 14734  1D39  0875               	movf	??__Umul8_16+1,w
 14735  1D3A  00A3               	movwf	__Umul8_16@word_mpld+1
 14736  1D3B                     l5571:
 14737  1D3B  1C24               	btfss	__Umul8_16@multiplier,0
 14738  1D3C  2D41               	goto	l1787
 14739  1D3D  0822               	movf	__Umul8_16@word_mpld,w
 14740  1D3E  07A0               	addwf	__Umul8_16@product,f
 14741  1D3F  0823               	movf	__Umul8_16@word_mpld+1,w
 14742  1D40  3DA1               	addwfc	__Umul8_16@product+1,f
 14743  1D41                     l1787:
 14744  1D41  3001               	movlw	1
 14745  1D42                     u5835:
 14746  1D42  35A2               	lslf	__Umul8_16@word_mpld,f
 14747  1D43  0DA3               	rlf	__Umul8_16@word_mpld+1,f
 14748  1D44  0B89               	decfsz	9,f
 14749  1D45  2D42               	goto	u5835
 14750  1D46  1003               	clrc
 14751  1D47  0CA4               	rrf	__Umul8_16@multiplier,f
 14752  1D48  0824               	movf	__Umul8_16@multiplier,w
 14753  1D49  1D03               	btfss	3,2
 14754  1D4A  2D3B               	goto	l5571
 14755  1D4B  0821               	movf	__Umul8_16@product+1,w
 14756  1D4C  00F3               	movwf	?__Umul8_16+1
 14757  1D4D  0820               	movf	__Umul8_16@product,w
 14758  1D4E  00F2               	movwf	?__Umul8_16
 14759  1D4F  0008               	return
 14760  1D50                     __end_of__Umul8_16:
 14761                           
 14762                           	psect	text71
 14763  1629                     __ptext71:	
 14764 ;; *************** function ___fldiv *****************
 14765 ;; Defined at:
 14766 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcdiv.c"
 14767 ;; Parameters:    Size  Location     Type
 14768 ;;  a               4   64[BANK0 ] unsigned int 
 14769 ;;  b               4   68[BANK0 ] unsigned int 
 14770 ;; Auto vars:     Size  Location     Type
 14771 ;;  grs             4   47[BANK1 ] unsigned long 
 14772 ;;  rem             4   40[BANK1 ] unsigned long 
 14773 ;;  new_exp         2   45[BANK1 ] int 
 14774 ;;  aexp            1   52[BANK1 ] unsigned char 
 14775 ;;  bexp            1   51[BANK1 ] unsigned char 
 14776 ;;  sign            1   44[BANK1 ] unsigned char 
 14777 ;; Return value:  Size  Location     Type
 14778 ;;                  4   64[BANK0 ] unsigned char 
 14779 ;; Registers used:
 14780 ;;		wreg, status,2, status,0
 14781 ;; Tracked objects:
 14782 ;;		On entry : 1F/0
 14783 ;;		On exit  : 1F/0
 14784 ;;		Unchanged: 0/0
 14785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14786 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14787 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 14788 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14789 ;;      Totals:         0      13      13       0       0       0       0       0       0       0       0       0       
      +0       0
 14790 ;;Total ram usage:       26 bytes
 14791 ;; Hardware stack levels used:    1
 14792 ;; Hardware stack levels required when called:    5
 14793 ;; This function calls:
 14794 ;;		Nothing
 14795 ;; This function is called by:
 14796 ;;		_ChangeADCtoVoltage
 14797 ;;		_Measure_R_PT100_2Wire
 14798 ;;		_Measure_Temp_PT100_2Wire
 14799 ;;		_SetDimmer
 14800 ;; This function uses a non-reentrant model
 14801 ;;
 14802                           
 14803                           
 14804                           ;psect for function ___fldiv
 14805  1629                     ___fldiv:
 14806                           
 14807                           ;incstack = 0
 14808                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 14809  1629  0867               	movf	___fldiv@b+3,w
 14810  162A  3980               	andlw	128
 14811  162B  00E8               	movwf	??___fldiv
 14812  162C  0868               	movf	??___fldiv,w
 14813  162D  0021               	movlb	1	; select bank1
 14814  162E  00CC               	movwf	___fldiv@sign^(0+128)
 14815  162F  0020               	movlb	0	; select bank0
 14816  1630  3567               	lslf	___fldiv@b+3,w
 14817  1631  00E8               	movwf	??___fldiv
 14818  1632  0868               	movf	??___fldiv,w
 14819  1633  0021               	movlb	1	; select bank1
 14820  1634  00D3               	movwf	___fldiv@bexp^(0+128)
 14821  1635  0020               	movlb	0	; select bank0
 14822  1636  1FE6               	btfss	___fldiv@b+2,7
 14823  1637  2E3A               	goto	l5723
 14824  1638  0021               	movlb	1	; select bank1
 14825  1639  1453               	bsf	___fldiv@bexp^(0+128),0
 14826  163A                     l5723:
 14827  163A  0021               	movlb	1	; select bank1
 14828  163B  0853               	movf	___fldiv@bexp^(0+128),w
 14829  163C  1903               	btfsc	3,2
 14830  163D  2E4E               	goto	l5733
 14831  163E  0A53               	incf	___fldiv@bexp^(0+128),w
 14832  163F  1D03               	btfss	3,2
 14833  1640  2E4A               	goto	l5729
 14834  1641  3000               	movlw	0
 14835  1642  0020               	movlb	0	; select bank0
 14836  1643  00E7               	movwf	___fldiv@b+3
 14837  1644  3000               	movlw	0
 14838  1645  00E6               	movwf	___fldiv@b+2
 14839  1646  3000               	movlw	0
 14840  1647  00E5               	movwf	___fldiv@b+1
 14841  1648  3000               	movlw	0
 14842  1649  00E4               	movwf	___fldiv@b
 14843  164A                     l5729:
 14844  164A  0020               	movlb	0	; select bank0
 14845  164B  17E6               	bsf	___fldiv@b+2,7
 14846  164C  01E7               	clrf	___fldiv@b+3
 14847  164D  2E57               	goto	l5735
 14848  164E                     l5733:
 14849  164E  3000               	movlw	0
 14850  164F  0020               	movlb	0	; select bank0
 14851  1650  00E7               	movwf	___fldiv@b+3
 14852  1651  3000               	movlw	0
 14853  1652  00E6               	movwf	___fldiv@b+2
 14854  1653  3000               	movlw	0
 14855  1654  00E5               	movwf	___fldiv@b+1
 14856  1655  3000               	movlw	0
 14857  1656  00E4               	movwf	___fldiv@b
 14858  1657                     l5735:
 14859  1657  0863               	movf	___fldiv@a+3,w
 14860  1658  3980               	andlw	128
 14861  1659  00E8               	movwf	??___fldiv
 14862  165A  0868               	movf	??___fldiv,w
 14863  165B  0021               	movlb	1	; select bank1
 14864  165C  06CC               	xorwf	___fldiv@sign^(0+128),f
 14865  165D  0020               	movlb	0	; select bank0
 14866  165E  3563               	lslf	___fldiv@a+3,w
 14867  165F  00E8               	movwf	??___fldiv
 14868  1660  0868               	movf	??___fldiv,w
 14869  1661  0021               	movlb	1	; select bank1
 14870  1662  00D4               	movwf	___fldiv@aexp^(0+128)
 14871  1663  0020               	movlb	0	; select bank0
 14872  1664  1FE2               	btfss	___fldiv@a+2,7
 14873  1665  2E68               	goto	l5743
 14874  1666  0021               	movlb	1	; select bank1
 14875  1667  1454               	bsf	___fldiv@aexp^(0+128),0
 14876  1668                     l5743:
 14877  1668  0021               	movlb	1	; select bank1
 14878  1669  0854               	movf	___fldiv@aexp^(0+128),w
 14879  166A  1903               	btfsc	3,2
 14880  166B  2E7C               	goto	l5753
 14881  166C  0A54               	incf	___fldiv@aexp^(0+128),w
 14882  166D  1D03               	btfss	3,2
 14883  166E  2E78               	goto	l5749
 14884  166F  3000               	movlw	0
 14885  1670  0020               	movlb	0	; select bank0
 14886  1671  00E3               	movwf	___fldiv@a+3
 14887  1672  3000               	movlw	0
 14888  1673  00E2               	movwf	___fldiv@a+2
 14889  1674  3000               	movlw	0
 14890  1675  00E1               	movwf	___fldiv@a+1
 14891  1676  3000               	movlw	0
 14892  1677  00E0               	movwf	___fldiv@a
 14893  1678                     l5749:
 14894  1678  0020               	movlb	0	; select bank0
 14895  1679  17E2               	bsf	___fldiv@a+2,7
 14896  167A  01E3               	clrf	___fldiv@a+3
 14897  167B  2E85               	goto	l1728
 14898  167C                     l5753:
 14899  167C  3000               	movlw	0
 14900  167D  0020               	movlb	0	; select bank0
 14901  167E  00E3               	movwf	___fldiv@a+3
 14902  167F  3000               	movlw	0
 14903  1680  00E2               	movwf	___fldiv@a+2
 14904  1681  3000               	movlw	0
 14905  1682  00E1               	movwf	___fldiv@a+1
 14906  1683  3000               	movlw	0
 14907  1684  00E0               	movwf	___fldiv@a
 14908  1685                     l1728:
 14909  1685  0863               	movf	___fldiv@a+3,w
 14910  1686  0462               	iorwf	___fldiv@a+2,w
 14911  1687  0461               	iorwf	___fldiv@a+1,w
 14912  1688  0460               	iorwf	___fldiv@a,w
 14913  1689  1D03               	skipz
 14914  168A  2EA6               	goto	l5763
 14915  168B  3000               	movlw	0
 14916  168C  00E7               	movwf	___fldiv@b+3
 14917  168D  3000               	movlw	0
 14918  168E  00E6               	movwf	___fldiv@b+2
 14919  168F  3000               	movlw	0
 14920  1690  00E5               	movwf	___fldiv@b+1
 14921  1691  3000               	movlw	0
 14922  1692  00E4               	movwf	___fldiv@b
 14923  1693  3080               	movlw	128
 14924  1694  04E6               	iorwf	___fldiv@b+2,f
 14925  1695  307F               	movlw	127
 14926  1696  04E7               	iorwf	___fldiv@b+3,f
 14927  1697                     L6:
 14928  1697  0021               	movlb	1	; select bank1
 14929  1698  084C               	movf	___fldiv@sign^(0+128),w
 14930  1699  0020               	movlb	0	; select bank0
 14931  169A  00E8               	movwf	??___fldiv
 14932  169B  0868               	movf	??___fldiv,w
 14933  169C  04E7               	iorwf	___fldiv@b+3,f
 14934  169D  0867               	movf	___fldiv@b+3,w
 14935  169E  00E3               	movwf	?___fldiv+3
 14936  169F  0866               	movf	___fldiv@b+2,w
 14937  16A0  00E2               	movwf	?___fldiv+2
 14938  16A1  0865               	movf	___fldiv@b+1,w
 14939  16A2  00E1               	movwf	?___fldiv+1
 14940  16A3  0864               	movf	___fldiv@b,w
 14941  16A4  00E0               	movwf	?___fldiv
 14942  16A5  0008               	return
 14943  16A6                     l5763:
 14944  16A6  0021               	movlb	1	; select bank1
 14945  16A7  0853               	movf	___fldiv@bexp^(0+128),w
 14946  16A8  1D03               	btfss	3,2
 14947  16A9  2EB4               	goto	l5769
 14948  16AA  3000               	movlw	0
 14949  16AB  0020               	movlb	0	; select bank0
 14950  16AC  00E3               	movwf	?___fldiv+3
 14951  16AD  3000               	movlw	0
 14952  16AE  00E2               	movwf	?___fldiv+2
 14953  16AF  3000               	movlw	0
 14954  16B0  00E1               	movwf	?___fldiv+1
 14955  16B1  3000               	movlw	0
 14956  16B2  00E0               	movwf	?___fldiv
 14957  16B3  0008               	return
 14958  16B4                     l5769:
 14959  16B4  0853               	movf	___fldiv@bexp^(0+128),w
 14960  16B5  0020               	movlb	0	; select bank0
 14961  16B6  00E8               	movwf	??___fldiv
 14962  16B7  01E9               	clrf	??___fldiv+1
 14963  16B8  0869               	movf	??___fldiv+1,w
 14964  16B9  00EB               	movwf	??___fldiv+3
 14965  16BA  0021               	movlb	1	; select bank1
 14966  16BB  0854               	movf	___fldiv@aexp^(0+128),w
 14967  16BC  0020               	movlb	0	; select bank0
 14968  16BD  0268               	subwf	??___fldiv,w
 14969  16BE  00EA               	movwf	??___fldiv+2
 14970  16BF  1C03               	skipc
 14971  16C0  03EB               	decf	??___fldiv+3,f
 14972  16C1  086A               	movf	??___fldiv+2,w
 14973  16C2  3E7F               	addlw	127
 14974  16C3  0021               	movlb	1	; select bank1
 14975  16C4  00CD               	movwf	___fldiv@new_exp^(0+128)
 14976  16C5  3000               	movlw	0
 14977  16C6  0020               	movlb	0	; select bank0
 14978  16C7  3D6B               	addwfc	??___fldiv+3,w
 14979  16C8  0021               	movlb	1	; select bank1
 14980  16C9  00CE               	movwf	(___fldiv@new_exp+1)^(0+128)
 14981  16CA  0020               	movlb	0	; select bank0
 14982  16CB  0867               	movf	___fldiv@b+3,w
 14983  16CC  0021               	movlb	1	; select bank1
 14984  16CD  00CB               	movwf	(___fldiv@rem+3)^(0+128)
 14985  16CE  0020               	movlb	0	; select bank0
 14986  16CF  0866               	movf	___fldiv@b+2,w
 14987  16D0  0021               	movlb	1	; select bank1
 14988  16D1  00CA               	movwf	(___fldiv@rem+2)^(0+128)
 14989  16D2  0020               	movlb	0	; select bank0
 14990  16D3  0865               	movf	___fldiv@b+1,w
 14991  16D4  0021               	movlb	1	; select bank1
 14992  16D5  00C9               	movwf	(___fldiv@rem+1)^(0+128)
 14993  16D6  0020               	movlb	0	; select bank0
 14994  16D7  0864               	movf	___fldiv@b,w
 14995  16D8  0021               	movlb	1	; select bank1
 14996  16D9  00C8               	movwf	___fldiv@rem^(0+128)
 14997  16DA  3000               	movlw	0
 14998  16DB  0020               	movlb	0	; select bank0
 14999  16DC  00E7               	movwf	___fldiv@b+3
 15000  16DD  3000               	movlw	0
 15001  16DE  00E6               	movwf	___fldiv@b+2
 15002  16DF  3000               	movlw	0
 15003  16E0  00E5               	movwf	___fldiv@b+1
 15004  16E1  3000               	movlw	0
 15005  16E2  00E4               	movwf	___fldiv@b
 15006  16E3  3000               	movlw	0
 15007  16E4  0021               	movlb	1	; select bank1
 15008  16E5  00D2               	movwf	(___fldiv@grs+3)^(0+128)
 15009  16E6  3000               	movlw	0
 15010  16E7  00D1               	movwf	(___fldiv@grs+2)^(0+128)
 15011  16E8  3000               	movlw	0
 15012  16E9  00D0               	movwf	(___fldiv@grs+1)^(0+128)
 15013  16EA  3000               	movlw	0
 15014  16EB  00CF               	movwf	___fldiv@grs^(0+128)
 15015  16EC  01D4               	clrf	___fldiv@aexp^(0+128)
 15016  16ED                     l5797:
 15017  16ED  301A               	movlw	26
 15018  16EE  0254               	subwf	___fldiv@aexp^(0+128),w
 15019  16EF  1803               	btfsc	3,0
 15020  16F0  2F40               	goto	l5799
 15021  16F1  0854               	movf	___fldiv@aexp^(0+128),w
 15022  16F2  1903               	btfsc	3,2
 15023  16F3  2F10               	goto	l5789
 15024  16F4  3001               	movlw	1
 15025  16F5                     u6195:
 15026  16F5  35C8               	lslf	___fldiv@rem^(0+128),f
 15027  16F6  0DC9               	rlf	(___fldiv@rem+1)^(0+128),f
 15028  16F7  0DCA               	rlf	(___fldiv@rem+2)^(0+128),f
 15029  16F8  0DCB               	rlf	(___fldiv@rem+3)^(0+128),f
 15030  16F9  0B89               	decfsz	9,f
 15031  16FA  2EF5               	goto	u6195
 15032  16FB  3001               	movlw	1
 15033  16FC                     u6205:
 15034  16FC  0020               	movlb	0	; select bank0
 15035  16FD  35E4               	lslf	___fldiv@b,f
 15036  16FE  0DE5               	rlf	___fldiv@b+1,f
 15037  16FF  0DE6               	rlf	___fldiv@b+2,f
 15038  1700  0DE7               	rlf	___fldiv@b+3,f
 15039  1701  0B89               	decfsz	9,f
 15040  1702  2EFC               	goto	u6205
 15041  1703  0021               	movlb	1	; select bank1
 15042  1704  1FD2               	btfss	(___fldiv@grs+3)^(0+128),7
 15043  1705  2F08               	goto	l5787
 15044  1706  0020               	movlb	0	; select bank0
 15045  1707  1464               	bsf	___fldiv@b,0
 15046  1708                     l5787:
 15047  1708  3001               	movlw	1
 15048  1709                     u6225:
 15049  1709  0021               	movlb	1	; select bank1
 15050  170A  35CF               	lslf	___fldiv@grs^(0+128),f
 15051  170B  0DD0               	rlf	(___fldiv@grs+1)^(0+128),f
 15052  170C  0DD1               	rlf	(___fldiv@grs+2)^(0+128),f
 15053  170D  0DD2               	rlf	(___fldiv@grs+3)^(0+128),f
 15054  170E  0B89               	decfsz	9,f
 15055  170F  2F09               	goto	u6225
 15056  1710                     l5789:
 15057  1710  0020               	movlb	0	; select bank0
 15058  1711  0863               	movf	___fldiv@a+3,w
 15059  1712  0021               	movlb	1	; select bank1
 15060  1713  024B               	subwf	(___fldiv@rem+3)^(0+128),w
 15061  1714  1D03               	skipz
 15062  1715  2F26               	goto	u6235
 15063  1716  0020               	movlb	0	; select bank0
 15064  1717  0862               	movf	___fldiv@a+2,w
 15065  1718  0021               	movlb	1	; select bank1
 15066  1719  024A               	subwf	(___fldiv@rem+2)^(0+128),w
 15067  171A  1D03               	skipz
 15068  171B  2F26               	goto	u6235
 15069  171C  0020               	movlb	0	; select bank0
 15070  171D  0861               	movf	___fldiv@a+1,w
 15071  171E  0021               	movlb	1	; select bank1
 15072  171F  0249               	subwf	(___fldiv@rem+1)^(0+128),w
 15073  1720  1D03               	skipz
 15074  1721  2F26               	goto	u6235
 15075  1722  0020               	movlb	0	; select bank0
 15076  1723  0860               	movf	___fldiv@a,w
 15077  1724  0021               	movlb	1	; select bank1
 15078  1725  0248               	subwf	___fldiv@rem^(0+128),w
 15079  1726                     u6235:
 15080  1726  1C03               	skipc
 15081  1727  2F39               	goto	l5795
 15082  1728  1752               	bsf	(___fldiv@grs^(0+128)+3),6
 15083  1729  0020               	movlb	0	; select bank0
 15084  172A  0860               	movf	___fldiv@a,w
 15085  172B  0021               	movlb	1	; select bank1
 15086  172C  02C8               	subwf	___fldiv@rem^(0+128),f
 15087  172D  0020               	movlb	0	; select bank0
 15088  172E  0861               	movf	___fldiv@a+1,w
 15089  172F  0021               	movlb	1	; select bank1
 15090  1730  3BC9               	subwfb	(___fldiv@rem+1)^(0+128),f
 15091  1731  0020               	movlb	0	; select bank0
 15092  1732  0862               	movf	___fldiv@a+2,w
 15093  1733  0021               	movlb	1	; select bank1
 15094  1734  3BCA               	subwfb	(___fldiv@rem+2)^(0+128),f
 15095  1735  0020               	movlb	0	; select bank0
 15096  1736  0863               	movf	___fldiv@a+3,w
 15097  1737  0021               	movlb	1	; select bank1
 15098  1738  3BCB               	subwfb	(___fldiv@rem+3)^(0+128),f
 15099  1739                     l5795:
 15100  1739  3001               	movlw	1
 15101  173A  0020               	movlb	0	; select bank0
 15102  173B  00E8               	movwf	??___fldiv
 15103  173C  0868               	movf	??___fldiv,w
 15104  173D  0021               	movlb	1	; select bank1
 15105  173E  07D4               	addwf	___fldiv@aexp^(0+128),f
 15106  173F  2EED               	goto	l5797
 15107  1740                     l5799:
 15108  1740  084B               	movf	(___fldiv@rem+3)^(0+128),w
 15109  1741  044A               	iorwf	(___fldiv@rem+2)^(0+128),w
 15110  1742  0449               	iorwf	(___fldiv@rem+1)^(0+128),w
 15111  1743  0448               	iorwf	___fldiv@rem^(0+128),w
 15112  1744  1D03               	btfss	3,2
 15113  1745  144F               	bsf	___fldiv@grs^(0+128),0
 15114  1746                     l5813:
 15115  1746  0020               	movlb	0	; select bank0
 15116  1747  1BE6               	btfsc	___fldiv@b+2,7
 15117  1748  2F62               	goto	l5815
 15118  1749  3001               	movlw	1
 15119  174A                     u6265:
 15120  174A  35E4               	lslf	___fldiv@b,f
 15121  174B  0DE5               	rlf	___fldiv@b+1,f
 15122  174C  0DE6               	rlf	___fldiv@b+2,f
 15123  174D  0DE7               	rlf	___fldiv@b+3,f
 15124  174E  0B89               	decfsz	9,f
 15125  174F  2F4A               	goto	u6265
 15126  1750  0021               	movlb	1	; select bank1
 15127  1751  1FD2               	btfss	(___fldiv@grs+3)^(0+128),7
 15128  1752  2F55               	goto	l5809
 15129  1753  0020               	movlb	0	; select bank0
 15130  1754  1464               	bsf	___fldiv@b,0
 15131  1755                     l5809:
 15132  1755  3001               	movlw	1
 15133  1756                     u6285:
 15134  1756  0021               	movlb	1	; select bank1
 15135  1757  35CF               	lslf	___fldiv@grs^(0+128),f
 15136  1758  0DD0               	rlf	(___fldiv@grs+1)^(0+128),f
 15137  1759  0DD1               	rlf	(___fldiv@grs+2)^(0+128),f
 15138  175A  0DD2               	rlf	(___fldiv@grs+3)^(0+128),f
 15139  175B  0B89               	decfsz	9,f
 15140  175C  2F56               	goto	u6285
 15141  175D  30FF               	movlw	255
 15142  175E  07CD               	addwf	___fldiv@new_exp^(0+128),f
 15143  175F  30FF               	movlw	255
 15144  1760  3DCE               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 15145  1761  2F46               	goto	l5813
 15146  1762                     l5815:
 15147  1762  0021               	movlb	1	; select bank1
 15148  1763  01D4               	clrf	___fldiv@aexp^(0+128)
 15149  1764  1FD2               	btfss	(___fldiv@grs+3)^(0+128),7
 15150  1765  2F84               	goto	l5825
 15151  1766  30FF               	movlw	255
 15152  1767  054F               	andwf	___fldiv@grs^(0+128),w
 15153  1768  0020               	movlb	0	; select bank0
 15154  1769  00E8               	movwf	??___fldiv
 15155  176A  30FF               	movlw	255
 15156  176B  0021               	movlb	1	; select bank1
 15157  176C  0550               	andwf	(___fldiv@grs+1)^(0+128),w
 15158  176D  0020               	movlb	0	; select bank0
 15159  176E  00E9               	movwf	??___fldiv+1
 15160  176F  30FF               	movlw	255
 15161  1770  0021               	movlb	1	; select bank1
 15162  1771  0551               	andwf	(___fldiv@grs+2)^(0+128),w
 15163  1772  0020               	movlb	0	; select bank0
 15164  1773  00EA               	movwf	??___fldiv+2
 15165  1774  307F               	movlw	127
 15166  1775  0021               	movlb	1	; select bank1
 15167  1776  0552               	andwf	(___fldiv@grs+3)^(0+128),w
 15168  1777  0020               	movlb	0	; select bank0
 15169  1778  00EB               	movwf	??___fldiv+3
 15170  1779  086B               	movf	??___fldiv+3,w
 15171  177A  046A               	iorwf	??___fldiv+2,w
 15172  177B  0469               	iorwf	??___fldiv+1,w
 15173  177C  0468               	iorwf	??___fldiv,w
 15174  177D  1903               	skipnz
 15175  177E  1864               	btfsc	___fldiv@b,0
 15176  177F  2F81               	goto	l5821
 15177  1780  2F84               	goto	l5825
 15178  1781                     l5821:
 15179  1781  0021               	movlb	1	; select bank1
 15180  1782  01D4               	clrf	___fldiv@aexp^(0+128)
 15181  1783  0AD4               	incf	___fldiv@aexp^(0+128),f
 15182  1784                     l5825:
 15183  1784  0021               	movlb	1	; select bank1
 15184  1785  0854               	movf	___fldiv@aexp^(0+128),w
 15185  1786  1903               	btfsc	3,2
 15186  1787  2FB0               	goto	l5835
 15187  1788  3001               	movlw	1
 15188  1789  0020               	movlb	0	; select bank0
 15189  178A  07E4               	addwf	___fldiv@b,f
 15190  178B  3000               	movlw	0
 15191  178C  3DE5               	addwfc	___fldiv@b+1,f
 15192  178D  3000               	movlw	0
 15193  178E  3DE6               	addwfc	___fldiv@b+2,f
 15194  178F  3000               	movlw	0
 15195  1790  3DE7               	addwfc	___fldiv@b+3,f
 15196  1791  1C67               	btfss	___fldiv@b+3,0
 15197  1792  2FB0               	goto	l5835
 15198  1793  0864               	movf	___fldiv@b,w
 15199  1794  00E8               	movwf	??___fldiv
 15200  1795  0865               	movf	___fldiv@b+1,w
 15201  1796  00E9               	movwf	??___fldiv+1
 15202  1797  0866               	movf	___fldiv@b+2,w
 15203  1798  00EA               	movwf	??___fldiv+2
 15204  1799  0867               	movf	___fldiv@b+3,w
 15205  179A  00EB               	movwf	??___fldiv+3
 15206  179B  3001               	movlw	1
 15207  179C  00EC               	movwf	??___fldiv+4
 15208  179D                     u6355:
 15209  179D  37EB               	asrf	??___fldiv+3,f
 15210  179E  0CEA               	rrf	??___fldiv+2,f
 15211  179F  0CE9               	rrf	??___fldiv+1,f
 15212  17A0  0CE8               	rrf	??___fldiv,f
 15213  17A1  0BEC               	decfsz	??___fldiv+4,f
 15214  17A2  2F9D               	goto	u6355
 15215  17A3  086B               	movf	??___fldiv+3,w
 15216  17A4  00E7               	movwf	___fldiv@b+3
 15217  17A5  086A               	movf	??___fldiv+2,w
 15218  17A6  00E6               	movwf	___fldiv@b+2
 15219  17A7  0869               	movf	??___fldiv+1,w
 15220  17A8  00E5               	movwf	___fldiv@b+1
 15221  17A9  0868               	movf	??___fldiv,w
 15222  17AA  00E4               	movwf	___fldiv@b
 15223  17AB  3001               	movlw	1
 15224  17AC  0021               	movlb	1	; select bank1
 15225  17AD  07CD               	addwf	___fldiv@new_exp^(0+128),f
 15226  17AE  3000               	movlw	0
 15227  17AF  3DCE               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 15228  17B0                     l5835:
 15229  17B0  0021               	movlb	1	; select bank1
 15230  17B1  084E               	movf	(___fldiv@new_exp+1)^(0+128),w
 15231  17B2  3A80               	xorlw	128
 15232  17B3  0020               	movlb	0	; select bank0
 15233  17B4  00E8               	movwf	??___fldiv
 15234  17B5  3080               	movlw	128
 15235  17B6  0268               	subwf	??___fldiv,w
 15236  17B7  1D03               	skipz
 15237  17B8  2FBC               	goto	u6365
 15238  17B9  30FF               	movlw	255
 15239  17BA  0021               	movlb	1	; select bank1
 15240  17BB  024D               	subwf	___fldiv@new_exp^(0+128),w
 15241  17BC                     u6365:
 15242  17BC  1C03               	skipc
 15243  17BD  2FCC               	goto	l1749
 15244  17BE  30FF               	movlw	255
 15245  17BF  0021               	movlb	1	; select bank1
 15246  17C0  00CD               	movwf	___fldiv@new_exp^(0+128)
 15247  17C1  3000               	movlw	0
 15248  17C2  00CE               	movwf	(___fldiv@new_exp^(0+128)+1)
 15249  17C3  3000               	movlw	0
 15250  17C4  0020               	movlb	0	; select bank0
 15251  17C5  00E7               	movwf	___fldiv@b+3
 15252  17C6  3000               	movlw	0
 15253  17C7  00E6               	movwf	___fldiv@b+2
 15254  17C8  3000               	movlw	0
 15255  17C9  00E5               	movwf	___fldiv@b+1
 15256  17CA  3000               	movlw	0
 15257  17CB  00E4               	movwf	___fldiv@b
 15258  17CC                     l1749:
 15259  17CC  0021               	movlb	1	; select bank1
 15260  17CD  084E               	movf	(___fldiv@new_exp+1)^(0+128),w
 15261  17CE  3A80               	xorlw	128
 15262  17CF  0020               	movlb	0	; select bank0
 15263  17D0  00E8               	movwf	??___fldiv
 15264  17D1  3080               	movlw	128
 15265  17D2  0268               	subwf	??___fldiv,w
 15266  17D3  1D03               	skipz
 15267  17D4  2FD8               	goto	u6375
 15268  17D5  3001               	movlw	1
 15269  17D6  0021               	movlb	1	; select bank1
 15270  17D7  024D               	subwf	___fldiv@new_exp^(0+128),w
 15271  17D8                     u6375:
 15272  17D8  1803               	skipnc
 15273  17D9  2FE8               	goto	l1750
 15274  17DA  0021               	movlb	1	; select bank1
 15275  17DB  01CD               	clrf	___fldiv@new_exp^(0+128)
 15276  17DC  01CE               	clrf	(___fldiv@new_exp+1)^(0+128)
 15277  17DD  3000               	movlw	0
 15278  17DE  0020               	movlb	0	; select bank0
 15279  17DF  00E7               	movwf	___fldiv@b+3
 15280  17E0  3000               	movlw	0
 15281  17E1  00E6               	movwf	___fldiv@b+2
 15282  17E2  3000               	movlw	0
 15283  17E3  00E5               	movwf	___fldiv@b+1
 15284  17E4  3000               	movlw	0
 15285  17E5  00E4               	movwf	___fldiv@b
 15286  17E6  0021               	movlb	1	; select bank1
 15287  17E7  01CC               	clrf	___fldiv@sign^(0+128)
 15288  17E8                     l1750:
 15289  17E8  0021               	movlb	1	; select bank1
 15290  17E9  084D               	movf	___fldiv@new_exp^(0+128),w
 15291  17EA  0020               	movlb	0	; select bank0
 15292  17EB  00E8               	movwf	??___fldiv
 15293  17EC  0868               	movf	??___fldiv,w
 15294  17ED  0021               	movlb	1	; select bank1
 15295  17EE  00D3               	movwf	___fldiv@bexp^(0+128)
 15296  17EF  1C53               	btfss	___fldiv@bexp^(0+128),0
 15297  17F0  2FF4               	goto	l5849
 15298  17F1  0020               	movlb	0	; select bank0
 15299  17F2  17E6               	bsf	___fldiv@b+2,7
 15300  17F3  2FF9               	goto	l1752
 15301  17F4                     l5849:
 15302  17F4  307F               	movlw	127
 15303  17F5  0020               	movlb	0	; select bank0
 15304  17F6  00E8               	movwf	??___fldiv
 15305  17F7  0868               	movf	??___fldiv,w
 15306  17F8  05E6               	andwf	___fldiv@b+2,f
 15307  17F9                     l1752:
 15308  17F9  0021               	movlb	1	; select bank1
 15309  17FA  3653               	lsrf	___fldiv@bexp^(0+128),w
 15310  17FB  0020               	movlb	0	; select bank0
 15311  17FC  00E8               	movwf	??___fldiv
 15312  17FD  0868               	movf	??___fldiv,w
 15313  17FE  00E7               	movwf	___fldiv@b+3
 15314  17FF  2E97               	goto	L6
 15315  1800                     __end_of___fldiv:
 15316                           
 15317                           	psect	text72
 15318  1B06                     __ptext72:	
 15319 ;; *************** function _StartStop_Buzzer *****************
 15320 ;; Defined at:
 15321 ;;		line 332 in file "main.c"
 15322 ;; Parameters:    Size  Location     Type
 15323 ;;  OnOff           1    wreg     _Bool 
 15324 ;; Auto vars:     Size  Location     Type
 15325 ;;  OnOff           1    2[COMMON] _Bool 
 15326 ;; Return value:  Size  Location     Type
 15327 ;;                  1    wreg      void 
 15328 ;; Registers used:
 15329 ;;		wreg, status,2, status,0
 15330 ;; Tracked objects:
 15331 ;;		On entry : 0/2
 15332 ;;		On exit  : 1F/2
 15333 ;;		Unchanged: 0/0
 15334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15336 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15338 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15339 ;;Total ram usage:        1 bytes
 15340 ;; Hardware stack levels used:    1
 15341 ;; Hardware stack levels required when called:    5
 15342 ;; This function calls:
 15343 ;;		Nothing
 15344 ;; This function is called by:
 15345 ;;		_Init_Function
 15346 ;;		_Config_Heater
 15347 ;; This function uses a non-reentrant model
 15348 ;;
 15349                           
 15350                           
 15351                           ;psect for function _StartStop_Buzzer
 15352  1B06                     _StartStop_Buzzer:
 15353                           
 15354                           ;incstack = 0
 15355                           ; Regs used in _StartStop_Buzzer: [wreg+status,2+status,0]
 15356                           ;StartStop_Buzzer@OnOff stored from wreg
 15357  1B06  00F2               	movwf	StartStop_Buzzer@OnOff
 15358                           
 15359                           ;main.c: 334:     if (1 == OnOff){
 15360  1B07  0372               	decf	StartStop_Buzzer@OnOff,w
 15361  1B08  1D03               	btfss	3,2
 15362  1B09  2B0D               	goto	l1066
 15363                           
 15364                           ;main.c: 336:         do { LATCbits.LATC4 = 1; } while(0);
 15365  1B0A  0022               	movlb	2	; select bank2
 15366  1B0B  160E               	bsf	14,4	;volatile
 15367  1B0C  0008               	return
 15368  1B0D                     l1066:	
 15369                           ;main.c: 340:         do { LATCbits.LATC4 = 0; } while(0);
 15370                           
 15371  1B0D  0022               	movlb	2	; select bank2
 15372  1B0E  120E               	bcf	14,4	;volatile
 15373  1B0F  0008               	return
 15374  1B10                     __end_of_StartStop_Buzzer:
 15375                           
 15376                           	psect	text73
 15377  1B5C                     __ptext73:	
 15378 ;; *************** function _StartStop_AlarmLED_Blink *****************
 15379 ;; Defined at:
 15380 ;;		line 304 in file "main.c"
 15381 ;; Parameters:    Size  Location     Type
 15382 ;;  OnOff           1    wreg     _Bool 
 15383 ;; Auto vars:     Size  Location     Type
 15384 ;;  OnOff           1    2[COMMON] _Bool 
 15385 ;; Return value:  Size  Location     Type
 15386 ;;                  1    wreg      void 
 15387 ;; Registers used:
 15388 ;;		wreg, status,2, status,0, pclath, cstack
 15389 ;; Tracked objects:
 15390 ;;		On entry : 1F/2
 15391 ;;		On exit  : 15/0
 15392 ;;		Unchanged: 0/0
 15393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15395 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15397 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15398 ;;Total ram usage:        1 bytes
 15399 ;; Hardware stack levels used:    1
 15400 ;; Hardware stack levels required when called:    6
 15401 ;; This function calls:
 15402 ;;		_TMR4_StartTimer
 15403 ;;		_TMR4_StopTimer
 15404 ;; This function is called by:
 15405 ;;		_Init_Function
 15406 ;;		_Config_Heater
 15407 ;; This function uses a non-reentrant model
 15408 ;;
 15409                           
 15410                           
 15411                           ;psect for function _StartStop_AlarmLED_Blink
 15412  1B5C                     _StartStop_AlarmLED_Blink:
 15413                           
 15414                           ;incstack = 0
 15415                           ; Regs used in _StartStop_AlarmLED_Blink: [wreg+status,2+status,0+pclath+cstack]
 15416                           ;StartStop_AlarmLED_Blink@OnOff stored from wreg
 15417  1B5C  00F2               	movwf	StartStop_AlarmLED_Blink@OnOff
 15418                           
 15419                           ;main.c: 306:     if (1 == OnOff){
 15420  1B5D  0372               	decf	StartStop_AlarmLED_Blink@OnOff,w
 15421  1B5E  1D03               	btfss	3,2
 15422  1B5F  2B63               	goto	l4937
 15423                           
 15424                           ;main.c: 308:         TMR4_StartTimer();
 15425  1B60  319A  228D         	fcall	_TMR4_StartTimer
 15426                           
 15427                           ;main.c: 309:     }
 15428  1B62  0008               	return
 15429  1B63                     l4937:
 15430                           
 15431                           ;main.c: 312:         TMR4_StopTimer();
 15432  1B63  319A  2290         	fcall	_TMR4_StopTimer
 15433  1B65  0022               	movlb	2	; select bank2
 15434  1B66  110E               	bcf	14,2	;volatile
 15435  1B67  0008               	return
 15436  1B68                     __end_of_StartStop_AlarmLED_Blink:
 15437                           
 15438                           	psect	text74
 15439  1A90                     __ptext74:	
 15440 ;; *************** function _TMR4_StopTimer *****************
 15441 ;; Defined at:
 15442 ;;		line 93 in file "mcc_generated_files/tmr4.c"
 15443 ;; Parameters:    Size  Location     Type
 15444 ;;		None
 15445 ;; Auto vars:     Size  Location     Type
 15446 ;;		None
 15447 ;; Return value:  Size  Location     Type
 15448 ;;                  1    wreg      void 
 15449 ;; Registers used:
 15450 ;;		None
 15451 ;; Tracked objects:
 15452 ;;		On entry : 1F/2
 15453 ;;		On exit  : 1F/8
 15454 ;;		Unchanged: 0/0
 15455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15460 ;;Total ram usage:        0 bytes
 15461 ;; Hardware stack levels used:    1
 15462 ;; Hardware stack levels required when called:    5
 15463 ;; This function calls:
 15464 ;;		Nothing
 15465 ;; This function is called by:
 15466 ;;		_StartStop_AlarmLED_Blink
 15467 ;; This function uses a non-reentrant model
 15468 ;;
 15469                           
 15470                           
 15471                           ;psect for function _TMR4_StopTimer
 15472  1A90                     _TMR4_StopTimer:
 15473                           
 15474                           ;mcc_generated_files/tmr4.c: 96:     T4CONbits.TMR4ON = 0;
 15475                           
 15476                           ;incstack = 0
 15477                           ; Regs used in _TMR4_StopTimer: []
 15478  1A90  0028               	movlb	8	; select bank8
 15479  1A91  1117               	bcf	23,2	;volatile
 15480  1A92  0008               	return
 15481  1A93                     __end_of_TMR4_StopTimer:
 15482                           
 15483                           	psect	text75
 15484  1A8D                     __ptext75:	
 15485 ;; *************** function _TMR4_StartTimer *****************
 15486 ;; Defined at:
 15487 ;;		line 87 in file "mcc_generated_files/tmr4.c"
 15488 ;; Parameters:    Size  Location     Type
 15489 ;;		None
 15490 ;; Auto vars:     Size  Location     Type
 15491 ;;		None
 15492 ;; Return value:  Size  Location     Type
 15493 ;;                  1    wreg      void 
 15494 ;; Registers used:
 15495 ;;		None
 15496 ;; Tracked objects:
 15497 ;;		On entry : 1F/2
 15498 ;;		On exit  : 1F/8
 15499 ;;		Unchanged: 0/0
 15500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15505 ;;Total ram usage:        0 bytes
 15506 ;; Hardware stack levels used:    1
 15507 ;; Hardware stack levels required when called:    5
 15508 ;; This function calls:
 15509 ;;		Nothing
 15510 ;; This function is called by:
 15511 ;;		_StartStop_AlarmLED_Blink
 15512 ;; This function uses a non-reentrant model
 15513 ;;
 15514                           
 15515                           
 15516                           ;psect for function _TMR4_StartTimer
 15517  1A8D                     _TMR4_StartTimer:
 15518                           
 15519                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
 15520                           
 15521                           ;incstack = 0
 15522                           ; Regs used in _TMR4_StartTimer: []
 15523  1A8D  0028               	movlb	8	; select bank8
 15524  1A8E  1517               	bsf	23,2	;volatile
 15525  1A8F  0008               	return
 15526  1A90                     __end_of_TMR4_StartTimer:
 15527                           
 15528                           	psect	intentry
 15529  0004                     __pintentry:	
 15530 ;; *************** function _INTERRUPT_InterruptManager *****************
 15531 ;; Defined at:
 15532 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15533 ;; Parameters:    Size  Location     Type
 15534 ;;		None
 15535 ;; Auto vars:     Size  Location     Type
 15536 ;;		None
 15537 ;; Return value:  Size  Location     Type
 15538 ;;                  1    wreg      void 
 15539 ;; Registers used:
 15540 ;;		wreg, status,2, status,0, pclath, cstack
 15541 ;; Tracked objects:
 15542 ;;		On entry : 0/0
 15543 ;;		On exit  : 0/0
 15544 ;;		Unchanged: 0/0
 15545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15550 ;;Total ram usage:        0 bytes
 15551 ;; Hardware stack levels used:    1
 15552 ;; Hardware stack levels required when called:    4
 15553 ;; This function calls:
 15554 ;;		_PIN_MANAGER_IOC
 15555 ;;		_TMR1_ISR
 15556 ;;		_TMR2_ISR
 15557 ;;		_TMR4_ISR
 15558 ;; This function is called by:
 15559 ;;		Interrupt level 1
 15560 ;; This function uses a non-reentrant model
 15561 ;;
 15562                           
 15563  0004                     _INTERRUPT_InterruptManager:
 15564                           
 15565                           ;incstack = 0
 15566  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 15567                           
 15568                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 15569  0005  3180               	pagesel	$
 15570                           
 15571                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
 15572  0006  198B               	btfsc	11,3	;volatile
 15573  0007  1C0B               	btfss	11,0	;volatile
 15574  0008  280D               	goto	i1l754
 15575                           
 15576                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 15577  0009  319A  22B3  3180   	fcall	_PIN_MANAGER_IOC
 15578                           
 15579                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 15580  000C  282B               	goto	i1l764
 15581  000D                     i1l754:	
 15582                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 15583                           
 15584  000D  1F0B               	btfss	11,6	;volatile
 15585  000E  282B               	goto	i1l764
 15586                           
 15587                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TMR4IE == 1 && PIR3bits.TMR4IF == 1)
 15588  000F  0021               	movlb	1	; select bank1
 15589  0010  1C93               	btfss	19,1	;volatile
 15590  0011  2819               	goto	i1l757
 15591  0012  0020               	movlb	0	; select bank0
 15592  0013  1C93               	btfss	19,1	;volatile
 15593  0014  2819               	goto	i1l757
 15594                           
 15595                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR4_ISR();
 15596  0015  319B  2350  3180   	fcall	_TMR4_ISR
 15597                           
 15598                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 15599  0018  282B               	goto	i1l764
 15600  0019                     i1l757:	
 15601                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TMR2IE == 1 && PI
      +                          R1bits.TMR2IF == 1)
 15602                           
 15603  0019  0021               	movlb	1	; select bank1
 15604  001A  1C91               	btfss	17,1	;volatile
 15605  001B  2823               	goto	i1l759
 15606  001C  0020               	movlb	0	; select bank0
 15607  001D  1C91               	btfss	17,1	;volatile
 15608  001E  2823               	goto	i1l759
 15609                           
 15610                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR2_ISR();
 15611  001F  319B  2344  3180   	fcall	_TMR2_ISR
 15612                           
 15613                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 15614  0022  282B               	goto	i1l764
 15615  0023                     i1l759:	
 15616                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
 15617                           
 15618  0023  0021               	movlb	1	; select bank1
 15619  0024  1C11               	btfss	17,0	;volatile
 15620  0025  282B               	goto	i1l764
 15621  0026  0020               	movlb	0	; select bank0
 15622  0027  1C11               	btfss	17,0	;volatile
 15623  0028  282B               	goto	i1l764
 15624                           
 15625                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR1_ISR();
 15626  0029  3187  27EC         	fcall	_TMR1_ISR
 15627  002B                     i1l764:	
 15628                           ;mcc_generated_files/interrupt_manager.c: 77:     }
 15629                           
 15630                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 15631                           
 15632  002B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 15633  002C  0009               	retfie
 15634  002D                     __end_of_INTERRUPT_InterruptManager:
 15635                           
 15636                           	psect	text77
 15637  1B50                     __ptext77:	
 15638 ;; *************** function _TMR4_ISR *****************
 15639 ;; Defined at:
 15640 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 15641 ;; Parameters:    Size  Location     Type
 15642 ;;		None
 15643 ;; Auto vars:     Size  Location     Type
 15644 ;;		None
 15645 ;; Return value:  Size  Location     Type
 15646 ;;                  1    wreg      void 
 15647 ;; Registers used:
 15648 ;;		wreg, status,2, status,0, pclath, cstack
 15649 ;; Tracked objects:
 15650 ;;		On entry : 1F/0
 15651 ;;		On exit  : 0/0
 15652 ;;		Unchanged: 0/0
 15653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15658 ;;Total ram usage:        0 bytes
 15659 ;; Hardware stack levels used:    1
 15660 ;; Hardware stack levels required when called:    1
 15661 ;; This function calls:
 15662 ;;		Absolute function
 15663 ;;		_TMR4_DefaultInterruptHandler
 15664 ;;		_TMR4_Wroking_Blink_AlarmLED_isr
 15665 ;; This function is called by:
 15666 ;;		_INTERRUPT_InterruptManager
 15667 ;; This function uses a non-reentrant model
 15668 ;;
 15669                           
 15670                           
 15671                           ;psect for function _TMR4_ISR
 15672  1B50                     _TMR4_ISR:
 15673                           
 15674                           ;mcc_generated_files/tmr4.c: 123:     PIR3bits.TMR4IF = 0;
 15675                           
 15676                           ;incstack = 0
 15677                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 15678  1B50  1093               	bcf	19,1	;volatile
 15679                           
 15680                           ;mcc_generated_files/tmr4.c: 125:     if(TMR4_InterruptHandler)
 15681  1B51  0023               	movlb	3	; select bank3
 15682  1B52  0850               	movf	_TMR4_InterruptHandler^(0+384),w
 15683  1B53  0451               	iorwf	(_TMR4_InterruptHandler+1)^(0+384),w
 15684  1B54  1903               	btfsc	3,2
 15685  1B55  0008               	return
 15686                           
 15687                           ;mcc_generated_files/tmr4.c: 126:     {;mcc_generated_files/tmr4.c: 127:         TMR4_In
      +                          terruptHandler();
 15688  1B56  0851               	movf	(_TMR4_InterruptHandler+1)^(0+384),w
 15689  1B57  008A               	movwf	10
 15690  1B58  0850               	movf	_TMR4_InterruptHandler^(0+384),w
 15691  1B59  000A               	callw
 15692  1B5A  319B               	pagesel	$
 15693  1B5B  0008               	return
 15694  1B5C                     __end_of_TMR4_ISR:
 15695                           
 15696                           	psect	text78
 15697  0800                     __ptext78:	
 15698 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 15699 ;; Defined at:
 15700 ;;		line 136 in file "mcc_generated_files/tmr4.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;		None
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;		None
 15705 ;; Return value:  Size  Location     Type
 15706 ;;                  1    wreg      void 
 15707 ;; Registers used:
 15708 ;;		None
 15709 ;; Tracked objects:
 15710 ;;		On entry : 1F/3
 15711 ;;		On exit  : 1F/3
 15712 ;;		Unchanged: 1E/0
 15713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15718 ;;Total ram usage:        0 bytes
 15719 ;; Hardware stack levels used:    1
 15720 ;; This function calls:
 15721 ;;		Nothing
 15722 ;; This function is called by:
 15723 ;;		_TMR4_Initialize
 15724 ;;		_TMR4_ISR
 15725 ;; This function uses a non-reentrant model
 15726 ;;
 15727                           
 15728                           
 15729                           ;psect for function _TMR4_DefaultInterruptHandler
 15730  0800                     _TMR4_DefaultInterruptHandler:
 15731                           
 15732                           ;incstack = 0
 15733                           ; Regs used in _TMR4_DefaultInterruptHandler: []
 15734  0800  0008               	return
 15735  0801                     __end_of_TMR4_DefaultInterruptHandler:
 15736                           
 15737                           	psect	text79
 15738  1C94                     __ptext79:	
 15739 ;; *************** function _TMR4_Wroking_Blink_AlarmLED_isr *****************
 15740 ;; Defined at:
 15741 ;;		line 277 in file "main.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;		None
 15744 ;; Auto vars:     Size  Location     Type
 15745 ;;		None
 15746 ;; Return value:  Size  Location     Type
 15747 ;;                  1    wreg      void 
 15748 ;; Registers used:
 15749 ;;		wreg, status,2, status,0
 15750 ;; Tracked objects:
 15751 ;;		On entry : 1F/3
 15752 ;;		On exit  : 1F/2
 15753 ;;		Unchanged: 0/0
 15754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15759 ;;Total ram usage:        0 bytes
 15760 ;; Hardware stack levels used:    1
 15761 ;; This function calls:
 15762 ;;		Nothing
 15763 ;; This function is called by:
 15764 ;;		_main
 15765 ;;		_TMR4_ISR
 15766 ;; This function uses a non-reentrant model
 15767 ;;
 15768                           
 15769                           
 15770                           ;psect for function _TMR4_Wroking_Blink_AlarmLED_isr
 15771  1C94                     _TMR4_Wroking_Blink_AlarmLED_isr:
 15772                           
 15773                           ;main.c: 279:     static uint16_t counter_tmr4 = 0;;main.c: 280:     counter_tmr4 ++;
 15774                           
 15775                           ;incstack = 0
 15776                           ; Regs used in _TMR4_Wroking_Blink_AlarmLED_isr: [wreg+status,2+status,0]
 15777  1C94  3001               	movlw	1
 15778  1C95  0022               	movlb	2	; select bank2
 15779  1C96  07CD               	addwf	TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4^(0+256),f
 15780  1C97  3000               	movlw	0
 15781  1C98  3DCE               	addwfc	(TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4+1)^(0+256),f
 15782                           
 15783                           ;main.c: 282:     if(counter_tmr4 >= 1000){
 15784  1C99  3003               	movlw	3
 15785  1C9A  024E               	subwf	(TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4+1)^(0+256),w
 15786  1C9B  30E8               	movlw	232
 15787  1C9C  1903               	skipnz
 15788  1C9D  024D               	subwf	TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4^(0+256),w
 15789  1C9E  1C03               	skipc
 15790  1C9F  0008               	return
 15791                           
 15792                           ;main.c: 284:         counter_tmr4 = 0;
 15793  1CA0  01CD               	clrf	TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4^(0+256)
 15794  1CA1  01CE               	clrf	(TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4+1)^(0+256)
 15795  1CA2  1003               	clrc
 15796  1CA3  1D0E               	btfss	14,2	;volatile
 15797  1CA4  1403               	setc
 15798  1CA5  1C03               	btfss	3,0
 15799  1CA6  2CAA               	goto	u510_20
 15800  1CA7  0022               	movlb	2	; select bank2
 15801  1CA8  150E               	bsf	14,2	;volatile
 15802  1CA9  0008               	return
 15803  1CAA                     u510_20:
 15804  1CAA  0022               	movlb	2	; select bank2
 15805  1CAB  110E               	bcf	14,2	;volatile
 15806  1CAC  0008               	return
 15807  1CAD                     __end_of_TMR4_Wroking_Blink_AlarmLED_isr:
 15808                           
 15809                           	psect	text80
 15810  1B44                     __ptext80:	
 15811 ;; *************** function _TMR2_ISR *****************
 15812 ;; Defined at:
 15813 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 15814 ;; Parameters:    Size  Location     Type
 15815 ;;		None
 15816 ;; Auto vars:     Size  Location     Type
 15817 ;;		None
 15818 ;; Return value:  Size  Location     Type
 15819 ;;                  1    wreg      void 
 15820 ;; Registers used:
 15821 ;;		wreg, status,2, status,0, pclath, cstack
 15822 ;; Tracked objects:
 15823 ;;		On entry : 1F/0
 15824 ;;		On exit  : 0/0
 15825 ;;		Unchanged: 0/0
 15826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15831 ;;Total ram usage:        0 bytes
 15832 ;; Hardware stack levels used:    1
 15833 ;; Hardware stack levels required when called:    2
 15834 ;; This function calls:
 15835 ;;		Absolute function
 15836 ;;		_TMR2_DefaultInterruptHandler
 15837 ;;		_TMR2_Drive_TRIAC_isr
 15838 ;; This function is called by:
 15839 ;;		_INTERRUPT_InterruptManager
 15840 ;; This function uses a non-reentrant model
 15841 ;;
 15842                           
 15843                           
 15844                           ;psect for function _TMR2_ISR
 15845  1B44                     _TMR2_ISR:
 15846                           
 15847                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
 15848                           
 15849                           ;incstack = 0
 15850                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 15851  1B44  1091               	bcf	17,1	;volatile
 15852                           
 15853                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
 15854  1B45  0023               	movlb	3	; select bank3
 15855  1B46  0852               	movf	_TMR2_InterruptHandler^(0+384),w
 15856  1B47  0453               	iorwf	(_TMR2_InterruptHandler+1)^(0+384),w
 15857  1B48  1903               	btfsc	3,2
 15858  1B49  0008               	return
 15859                           
 15860                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
 15861  1B4A  0853               	movf	(_TMR2_InterruptHandler+1)^(0+384),w
 15862  1B4B  008A               	movwf	10
 15863  1B4C  0852               	movf	_TMR2_InterruptHandler^(0+384),w
 15864  1B4D  000A               	callw
 15865  1B4E  319B               	pagesel	$
 15866  1B4F  0008               	return
 15867  1B50                     __end_of_TMR2_ISR:
 15868                           
 15869                           	psect	text81
 15870  1000                     __ptext81:	
 15871 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 15872 ;; Defined at:
 15873 ;;		line 136 in file "mcc_generated_files/tmr2.c"
 15874 ;; Parameters:    Size  Location     Type
 15875 ;;		None
 15876 ;; Auto vars:     Size  Location     Type
 15877 ;;		None
 15878 ;; Return value:  Size  Location     Type
 15879 ;;                  1    wreg      void 
 15880 ;; Registers used:
 15881 ;;		None
 15882 ;; Tracked objects:
 15883 ;;		On entry : 1F/3
 15884 ;;		On exit  : 1F/3
 15885 ;;		Unchanged: 1E/0
 15886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15891 ;;Total ram usage:        0 bytes
 15892 ;; Hardware stack levels used:    1
 15893 ;; This function calls:
 15894 ;;		Nothing
 15895 ;; This function is called by:
 15896 ;;		_TMR2_Initialize
 15897 ;;		_TMR2_ISR
 15898 ;; This function uses a non-reentrant model
 15899 ;;
 15900                           
 15901                           
 15902                           ;psect for function _TMR2_DefaultInterruptHandler
 15903  1000                     _TMR2_DefaultInterruptHandler:
 15904                           
 15905                           ;incstack = 0
 15906                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 15907  1000  0008               	return
 15908  1001                     __end_of_TMR2_DefaultInterruptHandler:
 15909                           
 15910                           	psect	text82
 15911  1D71                     __ptext82:	
 15912 ;; *************** function _TMR2_Drive_TRIAC_isr *****************
 15913 ;; Defined at:
 15914 ;;		line 249 in file "main.c"
 15915 ;; Parameters:    Size  Location     Type
 15916 ;;		None
 15917 ;; Auto vars:     Size  Location     Type
 15918 ;;		None
 15919 ;; Return value:  Size  Location     Type
 15920 ;;                  1    wreg      void 
 15921 ;; Registers used:
 15922 ;;		wreg, status,2, status,0, pclath, cstack
 15923 ;; Tracked objects:
 15924 ;;		On entry : 1F/3
 15925 ;;		On exit  : 1D/0
 15926 ;;		Unchanged: 0/0
 15927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15932 ;;Total ram usage:        0 bytes
 15933 ;; Hardware stack levels used:    1
 15934 ;; Hardware stack levels required when called:    1
 15935 ;; This function calls:
 15936 ;;		_TMR2_StopTimer
 15937 ;; This function is called by:
 15938 ;;		_main
 15939 ;;		_TMR2_ISR
 15940 ;; This function uses a non-reentrant model
 15941 ;;
 15942                           
 15943                           
 15944                           ;psect for function _TMR2_Drive_TRIAC_isr
 15945  1D71                     _TMR2_Drive_TRIAC_isr:
 15946                           
 15947                           ;main.c: 251:     static uint16_t counter_tmr2 = 0;;main.c: 253:     if (1 == DimmerStat
      +                          usFlag_g){
 15948                           
 15949                           ;incstack = 0
 15950                           ; Regs used in _TMR2_Drive_TRIAC_isr: [wreg+status,2+status,0+pclath+cstack]
 15951  1D71  0022               	movlb	2	; select bank2
 15952  1D72  035B               	decf	_DimmerStatusFlag_g^(0+256),w
 15953  1D73  1D03               	btfss	3,2
 15954  1D74  2D90               	goto	i1l5001
 15955                           
 15956                           ;main.c: 255:         counter_tmr2 ++;
 15957  1D75  3001               	movlw	1
 15958  1D76  07CF               	addwf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+256),f
 15959  1D77  3000               	movlw	0
 15960  1D78  3DD0               	addwfc	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+256),f
 15961                           
 15962                           ;main.c: 257:         if(counter_tmr2 >= tmr2_required_counter_steps_g){
 15963  1D79  0854               	movf	(_tmr2_required_counter_steps_g+1)^(0+256),w
 15964  1D7A  0250               	subwf	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+256),w
 15965  1D7B  1D03               	skipz
 15966  1D7C  2D7F               	goto	u507_25
 15967  1D7D  0853               	movf	_tmr2_required_counter_steps_g^(0+256),w
 15968  1D7E  024F               	subwf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+256),w
 15969  1D7F                     u507_25:
 15970  1D7F  1C03               	skipc
 15971  1D80  2D85               	goto	i1l1018
 15972                           
 15973                           ;main.c: 259:             counter_tmr2 = 0;
 15974  1D81  01CF               	clrf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+256)
 15975  1D82  01D0               	clrf	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+256)
 15976  1D83  168E               	bsf	14,5	;volatile
 15977  1D84  0008               	return
 15978  1D85                     i1l1018:	
 15979                           ;main.c: 263:         else if (1 == PORTCbits.RC5){
 15980                           
 15981  1D85  0020               	movlb	0	; select bank0
 15982  1D86  1E8E               	btfss	14,5	;volatile
 15983  1D87  0008               	return
 15984                           
 15985                           ;main.c: 265:             counter_tmr2 = 0;
 15986  1D88  0022               	movlb	2	; select bank2
 15987  1D89  01CF               	clrf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+256)
 15988  1D8A  01D0               	clrf	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+256)
 15989                           
 15990                           ;main.c: 266:             TMR2_StopTimer();
 15991  1D8B  319A  228A         	fcall	_TMR2_StopTimer
 15992  1D8D  0022               	movlb	2	; select bank2
 15993  1D8E  128E               	bcf	14,5	;volatile
 15994  1D8F  0008               	return
 15995  1D90                     i1l5001:
 15996                           
 15997                           ;main.c: 272:         counter_tmr2 = 0;
 15998  1D90  01CF               	clrf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+256)
 15999  1D91  01D0               	clrf	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+256)
 16000  1D92  0008               	return
 16001  1D93                     __end_of_TMR2_Drive_TRIAC_isr:
 16002                           
 16003                           	psect	text83
 16004  1A8A                     __ptext83:	
 16005 ;; *************** function _TMR2_StopTimer *****************
 16006 ;; Defined at:
 16007 ;;		line 93 in file "mcc_generated_files/tmr2.c"
 16008 ;; Parameters:    Size  Location     Type
 16009 ;;		None
 16010 ;; Auto vars:     Size  Location     Type
 16011 ;;		None
 16012 ;; Return value:  Size  Location     Type
 16013 ;;                  1    wreg      void 
 16014 ;; Registers used:
 16015 ;;		None
 16016 ;; Tracked objects:
 16017 ;;		On entry : 1F/2
 16018 ;;		On exit  : 1F/0
 16019 ;;		Unchanged: 0/0
 16020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16025 ;;Total ram usage:        0 bytes
 16026 ;; Hardware stack levels used:    1
 16027 ;; This function calls:
 16028 ;;		Nothing
 16029 ;; This function is called by:
 16030 ;;		_TMR2_Drive_TRIAC_isr
 16031 ;; This function uses a non-reentrant model
 16032 ;;
 16033                           
 16034                           
 16035                           ;psect for function _TMR2_StopTimer
 16036  1A8A                     _TMR2_StopTimer:
 16037                           
 16038                           ;mcc_generated_files/tmr2.c: 96:     T2CONbits.TMR2ON = 0;
 16039                           
 16040                           ;incstack = 0
 16041                           ; Regs used in _TMR2_StopTimer: []
 16042  1A8A  0020               	movlb	0	; select bank0
 16043  1A8B  111C               	bcf	28,2	;volatile
 16044  1A8C  0008               	return
 16045  1A8D                     __end_of_TMR2_StopTimer:
 16046                           
 16047                           	psect	text84
 16048  07EC                     __ptext84:	
 16049 ;; *************** function _TMR1_ISR *****************
 16050 ;; Defined at:
 16051 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 16052 ;; Parameters:    Size  Location     Type
 16053 ;;		None
 16054 ;; Auto vars:     Size  Location     Type
 16055 ;;		None
 16056 ;; Return value:  Size  Location     Type
 16057 ;;                  1    wreg      void 
 16058 ;; Registers used:
 16059 ;;		wreg, status,2, status,0, pclath, cstack
 16060 ;; Tracked objects:
 16061 ;;		On entry : 1F/0
 16062 ;;		On exit  : 0/0
 16063 ;;		Unchanged: 0/0
 16064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16069 ;;Total ram usage:        0 bytes
 16070 ;; Hardware stack levels used:    1
 16071 ;; Hardware stack levels required when called:    1
 16072 ;; This function calls:
 16073 ;;		Absolute function
 16074 ;;		_TMR1_DefaultInterruptHandler
 16075 ;;		_TMR1_Generate_Delay_ms_isr
 16076 ;;		_TMR1_WriteTimer
 16077 ;; This function is called by:
 16078 ;;		_INTERRUPT_InterruptManager
 16079 ;; This function uses a non-reentrant model
 16080 ;;
 16081                           
 16082                           
 16083                           ;psect for function _TMR1_ISR
 16084  07EC                     _TMR1_ISR:
 16085                           
 16086                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
 16087                           
 16088                           ;incstack = 0
 16089                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 16090  07EC  1011               	bcf	17,0	;volatile
 16091                           
 16092                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
 16093  07ED  0023               	movlb	3	; select bank3
 16094  07EE  084F               	movf	(_timer1ReloadVal+1)^(0+384),w	;volatile
 16095  07EF  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 16096  07F0  084E               	movf	_timer1ReloadVal^(0+384),w	;volatile
 16097  07F1  00F0               	movwf	TMR1_WriteTimer@timerVal
 16098  07F2  319B  238E  3187   	fcall	_TMR1_WriteTimer
 16099                           
 16100                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
 16101  07F5  0023               	movlb	3	; select bank3
 16102  07F6  084C               	movf	_TMR1_InterruptHandler^(0+384),w
 16103  07F7  044D               	iorwf	(_TMR1_InterruptHandler+1)^(0+384),w
 16104  07F8  1903               	btfsc	3,2
 16105  07F9  0008               	return
 16106                           
 16107                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
 16108  07FA  084D               	movf	(_TMR1_InterruptHandler+1)^(0+384),w
 16109  07FB  008A               	movwf	10
 16110  07FC  084C               	movf	_TMR1_InterruptHandler^(0+384),w
 16111  07FD  000A               	callw
 16112  07FE  3187               	pagesel	$
 16113  07FF  0008               	return
 16114  0800                     __end_of_TMR1_ISR:
 16115                           
 16116                           	psect	text85
 16117  1B8E                     __ptext85:	
 16118 ;; *************** function _TMR1_WriteTimer *****************
 16119 ;; Defined at:
 16120 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 16121 ;; Parameters:    Size  Location     Type
 16122 ;;  timerVal        2    0[COMMON] unsigned short 
 16123 ;; Auto vars:     Size  Location     Type
 16124 ;;		None
 16125 ;; Return value:  Size  Location     Type
 16126 ;;                  1    wreg      void 
 16127 ;; Registers used:
 16128 ;;		wreg
 16129 ;; Tracked objects:
 16130 ;;		On entry : 1F/3
 16131 ;;		On exit  : 1F/0
 16132 ;;		Unchanged: 0/0
 16133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16138 ;;Total ram usage:        2 bytes
 16139 ;; Hardware stack levels used:    1
 16140 ;; This function calls:
 16141 ;;		Nothing
 16142 ;; This function is called by:
 16143 ;;		_TMR1_ISR
 16144 ;; This function uses a non-reentrant model
 16145 ;;
 16146                           
 16147                           
 16148                           ;psect for function _TMR1_WriteTimer
 16149  1B8E                     _TMR1_WriteTimer:
 16150                           
 16151                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 16152                           
 16153                           ;incstack = 0
 16154                           ; Regs used in _TMR1_WriteTimer: [wreg]
 16155  1B8E  0020               	movlb	0	; select bank0
 16156  1B8F  1D18               	btfss	24,2	;volatile
 16157  1B90  2B98               	goto	i1l5017
 16158                           
 16159                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 16160  1B91  1018               	bcf	24,0	;volatile
 16161                           
 16162                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 16163  1B92  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16164  1B93  0097               	movwf	23	;volatile
 16165                           
 16166                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 16167  1B94  0870               	movf	TMR1_WriteTimer@timerVal,w
 16168  1B95  0096               	movwf	22	;volatile
 16169                           
 16170                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 16171  1B96  1418               	bsf	24,0	;volatile
 16172                           
 16173                           ;mcc_generated_files/tmr1.c: 133:     }
 16174  1B97  0008               	return
 16175  1B98                     i1l5017:
 16176                           
 16177                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 16178  1B98  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16179  1B99  0097               	movwf	23	;volatile
 16180                           
 16181                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 16182  1B9A  0870               	movf	TMR1_WriteTimer@timerVal,w
 16183  1B9B  0096               	movwf	22	;volatile
 16184  1B9C  0008               	return
 16185  1B9D                     __end_of_TMR1_WriteTimer:
 16186                           
 16187                           	psect	text86
 16188  1A86                     __ptext86:	
 16189 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 16190 ;; Defined at:
 16191 ;;		line 175 in file "mcc_generated_files/tmr1.c"
 16192 ;; Parameters:    Size  Location     Type
 16193 ;;		None
 16194 ;; Auto vars:     Size  Location     Type
 16195 ;;		None
 16196 ;; Return value:  Size  Location     Type
 16197 ;;                  1    wreg      void 
 16198 ;; Registers used:
 16199 ;;		None
 16200 ;; Tracked objects:
 16201 ;;		On entry : 1F/3
 16202 ;;		On exit  : 1F/3
 16203 ;;		Unchanged: 1E/0
 16204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16209 ;;Total ram usage:        0 bytes
 16210 ;; Hardware stack levels used:    1
 16211 ;; This function calls:
 16212 ;;		Nothing
 16213 ;; This function is called by:
 16214 ;;		_TMR1_Initialize
 16215 ;;		_TMR1_ISR
 16216 ;; This function uses a non-reentrant model
 16217 ;;
 16218                           
 16219                           
 16220                           ;psect for function _TMR1_DefaultInterruptHandler
 16221  1A86                     _TMR1_DefaultInterruptHandler:
 16222                           
 16223                           ;incstack = 0
 16224                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 16225  1A86  0008               	return
 16226  1A87                     __end_of_TMR1_DefaultInterruptHandler:
 16227                           
 16228                           	psect	text87
 16229  1AB9                     __ptext87:	
 16230 ;; *************** function _TMR1_Generate_Delay_ms_isr *****************
 16231 ;; Defined at:
 16232 ;;		line 243 in file "main.c"
 16233 ;; Parameters:    Size  Location     Type
 16234 ;;		None
 16235 ;; Auto vars:     Size  Location     Type
 16236 ;;		None
 16237 ;; Return value:  Size  Location     Type
 16238 ;;                  1    wreg      void 
 16239 ;; Registers used:
 16240 ;;		wreg
 16241 ;; Tracked objects:
 16242 ;;		On entry : 1F/3
 16243 ;;		On exit  : 1F/2
 16244 ;;		Unchanged: 0/0
 16245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16250 ;;Total ram usage:        0 bytes
 16251 ;; Hardware stack levels used:    1
 16252 ;; This function calls:
 16253 ;;		Nothing
 16254 ;; This function is called by:
 16255 ;;		_main
 16256 ;;		_TMR1_ISR
 16257 ;; This function uses a non-reentrant model
 16258 ;;
 16259                           
 16260                           
 16261                           ;psect for function _TMR1_Generate_Delay_ms_isr
 16262  1AB9                     _TMR1_Generate_Delay_ms_isr:
 16263                           
 16264                           ;main.c: 245:     ticker_g++;
 16265                           
 16266                           ;incstack = 0
 16267                           ; Regs used in _TMR1_Generate_Delay_ms_isr: [wreg]
 16268  1AB9  3001               	movlw	1
 16269  1ABA  0022               	movlb	2	; select bank2
 16270  1ABB  07D1               	addwf	_ticker_g^(0+256),f
 16271  1ABC  3000               	movlw	0
 16272  1ABD  3DD2               	addwfc	(_ticker_g+1)^(0+256),f
 16273  1ABE  0008               	return
 16274  1ABF                     __end_of_TMR1_Generate_Delay_ms_isr:
 16275                           
 16276                           	psect	text88
 16277  1AB3                     __ptext88:	
 16278 ;; *************** function _PIN_MANAGER_IOC *****************
 16279 ;; Defined at:
 16280 ;;		line 115 in file "mcc_generated_files/pin_manager.c"
 16281 ;; Parameters:    Size  Location     Type
 16282 ;;		None
 16283 ;; Auto vars:     Size  Location     Type
 16284 ;;		None
 16285 ;; Return value:  Size  Location     Type
 16286 ;;                  1    wreg      void 
 16287 ;; Registers used:
 16288 ;;		wreg, status,2, status,0, pclath, cstack
 16289 ;; Tracked objects:
 16290 ;;		On entry : 0/0
 16291 ;;		On exit  : 1F/7
 16292 ;;		Unchanged: 0/0
 16293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16298 ;;Total ram usage:        0 bytes
 16299 ;; Hardware stack levels used:    1
 16300 ;; Hardware stack levels required when called:    3
 16301 ;; This function calls:
 16302 ;;		_IOCAF2_ISR
 16303 ;; This function is called by:
 16304 ;;		_INTERRUPT_InterruptManager
 16305 ;; This function uses a non-reentrant model
 16306 ;;
 16307                           
 16308                           
 16309                           ;psect for function _PIN_MANAGER_IOC
 16310  1AB3                     _PIN_MANAGER_IOC:
 16311                           
 16312                           ;mcc_generated_files/pin_manager.c: 118:     if(IOCAFbits.IOCAF2 == 1)
 16313                           
 16314                           ;incstack = 0
 16315                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 16316  1AB3  0027               	movlb	7	; select bank7
 16317  1AB4  1D13               	btfss	19,2	;volatile
 16318  1AB5  0008               	return
 16319                           
 16320                           ;mcc_generated_files/pin_manager.c: 119:     {;mcc_generated_files/pin_manager.c: 120:  
      +                                 IOCAF2_ISR();
 16321  1AB6  319B  2374         	fcall	_IOCAF2_ISR
 16322  1AB8  0008               	return
 16323  1AB9                     __end_of_PIN_MANAGER_IOC:
 16324                           
 16325                           	psect	text89
 16326  1B74                     __ptext89:	
 16327 ;; *************** function _IOCAF2_ISR *****************
 16328 ;; Defined at:
 16329 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
 16330 ;; Parameters:    Size  Location     Type
 16331 ;;		None
 16332 ;; Auto vars:     Size  Location     Type
 16333 ;;		None
 16334 ;; Return value:  Size  Location     Type
 16335 ;;                  1    wreg      void 
 16336 ;; Registers used:
 16337 ;;		wreg, status,2, status,0, pclath, cstack
 16338 ;; Tracked objects:
 16339 ;;		On entry : 1F/7
 16340 ;;		On exit  : 1F/7
 16341 ;;		Unchanged: 0/0
 16342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16347 ;;Total ram usage:        0 bytes
 16348 ;; Hardware stack levels used:    1
 16349 ;; Hardware stack levels required when called:    2
 16350 ;; This function calls:
 16351 ;;		Absolute function
 16352 ;;		_IOCAF2_DefaultInterruptHandler
 16353 ;;		_Zero_Detection_isr
 16354 ;; This function is called by:
 16355 ;;		_PIN_MANAGER_IOC
 16356 ;; This function uses a non-reentrant model
 16357 ;;
 16358                           
 16359                           
 16360                           ;psect for function _IOCAF2_ISR
 16361  1B74                     _IOCAF2_ISR:
 16362                           
 16363                           ;mcc_generated_files/pin_manager.c: 132:     if(IOCAF2_InterruptHandler)
 16364                           
 16365                           ;incstack = 0
 16366                           ; Regs used in _IOCAF2_ISR: [wreg+status,2+status,0+pclath+cstack]
 16367  1B74  0023               	movlb	3	; select bank3
 16368  1B75  085A               	movf	_IOCAF2_InterruptHandler^(0+384),w
 16369  1B76  045B               	iorwf	(_IOCAF2_InterruptHandler+1)^(0+384),w
 16370  1B77  1903               	btfsc	3,2
 16371  1B78  2B7E               	goto	i1l4909
 16372                           
 16373                           ;mcc_generated_files/pin_manager.c: 133:     {;mcc_generated_files/pin_manager.c: 134:  
      +                                 IOCAF2_InterruptHandler();
 16374  1B79  085B               	movf	(_IOCAF2_InterruptHandler+1)^(0+384),w
 16375  1B7A  008A               	movwf	10
 16376  1B7B  085A               	movf	_IOCAF2_InterruptHandler^(0+384),w
 16377  1B7C  000A               	callw
 16378  1B7D  319B               	pagesel	$
 16379  1B7E                     i1l4909:
 16380                           
 16381                           ;mcc_generated_files/pin_manager.c: 136:     IOCAFbits.IOCAF2 = 0;
 16382  1B7E  0027               	movlb	7	; select bank7
 16383  1B7F  1113               	bcf	19,2	;volatile
 16384  1B80  0008               	return
 16385  1B81                     __end_of_IOCAF2_ISR:
 16386                           
 16387                           	psect	text90
 16388  1A85                     __ptext90:	
 16389 ;; *************** function _IOCAF2_DefaultInterruptHandler *****************
 16390 ;; Defined at:
 16391 ;;		line 149 in file "mcc_generated_files/pin_manager.c"
 16392 ;; Parameters:    Size  Location     Type
 16393 ;;		None
 16394 ;; Auto vars:     Size  Location     Type
 16395 ;;		None
 16396 ;; Return value:  Size  Location     Type
 16397 ;;                  1    wreg      void 
 16398 ;; Registers used:
 16399 ;;		None
 16400 ;; Tracked objects:
 16401 ;;		On entry : 1F/3
 16402 ;;		On exit  : 1F/3
 16403 ;;		Unchanged: 1E/0
 16404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16409 ;;Total ram usage:        0 bytes
 16410 ;; Hardware stack levels used:    1
 16411 ;; This function calls:
 16412 ;;		Nothing
 16413 ;; This function is called by:
 16414 ;;		_PIN_MANAGER_Initialize
 16415 ;;		_IOCAF2_ISR
 16416 ;; This function uses a non-reentrant model
 16417 ;;
 16418                           
 16419                           
 16420                           ;psect for function _IOCAF2_DefaultInterruptHandler
 16421  1A85                     _IOCAF2_DefaultInterruptHandler:
 16422                           
 16423                           ;incstack = 0
 16424                           ; Regs used in _IOCAF2_DefaultInterruptHandler: []
 16425  1A85  0008               	return
 16426  1A86                     __end_of_IOCAF2_DefaultInterruptHandler:
 16427                           
 16428                           	psect	text91
 16429  1AE9                     __ptext91:	
 16430 ;; *************** function _Zero_Detection_isr *****************
 16431 ;; Defined at:
 16432 ;;		line 230 in file "main.c"
 16433 ;; Parameters:    Size  Location     Type
 16434 ;;		None
 16435 ;; Auto vars:     Size  Location     Type
 16436 ;;		None
 16437 ;; Return value:  Size  Location     Type
 16438 ;;                  1    wreg      void 
 16439 ;; Registers used:
 16440 ;;		wreg, status,2, status,0, pclath, cstack
 16441 ;; Tracked objects:
 16442 ;;		On entry : 1F/3
 16443 ;;		On exit  : 1D/0
 16444 ;;		Unchanged: 0/0
 16445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16450 ;;Total ram usage:        0 bytes
 16451 ;; Hardware stack levels used:    1
 16452 ;; Hardware stack levels required when called:    1
 16453 ;; This function calls:
 16454 ;;		_TMR2_StartTimer
 16455 ;; This function is called by:
 16456 ;;		_main
 16457 ;;		_IOCAF2_ISR
 16458 ;; This function uses a non-reentrant model
 16459 ;;
 16460                           
 16461                           
 16462                           ;psect for function _Zero_Detection_isr
 16463  1AE9                     _Zero_Detection_isr:
 16464                           
 16465                           ;main.c: 235:     if (1 == DimmerStatusFlag_g){
 16466                           
 16467                           ;incstack = 0
 16468                           ; Regs used in _Zero_Detection_isr: [wreg+status,2+status,0+pclath+cstack]
 16469  1AE9  0022               	movlb	2	; select bank2
 16470  1AEA  035B               	decf	_DimmerStatusFlag_g^(0+256),w
 16471  1AEB  1D03               	btfss	3,2
 16472  1AEC  0008               	return
 16473                           
 16474                           ;main.c: 237:         TMR2_StartTimer();
 16475  1AED  319A  2287         	fcall	_TMR2_StartTimer
 16476  1AEF  0008               	return
 16477  1AF0                     __end_of_Zero_Detection_isr:
 16478                           
 16479                           	psect	text92
 16480  1A87                     __ptext92:	
 16481 ;; *************** function _TMR2_StartTimer *****************
 16482 ;; Defined at:
 16483 ;;		line 87 in file "mcc_generated_files/tmr2.c"
 16484 ;; Parameters:    Size  Location     Type
 16485 ;;		None
 16486 ;; Auto vars:     Size  Location     Type
 16487 ;;		None
 16488 ;; Return value:  Size  Location     Type
 16489 ;;                  1    wreg      void 
 16490 ;; Registers used:
 16491 ;;		None
 16492 ;; Tracked objects:
 16493 ;;		On entry : 1F/2
 16494 ;;		On exit  : 1F/0
 16495 ;;		Unchanged: 0/0
 16496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16501 ;;Total ram usage:        0 bytes
 16502 ;; Hardware stack levels used:    1
 16503 ;; This function calls:
 16504 ;;		Nothing
 16505 ;; This function is called by:
 16506 ;;		_Zero_Detection_isr
 16507 ;; This function uses a non-reentrant model
 16508 ;;
 16509                           
 16510                           
 16511                           ;psect for function _TMR2_StartTimer
 16512  1A87                     _TMR2_StartTimer:
 16513                           
 16514                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
 16515                           
 16516                           ;incstack = 0
 16517                           ; Regs used in _TMR2_StartTimer: []
 16518  1A87  0020               	movlb	0	; select bank0
 16519  1A88  151C               	bsf	28,2	;volatile
 16520  1A89  0008               	return
 16521  1A8A                     __end_of_TMR2_StartTimer:
 16522  007E                     btemp	set	126	;btemp
 16523  007E                     int$flags	set	126
 16524  007E                     wtemp0	set	126
 16525                           
 16526                           	psect	idloc
 16527                           
 16528                           ;Config register IDLOC0 @ 0x8000
 16529                           ;	unspecified, using default values
 16530  8000                     	org	32768
 16531  8000  3FFF               	dw	16383
 16532                           
 16533                           ;Config register IDLOC1 @ 0x8001
 16534                           ;	unspecified, using default values
 16535  8001                     	org	32769
 16536  8001  3FFF               	dw	16383
 16537                           
 16538                           ;Config register IDLOC2 @ 0x8002
 16539                           ;	unspecified, using default values
 16540  8002                     	org	32770
 16541  8002  3FFF               	dw	16383
 16542                           
 16543                           ;Config register IDLOC3 @ 0x8003
 16544                           ;	unspecified, using default values
 16545  8003                     	org	32771
 16546  8003  3FFF               	dw	16383
 16547                           
 16548                           	psect	config
 16549                           
 16550                           ;Config register CONFIG1 @ 0x8007
 16551                           ;	Oscillator Selection
 16552                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 16553                           ;	Watchdog Timer Enable
 16554                           ;	WDTE = OFF, WDT disabled
 16555                           ;	Power-up Timer Enable
 16556                           ;	PWRTE = OFF, PWRT disabled
 16557                           ;	MCLR Pin Function Select
 16558                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 16559                           ;	Flash Program Memory Code Protection
 16560                           ;	CP = OFF, Program memory code protection is disabled
 16561                           ;	Data Memory Code Protection
 16562                           ;	CPD = OFF, Data memory code protection is disabled
 16563                           ;	Brown-out Reset Enable
 16564                           ;	BOREN = NSLEEP, Brown-out Reset enabled while running and disabled in Sleep
 16565                           ;	Clock Out Enable
 16566                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 16567                           ;	Internal/External Switchover
 16568                           ;	IESO = ON, Internal/External Switchover mode is enabled
 16569                           ;	Fail-Safe Clock Monitor Enable
 16570                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 16571  8007                     	org	32775
 16572  8007  3DE4               	dw	15844
 16573                           
 16574                           ;Config register CONFIG2 @ 0x8008
 16575                           ;	Flash Memory Self-Write Protection
 16576                           ;	WRT = OFF, Write protection off
 16577                           ;	PLL Enable
 16578                           ;	PLLEN = OFF, 4x PLL disabled
 16579                           ;	Stack Overflow/Underflow Reset Enable
 16580                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 16581                           ;	Brown-out Reset Voltage Selection
 16582                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 16583                           ;	Low-Voltage Programming Enable
 16584                           ;	LVP = ON, Low-voltage programming enabled
 16585  8008                     	org	32776
 16586  8008  3EFF               	dw	16127

Data Sizes:
    Strings     12
    Constant    58
    Data        35
    BSS         120
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     79      80
    BANK2            80     35      79
    BANK3            80      0      60
    BANK4            80      0      64
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Button_Service$2976$0	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK4[32]), 

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_2(CODE[1]), 

    Button_StateMachine$0	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK4[32]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK4[32]), Buff_g(BANK3[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK4[32]), Buff_g(BANK3[20]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> Buff_g(BANK3[20]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> Buff_g(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2439_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> Buff_g(BANK3[20]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> Buff_g(BANK3[20]), 

    memcpy@d1	PTR void  size(1) Largest target is 32
		 -> mtouch_button(BANK4[32]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> mtouch_button(BANK4[32]), 

    memcpy@s1	PTR const void  size(2) Largest target is 32
		 -> mtouch_button_init(CODE[32]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 32
		 -> mtouch_button_init(CODE[32]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR1_Generate_Delay_ms_isr(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR1_Generate_Delay_ms_isr(), Absolute function(), 

    TX_Whole_String@input_string	PTR unsigned char  size(1) Largest target is 20
		 -> Buff_g(BANK3[20]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Wroking_Blink_AlarmLED_isr(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Wroking_Blink_AlarmLED_isr(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Drive_TRIAC_isr(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Drive_TRIAC_isr(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    IOCAF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Zero_Detection_isr(), IOCAF2_DefaultInterruptHandler(), 

    IOCAF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Zero_Detection_isr(), Absolute function(), IOCAF2_DefaultInterruptHandler(), 

    sp__memcpy	PTR void  size(1) Largest target is 32
		 -> mtouch_button(BANK4[32]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK4[32]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E2819,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E2819,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK3[18]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK3[18]), 

    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setScanFunction@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setScanFunction@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    S50$scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    S50$scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_scanB	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_scanA	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    callback_sampled	PTR FTN(enum E2661,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 


Critical Paths under _main in COMMON

    _vfpfcnvrt->_fputc
    _pad->_fputc
    _fputs->_fputc
    _abs->___aomod
    _TX_Whole_String->_strlen
    _TX_Command->_EUSART_Write
    _TX_Command->_EUSART_is_tx_ready
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF2_SetInterruptHandler
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Enable
    _MTOUCH_Sensor_Enable->___bmul
    _MTOUCH_Button_InitializeAll->_memcpy
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _Read_ADC_Num->_ADC_GetConversionResult
    _sqrtf->___flge
    _sqrtf->_nanf
    _ChangeADCtoVoltage->___xxtofl
    _get_delay->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _abs->___aomod
    _MTOUCH_Button_InitializeAll->_memcpy
    _Measure_Temp_PT100_2Wire->___fldiv
    _sqrtf->___fladd
    _Measure_R_PT100_2Wire->___fldiv
    _ChangeADCtoVoltage->___fldiv
    _Init_Function->_StartStop_Dimmer
    _Config_Heater->_StartStop_Dimmer
    _SetDimmer->___fltol
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___fldiv->_sqrtf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Config_Heater
    _Read_PT100_Temp->_Measure_Temp_PT100_2Wire
    _Measure_Temp_PT100_2Wire->___fldiv
    _Measure_R_PT100_2Wire->___fldiv
    _ChangeADCtoVoltage->___fldiv
    ___fltol->_Read_PT100_Temp
    ___fldiv->_sqrtf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _Config_Heater->_SetDimmer
    _StartStop_Dimmer->_SetDimmer
    _SetDimmer->___fltol
    ___fltol->_Read_PT100_Temp

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  116588
                                             31 BANK2      4     4      0
                      _Config_Heater
         _IOCAF2_SetInterruptHandler
                      _Init_Function
                    _Read_PT100_Temp
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
           _TMR4_SetInterruptHandler
                    _TX_Whole_String
                            ___fltol
                          _get_delay
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    7104
                                              0 BANK1     14    10      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6672
                                             72 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    6253
                                             56 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4735
                                             26 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2839
                                              8 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1226
                                              0 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     205
                                              5 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              2 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              2 COMMON     1     1      0
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _TX_Whole_String                                      6     6      0     478
                                              6 COMMON     2     2      0
                                              0 BANK0      4     4      0
                         _TX_Command
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     210
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _TX_Command                                           1     1      0      68
                                              3 COMMON     1     1      0
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_tx_ready                                   1     1      0      24
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2950
                     _ADC_Initialize
                  _EUSART_Initialize
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCAF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF2_SetInterruptHandler                           2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0    1960
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     202
                                              3 COMMON     2     2      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          2     2      0    1046
                                              0 BANK0      2     2      0
           _MTOUCH_Sensor_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Initialize                             2     2      0     947
                                              8 COMMON     2     2      0
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 1     1      0     103
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Enable                                 2     2      0     422
                                              6 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     360
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_InitializeAll                          2     2      0     712
                                              7 COMMON     2     2      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     6      4     424
                                              2 COMMON     5     1      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Initialize                             4     4      0     189
                                              2 COMMON     4     4      0
            _MTOUCH_Sensor_Calibrate
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_PT100_Temp                                     18    14      4   41756
                                             73 BANK1      4     0      4
                                              0 BANK2     14    14      0
                _ADC_StartConversion
                 _ChangeADCtoVoltage
              _Measure_R_PT100_2Wire
           _Measure_Temp_PT100_2Wire
                       _Read_ADC_Num
 ---------------------------------------------------------------------------------
 (2) _Read_ADC_Num                                         4     2      2      23
                                              4 COMMON     4     2      2
            _ADC_GetConversionResult
               _ADC_IsConversionDone
 ---------------------------------------------------------------------------------
 (3) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversionResult                              2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Measure_Temp_PT100_2Wire                            20    16      4   22029
                                             53 BANK1     20    16      4
                            ___fladd
                            ___fldiv
                            ___flmul
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               52    48      4   10531
                                             52 BANK0     12     8      4
                                              0 BANK1     40    40      0
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (4) _nanf                                                 8     4      4      99
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Measure_R_PT100_2Wire                                8     4      4   11855
                                             53 BANK1      8     4      4
                            ___fldiv
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _ChangeADCtoVoltage                                   4     0      4    7701
                                             53 BANK1      4     0      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     461
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Function                                        0     0      0   17322
                  _ADC_SelectChannel
                 _StartStop_AlarmLED
           _StartStop_AlarmLED_Blink
                   _StartStop_Buzzer
                   _StartStop_Dimmer
                      _StartStop_Fan
 ---------------------------------------------------------------------------------
 (2) _StartStop_AlarmLED                                   1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Config_Heater                                        2     2      0   40040
                                             77 BANK1      2     2      0
                          _SetDimmer
           _StartStop_AlarmLED_Blink
                   _StartStop_Buzzer
                   _StartStop_Dimmer
                      _StartStop_Fan
                          _get_delay
 ---------------------------------------------------------------------------------
 (1) _get_delay                                           14    12      2    5581
                                              0 BANK0     14    12      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     414
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _StartStop_Fan                                        1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _StartStop_Dimmer                                     1     1      0   17212
                                             79 BANK0      1     1      0
                          _SetDimmer
 ---------------------------------------------------------------------------------
 (3) _SetDimmer                                            8     4      4   17181
                                             23 BANK2      8     4      4
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     587
                                             77 BANK0      2     2      0
                                             14 BANK2      9     5      4
                    _Read_PT100_Temp (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4547
                                             52 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    4122
                                             32 BANK0     20    12      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4396
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2723
                                             64 BANK0     13     5      8
                                             40 BANK1     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                              _sqrtf (ARG)
 ---------------------------------------------------------------------------------
 (2) _StartStop_Buzzer                                     1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _StartStop_AlarmLED_Blink                             1     1      0      22
                                              2 COMMON     1     1      0
                    _TMR4_StartTimer
                     _TMR4_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0     229
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR4_ISR                                            0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
    _TMR4_Wroking_Blink_AlarmLED_isr *
 ---------------------------------------------------------------------------------
 (11) _TMR4_Wroking_Blink_AlarmLED_isr                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
               _TMR2_Drive_TRIAC_isr *
 ---------------------------------------------------------------------------------
 (11) _TMR2_Drive_TRIAC_isr                                0     0      0       0
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (12) _TMR2_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0     229
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
         _TMR1_Generate_Delay_ms_isr *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_Generate_Delay_ms_isr                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF2_ISR
 ---------------------------------------------------------------------------------
 (11) _IOCAF2_ISR                                          0     0      0       0
                   Absolute function *
     _IOCAF2_DefaultInterruptHandler *
                 _Zero_Detection_isr *
 ---------------------------------------------------------------------------------
 (12) _Zero_Detection_isr                                  0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (13) _TMR2_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _IOCAF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Heater
     _SetDimmer
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___xxtofl (ARG)
         _sqrtf (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flge
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           _nanf
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___fltol
         _Read_PT100_Temp (ARG)
           _ADC_StartConversion
           _ChangeADCtoVoltage
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
               _sqrtf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flge
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 _nanf
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl
           _Measure_R_PT100_2Wire
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
               _sqrtf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flge
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 _nanf
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
           _Measure_Temp_PT100_2Wire
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
               _sqrtf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flge
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 _nanf
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             _sqrtf
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flge
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               _nanf
           _Read_ADC_Num
             _ADC_GetConversionResult
             _ADC_IsConversionDone
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___xxtofl (ARG)
           _sqrtf (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flge
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             _nanf
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
     _StartStop_AlarmLED_Blink
       _TMR4_StartTimer
       _TMR4_StopTimer
     _StartStop_Buzzer
     _StartStop_Dimmer
       _SetDimmer
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___xxtofl (ARG)
           _sqrtf (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flge
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             _nanf
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___fltol
           _Read_PT100_Temp (ARG)
             _ADC_StartConversion
             _ChangeADCtoVoltage
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _sqrtf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flge
                   ___flmul
                     __Umul8_16
                     ___xxtofl (ARG)
                   _nanf
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl
             _Measure_R_PT100_2Wire
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _sqrtf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flge
                   ___flmul
                     __Umul8_16
                     ___xxtofl (ARG)
                   _nanf
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
             _Measure_Temp_PT100_2Wire
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _sqrtf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flge
                   ___flmul
                     __Umul8_16
                     ___xxtofl (ARG)
                   _nanf
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               _sqrtf
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flge
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 _nanf
             _Read_ADC_Num
               _ADC_GetConversionResult
               _ADC_IsConversionDone
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
             _sqrtf (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flge
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               _nanf
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
     _StartStop_Fan
     _get_delay
       ___lwdiv
   _IOCAF2_SetInterruptHandler
   _Init_Function
     _ADC_SelectChannel
     _StartStop_AlarmLED
     _StartStop_AlarmLED_Blink
       _TMR4_StartTimer
       _TMR4_StopTimer
     _StartStop_Buzzer
     _StartStop_Dimmer
       _SetDimmer
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___xxtofl (ARG)
           _sqrtf (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flge
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             _nanf
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___fltol
           _Read_PT100_Temp (ARG)
             _ADC_StartConversion
             _ChangeADCtoVoltage
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _sqrtf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flge
                   ___flmul
                     __Umul8_16
                     ___xxtofl (ARG)
                   _nanf
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl
             _Measure_R_PT100_2Wire
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _sqrtf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flge
                   ___flmul
                     __Umul8_16
                     ___xxtofl (ARG)
                   _nanf
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
             _Measure_Temp_PT100_2Wire
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _sqrtf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flge
                   ___flmul
                     __Umul8_16
                     ___xxtofl (ARG)
                   _nanf
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               _sqrtf
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flge
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 _nanf
             _Read_ADC_Num
               _ADC_GetConversionResult
               _ADC_IsConversionDone
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
             _sqrtf (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flge
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               _nanf
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
     _StartStop_Fan
   _Read_PT100_Temp
     _ADC_StartConversion
     _ChangeADCtoVoltage
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___xxtofl (ARG)
         _sqrtf (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flge
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           _nanf
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl
     _Measure_R_PT100_2Wire
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___xxtofl (ARG)
         _sqrtf (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flge
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           _nanf
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
     _Measure_Temp_PT100_2Wire
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___xxtofl (ARG)
         _sqrtf (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flge
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           _nanf
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       _sqrtf
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flge
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         _nanf
     _Read_ADC_Num
       _ADC_GetConversionResult
       _ADC_IsConversionDone
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
           _MTOUCH_Sensor_Calibrate
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Enable
             ___bmul
           _Sensor_Sampled_Reset
           ___bmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF2_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _TX_Whole_String
     _TX_Command
       _EUSART_Write
       _EUSART_is_tx_ready
     _strlen
   ___fltol
     _Read_PT100_Temp (ARG)
       _ADC_StartConversion
       _ChangeADCtoVoltage
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___xxtofl (ARG)
           _sqrtf (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flge
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             _nanf
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _Measure_R_PT100_2Wire
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___xxtofl (ARG)
           _sqrtf (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flge
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             _nanf
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
       _Measure_Temp_PT100_2Wire
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___xxtofl (ARG)
           _sqrtf (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flge
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             _nanf
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         _sqrtf
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flge
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           _nanf
       _Read_ADC_Num
         _ADC_GetConversionResult
         _ADC_IsConversionDone
     ___fldiv (ARG)
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___xxtofl (ARG)
       _sqrtf (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flge
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         _nanf
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
   _get_delay
     ___lwdiv
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF2_ISR
       Absolute function(Fake) *
       _IOCAF2_DefaultInterruptHandler *
       _Zero_Detection_isr *
         _TMR2_StartTimer
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_Generate_Delay_ms_isr *
     _TMR1_WriteTimer *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _TMR2_Drive_TRIAC_isr *
       _TMR2_StopTimer
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *
     _TMR4_Wroking_Blink_AlarmLED_isr *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     23      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3C      11       75.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     177      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     177      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jul 23 18:40:16 2023

             __end_of_TMR2_SetInterruptHandler 1AD7                                   ___fldiv@aexp 00D4  
                                 ___fldiv@bexp 00D3                                   ___fldiv@sign 00CC  
                               ___bmul@product 0074                                    get_delay@ms 0020  
                                 get_delay@buf 002A                            __Umul8_16@word_mpld 0022  
                        _Measure_R_PT100_2Wire 1FA1                                            l672 1002  
                                          _GIE 005F                                            _PR2 001B  
                                          _PR4 0416                                _timer1ReloadVal 01CE  
                                          _abs 1C65                                            _pad 1F04  
               ?_EUSART_SetFramingErrorHandler 0072                                _TMR2_Initialize 1BAD  
                                          wreg 0009             __end_of_IOCAF2_SetInterruptHandler 1ACB  
                   _IOCAF2_SetInterruptHandler 1AC5               ??_MTOUCH_Sensor_Sampled_ResetAll 0073  
              ?_MTOUCH_Sensor_Sampled_ResetAll 0070                                   ___flmul@aexp 0034  
                                 ___flmul@bexp 0035                                   ___flmul@sign 0033  
                                 ___flmul@temp 003E                                   ___flmul@prod 003A  
            __size_of_MTOUCH_Sensor_Initialize 0011                      ?_MTOUCH_Sensor_Initialize 0070  
                           _MTOUCH_CVD_ScanA_0 0000                             _MTOUCH_CVD_ScanA_1 0000  
                           _MTOUCH_CVD_ScanB_0 0000                             _MTOUCH_CVD_ScanB_1 0000  
                                 ___fltol@exp1 006E                                           l1041 1B21  
                                         ?_abs 0075                                  ?_Read_ADC_Num 0074  
                                         l1057 1B17                                           l1066 1B0D  
                                         l1097 007A                                           l1099 06F6  
                                         l1471 07DA                                           l1552 1208  
                                         l1714 0AFC                                           l1706 0AE4  
                                         l1572 1090                                           l1812 12CE  
                                         l1484 0911                                           l4125 11D4  
                                         l1549 11BA                                           l1750 17E8  
                                         l1752 17F9                                           l1728 1685  
                                         l1672 096F                                           l1825 1318  
                                         l4129 11EE                                           l1826 1322  
                                         l1818 1304                                           l1780 0D0F  
                                         l1676 0A02                                           l1749 17CC  
                                         l1693 0A85                                           l6013 1559  
                                         l1678 09E5                                           l6007 1543  
                                         l6121 0E07                                           l6017 1587  
                                         l1962 0E75                                           l1874 1F18  
                                         l1882 1529                                           l1787 1D41  
                                         l5411 0964                                           l3811 08E4  
                                         l6027 1564                                           l6035 15FA  
                                         l1891 15EE                                           l1883 1530  
                                         l5421 0979                                           l4701 1EB5  
                                         l6301 014B                                           l1965 0F13  
                                         l6133 0EA1                                           l6109 0DC0  
                                         l3805 08A5                                           l3813 08F0  
                                         l1877 1F38                                           l6045 160B  
                                         l1958 0E2F                                           ?_pad 0028  
                                         l5415 0967                                           l6231 1C41  
                                         l6223 1F95                                           l6311 01D2  
                                         l6303 0166                                           l6135 0F23  
                                         l6119 0DF5                                           l5343 1BE1  
                                         l5335 1C52                                           l3807 08B4  
                                         l3663 082D                                           l6039 1601  
                                         l1887 154B                                           l1888 155D  
                                         l5521 0AA4                                           l5513 0A97  
                                         l5505 0A7D                                           l4705 1EBE  
                                         l6217 1F83                                           l6321 0259  
                                         l6313 01ED                                           l6305 0181  
                                         l4721 12DD                                           l5337 1C5E  
                                         l3761 074E                                           l5361 1D96  
                                         l6049 1618                                           l5451 09B5  
                                         l6331 02E0                                           l6323 0274  
                                         l6315 0208                                           l6307 019C  
                                         l4715 12C6                                           l6147 0F6D  
                                         l6083 1CEC                                           l5347 1BE7  
                                         l6059 1B9F                                           l3771 0765  
                                         l3755 0722                                           l3659 080A  
                                         l5461 09EF                                           l6341 0367  
                                         l6333 02FB                                           l6325 028F  
                                         l6317 0223                                           l6309 01B7  
                                         l4725 12E1                                           l6149 0F90  
                                         l3781 07AD                                           l3773 0774  
                                         l6181 13BF                                           l6173 1386  
                                         l6261 1E55                                           l5535 0AB6  
                                         l5527 0AAB                                           l5391 093F  
                                         l6351 03EE                                           l6343 0382  
                                         l6335 0316                                           l6327 02AA  
                                         l6319 023E                                           l6407 0648  
                                         l4735 1316                                           l4727 12F1  
                                         l3783 07B9                                           l3759 0749  
                                         l6191 13E6                                           l5561 0AF8  
                                         l5529 0AAD                                           l5393 0947  
                                         l5705 109F                                           l6361 0475  
                                         l6353 0409                                           l6345 039D  
                                         l6337 0331                                           l6329 02C5  
                                         l4737 1309                                           l6097 0D7E  
                                         l3793 0871                                           l5723 163A  
                                         l5571 1D3B                                           l5539 0AB8  
                                         l5459 09ED                                           l5387 093C  
                                         l6371 04FC                                           l6363 0490  
                                         l6355 0424                                           l6347 03B8  
                                         l6339 034C                                           l6291 00C4  
                                         l6099 0D8E                                           l4579 1B2C  
                                         l6187 13E0                                           l6259 1E39  
                                         l5821 1781                                           l5813 1746  
                                         l5733 164E                                           l5557 0AF4  
                                         l5485 0A22                                           l5477 0A10  
                                         l5469 09FD                                           l4693 1E97  
                                         l6509 0652                                           l6381 0583  
                                         l6373 0517                                           l6365 04AB  
                                         l6357 043F                                           l6349 03D3  
                                         l6293 00DF                                           l4749 133D  
                                         l5629 1E0F                                           l3797 0898  
                                         l6197 13F1                                           l5815 1762  
                                         l5743 1668                                           l5735 1657  
                                         l5487 0A24                                           l5495 0A33  
                                         l4695 1EA3                                           l6391 060A  
                                         l6383 059E                                           l6375 0532  
                                         l6367 04C6                                           l6359 045A  
                                         l6295 00FA                                           l6287 008E  
                                         l6455 1E6C                                           l4937 1B63  
                                         l5825 1784                                           l5809 1755  
                                         l5753 167C                                           l5729 164A  
                                         l6393 0625                                           l6385 05B9  
                                         l6377 054D                                           l6369 04E1  
                                         l6297 0115                                           l6289 00A9  
                                         l5585 1F0F                                           l5835 17B0  
                                         l5763 16A6                                           l5675 1049  
                                         l6387 05D4                                           l6379 0568  
                                         l6299 0130                                           l5595 1F1A  
                                         l5749 1678                                           l6389 05EF  
                                         l5589 1F16                                           l6477 1155  
                                         l5951 0C77                                           l5871 0B1F  
                                         l5695 107C                                           l5679 1053  
                                         l4959 1BCE                                           l5599 1F43  
                                         l5849 17F4                                           l5769 16B4  
                                         l5953 0C8E                                           l5873 0B27  
                                         l5697 108C                                           l5795 1739  
                                         l5787 1708                                           l5963 0CA7  
                                         l5891 0B4A                                           l5789 1710  
                                         l5797 16ED                                           l5973 0CD0  
                                         l5869 0B1D                                           l5799 1740  
                                         l5983 0CFC                                           l5959 0CA5  
                                         l5887 0B40                                           l5977 0CE5  
                                         l5889 0B42                                           l5899 0B58  
                                         STR_1 1820                                           STR_2 182B  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u2830 0755  
                                         u6015 105D                                           u2745 1C6E  
                                         u2675 082B                                           u5500 09D5  
                                         u6205 16FC                                           u6045 107D  
                                         u7005 0FA2                                           u7015 0FCB  
                                         u6225 1709                                           u7105 0088  
                                         u2865 079A                                           u6235 1726  
                                         u6075 1094                                           u5613 0A45  
                                         u5605 0A28                                           u7125 1E75  
                                         u2965 08D2                                           u5535 09F3  
                                         u4735 1E9A                                           u7135 115F  
                                         u6265 174A                                           u6505 0C66  
                                         u4905 132A                                           u4825 12EA  
                                         u5490 09D4                                           u6355 179D  
                                         u6195 16F5                                           u6515 0C7A  
                                         u4755 1EA4                                           u7147 1E85  
                                         u6365 17BC                                           u6285 1756  
                                         u6605 0CBE                                           u5485 09C9  
                                         u4765 1EAE                                           u7157 0633  
                                         u4845 12FE                                           u6375 17D8  
                                         u6615 0CD9                                           u6535 0C83  
                                         u5655 0A98                                           u4775 1EB6  
                                         u6640 14FF                                           u6625 0CEF  
                                         u4865 1310                                           u6650 1500  
                                         u5835 1D42                                           u6475 0BCB  
                                         u5755 0ACF                                           u6485 0BF8  
                                         u6725 15F8                                           u6495 0C4A  
                                         u6905 0DF8                                           u6745 1578  
                                         u5875 1F24                                           u6755 1584  
                                         u6943 0EDF                                           u6935 0E78  
                                         u5895 100D                                           u6695 153B  
                                         u6955 0F1C                                           u6885 0DD2  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                           abs@a 0075  
                                         _dbuf 0220                                           _main 1124  
                                         _dtoa 14E4                                           _nanf 1BBD  
         __size_of_MTOUCH_Button_InitializeAll 001A    TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4 014D  
                                         _prec 0149                                           _nout 0145  
                                         pad@i 002C                                           pad@p 0029  
                                         fsr0h 0005                                           _tiny 182C  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 002E  
                TX_Whole_String@size_of_string 0020           __size_of_MTOUCH_Sensor_InitializeAll 0010  
                                         btemp 007E                                           start 002D  
                              ___fldiv@new_exp 00CD                         ??_TMR2_Drive_TRIAC_isr 0070  
                   ??_TMR1_SetInterruptHandler 0074                              ___bmul@multiplier 0075  
                   ??_TMR4_SetInterruptHandler 0074                                __end_of_R_const 1846  
                                        ??_abs 0077                                          ??_pad 002B  
                                   _TX_Command 1B2E                                  _Init_Function 1CAD  
                              _TX_Whole_String 1E5E                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                            __size_of_IOCAF2_ISR 000D  
                __end_of_OSCILLATOR_Initialize 1AFE                                  ___fltol@sign1 006D  
                              __end_of___aodiv 07EC                                __end_of___fladd 0B04  
                                        ?_main 0070                                          ?_dtoa 003A  
                                        ?_nanf 0072                                __end_of___aomod 0923  
                              __end_of___fldiv 1800                                __end_of___flmul 0D1C  
                              __end_of___flsub 1D31                                __end_of___fltol 10AF  
                                        _T1CON 0018                                          _T2CON 001C  
                                        _T4CON 0417                                __end_of___lwdiv 1EC3  
                                        i1l754 000D                                          i1l764 002B  
                                        i1l757 0019                                          i1l759 0023  
                   ??_Measure_Temp_PT100_2Wire 007A                                          _RCSTA 019D  
                                 vfpfcnvrt@fmt 0058                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TXREG 019A                                          _TXSTA 019E  
             __size_of_ADC_GetConversionResult 0005                                _TMR4_Initialize 1C13  
                             __end_of_TMR1_ISR 0800                               __end_of_TMR2_ISR 1B50  
                             __end_of_TMR4_ISR 1B5C                        __end_of_PIN_MANAGER_IOC 1AB9  
                                        _flags 007A                                 ??_Read_ADC_Num 0076  
        __end_of_MTOUCH_Sensor_Scan_Initialize 1AB3         __size_of_MTOUCH_Sensor_Scan_Initialize 0005  
                _MTOUCH_Sensor_Scan_Initialize 1AAE                                 _WDT_Initialize 1A96  
                                        _errno 0143                                          _fputc 0801  
                                        _fputs 1D93                                          pad@fp 0030  
                              ??_StartStop_Fan 0072                                          _width 0147  
                                        _putch 0003                                          dtoa@d 003A  
                                        dtoa@i 0056                                          dtoa@n 004E  
                                        dtoa@p 0048                                          _sqrtf 0D1C  
                                        dtoa@s 004C                                          dtoa@w 004A  
                                        nanf@s 0072                                          nanf@u 0076  
                      __end_of_TMR1_Initialize 1CDF                                          pclath 000A  
                         _Sensor_Sampled_Reset 1AFE                                          status 0003  
                                        wtemp0 007E                                __end_of_sprintf 1E06  
                              _TMR2_StartTimer 1A87                                _TMR1_WriteTimer 1B8E  
                              __initialization 002F                    TX_Whole_String@input_string 0022  
                                 __end_of_main 119F                                   __end_of_dtoa 1629  
                                 __end_of_nanf 1BCE                                   __end_of_tiny 1830  
                               ?_Init_Function 0070                        _EUSART_is_tx_ready$1174 0072  
                               ??_EUSART_Write 0072                        __end_of_TMR2_Initialize 1BBD  
                  ?_INTERRUPT_InterruptManager 0070                         ?_Measure_R_PT100_2Wire 00D5  
                               main@Temp_PT100 0141               __end_of_MTOUCH_Button_Initialize 103F  
                     _TMR2_SetInterruptHandler 1AD1                                         ??_main 007A  
                                       ??_dtoa 0042                                         ??_nanf 0076  
                   __end_of_StartStop_AlarmLED 1B24                        _MTOUCH_Sensor_Calibrate 0002  
                                   _V_cc_const 1844           MTOUCH_Sensor_Sampled_ResetAll@sensor 0074  
                       __end_of_WDT_Initialize 1A9A                      __size_of_StartStop_Dimmer 0016  
                __size_of_ADC_IsConversionDone 0006                                _Read_PT100_Temp 10AF  
                    __size_of_StartStop_Buzzer 000A              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 01D6                                         ?_fputc 0072  
                                       ?_fputs 0020                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                                         ?_sqrtf 0054  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l1018 1D85                        TMR1_WriteTimer@timerVal 0070  
                                       i1l5001 1D90                                         i1l5017 1B98  
                                       i1l4909 1B7E                          ?_Sensor_Sampled_Reset 0070  
                   __end_of_EUSART_is_tx_ready 1B2E                                         u510_20 1CAA  
                                       u507_25 1D7F                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       u280lld 071F                                         _WDTCON 0097  
                                       u291lld 086F              MTOUCH_Button_InitializeAll@button 0078  
                             __end_of___xxtofl 1346                                _TMR4_StartTimer 1A8D  
                                       _Buff_g 01B8                         _Button_DefaultCallback 0000  
      __end_of_TMR4_Wroking_Blink_AlarmLED_isr 1CAD       __size_of_TMR4_Wroking_Blink_AlarmLED_isr 0019  
            ??_TMR4_Wroking_Blink_AlarmLED_isr 0070               ?_TMR4_Wroking_Blink_AlarmLED_isr 0070  
              _TMR4_Wroking_Blink_AlarmLED_isr 1C94                        __end_of_TX_Whole_String 1E8F  
         __end_of_TMR1_DefaultInterruptHandler 1A87          __size_of_TMR1_DefaultInterruptHandler 0001  
                 _TMR1_DefaultInterruptHandler 1A86                     __end_of_ChangeADCtoVoltage 1F04  
                       _Sensor_DefaultCallback 0000                                   vfprintf@cfmt 006E  
                                _packet_sample 0157                             __size_of_SetDimmer 0095  
                                       ___flge 119F                                         ___bmul 1BDF  
                                    ??___aodiv 0072                                      ??___fladd 0048  
                                    ??___aomod 0072                               TX_Command@txData 0073  
                                    ??___fldiv 0068                                      ??___flmul 002E  
                                    ??___flsub 007A                                      ??___fltol 0132  
                                    ??___lwdiv 0076                                    ?_TX_Command 0070  
                                       _memcpy 1E06                        __end_of_TMR4_Initialize 1C25  
                 ??_TMR1_Generate_Delay_ms_isr 0070                                         pad@buf 0028  
                                       dtoa@fp 0045                                         _strlen 1C4E  
                   __end_of_Zero_Detection_isr 1AF0           __end_of_TMR4_DefaultInterruptHandler 0801  
        __size_of_TMR4_DefaultInterruptHandler 0001                   _TMR4_DefaultInterruptHandler 0800  
                                       fputc@c 0072                                         fputs@c 0024  
                                       fputs@i 0025                                         fputs@s 0027  
                           __size_of__Umul8_16 001F                                ?_WDT_Initialize 0070  
                   Read_ADC_Num@convertedValue 0076                  StartStop_AlarmLED_Blink@OnOff 0072  
                                       putch@c 0070                  _tmr2_required_counter_steps_g 0153  
                             __end_of_vfprintf 1E5E                        __end_of_TMR2_StartTimer 1A8A  
                                       sqrtf@i 00A8                                         sqrtf@m 00BC  
     TMR1_SetInterruptHandler@InterruptHandler 0072       TMR4_SetInterruptHandler@InterruptHandler 0072  
     TMR2_SetInterruptHandler@InterruptHandler 0072     IOCAF2_SetInterruptHandler@InterruptHandler 0072  
                                       sqrtf@q 00B0                                         sqrtf@r 00C0  
                                       sqrtf@s 00A4                                         sqrtf@t 00B4  
             TMR2_Drive_TRIAC_isr@counter_tmr2 014F                                         sqrtf@x 0054  
                                       sqrtf@z 00B8                               ?_PIN_MANAGER_IOC 0070  
                                    ??_sprintf 00A4                        __end_of_TMR1_WriteTimer 1B9D  
                                 ??_IOCAF2_ISR 0070                 SetDimmer@TRIAC_off_duration_ms 013B  
                                   ___flge@ff1 0072                                     ___flge@ff2 0076  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 0022  
                                 ___xxtofl@exp 0021                              _SYSTEM_Initialize 1CF9  
                                 ___xxtofl@val 0072                   __end_of_Tolerance_Temp_const 1840  
                      __end_of__initialization 0062                 ?_MTOUCH_Sensor_Scan_Initialize 0070  
                           ?_SYSTEM_Initialize 0070                            _Button_StateMachine 01A0  
                                   ___fltol@f1 012E            __size_of_TMR1_Generate_Delay_ms_isr 0006  
                MTOUCH_Sensor_Calibrate@sensor 0070                            ___bmul@multiplicand 0072  
                              ??_Init_Function 007A                   __size_of_ADC_StartConversion 0003  
                               __pcstackCOMMON 0070                          __end_of_Config_Heater 06F7  
                                 __pidataBANK2 1B39                                   __pidataBANK3 1C7C  
                          ??_SYSTEM_Initialize 007A                                      ?_TMR1_ISR 0070  
                                    ?_TMR2_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                                    ?_TMR4_ISR 0070                           __end_of_Read_ADC_Num 1BDF  
                                __end_of_fputc 0847                                  __end_of_fputs 1DB8  
             __end_of_MTOUCH_Sensor_Initialize 1C01                             _DimmerStatusFlag_g 015B  
                                __end_of_putch 0004                      ??_MTOUCH_Sensor_Calibrate 0072  
                                __end_of_sqrtf 1000                               ?_TMR2_Initialize 0070  
                           __end_of_IOCAF2_ISR 1B81                        __end_of_Read_PT100_Temp 1124  
                      _ADC_GetConversionResult 1A9A                                 _OPTION_REGbits 0095  
                ?_TMR4_DefaultInterruptHandler 0070                        StartStop_AlarmLED@OnOff 0072  
                           __size_of_get_delay 0050                    ?_IOCAF2_SetInterruptHandler 0072  
                     _MTOUCH_Button_Initialize 1009                __end_of_TMR6_Timer_Period_const 1834  
             ??_IOCAF2_DefaultInterruptHandler 0070                ?_IOCAF2_DefaultInterruptHandler 0070  
              ??_EUSART_SetOverrunErrorHandler 0074                              __end_of_SetDimmer 12B0  
                      _Button_State_NotPressed 0000                  __size_of_MTOUCH_Sensor_Enable 0012  
                      __end_of_TMR4_StartTimer 1A90                                        ??_fputc 0075  
                    __end_of_SYSTEM_Initialize 1D14                              _lowpowerActivated 015F  
                                      ??_fputs 0021                         ??_Sensor_Sampled_Reset 0072  
                                      ??_putch 0072                                        ??_sqrtf 0058  
                                   __pbssBANK1 00EF                                     __pbssBANK2 0143  
                                   __pbssBANK3 01B8                                     __pbssBANK4 0220  
                         __end_of_EUSART_Write 1009                            __size_of_TX_Command 000B  
                        _TMR4_InterruptHandler 01D0                     __end_of_mtouch_button_init 1820  
                            __end_of__Umul8_16 1D50                               ?_TX_Whole_String 0070  
                                   __pmaintext 1124                                        ?___flge 0072  
                                      ?___bmul 0072                                     ??_TMR1_ISR 0072  
                                   ??_TMR2_ISR 0070                                     ??_TMR4_ISR 0070  
                                   __pintentry 0004                                        ?_memcpy 0072  
                                      _BAUDCON 019F            __end_of_MTOUCH_Button_InitializeAll 1CF9  
                  _MTOUCH_Button_InitializeAll 1CDF                               ?_TMR4_Initialize 0070  
                                      _APFCON0 011D                                        _APFCON1 011E  
          __end_of_MTOUCH_Sensor_InitializeAll 1BAD                    _MTOUCH_Sensor_InitializeAll 1B9D  
                      __size_of_ADC_Initialize 0007                                        ?_strlen 0072  
                                    ?___xxtofl 0072              __size_of_StartStop_AlarmLED_Blink 000C  
                    ?_StartStop_AlarmLED_Blink 0070                               _StartStop_Dimmer 1C38  
                           __size_of_vfpfcnvrt 00CE                                        _OSCTUNE 0098  
                             _StartStop_Buzzer 1B06                        __size_of_TMR2_StopTimer 0003  
                     ??_EUSART_SetErrorHandler 0074                               ?_TMR2_StartTimer 0070  
                             ?_TMR1_WriteTimer 0070                                        _R_const 1845  
                         _ADC_InterruptHandler 0155                                 _packet_counter 0161  
                   ??_TMR2_SetInterruptHandler 0074                              __end_of_get_delay 1FA1  
                __size_of_TMR2_Drive_TRIAC_isr 0022                        ??_Measure_R_PT100_2Wire 007A  
                      __size_of_TMR4_StopTimer 0003                                __size_of___flge 007C  
                              __size_of___bmul 0011                                        ___aodiv 06F7  
                                      ___fladd 0923                                        ___aomod 0847  
                                      ___fldiv 1629                                        ___flmul 0B04  
                                      ___flsub 1D14                                        ___fltol 103F  
               MTOUCH_Button_Initialize@button 0075             __end_of_TMR1_Generate_Delay_ms_isr 1ABF  
                   _TMR1_Generate_Delay_ms_isr 1AB9                                        ___lwdiv 1E8F  
                                    ?_vfprintf 0068                      ??_ADC_GetConversionResult 0074  
                              __size_of_memcpy 002B                                        __ptext1 1DDF  
                                      __ptext2 1E31                                        __ptext3 1346  
                                      __ptext4 14E4                                        __ptext5 1F04  
                                      __ptext6 1D93                                        __ptext7 0801  
                                      __ptext8 0003                                        __ptext9 1C65  
                         _Tolerance_Temp_const 183C                 ??_TMR1_DefaultInterruptHandler 0070  
                             ?_Read_PT100_Temp 00E9                                __size_of_strlen 0017  
                                    _T1CONbits 0018                       _MTOUCH_Sensor_Initialize 1BF0  
                        _OSCILLATOR_Initialize 1AF7                                      _T2CONbits 001C  
                                 __size_of_abs 0017                                   __size_of_pad 004D  
                                   ??___xxtofl 0076              __size_of_TMR1_SetInterruptHandler 0006  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 0074  
            __size_of_TMR4_SetInterruptHandler 0006                      ?_TMR1_SetInterruptHandler 0072  
                                    _IOCAFbits 0393                      ?_TMR4_SetInterruptHandler 0072  
                                    _IOCANbits 0392                                      _IOCAPbits 0391  
            MTOUCH_Sensor_InitializeAll@sensor 0021                               _callback_sampled 016C  
                                      main@del 013F                     __size_of_SYSTEM_Initialize 001B  
                                      _sprintf 1DDF                                        clrloop0 1ADE  
                             ?_TMR4_StartTimer 0070                               _callback_pressed 0166  
               MTOUCH_Sensor_Initialize@sensor 0079                           end_of_initialization 0062  
               ??_TMR4_DefaultInterruptHandler 0070          __end_of_EUSART_SetOverrunErrorHandler 1AAE  
       __size_of_EUSART_SetOverrunErrorHandler 0005                  _EUSART_SetOverrunErrorHandler 1AA9  
                           _StartStop_AlarmLED 1B1A                                        memcpy@d 0024  
                        __end_of_StartStop_Fan 1B1A                                        memcpy@n 0074  
                                      memcpy@s 0021                                        fputc@fp 0074  
                                      init_ram 1AE3                                        fputs@fp 0020  
                                      initloop 1AE4              __size_of_Measure_Temp_PT100_2Wire 00D0  
                    ?_Measure_Temp_PT100_2Wire 00D5                              _EUSART_Initialize 1D50  
                        __size_of_Read_ADC_Num 0011                   __end_of_ADC_IsConversionDone 1AC5  
                          ?_StartStop_AlarmLED 0070                             ?_EUSART_Initialize 0070  
                                   _ticker_max 1842                              __end_of_vfpfcnvrt 1414  
                           _EUSART_is_tx_ready 1B24                            _mtouch_request_init 015D  
              Measure_Temp_PT100_2Wire@R_PT100 00D5                                     ??_vfprintf 006B  
                                 ??_TX_Command 0073                                        sqrtf@ix 00C4  
                             TX_Whole_String@i 0023                                        strlen@a 0074  
                                      strlen@s 0072                        Read_PT100_Temp@ADC_volt 0120  
                          ??_EUSART_Initialize 0074                               ??_WDT_Initialize 0072  
                        StartStop_Dimmer@OnOff 006F                                      _PORTCbits 000E  
                          ?_EUSART_is_tx_ready 0070                                    ___fladd@grs 0053  
                           _ChangeADCtoVoltage 1EC3                           ??_StartStop_AlarmLED 0072  
                                ___xxtofl@sign 0020                          __size_of_EUSART_Write 0008  
                   MTOUCH_Sensor_Enable@sensor 0077                            _ADC_StartConversion 1A93  
                                  ___fldiv@grs 00CF                                    ___fldiv@rem 00C8  
                          _callback_notPressed 0164                __size_of_EUSART_SetErrorHandler 0005  
                          ?_ChangeADCtoVoltage 00D5              __end_of_HalfCycleACDuration_const 183C  
                                 _Read_ADC_Num 1BCE                             _sensor_globalFlags 0163  
                           _Zero_Detection_isr 1AE9                                    ___flmul@grs 0036  
                    __end_of_EUSART_Initialize 1D71                             __end_of_TX_Command 1B39  
                         ??_EUSART_is_tx_ready 0072                                      _TXSTAbits 019E  
                           StartStop_Fan@OnOff 0072                        SetDimmer@dim_percentage 0137  
                          ?_Zero_Detection_isr 0070                           ?_ADC_StartConversion 0070  
                         ??_ChangeADCtoVoltage 007A           __end_of_TMR2_DefaultInterruptHandler 1001  
        __size_of_TMR2_DefaultInterruptHandler 0001                   _TMR2_DefaultInterruptHandler 1000  
                         _Button_State_Pressed 0000                                 __end_of___flge 121B  
                               __end_of___bmul 1BF0                     _EUSART_DefaultErrorHandler 0000  
                                  vfpfcnvrt@ap 0059                                    vfpfcnvrt@fp 0067  
                                  vfpfcnvrt@ll 005F                     ??_MTOUCH_Button_Initialize 0072  
              ??_MTOUCH_Sensor_Scan_Initialize 0072                                   _EUSART_Write 1001  
                            __size_of_TMR1_ISR 0014                              __size_of_TMR2_ISR 000C  
                            __size_of_TMR4_ISR 000C                                 _ADC_Initialize 1AF0  
                               __end_of_memcpy 1E31                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_strlen 1C65                            start_initialization 002F  
                         ??_Zero_Detection_isr 0070                __size_of_PIN_MANAGER_Initialize 0027  
                                  __end_of_abs 1C7C                                    __end_of_pad 1F51  
                               _TMR2_StopTimer 1A8A                                      _SetDimmer 121B  
                     __size_of_PIN_MANAGER_IOC 0006         __end_of_IOCAF2_DefaultInterruptHandler 1A86  
      __size_of_IOCAF2_DefaultInterruptHandler 0001                 _IOCAF2_DefaultInterruptHandler 1A85  
                _Measure_Temp_PT100_2Wire$2973 00DD                  _Measure_Temp_PT100_2Wire$2974 00E1  
                _Measure_Temp_PT100_2Wire$2975 00E5                 ?_EUSART_SetOverrunErrorHandler 0072  
                        ??_ADC_StartConversion 0072                             __end_of_V_cc_const 1845  
                     __end_of_StartStop_Dimmer 1C4E                       __size_of_TMR1_Initialize 0019  
                 __end_of_MTOUCH_Sensor_Enable 1C13                                    vfprintf@fmt 0068  
                               _TMR4_StopTimer 1A90                     _EUSART_FramingErrorHandler 01D8  
                                     ??___flge 0020                                       ??___bmul 0073  
             __end_of_StartStop_AlarmLED_Blink 1B68                       __end_of_StartStop_Buzzer 1B10  
                       _EUSART_SetErrorHandler 1A9F                          __end_of_Init_Function 1CC6  
                       __end_of_ADC_Initialize 1AF7                                      __Umul8_16 1D31  
                                  __pdataBANK2 0164                                    __pdataBANK3 01A0  
                                     ??_memcpy 0076                  ?_TMR2_DefaultInterruptHandler 0070  
                           _mtouch_button_init 1800                     Sensor_Sampled_Reset@sensor 0072  
                                     ??_strlen 0074                                      ___fladd@a 0044  
                                    ___fladd@b 0040                                      ___fldiv@a 0060  
                                    ___fldiv@b 0064                         __end_of_TMR2_StopTimer 1A8D  
                                    ___flmul@a 002A                                      ___flmul@b 0026  
                                  __pbssCOMMON 007A                                      ___flsub@a 0054  
                                    ___flsub@b 0058                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0120                __end_of_TMR2_Timer_Period_const 1838  
                             ___aodiv@dividend 0028                           _ADC_IsConversionDone 1ABF  
                     __size_of_TMR2_Initialize 0010                              __size_of___xxtofl 0096  
                       __size_of_Config_Heater 0691                  __size_of_Sensor_Sampled_Reset 0008  
                                   ?_SetDimmer 0137                     __size_of_EUSART_Initialize 0021  
                    _Button_State_Initializing 0000                                      __pnvBANK3 01CC  
                       __end_of_TMR4_StopTimer 1A93                               ___lwdiv@dividend 0074  
                       _PIN_MANAGER_Initialize 1DB8                                      _dtoa$2504 0046  
                     ?_MTOUCH_Sensor_Calibrate 0070                        _TMR6_Timer_Period_const 1830  
                            _ADC_SelectChannel 1B81               __end_of_TMR1_SetInterruptHandler 1AD1  
                   ??_MTOUCH_Sensor_Initialize 0078                                       ?___aodiv 0020  
                                     ?___fladd 0040                                       ?___aomod 0020  
             __end_of_TMR4_SetInterruptHandler 1ADD                                       ?___fldiv 0060  
                             ___aodiv@quotient 0032                                       ?___flmul 0026  
                                     ?___flsub 0054                                       ?___fltol 012E  
                                   ?__Umul8_16 0072                                       ?___lwdiv 0072  
                              ?_ADC_Initialize 0070                    ?_TMR1_Generate_Delay_ms_isr 0070  
               __size_of_Measure_R_PT100_2Wire 005F                             ?_ADC_SelectChannel 0070  
                __end_of_Measure_R_PT100_2Wire 2000                                      _get_delay 1F51  
                 ??_INTERRUPT_InterruptManager 0072                       __size_of_TX_Whole_String 0031  
                            __size_of_vfprintf 002D                            ??_ADC_SelectChannel 0072  
                              ?_TMR2_StopTimer 0070                          ?_ADC_IsConversionDone 0070  
             __end_of_Measure_Temp_PT100_2Wire 14E4                   __end_of_TMR2_Drive_TRIAC_isr 1D93  
                     __size_of_TMR4_Initialize 0012                               ___lwdiv@quotient 0077  
                                     ?_sprintf 00A0                                 __size_of_fputc 0046  
                               __size_of_fputs 0025                                 __size_of_putch 0001  
                               __size_of_sqrtf 02E4         EUSART_SetErrorHandler@interruptHandler 0072  
                                     _LATCbits 010E                             _currentScannSensor 0162  
                                    clear_ram0 1ADD                                       _PIE1bits 0091  
                                     _PIE3bits 0093                              _eusartRxLastError 015C  
                     __size_of_TMR2_StartTimer 0003                                ?_TMR4_StopTimer 0070  
                    __end_of_ADC_SelectChannel 1B8E                       __size_of_TMR1_WriteTimer 000F  
          __size_of_INTERRUPT_InterruptManager 0029                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0074                                       _PIR3bits 0013  
       __end_of_MTOUCH_Sensor_Sampled_ResetAll 1C38        __size_of_MTOUCH_Sensor_Sampled_ResetAll 0013  
               _MTOUCH_Sensor_Sampled_ResetAll 1C25                                  _Config_Heater 0066  
                       Read_PT100_Temp@ADC_num 012C              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR1_ISR 07EC                                       _TMR2_ISR 1B44  
                                     _TMR4_ISR 1B50                              ??_PIN_MANAGER_IOC 0070  
                           _mtouch_time_toScan 015E                                     ?_get_delay 0020  
                                    _vfpfcnvrt 1346                              ??_TMR1_Initialize 0074  
                     _StartStop_AlarmLED_Blink 1B5C                                     _ADCON0bits 009D  
                     ADC_SelectChannel@channel 0073                 ??_TMR2_DefaultInterruptHandler 0070  
            __size_of_TMR2_SetInterruptHandler 0006                      ?_TMR2_SetInterruptHandler 0072  
                       Read_PT100_Temp@R_PT100 0124                           _MTOUCH_Sensor_Enable 1C01  
                     __size_of_Read_PT100_Temp 0075                                    ??_SetDimmer 007A  
                            ??_TMR2_Initialize 0074                          StartStop_Buzzer@OnOff 0072  
                          __end_of_tmr1_period 1842                              _MTOUCH_Initialize 1B68  
              __end_of_MTOUCH_Sensor_Calibrate 0003                   ChangeADCtoVoltage@ADC_number 00D5  
                     __size_of_TMR4_StartTimer 0003                             ?_MTOUCH_Initialize 0070  
                                    memcpy@tmp 0020                                     vfprintf@ap 006A  
                                   vfprintf@fp 006D                       ?_ADC_GetConversionResult 0072  
                               ?_Config_Heater 0070                                   _sample_delay 0160  
                    _HalfCycleACDuration_const 1838                        ??_OSCILLATOR_Initialize 0072  
                                  ??__Umul8_16 0074                            _EUSART_ErrorHandler 01D4  
                             __size_of___aodiv 00F5                               __size_of___fladd 01E1  
                             __size_of___aomod 00DC                            ??_MTOUCH_Initialize 007A  
                             __size_of___fldiv 01D7                               __size_of___flmul 0218  
                             __size_of___flsub 001D                               __size_of___fltol 0070  
                                   ?_vfpfcnvrt 0058                               __size_of___lwdiv 0034  
                              ___aodiv@divisor 0020                       _TMR1_SetInterruptHandler 1ACB  
                              ___aodiv@counter 0030                       _TMR4_SetInterruptHandler 1AD7  
                       __size_of_StartStop_Fan 000A                          _TMR1_InterruptHandler 01CC  
                       ??_ADC_IsConversionDone 0072                                     sprintf@fmt 00A0  
                      _IOCAF2_InterruptHandler 01DA                                       ___xxtofl 12B0  
                Measure_R_PT100_2Wire@ADC_volt 00D5                                   _Sensor_scanA 016A  
                                 _Sensor_scanB 0168                    __size_of_StartStop_AlarmLED 000A  
                              ___lwdiv@divisor 0072                                ___lwdiv@counter 0079  
                        ?_MTOUCH_Sensor_Enable 0070                              ??_TX_Whole_String 0076  
                 ??_IOCAF2_SetInterruptHandler 0074                                       __ptext10 0847  
                                     __ptext11 06F7                                       __ptext20 1AD7  
                                     __ptext12 1E5E                                       __ptext21 1BAD  
                                     __ptext13 1C4E                                       __ptext30 1C25  
                                     __ptext22 1AD1                                       __ptext14 1B2E  
                                     __ptext31 1B9D                                       __ptext23 1CC6  
                                     __ptext15 1B24                                       __ptext40 1D50  
                                     __ptext32 1BF0                                       __ptext24 1ACB  
                                     __ptext16 1001                                       __ptext41 1AA9  
                                     __ptext33 1AFE                                       __ptext25 1DB8  
                                     __ptext17 1CF9                                       __ptext50 0D1C  
                                     __ptext42 1AA4                                       __ptext34 1C01  
                                     __ptext26 1AC5                                       __ptext18 1A96  
                                     __ptext51 1BBD                                       __ptext43 1A9F  
                                     __ptext35 1BDF                                       __ptext27 1AF7  
                                     __ptext19 1C13                                       __ptext60 0066  
                                     __ptext52 119F                                       __ptext44 1AF0  
                                     __ptext36 1CDF                                       __ptext28 1B68  
                                     __ptext61 1F51                                       __ptext53 1FA1  
                                     __ptext45 10AF                                       __ptext37 1E06  
                                     __ptext29 1AAE                                       __ptext70 1D31  
                                     __ptext62 1E8F                                       __ptext54 1EC3  
                                     __ptext46 1BCE                                       __ptext38 1009  
                                     __ptext71 1629                                       __ptext63 1B10  
                                     __ptext55 12B0                                       __ptext47 1ABF  
                                     __ptext39 0002                                       __ptext80 1B44  
                                     __ptext72 1B06                                       __ptext64 1C38  
                                     __ptext56 1A93                                       __ptext48 1A9A  
                                     __ptext81 1000                                       __ptext73 1B5C  
                                     __ptext65 121B                                       __ptext57 1CAD  
                                     __ptext49 1414                                       __ptext90 1A85  
                                     __ptext82 1D71                                       __ptext74 1A90  
                                     __ptext66 103F                                       __ptext58 1B1A  
                                     __ptext91 1AE9                                       __ptext83 1A8A  
                                     __ptext75 1A8D                                       __ptext67 1D14  
                                     __ptext59 1B81                                       __ptext92 1A87  
                                     __ptext84 07EC                                       __ptext68 0923  
                                     __ptext85 1B8E                                       __ptext77 1B50  
                                     __ptext69 0B04                                       __ptext86 1A86  
                                     __ptext78 0800                                       __ptext87 1AB9  
                                     __ptext79 1C94                                       __ptext88 1AB3  
                                     __ptext89 1B74                                     _IOCAF2_ISR 1B74  
                             __size_of_sprintf 0027                       _Measure_Temp_PT100_2Wire 1414  
                    __end_of_MTOUCH_Initialize 1B74                              ??_TMR4_Initialize 0074  
                                __size_of_main 007B                                  __size_of_dtoa 0145  
                                __size_of_nanf 0011                                       _onceFlag 016E  
                  __size_of_EUSART_is_tx_ready 000A                        ?_EUSART_SetErrorHandler 0072  
                   __size_of_ADC_SelectChannel 000D                                       _ticker_g 0151  
EUSART_SetOverrunErrorHandler@interruptHandler 0072                              ?_StartStop_Dimmer 0070  
                         _TMR2_Drive_TRIAC_isr 1D71                                       int$flags 007E  
                            ?_StartStop_Buzzer 0070                    __size_of_ChangeADCtoVoltage 0041  
                           ??_StartStop_Dimmer 007A                                       _vfprintf 1E31  
                            ??_TMR2_StartTimer 0070             __end_of_INTERRUPT_InterruptManager 002D  
                   _INTERRUPT_InterruptManager 0004                                    ??_get_delay 0022  
        __end_of_EUSART_SetFramingErrorHandler 1AA9         __size_of_EUSART_SetFramingErrorHandler 0005  
                _EUSART_SetFramingErrorHandler 1AA4                              ??_TMR1_WriteTimer 0072  
                           ??_StartStop_Buzzer 0072            __size_of_IOCAF2_SetInterruptHandler 0006  
                 ?_MTOUCH_Button_InitializeAll 0070                   ?_MTOUCH_Sensor_InitializeAll 0070  
                             ___aomod@dividend 0028                      Read_PT100_Temp@Temp_PT100 0128  
                                _mtouch_button 0240                                     _INTCONbits 000B  
                                _mtouch_sensor 01A6                                       memcpy@d1 0023  
                                     memcpy@s1 0072                    __size_of_Zero_Detection_isr 0007  
                               __pstringtext10 1845                                 __pstringtext11 1820  
                               __pstringtext12 0000                                    _tmr1_period 1840  
                           __end_of_ticker_max 1844                        __size_of_WDT_Initialize 0004  
                 MTOUCH_Button_Initialize@name 0074              __size_of_MTOUCH_Button_Initialize 0036  
                                     intlevel1 0000                      ?_MTOUCH_Button_Initialize 0070  
                                    sprintf@ap 00A7                    __end_of_ADC_StartConversion 1A96  
                      ?_PIN_MANAGER_Initialize 0070                                  _StartStop_Fan 1B10  
              __end_of_ADC_GetConversionResult 1A9F                 __end_of_EUSART_SetErrorHandler 1AA4  
                            ??_Read_PT100_Temp 007A                              MTOUCH_Random@seed 00EF  
                              ??_Config_Heater 00ED                               ??_ADC_Initialize 0072  
                        ?_TMR2_Drive_TRIAC_isr 0070  EUSART_SetFramingErrorHandler@interruptHandler 0072  
                 Measure_R_PT100_2Wire@R_PT100 00D9                                ___aomod@divisor 0020  
                            ??_TMR4_StartTimer 0072                   __end_of_Sensor_Sampled_Reset 1B06  
                                  ??_vfpfcnvrt 005A                               ??_TMR2_StopTimer 0070  
                              ___aomod@counter 0073                                  __pstringtext1 182C  
                                __pstringtext2 1830                                  __pstringtext3 1834  
                                __pstringtext4 1840                                  __pstringtext5 1842  
                                __pstringtext6 1800                                  __pstringtext7 1838  
                                __pstringtext8 183C                                  __pstringtext9 1844  
                       __Umul8_16@multiplicand 0072                                       sprintf@f 00A9  
                                     sprintf@s 00A8                  ??_MTOUCH_Button_InitializeAll 0077  
                ??_MTOUCH_Sensor_InitializeAll 0020               __size_of_MTOUCH_Sensor_Calibrate 0001  
                       ??_MTOUCH_Sensor_Enable 0076                             Config_Heater@count 015A  
                                ___fladd@signs 0050                                    ?_IOCAF2_ISR 0070  
                           EUSART_Write@txData 0072                                   ___aodiv@sign 0031  
                   __size_of_MTOUCH_Initialize 000C             Measure_Temp_PT100_2Wire@Temp_PT100 00D9  
                       __size_of_Init_Function 0019                 __end_of_PIN_MANAGER_Initialize 1DDF  
                             ??_TMR4_StopTimer 0072                          sqrtf@__xc8_float_word 00AC  
                               ?_StartStop_Fan 0070                                   ___fladd@aexp 0051  
                                 ___fladd@bexp 0052                              Config_Heater@once 0159  
                              _PIN_MANAGER_IOC 1AB3                           __Umul8_16@multiplier 0024  
                        _TMR2_InterruptHandler 01D2                               Config_Heater@del 014B  
                                 ___aomod@sign 0074                                _TMR1_Initialize 1CC6  
                   ??_StartStop_AlarmLED_Blink 0072                              __Umul8_16@product 0020  
                      _TMR2_Timer_Period_const 1834  
