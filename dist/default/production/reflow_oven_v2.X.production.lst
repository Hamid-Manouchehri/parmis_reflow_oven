

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 21 12:34:26 2023

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	psect	text43,local,class=CODE,merge=1,delta=2
    68                           	psect	text44,local,class=CODE,merge=1,delta=2
    69                           	psect	text45,local,class=CODE,merge=1,delta=2
    70                           	psect	text46,local,class=CODE,merge=1,delta=2
    71                           	psect	text47,local,class=CODE,merge=1,delta=2
    72                           	psect	text48,local,class=CODE,merge=1,delta=2
    73                           	psect	text49,local,class=CODE,merge=1,delta=2
    74                           	psect	text50,local,class=CODE,merge=1,delta=2
    75                           	psect	text51,local,class=CODE,merge=1,delta=2
    76                           	psect	text52,local,class=CODE,merge=1,delta=2
    77                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text54,local,class=CODE,merge=1,delta=2
    79                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text56,local,class=CODE,merge=1,delta=2
    81                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text58,local,class=CODE,merge=1,delta=2
    83                           	psect	text59,local,class=CODE,merge=1,delta=2
    84                           	psect	text60,local,class=CODE,merge=1,delta=2
    85                           	psect	text61,local,class=CODE,merge=1,delta=2
    86                           	psect	text62,local,class=CODE,merge=1,delta=2
    87                           	psect	text63,local,class=CODE,merge=1,delta=2
    88                           	psect	text64,local,class=CODE,merge=1,delta=2
    89                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text70,local,class=CODE,merge=1,delta=2,group=1
    95                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
    96                           	psect	text72,local,class=CODE,merge=1,delta=2,group=1
    97                           	psect	text73,local,class=CODE,merge=1,delta=2,group=1
    98                           	psect	text74,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text75,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text76,local,class=CODE,merge=1,delta=2
   101                           	psect	intentry,global,class=CODE,delta=2
   102                           	psect	text78,local,class=CODE,merge=1,delta=2
   103                           	psect	text79,local,class=CODE,merge=1,delta=2
   104                           	psect	text80,local,class=CODE,merge=1,delta=2
   105                           	psect	text81,local,class=CODE,merge=1,delta=2
   106                           	psect	text82,local,class=CODE,merge=1,delta=2
   107                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   109                           	dabs	1,0x7E,2
   110  0000                     
   111                           ; Version 2.40
   112                           ; Generated 17/11/2021 GMT
   113                           ; 
   114                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution. Publication is not required when
   128                           ;        this file is used in an embedded application.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC16F1829 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  0111                     	;# 
   198  0112                     	;# 
   199  0113                     	;# 
   200  0114                     	;# 
   201  0115                     	;# 
   202  0116                     	;# 
   203  0117                     	;# 
   204  0118                     	;# 
   205  0119                     	;# 
   206  011A                     	;# 
   207  011B                     	;# 
   208  011D                     	;# 
   209  011E                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  018E                     	;# 
   213  0191                     	;# 
   214  0191                     	;# 
   215  0192                     	;# 
   216  0193                     	;# 
   217  0193                     	;# 
   218  0193                     	;# 
   219  0194                     	;# 
   220  0195                     	;# 
   221  0196                     	;# 
   222  0199                     	;# 
   223  019A                     	;# 
   224  019B                     	;# 
   225  019B                     	;# 
   226  019C                     	;# 
   227  019D                     	;# 
   228  019E                     	;# 
   229  019F                     	;# 
   230  020C                     	;# 
   231  020D                     	;# 
   232  020E                     	;# 
   233  0211                     	;# 
   234  0211                     	;# 
   235  0212                     	;# 
   236  0212                     	;# 
   237  0213                     	;# 
   238  0213                     	;# 
   239  0214                     	;# 
   240  0214                     	;# 
   241  0215                     	;# 
   242  0215                     	;# 
   243  0215                     	;# 
   244  0216                     	;# 
   245  0216                     	;# 
   246  0217                     	;# 
   247  0217                     	;# 
   248  0219                     	;# 
   249  021A                     	;# 
   250  021B                     	;# 
   251  021C                     	;# 
   252  021D                     	;# 
   253  021E                     	;# 
   254  021F                     	;# 
   255  0291                     	;# 
   256  0291                     	;# 
   257  0292                     	;# 
   258  0293                     	;# 
   259  0294                     	;# 
   260  0295                     	;# 
   261  0295                     	;# 
   262  0296                     	;# 
   263  0298                     	;# 
   264  0298                     	;# 
   265  0299                     	;# 
   266  029A                     	;# 
   267  029B                     	;# 
   268  029C                     	;# 
   269  029D                     	;# 
   270  029E                     	;# 
   271  0311                     	;# 
   272  0311                     	;# 
   273  0312                     	;# 
   274  0313                     	;# 
   275  0318                     	;# 
   276  0318                     	;# 
   277  0319                     	;# 
   278  031A                     	;# 
   279  038C                     	;# 
   280  038D                     	;# 
   281  038E                     	;# 
   282  0391                     	;# 
   283  0392                     	;# 
   284  0393                     	;# 
   285  0394                     	;# 
   286  0395                     	;# 
   287  0396                     	;# 
   288  039A                     	;# 
   289  039C                     	;# 
   290  039D                     	;# 
   291  039E                     	;# 
   292  039F                     	;# 
   293  0415                     	;# 
   294  0416                     	;# 
   295  0417                     	;# 
   296  041C                     	;# 
   297  041D                     	;# 
   298  041E                     	;# 
   299  0FE4                     	;# 
   300  0FE5                     	;# 
   301  0FE6                     	;# 
   302  0FE7                     	;# 
   303  0FE8                     	;# 
   304  0FE9                     	;# 
   305  0FEA                     	;# 
   306  0FEB                     	;# 
   307  0FED                     	;# 
   308  0FEE                     	;# 
   309  0FEF                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000D                     	;# 
   324  000E                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  0111                     	;# 
   362  0112                     	;# 
   363  0113                     	;# 
   364  0114                     	;# 
   365  0115                     	;# 
   366  0116                     	;# 
   367  0117                     	;# 
   368  0118                     	;# 
   369  0119                     	;# 
   370  011A                     	;# 
   371  011B                     	;# 
   372  011D                     	;# 
   373  011E                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  018E                     	;# 
   377  0191                     	;# 
   378  0191                     	;# 
   379  0192                     	;# 
   380  0193                     	;# 
   381  0193                     	;# 
   382  0193                     	;# 
   383  0194                     	;# 
   384  0195                     	;# 
   385  0196                     	;# 
   386  0199                     	;# 
   387  019A                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019C                     	;# 
   391  019D                     	;# 
   392  019E                     	;# 
   393  019F                     	;# 
   394  020C                     	;# 
   395  020D                     	;# 
   396  020E                     	;# 
   397  0211                     	;# 
   398  0211                     	;# 
   399  0212                     	;# 
   400  0212                     	;# 
   401  0213                     	;# 
   402  0213                     	;# 
   403  0214                     	;# 
   404  0214                     	;# 
   405  0215                     	;# 
   406  0215                     	;# 
   407  0215                     	;# 
   408  0216                     	;# 
   409  0216                     	;# 
   410  0217                     	;# 
   411  0217                     	;# 
   412  0219                     	;# 
   413  021A                     	;# 
   414  021B                     	;# 
   415  021C                     	;# 
   416  021D                     	;# 
   417  021E                     	;# 
   418  021F                     	;# 
   419  0291                     	;# 
   420  0291                     	;# 
   421  0292                     	;# 
   422  0293                     	;# 
   423  0294                     	;# 
   424  0295                     	;# 
   425  0295                     	;# 
   426  0296                     	;# 
   427  0298                     	;# 
   428  0298                     	;# 
   429  0299                     	;# 
   430  029A                     	;# 
   431  029B                     	;# 
   432  029C                     	;# 
   433  029D                     	;# 
   434  029E                     	;# 
   435  0311                     	;# 
   436  0311                     	;# 
   437  0312                     	;# 
   438  0313                     	;# 
   439  0318                     	;# 
   440  0318                     	;# 
   441  0319                     	;# 
   442  031A                     	;# 
   443  038C                     	;# 
   444  038D                     	;# 
   445  038E                     	;# 
   446  0391                     	;# 
   447  0392                     	;# 
   448  0393                     	;# 
   449  0394                     	;# 
   450  0395                     	;# 
   451  0396                     	;# 
   452  039A                     	;# 
   453  039C                     	;# 
   454  039D                     	;# 
   455  039E                     	;# 
   456  039F                     	;# 
   457  0415                     	;# 
   458  0416                     	;# 
   459  0417                     	;# 
   460  041C                     	;# 
   461  041D                     	;# 
   462  041E                     	;# 
   463  0FE4                     	;# 
   464  0FE5                     	;# 
   465  0FE6                     	;# 
   466  0FE7                     	;# 
   467  0FE8                     	;# 
   468  0FE9                     	;# 
   469  0FEA                     	;# 
   470  0FEB                     	;# 
   471  0FED                     	;# 
   472  0FEE                     	;# 
   473  0FEF                     	;# 
   474  0000                     	;# 
   475  0001                     	;# 
   476  0002                     	;# 
   477  0003                     	;# 
   478  0004                     	;# 
   479  0005                     	;# 
   480  0006                     	;# 
   481  0007                     	;# 
   482  0008                     	;# 
   483  0009                     	;# 
   484  000A                     	;# 
   485  000B                     	;# 
   486  000C                     	;# 
   487  000D                     	;# 
   488  000E                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0014                     	;# 
   493  0015                     	;# 
   494  0016                     	;# 
   495  0016                     	;# 
   496  0017                     	;# 
   497  0018                     	;# 
   498  0019                     	;# 
   499  001A                     	;# 
   500  001B                     	;# 
   501  001C                     	;# 
   502  001E                     	;# 
   503  001F                     	;# 
   504  008C                     	;# 
   505  008D                     	;# 
   506  008E                     	;# 
   507  0091                     	;# 
   508  0092                     	;# 
   509  0093                     	;# 
   510  0094                     	;# 
   511  0095                     	;# 
   512  0096                     	;# 
   513  0097                     	;# 
   514  0098                     	;# 
   515  0099                     	;# 
   516  009A                     	;# 
   517  009B                     	;# 
   518  009B                     	;# 
   519  009C                     	;# 
   520  009D                     	;# 
   521  009E                     	;# 
   522  010C                     	;# 
   523  010D                     	;# 
   524  010E                     	;# 
   525  0111                     	;# 
   526  0112                     	;# 
   527  0113                     	;# 
   528  0114                     	;# 
   529  0115                     	;# 
   530  0116                     	;# 
   531  0117                     	;# 
   532  0118                     	;# 
   533  0119                     	;# 
   534  011A                     	;# 
   535  011B                     	;# 
   536  011D                     	;# 
   537  011E                     	;# 
   538  018C                     	;# 
   539  018D                     	;# 
   540  018E                     	;# 
   541  0191                     	;# 
   542  0191                     	;# 
   543  0192                     	;# 
   544  0193                     	;# 
   545  0193                     	;# 
   546  0193                     	;# 
   547  0194                     	;# 
   548  0195                     	;# 
   549  0196                     	;# 
   550  0199                     	;# 
   551  019A                     	;# 
   552  019B                     	;# 
   553  019B                     	;# 
   554  019C                     	;# 
   555  019D                     	;# 
   556  019E                     	;# 
   557  019F                     	;# 
   558  020C                     	;# 
   559  020D                     	;# 
   560  020E                     	;# 
   561  0211                     	;# 
   562  0211                     	;# 
   563  0212                     	;# 
   564  0212                     	;# 
   565  0213                     	;# 
   566  0213                     	;# 
   567  0214                     	;# 
   568  0214                     	;# 
   569  0215                     	;# 
   570  0215                     	;# 
   571  0215                     	;# 
   572  0216                     	;# 
   573  0216                     	;# 
   574  0217                     	;# 
   575  0217                     	;# 
   576  0219                     	;# 
   577  021A                     	;# 
   578  021B                     	;# 
   579  021C                     	;# 
   580  021D                     	;# 
   581  021E                     	;# 
   582  021F                     	;# 
   583  0291                     	;# 
   584  0291                     	;# 
   585  0292                     	;# 
   586  0293                     	;# 
   587  0294                     	;# 
   588  0295                     	;# 
   589  0295                     	;# 
   590  0296                     	;# 
   591  0298                     	;# 
   592  0298                     	;# 
   593  0299                     	;# 
   594  029A                     	;# 
   595  029B                     	;# 
   596  029C                     	;# 
   597  029D                     	;# 
   598  029E                     	;# 
   599  0311                     	;# 
   600  0311                     	;# 
   601  0312                     	;# 
   602  0313                     	;# 
   603  0318                     	;# 
   604  0318                     	;# 
   605  0319                     	;# 
   606  031A                     	;# 
   607  038C                     	;# 
   608  038D                     	;# 
   609  038E                     	;# 
   610  0391                     	;# 
   611  0392                     	;# 
   612  0393                     	;# 
   613  0394                     	;# 
   614  0395                     	;# 
   615  0396                     	;# 
   616  039A                     	;# 
   617  039C                     	;# 
   618  039D                     	;# 
   619  039E                     	;# 
   620  039F                     	;# 
   621  0415                     	;# 
   622  0416                     	;# 
   623  0417                     	;# 
   624  041C                     	;# 
   625  041D                     	;# 
   626  041E                     	;# 
   627  0FE4                     	;# 
   628  0FE5                     	;# 
   629  0FE6                     	;# 
   630  0FE7                     	;# 
   631  0FE8                     	;# 
   632  0FE9                     	;# 
   633  0FEA                     	;# 
   634  0FEB                     	;# 
   635  0FED                     	;# 
   636  0FEE                     	;# 
   637  0FEF                     	;# 
   638  0000                     	;# 
   639  0001                     	;# 
   640  0002                     	;# 
   641  0003                     	;# 
   642  0004                     	;# 
   643  0005                     	;# 
   644  0006                     	;# 
   645  0007                     	;# 
   646  0008                     	;# 
   647  0009                     	;# 
   648  000A                     	;# 
   649  000B                     	;# 
   650  000C                     	;# 
   651  000D                     	;# 
   652  000E                     	;# 
   653  0011                     	;# 
   654  0012                     	;# 
   655  0013                     	;# 
   656  0014                     	;# 
   657  0015                     	;# 
   658  0016                     	;# 
   659  0016                     	;# 
   660  0017                     	;# 
   661  0018                     	;# 
   662  0019                     	;# 
   663  001A                     	;# 
   664  001B                     	;# 
   665  001C                     	;# 
   666  001E                     	;# 
   667  001F                     	;# 
   668  008C                     	;# 
   669  008D                     	;# 
   670  008E                     	;# 
   671  0091                     	;# 
   672  0092                     	;# 
   673  0093                     	;# 
   674  0094                     	;# 
   675  0095                     	;# 
   676  0096                     	;# 
   677  0097                     	;# 
   678  0098                     	;# 
   679  0099                     	;# 
   680  009A                     	;# 
   681  009B                     	;# 
   682  009B                     	;# 
   683  009C                     	;# 
   684  009D                     	;# 
   685  009E                     	;# 
   686  010C                     	;# 
   687  010D                     	;# 
   688  010E                     	;# 
   689  0111                     	;# 
   690  0112                     	;# 
   691  0113                     	;# 
   692  0114                     	;# 
   693  0115                     	;# 
   694  0116                     	;# 
   695  0117                     	;# 
   696  0118                     	;# 
   697  0119                     	;# 
   698  011A                     	;# 
   699  011B                     	;# 
   700  011D                     	;# 
   701  011E                     	;# 
   702  018C                     	;# 
   703  018D                     	;# 
   704  018E                     	;# 
   705  0191                     	;# 
   706  0191                     	;# 
   707  0192                     	;# 
   708  0193                     	;# 
   709  0193                     	;# 
   710  0193                     	;# 
   711  0194                     	;# 
   712  0195                     	;# 
   713  0196                     	;# 
   714  0199                     	;# 
   715  019A                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019C                     	;# 
   719  019D                     	;# 
   720  019E                     	;# 
   721  019F                     	;# 
   722  020C                     	;# 
   723  020D                     	;# 
   724  020E                     	;# 
   725  0211                     	;# 
   726  0211                     	;# 
   727  0212                     	;# 
   728  0212                     	;# 
   729  0213                     	;# 
   730  0213                     	;# 
   731  0214                     	;# 
   732  0214                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0216                     	;# 
   737  0216                     	;# 
   738  0217                     	;# 
   739  0217                     	;# 
   740  0219                     	;# 
   741  021A                     	;# 
   742  021B                     	;# 
   743  021C                     	;# 
   744  021D                     	;# 
   745  021E                     	;# 
   746  021F                     	;# 
   747  0291                     	;# 
   748  0291                     	;# 
   749  0292                     	;# 
   750  0293                     	;# 
   751  0294                     	;# 
   752  0295                     	;# 
   753  0295                     	;# 
   754  0296                     	;# 
   755  0298                     	;# 
   756  0298                     	;# 
   757  0299                     	;# 
   758  029A                     	;# 
   759  029B                     	;# 
   760  029C                     	;# 
   761  029D                     	;# 
   762  029E                     	;# 
   763  0311                     	;# 
   764  0311                     	;# 
   765  0312                     	;# 
   766  0313                     	;# 
   767  0318                     	;# 
   768  0318                     	;# 
   769  0319                     	;# 
   770  031A                     	;# 
   771  038C                     	;# 
   772  038D                     	;# 
   773  038E                     	;# 
   774  0391                     	;# 
   775  0392                     	;# 
   776  0393                     	;# 
   777  0394                     	;# 
   778  0395                     	;# 
   779  0396                     	;# 
   780  039A                     	;# 
   781  039C                     	;# 
   782  039D                     	;# 
   783  039E                     	;# 
   784  039F                     	;# 
   785  0415                     	;# 
   786  0416                     	;# 
   787  0417                     	;# 
   788  041C                     	;# 
   789  041D                     	;# 
   790  041E                     	;# 
   791  0FE4                     	;# 
   792  0FE5                     	;# 
   793  0FE6                     	;# 
   794  0FE7                     	;# 
   795  0FE8                     	;# 
   796  0FE9                     	;# 
   797  0FEA                     	;# 
   798  0FEB                     	;# 
   799  0FED                     	;# 
   800  0FEE                     	;# 
   801  0FEF                     	;# 
   802  0000                     	;# 
   803  0001                     	;# 
   804  0002                     	;# 
   805  0003                     	;# 
   806  0004                     	;# 
   807  0005                     	;# 
   808  0006                     	;# 
   809  0007                     	;# 
   810  0008                     	;# 
   811  0009                     	;# 
   812  000A                     	;# 
   813  000B                     	;# 
   814  000C                     	;# 
   815  000D                     	;# 
   816  000E                     	;# 
   817  0011                     	;# 
   818  0012                     	;# 
   819  0013                     	;# 
   820  0014                     	;# 
   821  0015                     	;# 
   822  0016                     	;# 
   823  0016                     	;# 
   824  0017                     	;# 
   825  0018                     	;# 
   826  0019                     	;# 
   827  001A                     	;# 
   828  001B                     	;# 
   829  001C                     	;# 
   830  001E                     	;# 
   831  001F                     	;# 
   832  008C                     	;# 
   833  008D                     	;# 
   834  008E                     	;# 
   835  0091                     	;# 
   836  0092                     	;# 
   837  0093                     	;# 
   838  0094                     	;# 
   839  0095                     	;# 
   840  0096                     	;# 
   841  0097                     	;# 
   842  0098                     	;# 
   843  0099                     	;# 
   844  009A                     	;# 
   845  009B                     	;# 
   846  009B                     	;# 
   847  009C                     	;# 
   848  009D                     	;# 
   849  009E                     	;# 
   850  010C                     	;# 
   851  010D                     	;# 
   852  010E                     	;# 
   853  0111                     	;# 
   854  0112                     	;# 
   855  0113                     	;# 
   856  0114                     	;# 
   857  0115                     	;# 
   858  0116                     	;# 
   859  0117                     	;# 
   860  0118                     	;# 
   861  0119                     	;# 
   862  011A                     	;# 
   863  011B                     	;# 
   864  011D                     	;# 
   865  011E                     	;# 
   866  018C                     	;# 
   867  018D                     	;# 
   868  018E                     	;# 
   869  0191                     	;# 
   870  0191                     	;# 
   871  0192                     	;# 
   872  0193                     	;# 
   873  0193                     	;# 
   874  0193                     	;# 
   875  0194                     	;# 
   876  0195                     	;# 
   877  0196                     	;# 
   878  0199                     	;# 
   879  019A                     	;# 
   880  019B                     	;# 
   881  019B                     	;# 
   882  019C                     	;# 
   883  019D                     	;# 
   884  019E                     	;# 
   885  019F                     	;# 
   886  020C                     	;# 
   887  020D                     	;# 
   888  020E                     	;# 
   889  0211                     	;# 
   890  0211                     	;# 
   891  0212                     	;# 
   892  0212                     	;# 
   893  0213                     	;# 
   894  0213                     	;# 
   895  0214                     	;# 
   896  0214                     	;# 
   897  0215                     	;# 
   898  0215                     	;# 
   899  0215                     	;# 
   900  0216                     	;# 
   901  0216                     	;# 
   902  0217                     	;# 
   903  0217                     	;# 
   904  0219                     	;# 
   905  021A                     	;# 
   906  021B                     	;# 
   907  021C                     	;# 
   908  021D                     	;# 
   909  021E                     	;# 
   910  021F                     	;# 
   911  0291                     	;# 
   912  0291                     	;# 
   913  0292                     	;# 
   914  0293                     	;# 
   915  0294                     	;# 
   916  0295                     	;# 
   917  0295                     	;# 
   918  0296                     	;# 
   919  0298                     	;# 
   920  0298                     	;# 
   921  0299                     	;# 
   922  029A                     	;# 
   923  029B                     	;# 
   924  029C                     	;# 
   925  029D                     	;# 
   926  029E                     	;# 
   927  0311                     	;# 
   928  0311                     	;# 
   929  0312                     	;# 
   930  0313                     	;# 
   931  0318                     	;# 
   932  0318                     	;# 
   933  0319                     	;# 
   934  031A                     	;# 
   935  038C                     	;# 
   936  038D                     	;# 
   937  038E                     	;# 
   938  0391                     	;# 
   939  0392                     	;# 
   940  0393                     	;# 
   941  0394                     	;# 
   942  0395                     	;# 
   943  0396                     	;# 
   944  039A                     	;# 
   945  039C                     	;# 
   946  039D                     	;# 
   947  039E                     	;# 
   948  039F                     	;# 
   949  0415                     	;# 
   950  0416                     	;# 
   951  0417                     	;# 
   952  041C                     	;# 
   953  041D                     	;# 
   954  041E                     	;# 
   955  0FE4                     	;# 
   956  0FE5                     	;# 
   957  0FE6                     	;# 
   958  0FE7                     	;# 
   959  0FE8                     	;# 
   960  0FE9                     	;# 
   961  0FEA                     	;# 
   962  0FEB                     	;# 
   963  0FED                     	;# 
   964  0FEE                     	;# 
   965  0FEF                     	;# 
   966  0000                     	;# 
   967  0001                     	;# 
   968  0002                     	;# 
   969  0003                     	;# 
   970  0004                     	;# 
   971  0005                     	;# 
   972  0006                     	;# 
   973  0007                     	;# 
   974  0008                     	;# 
   975  0009                     	;# 
   976  000A                     	;# 
   977  000B                     	;# 
   978  000C                     	;# 
   979  000D                     	;# 
   980  000E                     	;# 
   981  0011                     	;# 
   982  0012                     	;# 
   983  0013                     	;# 
   984  0014                     	;# 
   985  0015                     	;# 
   986  0016                     	;# 
   987  0016                     	;# 
   988  0017                     	;# 
   989  0018                     	;# 
   990  0019                     	;# 
   991  001A                     	;# 
   992  001B                     	;# 
   993  001C                     	;# 
   994  001E                     	;# 
   995  001F                     	;# 
   996  008C                     	;# 
   997  008D                     	;# 
   998  008E                     	;# 
   999  0091                     	;# 
  1000  0092                     	;# 
  1001  0093                     	;# 
  1002  0094                     	;# 
  1003  0095                     	;# 
  1004  0096                     	;# 
  1005  0097                     	;# 
  1006  0098                     	;# 
  1007  0099                     	;# 
  1008  009A                     	;# 
  1009  009B                     	;# 
  1010  009B                     	;# 
  1011  009C                     	;# 
  1012  009D                     	;# 
  1013  009E                     	;# 
  1014  010C                     	;# 
  1015  010D                     	;# 
  1016  010E                     	;# 
  1017  0111                     	;# 
  1018  0112                     	;# 
  1019  0113                     	;# 
  1020  0114                     	;# 
  1021  0115                     	;# 
  1022  0116                     	;# 
  1023  0117                     	;# 
  1024  0118                     	;# 
  1025  0119                     	;# 
  1026  011A                     	;# 
  1027  011B                     	;# 
  1028  011D                     	;# 
  1029  011E                     	;# 
  1030  018C                     	;# 
  1031  018D                     	;# 
  1032  018E                     	;# 
  1033  0191                     	;# 
  1034  0191                     	;# 
  1035  0192                     	;# 
  1036  0193                     	;# 
  1037  0193                     	;# 
  1038  0193                     	;# 
  1039  0194                     	;# 
  1040  0195                     	;# 
  1041  0196                     	;# 
  1042  0199                     	;# 
  1043  019A                     	;# 
  1044  019B                     	;# 
  1045  019B                     	;# 
  1046  019C                     	;# 
  1047  019D                     	;# 
  1048  019E                     	;# 
  1049  019F                     	;# 
  1050  020C                     	;# 
  1051  020D                     	;# 
  1052  020E                     	;# 
  1053  0211                     	;# 
  1054  0211                     	;# 
  1055  0212                     	;# 
  1056  0212                     	;# 
  1057  0213                     	;# 
  1058  0213                     	;# 
  1059  0214                     	;# 
  1060  0214                     	;# 
  1061  0215                     	;# 
  1062  0215                     	;# 
  1063  0215                     	;# 
  1064  0216                     	;# 
  1065  0216                     	;# 
  1066  0217                     	;# 
  1067  0217                     	;# 
  1068  0219                     	;# 
  1069  021A                     	;# 
  1070  021B                     	;# 
  1071  021C                     	;# 
  1072  021D                     	;# 
  1073  021E                     	;# 
  1074  021F                     	;# 
  1075  0291                     	;# 
  1076  0291                     	;# 
  1077  0292                     	;# 
  1078  0293                     	;# 
  1079  0294                     	;# 
  1080  0295                     	;# 
  1081  0295                     	;# 
  1082  0296                     	;# 
  1083  0298                     	;# 
  1084  0298                     	;# 
  1085  0299                     	;# 
  1086  029A                     	;# 
  1087  029B                     	;# 
  1088  029C                     	;# 
  1089  029D                     	;# 
  1090  029E                     	;# 
  1091  0311                     	;# 
  1092  0311                     	;# 
  1093  0312                     	;# 
  1094  0313                     	;# 
  1095  0318                     	;# 
  1096  0318                     	;# 
  1097  0319                     	;# 
  1098  031A                     	;# 
  1099  038C                     	;# 
  1100  038D                     	;# 
  1101  038E                     	;# 
  1102  0391                     	;# 
  1103  0392                     	;# 
  1104  0393                     	;# 
  1105  0394                     	;# 
  1106  0395                     	;# 
  1107  0396                     	;# 
  1108  039A                     	;# 
  1109  039C                     	;# 
  1110  039D                     	;# 
  1111  039E                     	;# 
  1112  039F                     	;# 
  1113  0415                     	;# 
  1114  0416                     	;# 
  1115  0417                     	;# 
  1116  041C                     	;# 
  1117  041D                     	;# 
  1118  041E                     	;# 
  1119  0FE4                     	;# 
  1120  0FE5                     	;# 
  1121  0FE6                     	;# 
  1122  0FE7                     	;# 
  1123  0FE8                     	;# 
  1124  0FE9                     	;# 
  1125  0FEA                     	;# 
  1126  0FEB                     	;# 
  1127  0FED                     	;# 
  1128  0FEE                     	;# 
  1129  0FEF                     	;# 
  1130  0000                     	;# 
  1131  0001                     	;# 
  1132  0002                     	;# 
  1133  0003                     	;# 
  1134  0004                     	;# 
  1135  0005                     	;# 
  1136  0006                     	;# 
  1137  0007                     	;# 
  1138  0008                     	;# 
  1139  0009                     	;# 
  1140  000A                     	;# 
  1141  000B                     	;# 
  1142  000C                     	;# 
  1143  000D                     	;# 
  1144  000E                     	;# 
  1145  0011                     	;# 
  1146  0012                     	;# 
  1147  0013                     	;# 
  1148  0014                     	;# 
  1149  0015                     	;# 
  1150  0016                     	;# 
  1151  0016                     	;# 
  1152  0017                     	;# 
  1153  0018                     	;# 
  1154  0019                     	;# 
  1155  001A                     	;# 
  1156  001B                     	;# 
  1157  001C                     	;# 
  1158  001E                     	;# 
  1159  001F                     	;# 
  1160  008C                     	;# 
  1161  008D                     	;# 
  1162  008E                     	;# 
  1163  0091                     	;# 
  1164  0092                     	;# 
  1165  0093                     	;# 
  1166  0094                     	;# 
  1167  0095                     	;# 
  1168  0096                     	;# 
  1169  0097                     	;# 
  1170  0098                     	;# 
  1171  0099                     	;# 
  1172  009A                     	;# 
  1173  009B                     	;# 
  1174  009B                     	;# 
  1175  009C                     	;# 
  1176  009D                     	;# 
  1177  009E                     	;# 
  1178  010C                     	;# 
  1179  010D                     	;# 
  1180  010E                     	;# 
  1181  0111                     	;# 
  1182  0112                     	;# 
  1183  0113                     	;# 
  1184  0114                     	;# 
  1185  0115                     	;# 
  1186  0116                     	;# 
  1187  0117                     	;# 
  1188  0118                     	;# 
  1189  0119                     	;# 
  1190  011A                     	;# 
  1191  011B                     	;# 
  1192  011D                     	;# 
  1193  011E                     	;# 
  1194  018C                     	;# 
  1195  018D                     	;# 
  1196  018E                     	;# 
  1197  0191                     	;# 
  1198  0191                     	;# 
  1199  0192                     	;# 
  1200  0193                     	;# 
  1201  0193                     	;# 
  1202  0193                     	;# 
  1203  0194                     	;# 
  1204  0195                     	;# 
  1205  0196                     	;# 
  1206  0199                     	;# 
  1207  019A                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019C                     	;# 
  1211  019D                     	;# 
  1212  019E                     	;# 
  1213  019F                     	;# 
  1214  020C                     	;# 
  1215  020D                     	;# 
  1216  020E                     	;# 
  1217  0211                     	;# 
  1218  0211                     	;# 
  1219  0212                     	;# 
  1220  0212                     	;# 
  1221  0213                     	;# 
  1222  0213                     	;# 
  1223  0214                     	;# 
  1224  0214                     	;# 
  1225  0215                     	;# 
  1226  0215                     	;# 
  1227  0215                     	;# 
  1228  0216                     	;# 
  1229  0216                     	;# 
  1230  0217                     	;# 
  1231  0217                     	;# 
  1232  0219                     	;# 
  1233  021A                     	;# 
  1234  021B                     	;# 
  1235  021C                     	;# 
  1236  021D                     	;# 
  1237  021E                     	;# 
  1238  021F                     	;# 
  1239  0291                     	;# 
  1240  0291                     	;# 
  1241  0292                     	;# 
  1242  0293                     	;# 
  1243  0294                     	;# 
  1244  0295                     	;# 
  1245  0295                     	;# 
  1246  0296                     	;# 
  1247  0298                     	;# 
  1248  0298                     	;# 
  1249  0299                     	;# 
  1250  029A                     	;# 
  1251  029B                     	;# 
  1252  029C                     	;# 
  1253  029D                     	;# 
  1254  029E                     	;# 
  1255  0311                     	;# 
  1256  0311                     	;# 
  1257  0312                     	;# 
  1258  0313                     	;# 
  1259  0318                     	;# 
  1260  0318                     	;# 
  1261  0319                     	;# 
  1262  031A                     	;# 
  1263  038C                     	;# 
  1264  038D                     	;# 
  1265  038E                     	;# 
  1266  0391                     	;# 
  1267  0392                     	;# 
  1268  0393                     	;# 
  1269  0394                     	;# 
  1270  0395                     	;# 
  1271  0396                     	;# 
  1272  039A                     	;# 
  1273  039C                     	;# 
  1274  039D                     	;# 
  1275  039E                     	;# 
  1276  039F                     	;# 
  1277  0415                     	;# 
  1278  0416                     	;# 
  1279  0417                     	;# 
  1280  041C                     	;# 
  1281  041D                     	;# 
  1282  041E                     	;# 
  1283  0FE4                     	;# 
  1284  0FE5                     	;# 
  1285  0FE6                     	;# 
  1286  0FE7                     	;# 
  1287  0FE8                     	;# 
  1288  0FE9                     	;# 
  1289  0FEA                     	;# 
  1290  0FEB                     	;# 
  1291  0FED                     	;# 
  1292  0FEE                     	;# 
  1293  0FEF                     	;# 
  1294  0000                     	;# 
  1295  0001                     	;# 
  1296  0002                     	;# 
  1297  0003                     	;# 
  1298  0004                     	;# 
  1299  0005                     	;# 
  1300  0006                     	;# 
  1301  0007                     	;# 
  1302  0008                     	;# 
  1303  0009                     	;# 
  1304  000A                     	;# 
  1305  000B                     	;# 
  1306  000C                     	;# 
  1307  000D                     	;# 
  1308  000E                     	;# 
  1309  0011                     	;# 
  1310  0012                     	;# 
  1311  0013                     	;# 
  1312  0014                     	;# 
  1313  0015                     	;# 
  1314  0016                     	;# 
  1315  0016                     	;# 
  1316  0017                     	;# 
  1317  0018                     	;# 
  1318  0019                     	;# 
  1319  001A                     	;# 
  1320  001B                     	;# 
  1321  001C                     	;# 
  1322  001E                     	;# 
  1323  001F                     	;# 
  1324  008C                     	;# 
  1325  008D                     	;# 
  1326  008E                     	;# 
  1327  0091                     	;# 
  1328  0092                     	;# 
  1329  0093                     	;# 
  1330  0094                     	;# 
  1331  0095                     	;# 
  1332  0096                     	;# 
  1333  0097                     	;# 
  1334  0098                     	;# 
  1335  0099                     	;# 
  1336  009A                     	;# 
  1337  009B                     	;# 
  1338  009B                     	;# 
  1339  009C                     	;# 
  1340  009D                     	;# 
  1341  009E                     	;# 
  1342  010C                     	;# 
  1343  010D                     	;# 
  1344  010E                     	;# 
  1345  0111                     	;# 
  1346  0112                     	;# 
  1347  0113                     	;# 
  1348  0114                     	;# 
  1349  0115                     	;# 
  1350  0116                     	;# 
  1351  0117                     	;# 
  1352  0118                     	;# 
  1353  0119                     	;# 
  1354  011A                     	;# 
  1355  011B                     	;# 
  1356  011D                     	;# 
  1357  011E                     	;# 
  1358  018C                     	;# 
  1359  018D                     	;# 
  1360  018E                     	;# 
  1361  0191                     	;# 
  1362  0191                     	;# 
  1363  0192                     	;# 
  1364  0193                     	;# 
  1365  0193                     	;# 
  1366  0193                     	;# 
  1367  0194                     	;# 
  1368  0195                     	;# 
  1369  0196                     	;# 
  1370  0199                     	;# 
  1371  019A                     	;# 
  1372  019B                     	;# 
  1373  019B                     	;# 
  1374  019C                     	;# 
  1375  019D                     	;# 
  1376  019E                     	;# 
  1377  019F                     	;# 
  1378  020C                     	;# 
  1379  020D                     	;# 
  1380  020E                     	;# 
  1381  0211                     	;# 
  1382  0211                     	;# 
  1383  0212                     	;# 
  1384  0212                     	;# 
  1385  0213                     	;# 
  1386  0213                     	;# 
  1387  0214                     	;# 
  1388  0214                     	;# 
  1389  0215                     	;# 
  1390  0215                     	;# 
  1391  0215                     	;# 
  1392  0216                     	;# 
  1393  0216                     	;# 
  1394  0217                     	;# 
  1395  0217                     	;# 
  1396  0219                     	;# 
  1397  021A                     	;# 
  1398  021B                     	;# 
  1399  021C                     	;# 
  1400  021D                     	;# 
  1401  021E                     	;# 
  1402  021F                     	;# 
  1403  0291                     	;# 
  1404  0291                     	;# 
  1405  0292                     	;# 
  1406  0293                     	;# 
  1407  0294                     	;# 
  1408  0295                     	;# 
  1409  0295                     	;# 
  1410  0296                     	;# 
  1411  0298                     	;# 
  1412  0298                     	;# 
  1413  0299                     	;# 
  1414  029A                     	;# 
  1415  029B                     	;# 
  1416  029C                     	;# 
  1417  029D                     	;# 
  1418  029E                     	;# 
  1419  0311                     	;# 
  1420  0311                     	;# 
  1421  0312                     	;# 
  1422  0313                     	;# 
  1423  0318                     	;# 
  1424  0318                     	;# 
  1425  0319                     	;# 
  1426  031A                     	;# 
  1427  038C                     	;# 
  1428  038D                     	;# 
  1429  038E                     	;# 
  1430  0391                     	;# 
  1431  0392                     	;# 
  1432  0393                     	;# 
  1433  0394                     	;# 
  1434  0395                     	;# 
  1435  0396                     	;# 
  1436  039A                     	;# 
  1437  039C                     	;# 
  1438  039D                     	;# 
  1439  039E                     	;# 
  1440  039F                     	;# 
  1441  0415                     	;# 
  1442  0416                     	;# 
  1443  0417                     	;# 
  1444  041C                     	;# 
  1445  041D                     	;# 
  1446  041E                     	;# 
  1447  0FE4                     	;# 
  1448  0FE5                     	;# 
  1449  0FE6                     	;# 
  1450  0FE7                     	;# 
  1451  0FE8                     	;# 
  1452  0FE9                     	;# 
  1453  0FEA                     	;# 
  1454  0FEB                     	;# 
  1455  0FED                     	;# 
  1456  0FEE                     	;# 
  1457  0FEF                     	;# 
  1458  0000                     	;# 
  1459  0001                     	;# 
  1460  0002                     	;# 
  1461  0003                     	;# 
  1462  0004                     	;# 
  1463  0005                     	;# 
  1464  0006                     	;# 
  1465  0007                     	;# 
  1466  0008                     	;# 
  1467  0009                     	;# 
  1468  000A                     	;# 
  1469  000B                     	;# 
  1470  000C                     	;# 
  1471  000D                     	;# 
  1472  000E                     	;# 
  1473  0011                     	;# 
  1474  0012                     	;# 
  1475  0013                     	;# 
  1476  0014                     	;# 
  1477  0015                     	;# 
  1478  0016                     	;# 
  1479  0016                     	;# 
  1480  0017                     	;# 
  1481  0018                     	;# 
  1482  0019                     	;# 
  1483  001A                     	;# 
  1484  001B                     	;# 
  1485  001C                     	;# 
  1486  001E                     	;# 
  1487  001F                     	;# 
  1488  008C                     	;# 
  1489  008D                     	;# 
  1490  008E                     	;# 
  1491  0091                     	;# 
  1492  0092                     	;# 
  1493  0093                     	;# 
  1494  0094                     	;# 
  1495  0095                     	;# 
  1496  0096                     	;# 
  1497  0097                     	;# 
  1498  0098                     	;# 
  1499  0099                     	;# 
  1500  009A                     	;# 
  1501  009B                     	;# 
  1502  009B                     	;# 
  1503  009C                     	;# 
  1504  009D                     	;# 
  1505  009E                     	;# 
  1506  010C                     	;# 
  1507  010D                     	;# 
  1508  010E                     	;# 
  1509  0111                     	;# 
  1510  0112                     	;# 
  1511  0113                     	;# 
  1512  0114                     	;# 
  1513  0115                     	;# 
  1514  0116                     	;# 
  1515  0117                     	;# 
  1516  0118                     	;# 
  1517  0119                     	;# 
  1518  011A                     	;# 
  1519  011B                     	;# 
  1520  011D                     	;# 
  1521  011E                     	;# 
  1522  018C                     	;# 
  1523  018D                     	;# 
  1524  018E                     	;# 
  1525  0191                     	;# 
  1526  0191                     	;# 
  1527  0192                     	;# 
  1528  0193                     	;# 
  1529  0193                     	;# 
  1530  0193                     	;# 
  1531  0194                     	;# 
  1532  0195                     	;# 
  1533  0196                     	;# 
  1534  0199                     	;# 
  1535  019A                     	;# 
  1536  019B                     	;# 
  1537  019B                     	;# 
  1538  019C                     	;# 
  1539  019D                     	;# 
  1540  019E                     	;# 
  1541  019F                     	;# 
  1542  020C                     	;# 
  1543  020D                     	;# 
  1544  020E                     	;# 
  1545  0211                     	;# 
  1546  0211                     	;# 
  1547  0212                     	;# 
  1548  0212                     	;# 
  1549  0213                     	;# 
  1550  0213                     	;# 
  1551  0214                     	;# 
  1552  0214                     	;# 
  1553  0215                     	;# 
  1554  0215                     	;# 
  1555  0215                     	;# 
  1556  0216                     	;# 
  1557  0216                     	;# 
  1558  0217                     	;# 
  1559  0217                     	;# 
  1560  0219                     	;# 
  1561  021A                     	;# 
  1562  021B                     	;# 
  1563  021C                     	;# 
  1564  021D                     	;# 
  1565  021E                     	;# 
  1566  021F                     	;# 
  1567  0291                     	;# 
  1568  0291                     	;# 
  1569  0292                     	;# 
  1570  0293                     	;# 
  1571  0294                     	;# 
  1572  0295                     	;# 
  1573  0295                     	;# 
  1574  0296                     	;# 
  1575  0298                     	;# 
  1576  0298                     	;# 
  1577  0299                     	;# 
  1578  029A                     	;# 
  1579  029B                     	;# 
  1580  029C                     	;# 
  1581  029D                     	;# 
  1582  029E                     	;# 
  1583  0311                     	;# 
  1584  0311                     	;# 
  1585  0312                     	;# 
  1586  0313                     	;# 
  1587  0318                     	;# 
  1588  0318                     	;# 
  1589  0319                     	;# 
  1590  031A                     	;# 
  1591  038C                     	;# 
  1592  038D                     	;# 
  1593  038E                     	;# 
  1594  0391                     	;# 
  1595  0392                     	;# 
  1596  0393                     	;# 
  1597  0394                     	;# 
  1598  0395                     	;# 
  1599  0396                     	;# 
  1600  039A                     	;# 
  1601  039C                     	;# 
  1602  039D                     	;# 
  1603  039E                     	;# 
  1604  039F                     	;# 
  1605  0415                     	;# 
  1606  0416                     	;# 
  1607  0417                     	;# 
  1608  041C                     	;# 
  1609  041D                     	;# 
  1610  041E                     	;# 
  1611  0FE4                     	;# 
  1612  0FE5                     	;# 
  1613  0FE6                     	;# 
  1614  0FE7                     	;# 
  1615  0FE8                     	;# 
  1616  0FE9                     	;# 
  1617  0FEA                     	;# 
  1618  0FEB                     	;# 
  1619  0FED                     	;# 
  1620  0FEE                     	;# 
  1621  0FEF                     	;# 
  1622  0000                     	;# 
  1623  0001                     	;# 
  1624  0002                     	;# 
  1625  0003                     	;# 
  1626  0004                     	;# 
  1627  0005                     	;# 
  1628  0006                     	;# 
  1629  0007                     	;# 
  1630  0008                     	;# 
  1631  0009                     	;# 
  1632  000A                     	;# 
  1633  000B                     	;# 
  1634  000C                     	;# 
  1635  000D                     	;# 
  1636  000E                     	;# 
  1637  0011                     	;# 
  1638  0012                     	;# 
  1639  0013                     	;# 
  1640  0014                     	;# 
  1641  0015                     	;# 
  1642  0016                     	;# 
  1643  0016                     	;# 
  1644  0017                     	;# 
  1645  0018                     	;# 
  1646  0019                     	;# 
  1647  001A                     	;# 
  1648  001B                     	;# 
  1649  001C                     	;# 
  1650  001E                     	;# 
  1651  001F                     	;# 
  1652  008C                     	;# 
  1653  008D                     	;# 
  1654  008E                     	;# 
  1655  0091                     	;# 
  1656  0092                     	;# 
  1657  0093                     	;# 
  1658  0094                     	;# 
  1659  0095                     	;# 
  1660  0096                     	;# 
  1661  0097                     	;# 
  1662  0098                     	;# 
  1663  0099                     	;# 
  1664  009A                     	;# 
  1665  009B                     	;# 
  1666  009B                     	;# 
  1667  009C                     	;# 
  1668  009D                     	;# 
  1669  009E                     	;# 
  1670  010C                     	;# 
  1671  010D                     	;# 
  1672  010E                     	;# 
  1673  0111                     	;# 
  1674  0112                     	;# 
  1675  0113                     	;# 
  1676  0114                     	;# 
  1677  0115                     	;# 
  1678  0116                     	;# 
  1679  0117                     	;# 
  1680  0118                     	;# 
  1681  0119                     	;# 
  1682  011A                     	;# 
  1683  011B                     	;# 
  1684  011D                     	;# 
  1685  011E                     	;# 
  1686  018C                     	;# 
  1687  018D                     	;# 
  1688  018E                     	;# 
  1689  0191                     	;# 
  1690  0191                     	;# 
  1691  0192                     	;# 
  1692  0193                     	;# 
  1693  0193                     	;# 
  1694  0193                     	;# 
  1695  0194                     	;# 
  1696  0195                     	;# 
  1697  0196                     	;# 
  1698  0199                     	;# 
  1699  019A                     	;# 
  1700  019B                     	;# 
  1701  019B                     	;# 
  1702  019C                     	;# 
  1703  019D                     	;# 
  1704  019E                     	;# 
  1705  019F                     	;# 
  1706  020C                     	;# 
  1707  020D                     	;# 
  1708  020E                     	;# 
  1709  0211                     	;# 
  1710  0211                     	;# 
  1711  0212                     	;# 
  1712  0212                     	;# 
  1713  0213                     	;# 
  1714  0213                     	;# 
  1715  0214                     	;# 
  1716  0214                     	;# 
  1717  0215                     	;# 
  1718  0215                     	;# 
  1719  0215                     	;# 
  1720  0216                     	;# 
  1721  0216                     	;# 
  1722  0217                     	;# 
  1723  0217                     	;# 
  1724  0219                     	;# 
  1725  021A                     	;# 
  1726  021B                     	;# 
  1727  021C                     	;# 
  1728  021D                     	;# 
  1729  021E                     	;# 
  1730  021F                     	;# 
  1731  0291                     	;# 
  1732  0291                     	;# 
  1733  0292                     	;# 
  1734  0293                     	;# 
  1735  0294                     	;# 
  1736  0295                     	;# 
  1737  0295                     	;# 
  1738  0296                     	;# 
  1739  0298                     	;# 
  1740  0298                     	;# 
  1741  0299                     	;# 
  1742  029A                     	;# 
  1743  029B                     	;# 
  1744  029C                     	;# 
  1745  029D                     	;# 
  1746  029E                     	;# 
  1747  0311                     	;# 
  1748  0311                     	;# 
  1749  0312                     	;# 
  1750  0313                     	;# 
  1751  0318                     	;# 
  1752  0318                     	;# 
  1753  0319                     	;# 
  1754  031A                     	;# 
  1755  038C                     	;# 
  1756  038D                     	;# 
  1757  038E                     	;# 
  1758  0391                     	;# 
  1759  0392                     	;# 
  1760  0393                     	;# 
  1761  0394                     	;# 
  1762  0395                     	;# 
  1763  0396                     	;# 
  1764  039A                     	;# 
  1765  039C                     	;# 
  1766  039D                     	;# 
  1767  039E                     	;# 
  1768  039F                     	;# 
  1769  0415                     	;# 
  1770  0416                     	;# 
  1771  0417                     	;# 
  1772  041C                     	;# 
  1773  041D                     	;# 
  1774  041E                     	;# 
  1775  0FE4                     	;# 
  1776  0FE5                     	;# 
  1777  0FE6                     	;# 
  1778  0FE7                     	;# 
  1779  0FE8                     	;# 
  1780  0FE9                     	;# 
  1781  0FEA                     	;# 
  1782  0FEB                     	;# 
  1783  0FED                     	;# 
  1784  0FEE                     	;# 
  1785  0FEF                     	;# 
  1786  0000                     	;# 
  1787  0001                     	;# 
  1788  0002                     	;# 
  1789  0003                     	;# 
  1790  0004                     	;# 
  1791  0005                     	;# 
  1792  0006                     	;# 
  1793  0007                     	;# 
  1794  0008                     	;# 
  1795  0009                     	;# 
  1796  000A                     	;# 
  1797  000B                     	;# 
  1798  000C                     	;# 
  1799  000D                     	;# 
  1800  000E                     	;# 
  1801  0011                     	;# 
  1802  0012                     	;# 
  1803  0013                     	;# 
  1804  0014                     	;# 
  1805  0015                     	;# 
  1806  0016                     	;# 
  1807  0016                     	;# 
  1808  0017                     	;# 
  1809  0018                     	;# 
  1810  0019                     	;# 
  1811  001A                     	;# 
  1812  001B                     	;# 
  1813  001C                     	;# 
  1814  001E                     	;# 
  1815  001F                     	;# 
  1816  008C                     	;# 
  1817  008D                     	;# 
  1818  008E                     	;# 
  1819  0091                     	;# 
  1820  0092                     	;# 
  1821  0093                     	;# 
  1822  0094                     	;# 
  1823  0095                     	;# 
  1824  0096                     	;# 
  1825  0097                     	;# 
  1826  0098                     	;# 
  1827  0099                     	;# 
  1828  009A                     	;# 
  1829  009B                     	;# 
  1830  009B                     	;# 
  1831  009C                     	;# 
  1832  009D                     	;# 
  1833  009E                     	;# 
  1834  010C                     	;# 
  1835  010D                     	;# 
  1836  010E                     	;# 
  1837  0111                     	;# 
  1838  0112                     	;# 
  1839  0113                     	;# 
  1840  0114                     	;# 
  1841  0115                     	;# 
  1842  0116                     	;# 
  1843  0117                     	;# 
  1844  0118                     	;# 
  1845  0119                     	;# 
  1846  011A                     	;# 
  1847  011B                     	;# 
  1848  011D                     	;# 
  1849  011E                     	;# 
  1850  018C                     	;# 
  1851  018D                     	;# 
  1852  018E                     	;# 
  1853  0191                     	;# 
  1854  0191                     	;# 
  1855  0192                     	;# 
  1856  0193                     	;# 
  1857  0193                     	;# 
  1858  0193                     	;# 
  1859  0194                     	;# 
  1860  0195                     	;# 
  1861  0196                     	;# 
  1862  0199                     	;# 
  1863  019A                     	;# 
  1864  019B                     	;# 
  1865  019B                     	;# 
  1866  019C                     	;# 
  1867  019D                     	;# 
  1868  019E                     	;# 
  1869  019F                     	;# 
  1870  020C                     	;# 
  1871  020D                     	;# 
  1872  020E                     	;# 
  1873  0211                     	;# 
  1874  0211                     	;# 
  1875  0212                     	;# 
  1876  0212                     	;# 
  1877  0213                     	;# 
  1878  0213                     	;# 
  1879  0214                     	;# 
  1880  0214                     	;# 
  1881  0215                     	;# 
  1882  0215                     	;# 
  1883  0215                     	;# 
  1884  0216                     	;# 
  1885  0216                     	;# 
  1886  0217                     	;# 
  1887  0217                     	;# 
  1888  0219                     	;# 
  1889  021A                     	;# 
  1890  021B                     	;# 
  1891  021C                     	;# 
  1892  021D                     	;# 
  1893  021E                     	;# 
  1894  021F                     	;# 
  1895  0291                     	;# 
  1896  0291                     	;# 
  1897  0292                     	;# 
  1898  0293                     	;# 
  1899  0294                     	;# 
  1900  0295                     	;# 
  1901  0295                     	;# 
  1902  0296                     	;# 
  1903  0298                     	;# 
  1904  0298                     	;# 
  1905  0299                     	;# 
  1906  029A                     	;# 
  1907  029B                     	;# 
  1908  029C                     	;# 
  1909  029D                     	;# 
  1910  029E                     	;# 
  1911  0311                     	;# 
  1912  0311                     	;# 
  1913  0312                     	;# 
  1914  0313                     	;# 
  1915  0318                     	;# 
  1916  0318                     	;# 
  1917  0319                     	;# 
  1918  031A                     	;# 
  1919  038C                     	;# 
  1920  038D                     	;# 
  1921  038E                     	;# 
  1922  0391                     	;# 
  1923  0392                     	;# 
  1924  0393                     	;# 
  1925  0394                     	;# 
  1926  0395                     	;# 
  1927  0396                     	;# 
  1928  039A                     	;# 
  1929  039C                     	;# 
  1930  039D                     	;# 
  1931  039E                     	;# 
  1932  039F                     	;# 
  1933  0415                     	;# 
  1934  0416                     	;# 
  1935  0417                     	;# 
  1936  041C                     	;# 
  1937  041D                     	;# 
  1938  041E                     	;# 
  1939  0FE4                     	;# 
  1940  0FE5                     	;# 
  1941  0FE6                     	;# 
  1942  0FE7                     	;# 
  1943  0FE8                     	;# 
  1944  0FE9                     	;# 
  1945  0FEA                     	;# 
  1946  0FEB                     	;# 
  1947  0FED                     	;# 
  1948  0FEE                     	;# 
  1949  0FEF                     	;# 
  1950  0000                     	;# 
  1951  0001                     	;# 
  1952  0002                     	;# 
  1953  0003                     	;# 
  1954  0004                     	;# 
  1955  0005                     	;# 
  1956  0006                     	;# 
  1957  0007                     	;# 
  1958  0008                     	;# 
  1959  0009                     	;# 
  1960  000A                     	;# 
  1961  000B                     	;# 
  1962  000C                     	;# 
  1963  000D                     	;# 
  1964  000E                     	;# 
  1965  0011                     	;# 
  1966  0012                     	;# 
  1967  0013                     	;# 
  1968  0014                     	;# 
  1969  0015                     	;# 
  1970  0016                     	;# 
  1971  0016                     	;# 
  1972  0017                     	;# 
  1973  0018                     	;# 
  1974  0019                     	;# 
  1975  001A                     	;# 
  1976  001B                     	;# 
  1977  001C                     	;# 
  1978  001E                     	;# 
  1979  001F                     	;# 
  1980  008C                     	;# 
  1981  008D                     	;# 
  1982  008E                     	;# 
  1983  0091                     	;# 
  1984  0092                     	;# 
  1985  0093                     	;# 
  1986  0094                     	;# 
  1987  0095                     	;# 
  1988  0096                     	;# 
  1989  0097                     	;# 
  1990  0098                     	;# 
  1991  0099                     	;# 
  1992  009A                     	;# 
  1993  009B                     	;# 
  1994  009B                     	;# 
  1995  009C                     	;# 
  1996  009D                     	;# 
  1997  009E                     	;# 
  1998  010C                     	;# 
  1999  010D                     	;# 
  2000  010E                     	;# 
  2001  0111                     	;# 
  2002  0112                     	;# 
  2003  0113                     	;# 
  2004  0114                     	;# 
  2005  0115                     	;# 
  2006  0116                     	;# 
  2007  0117                     	;# 
  2008  0118                     	;# 
  2009  0119                     	;# 
  2010  011A                     	;# 
  2011  011B                     	;# 
  2012  011D                     	;# 
  2013  011E                     	;# 
  2014  018C                     	;# 
  2015  018D                     	;# 
  2016  018E                     	;# 
  2017  0191                     	;# 
  2018  0191                     	;# 
  2019  0192                     	;# 
  2020  0193                     	;# 
  2021  0193                     	;# 
  2022  0193                     	;# 
  2023  0194                     	;# 
  2024  0195                     	;# 
  2025  0196                     	;# 
  2026  0199                     	;# 
  2027  019A                     	;# 
  2028  019B                     	;# 
  2029  019B                     	;# 
  2030  019C                     	;# 
  2031  019D                     	;# 
  2032  019E                     	;# 
  2033  019F                     	;# 
  2034  020C                     	;# 
  2035  020D                     	;# 
  2036  020E                     	;# 
  2037  0211                     	;# 
  2038  0211                     	;# 
  2039  0212                     	;# 
  2040  0212                     	;# 
  2041  0213                     	;# 
  2042  0213                     	;# 
  2043  0214                     	;# 
  2044  0214                     	;# 
  2045  0215                     	;# 
  2046  0215                     	;# 
  2047  0215                     	;# 
  2048  0216                     	;# 
  2049  0216                     	;# 
  2050  0217                     	;# 
  2051  0217                     	;# 
  2052  0219                     	;# 
  2053  021A                     	;# 
  2054  021B                     	;# 
  2055  021C                     	;# 
  2056  021D                     	;# 
  2057  021E                     	;# 
  2058  021F                     	;# 
  2059  0291                     	;# 
  2060  0291                     	;# 
  2061  0292                     	;# 
  2062  0293                     	;# 
  2063  0294                     	;# 
  2064  0295                     	;# 
  2065  0295                     	;# 
  2066  0296                     	;# 
  2067  0298                     	;# 
  2068  0298                     	;# 
  2069  0299                     	;# 
  2070  029A                     	;# 
  2071  029B                     	;# 
  2072  029C                     	;# 
  2073  029D                     	;# 
  2074  029E                     	;# 
  2075  0311                     	;# 
  2076  0311                     	;# 
  2077  0312                     	;# 
  2078  0313                     	;# 
  2079  0318                     	;# 
  2080  0318                     	;# 
  2081  0319                     	;# 
  2082  031A                     	;# 
  2083  038C                     	;# 
  2084  038D                     	;# 
  2085  038E                     	;# 
  2086  0391                     	;# 
  2087  0392                     	;# 
  2088  0393                     	;# 
  2089  0394                     	;# 
  2090  0395                     	;# 
  2091  0396                     	;# 
  2092  039A                     	;# 
  2093  039C                     	;# 
  2094  039D                     	;# 
  2095  039E                     	;# 
  2096  039F                     	;# 
  2097  0415                     	;# 
  2098  0416                     	;# 
  2099  0417                     	;# 
  2100  041C                     	;# 
  2101  041D                     	;# 
  2102  041E                     	;# 
  2103  0FE4                     	;# 
  2104  0FE5                     	;# 
  2105  0FE6                     	;# 
  2106  0FE7                     	;# 
  2107  0FE8                     	;# 
  2108  0FE9                     	;# 
  2109  0FEA                     	;# 
  2110  0FEB                     	;# 
  2111  0FED                     	;# 
  2112  0FEE                     	;# 
  2113  0FEF                     	;# 
  2114  0000                     	;# 
  2115  0001                     	;# 
  2116  0002                     	;# 
  2117  0003                     	;# 
  2118  0004                     	;# 
  2119  0005                     	;# 
  2120  0006                     	;# 
  2121  0007                     	;# 
  2122  0008                     	;# 
  2123  0009                     	;# 
  2124  000A                     	;# 
  2125  000B                     	;# 
  2126  000C                     	;# 
  2127  000D                     	;# 
  2128  000E                     	;# 
  2129  0011                     	;# 
  2130  0012                     	;# 
  2131  0013                     	;# 
  2132  0014                     	;# 
  2133  0015                     	;# 
  2134  0016                     	;# 
  2135  0016                     	;# 
  2136  0017                     	;# 
  2137  0018                     	;# 
  2138  0019                     	;# 
  2139  001A                     	;# 
  2140  001B                     	;# 
  2141  001C                     	;# 
  2142  001E                     	;# 
  2143  001F                     	;# 
  2144  008C                     	;# 
  2145  008D                     	;# 
  2146  008E                     	;# 
  2147  0091                     	;# 
  2148  0092                     	;# 
  2149  0093                     	;# 
  2150  0094                     	;# 
  2151  0095                     	;# 
  2152  0096                     	;# 
  2153  0097                     	;# 
  2154  0098                     	;# 
  2155  0099                     	;# 
  2156  009A                     	;# 
  2157  009B                     	;# 
  2158  009B                     	;# 
  2159  009C                     	;# 
  2160  009D                     	;# 
  2161  009E                     	;# 
  2162  010C                     	;# 
  2163  010D                     	;# 
  2164  010E                     	;# 
  2165  0111                     	;# 
  2166  0112                     	;# 
  2167  0113                     	;# 
  2168  0114                     	;# 
  2169  0115                     	;# 
  2170  0116                     	;# 
  2171  0117                     	;# 
  2172  0118                     	;# 
  2173  0119                     	;# 
  2174  011A                     	;# 
  2175  011B                     	;# 
  2176  011D                     	;# 
  2177  011E                     	;# 
  2178  018C                     	;# 
  2179  018D                     	;# 
  2180  018E                     	;# 
  2181  0191                     	;# 
  2182  0191                     	;# 
  2183  0192                     	;# 
  2184  0193                     	;# 
  2185  0193                     	;# 
  2186  0193                     	;# 
  2187  0194                     	;# 
  2188  0195                     	;# 
  2189  0196                     	;# 
  2190  0199                     	;# 
  2191  019A                     	;# 
  2192  019B                     	;# 
  2193  019B                     	;# 
  2194  019C                     	;# 
  2195  019D                     	;# 
  2196  019E                     	;# 
  2197  019F                     	;# 
  2198  020C                     	;# 
  2199  020D                     	;# 
  2200  020E                     	;# 
  2201  0211                     	;# 
  2202  0211                     	;# 
  2203  0212                     	;# 
  2204  0212                     	;# 
  2205  0213                     	;# 
  2206  0213                     	;# 
  2207  0214                     	;# 
  2208  0214                     	;# 
  2209  0215                     	;# 
  2210  0215                     	;# 
  2211  0215                     	;# 
  2212  0216                     	;# 
  2213  0216                     	;# 
  2214  0217                     	;# 
  2215  0217                     	;# 
  2216  0219                     	;# 
  2217  021A                     	;# 
  2218  021B                     	;# 
  2219  021C                     	;# 
  2220  021D                     	;# 
  2221  021E                     	;# 
  2222  021F                     	;# 
  2223  0291                     	;# 
  2224  0291                     	;# 
  2225  0292                     	;# 
  2226  0293                     	;# 
  2227  0294                     	;# 
  2228  0295                     	;# 
  2229  0295                     	;# 
  2230  0296                     	;# 
  2231  0298                     	;# 
  2232  0298                     	;# 
  2233  0299                     	;# 
  2234  029A                     	;# 
  2235  029B                     	;# 
  2236  029C                     	;# 
  2237  029D                     	;# 
  2238  029E                     	;# 
  2239  0311                     	;# 
  2240  0311                     	;# 
  2241  0312                     	;# 
  2242  0313                     	;# 
  2243  0318                     	;# 
  2244  0318                     	;# 
  2245  0319                     	;# 
  2246  031A                     	;# 
  2247  038C                     	;# 
  2248  038D                     	;# 
  2249  038E                     	;# 
  2250  0391                     	;# 
  2251  0392                     	;# 
  2252  0393                     	;# 
  2253  0394                     	;# 
  2254  0395                     	;# 
  2255  0396                     	;# 
  2256  039A                     	;# 
  2257  039C                     	;# 
  2258  039D                     	;# 
  2259  039E                     	;# 
  2260  039F                     	;# 
  2261  0415                     	;# 
  2262  0416                     	;# 
  2263  0417                     	;# 
  2264  041C                     	;# 
  2265  041D                     	;# 
  2266  041E                     	;# 
  2267  0FE4                     	;# 
  2268  0FE5                     	;# 
  2269  0FE6                     	;# 
  2270  0FE7                     	;# 
  2271  0FE8                     	;# 
  2272  0FE9                     	;# 
  2273  0FEA                     	;# 
  2274  0FEB                     	;# 
  2275  0FED                     	;# 
  2276  0FEE                     	;# 
  2277  0FEF                     	;# 
  2278                           
  2279 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2280  0000                     
  2281 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2282  0000                     
  2283 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2284  0000                     
  2285                           	psect	idataBANK1
  2286  0BC0                     __pidataBANK1:
  2287                           
  2288                           ;initializer for _Button_StateMachine
  2289  0BC0  343A               	retlw	low _Button_State_Initializing
  2290  0BC1  340F               	retlw	high _Button_State_Initializing
  2291  0BC2  34BB               	retlw	low _Button_State_NotPressed
  2292  0BC3  3405               	retlw	high _Button_State_NotPressed
  2293  0BC4  34DB               	retlw	low _Button_State_Pressed
  2294  0BC5  340E               	retlw	high _Button_State_Pressed
  2295                           
  2296                           ;initializer for _callback_notPressed
  2297  0BC6  3498               	retlw	low _Button_DefaultCallback
  2298  0BC7  3408               	retlw	high _Button_DefaultCallback
  2299                           
  2300                           ;initializer for _callback_pressed
  2301  0BC8  3498               	retlw	low _Button_DefaultCallback
  2302  0BC9  3408               	retlw	high _Button_DefaultCallback
  2303                           
  2304                           ;initializer for _Sensor_scanB
  2305  0BCA  34A0               	retlw	low _MTOUCH_CVD_ScanB_0
  2306  0BCB  340B               	retlw	high _MTOUCH_CVD_ScanB_0
  2307                           
  2308                           ;initializer for _Sensor_scanA
  2309  0BCC  3460               	retlw	low _MTOUCH_CVD_ScanA_0
  2310  0BCD  340B               	retlw	high _MTOUCH_CVD_ScanA_0
  2311                           
  2312                           ;initializer for _callback_sampled
  2313  0BCE  3499               	retlw	low _Sensor_DefaultCallback
  2314  0BCF  3408               	retlw	high _Sensor_DefaultCallback
  2315                           
  2316                           ;initializer for _mtouch_sensor
  2317  0BD0  3400               	retlw	0
  2318  0BD1  3460               	retlw	low _MTOUCH_CVD_ScanA_0
  2319  0BD2  340B               	retlw	high _MTOUCH_CVD_ScanA_0
  2320  0BD3  34A0               	retlw	low _MTOUCH_CVD_ScanB_0
  2321  0BD4  340B               	retlw	high _MTOUCH_CVD_ScanB_0
  2322  0BD5  3420               	retlw	32
  2323  0BD6  3400               	retlw	0
  2324  0BD7  3400               	retlw	0
  2325  0BD8  3400               	retlw	0
  2326  0BD9  3401               	retlw	1
  2327  0BDA  3440               	retlw	low _MTOUCH_CVD_ScanA_1
  2328  0BDB  340B               	retlw	high _MTOUCH_CVD_ScanA_1
  2329  0BDC  3480               	retlw	low _MTOUCH_CVD_ScanB_1
  2330  0BDD  340B               	retlw	high _MTOUCH_CVD_ScanB_1
  2331  0BDE  3420               	retlw	32
  2332  0BDF  3400               	retlw	0
  2333  0BE0  3400               	retlw	0
  2334  0BE1  3400               	retlw	0
  2335                           
  2336                           	psect	stringtext1
  2337  1020                     __pstringtext1:
  2338  1020                     _tiny:
  2339  1020  3460               	retlw	96
  2340  1021  3442               	retlw	66
  2341  1022  34A2               	retlw	162
  2342  1023  340D               	retlw	13
  2343  1024                     __end_of_tiny:
  2344                           
  2345                           	psect	stringtext2
  2346  1024                     __pstringtext2:
  2347  1024                     _TMR2_Period_const:
  2348  1024  3400               	retlw	0
  2349  1025  3400               	retlw	0
  2350  1026  34C8               	retlw	200
  2351  1027  3442               	retlw	66
  2352  1028                     __end_of_TMR2_Period_const:
  2353                           
  2354                           	psect	stringtext3
  2355  1028                     __pstringtext3:
  2356  1028                     _V_cc_const:
  2357  1028  3400               	retlw	0
  2358  1029  3400               	retlw	0
  2359  102A  34A0               	retlw	160
  2360  102B  3440               	retlw	64
  2361  102C                     __end_of_V_cc_const:
  2362                           
  2363                           	psect	stringtext4
  2364  1000                     __pstringtext4:
  2365  1000                     _mtouch_button_init:
  2366  1000  3400               	retlw	0
  2367  1001  3400               	retlw	0
  2368  1002  3400               	retlw	0
  2369  1003  3400               	retlw	0
  2370  1004  3400               	retlw	0
  2371  1005  3400               	retlw	0
  2372  1006  3400               	retlw	0
  2373  1007  3400               	retlw	0
  2374  1008  3400               	retlw	0
  2375  1009  3400               	retlw	0
  2376  100A  3400               	retlw	0
  2377  100B  3400               	retlw	0
  2378  100C  3400               	retlw	0
  2379  100D  3400               	retlw	0
  2380  100E  3464               	retlw	100
  2381  100F  3401               	retlw	1
  2382  1010  3401               	retlw	1
  2383  1011  3401               	retlw	1
  2384  1012  3400               	retlw	0
  2385  1013  3400               	retlw	0
  2386  1014  3400               	retlw	0
  2387  1015  3400               	retlw	0
  2388  1016  3400               	retlw	0
  2389  1017  3400               	retlw	0
  2390  1018  3400               	retlw	0
  2391  1019  3400               	retlw	0
  2392  101A  3400               	retlw	0
  2393  101B  3400               	retlw	0
  2394  101C  3400               	retlw	0
  2395  101D  3400               	retlw	0
  2396  101E  3464               	retlw	100
  2397  101F  3401               	retlw	1
  2398  1020                     __end_of_mtouch_button_init:
  2399                           
  2400                           	psect	stringtext5
  2401  102C                     __pstringtext5:
  2402  102C                     _HalfCycleACDuration_const:
  2403  102C  3400               	retlw	0
  2404  102D  3400               	retlw	0
  2405  102E  3420               	retlw	32
  2406  102F  3441               	retlw	65
  2407  1030                     __end_of_HalfCycleACDuration_const:
  2408                           
  2409                           	psect	stringtext6
  2410  1030                     __pstringtext6:
  2411  1030                     _Tolerance_Temp_const:
  2412  1030  34CD               	retlw	205
  2413  1031  34CC               	retlw	204
  2414  1032  3414               	retlw	20
  2415  1033  3442               	retlw	66
  2416  1034                     __end_of_Tolerance_Temp_const:
  2417                           
  2418                           	psect	stringtext7
  2419  1034                     __pstringtext7:
  2420  1034                     _R_const:
  2421  1034  3400               	retlw	0
  2422  1035  3400               	retlw	0
  2423  1036  34C8               	retlw	200
  2424  1037  3442               	retlw	66
  2425  1038                     __end_of_R_const:
  2426                           
  2427                           	psect	nvBANK1
  2428  00E1                     __pnvBANK1:
  2429  00E1                     _TMR2_InterruptHandler:
  2430  00E1                     	ds	2
  2431  00E3                     _EUSART_ErrorHandler:
  2432  00E3                     	ds	2
  2433  00E5                     _EUSART_OverrunErrorHandler:
  2434  00E5                     	ds	2
  2435  00E7                     _EUSART_FramingErrorHandler:
  2436  00E7                     	ds	2
  2437  00E9                     _IOCAF2_InterruptHandler:
  2438  00E9                     	ds	2
  2439  001C                     _T2CON	set	28
  2440  001A                     _TMR2	set	26
  2441  001B                     _PR2	set	27
  2442  0011                     _PIR1bits	set	17
  2443  000B                     _INTCONbits	set	11
  2444  005F                     _GIE	set	95
  2445  009B                     _ADRES	set	155
  2446  0091                     _PIE1bits	set	145
  2447  009C                     _ADRESH	set	156
  2448  009B                     _ADRESL	set	155
  2449  0095                     _OPTION_REGbits	set	149
  2450  008E                     _TRISC	set	142
  2451  008D                     _TRISB	set	141
  2452  008C                     _TRISA	set	140
  2453  0097                     _WDTCON	set	151
  2454  0098                     _OSCTUNE	set	152
  2455  0099                     _OSCCON	set	153
  2456  009D                     _ADCON0bits	set	157
  2457  009E                     _ADCON1	set	158
  2458  009D                     _ADCON0	set	157
  2459  010E                     _LATCbits	set	270
  2460  011E                     _APFCON1	set	286
  2461  011D                     _APFCON0	set	285
  2462  010E                     _LATC	set	270
  2463  010D                     _LATB	set	269
  2464  010C                     _LATA	set	268
  2465  0116                     _BORCON	set	278
  2466  019C                     _SPBRGH	set	412
  2467  019B                     _SPBRGL	set	411
  2468  019E                     _TXSTA	set	414
  2469  019D                     _RCSTA	set	413
  2470  019F                     _BAUDCON	set	415
  2471  018C                     _ANSELA	set	396
  2472  018D                     _ANSELB	set	397
  2473  018E                     _ANSELC	set	398
  2474  020E                     _WPUC	set	526
  2475  020C                     _WPUA	set	524
  2476  020D                     _WPUB	set	525
  2477  0391                     _IOCAPbits	set	913
  2478  0392                     _IOCANbits	set	914
  2479  0393                     _IOCAFbits	set	915
  2480                           
  2481                           	psect	stringtext8
  2482  1038                     __pstringtext8:
  2483  1038                     STR_1:
  2484  1038  3400               	retlw	0
  2485                           
  2486                           	psect	stringtext9
  2487  0000                     __pstringtext9:
  2488                           
  2489                           	psect	cinit
  2490  001B                     start_initialization:	
  2491                           ; #config settings
  2492                           
  2493  001B                     __initialization:
  2494                           
  2495                           ; Initialize objects allocated to BANK1
  2496  001B  30C0               	movlw	low __pidataBANK1
  2497  001C  0084               	movwf	4
  2498  001D  308B               	movlw	(high __pidataBANK1)| (0+128)
  2499  001E  0085               	movwf	5
  2500  001F  30A0               	movlw	low __pdataBANK1
  2501  0020  0086               	movwf	6
  2502  0021  3000               	movlw	high __pdataBANK1
  2503  0022  0087               	movwf	7
  2504  0023  3022               	movlw	34
  2505  0024  3188  20D5  3180   	fcall	init_ram
  2506                           
  2507                           ; Clear objects allocated to BANK0
  2508  0027  3064               	movlw	low __pbssBANK0
  2509  0028  0084               	movwf	4
  2510  0029  3000               	movlw	high __pbssBANK0
  2511  002A  0085               	movwf	5
  2512  002B  3008               	movlw	8
  2513  002C  3188  20CF  3180   	fcall	clear_ram0
  2514                           
  2515                           ; Clear objects allocated to BANK1
  2516  002F  30C2               	movlw	low __pbssBANK1
  2517  0030  0084               	movwf	4
  2518  0031  3000               	movlw	high __pbssBANK1
  2519  0032  0085               	movwf	5
  2520  0033  301F               	movlw	31
  2521  0034  3188  20CF  3180   	fcall	clear_ram0
  2522                           
  2523                           ; Clear objects allocated to BANK2
  2524  0037  3020               	movlw	low __pbssBANK2
  2525  0038  0084               	movwf	4
  2526  0039  3001               	movlw	high __pbssBANK2
  2527  003A  0085               	movwf	5
  2528  003B  3020               	movlw	32
  2529  003C  3188  20CF         	fcall	clear_ram0
  2530  003E                     end_of_initialization:	
  2531                           ;End of C runtime variable initialization code
  2532                           
  2533  003E                     __end_of__initialization:
  2534  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2535  003F  0020               	movlb	0
  2536  0040  3189  29AB         	ljmp	_main	;jump to C main() function
  2537                           
  2538                           	psect	bssBANK0
  2539  0064                     __pbssBANK0:
  2540  0064                     _mtouch_request_init:
  2541  0064                     	ds	1
  2542  0065                     _mtouch_time_toScan:
  2543  0065                     	ds	1
  2544  0066                     _lowpowerActivated:
  2545  0066                     	ds	1
  2546  0067                     _sample_delay:
  2547  0067                     	ds	1
  2548  0068                     _packet_counter:
  2549  0068                     	ds	1
  2550  0069                     _currentScannSensor:
  2551  0069                     	ds	1
  2552  006A                     _sensor_globalFlags:
  2553  006A                     	ds	1
  2554  006B                     MTOUCH_Random@seed:
  2555  006B                     	ds	1
  2556                           
  2557                           	psect	bssBANK1
  2558  00C2                     __pbssBANK1:
  2559  00C2                     _Buff_g:
  2560  00C2                     	ds	20
  2561  00D6                     _errno:
  2562  00D6                     	ds	2
  2563  00D8                     TMR2_Int_isr@counter:
  2564  00D8                     	ds	2
  2565  00DA                     _required_delay_for_dim_ms_g:
  2566  00DA                     	ds	2
  2567  00DC                     _ADC_InterruptHandler:
  2568  00DC                     	ds	2
  2569  00DE                     _packet_sample:
  2570  00DE                     	ds	2
  2571  00E0                     _eusartRxLastError:
  2572  00E0                     	ds	1
  2573                           
  2574                           	psect	dataBANK1
  2575  00A0                     __pdataBANK1:
  2576  00A0                     _Button_StateMachine:
  2577  00A0                     	ds	6
  2578  00A6                     _callback_notPressed:
  2579  00A6                     	ds	2
  2580  00A8                     _callback_pressed:
  2581  00A8                     	ds	2
  2582  00AA                     _Sensor_scanB:
  2583  00AA                     	ds	2
  2584  00AC                     _Sensor_scanA:
  2585  00AC                     	ds	2
  2586  00AE                     _callback_sampled:
  2587  00AE                     	ds	2
  2588  00B0                     _mtouch_sensor:
  2589  00B0                     	ds	18
  2590                           
  2591                           	psect	bssBANK2
  2592  0120                     __pbssBANK2:
  2593  0120                     _mtouch_button:
  2594  0120                     	ds	32
  2595                           
  2596                           	psect	inittext
  2597  08D5                     init_ram:
  2598  08D5  00FE               	movwf	126
  2599  08D6                     initloop:
  2600  08D6  0012               	moviw fsr0++
  2601  08D7  001E               	movwi fsr1++
  2602  08D8  0BFE               	decfsz	126,f
  2603  08D9  28D6               	goto	initloop
  2604  08DA  3400               	retlw	0
  2605                           
  2606                           	psect	clrtext
  2607  08CF                     clear_ram0:	
  2608                           ;	Called with FSR0 containing the base address, and
  2609                           ;	WREG with the size to clear
  2610                           
  2611  08CF  0064               	clrwdt	;clear the watchdog before getting into this loop
  2612  08D0                     clrloop0:
  2613  08D0  0180               	clrf	0	;clear RAM location pointed to by FSR
  2614  08D1  3101               	addfsr 0,1
  2615  08D2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2616  08D3  28D0               	goto	clrloop0	;have we reached the end yet?
  2617  08D4  3400               	retlw	0	;all done for this memory range, return
  2618                           
  2619                           	psect	cstackCOMMON
  2620  0070                     __pcstackCOMMON:
  2621  0070                     ?_Sensor_DefaultCallback:
  2622  0070                     ?_MTOUCH_CVD_ScanA_0:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625  0070                     ??_MTOUCH_CVD_ScanA_0:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628  0070                     ?_MTOUCH_CVD_ScanB_0:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631  0070                     ??_MTOUCH_CVD_ScanB_0:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634  0070                     ?_MTOUCH_CVD_ScanA_1:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637  0070                     ??_MTOUCH_CVD_ScanA_1:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640  0070                     ?_MTOUCH_CVD_ScanB_1:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643  0070                     ??_MTOUCH_CVD_ScanB_1:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646  0070                     ?_MTOUCH_Sensor_Enable:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649  0070                     ?_Sensor_Sampled_Reset:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652  0070                     ??_Sensor_Sampled_Reset:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655  0070                     ?_Sensor_Service:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658  0070                     ?_Sensor_Acquisition:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661  0070                     ?_Sensor_isEnabled:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664  0070                     ??_Sensor_isEnabled:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667  0070                     ?_Sensor_RawSample_Update:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670  0070                     ??_Sensor_RawSample_Update:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673  0070                     ?_Sensor_setSampled:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676  0070                     ??_Sensor_setSampled:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679  0070                     ?_Sensor_Acq_ExecutePacket:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682  0070                     ?_Sensor_setActive:	
  2683                           ; 1 bytes @ 0x0
  2684                           
  2685  0070                     ??_Sensor_setActive:	
  2686                           ; 1 bytes @ 0x0
  2687                           
  2688  0070                     ?_Sensor_setInactive:	
  2689                           ; 1 bytes @ 0x0
  2690                           
  2691  0070                     ??_Sensor_setInactive:	
  2692                           ; 1 bytes @ 0x0
  2693                           
  2694  0070                     ?_Sensor_setScanFunction:	
  2695                           ; 1 bytes @ 0x0
  2696                           
  2697  0070                     ??_Sensor_setScanFunction:	
  2698                           ; 1 bytes @ 0x0
  2699                           
  2700  0070                     ?_Sensor_Acq_ExecuteScan:	
  2701                           ; 1 bytes @ 0x0
  2702                           
  2703  0070                     ?_MTOUCH_Delay:	
  2704                           ; 1 bytes @ 0x0
  2705                           
  2706  0070                     ??_MTOUCH_Delay:	
  2707                           ; 1 bytes @ 0x0
  2708                           
  2709  0070                     ?_MTOUCH_Service_Mainloop:	
  2710                           ; 1 bytes @ 0x0
  2711                           
  2712  0070                     ?_MTOUCH_Button_isPressed:	
  2713                           ; 1 bytes @ 0x0
  2714                           
  2715  0070                     ??_MTOUCH_Button_isPressed:	
  2716                           ; 1 bytes @ 0x0
  2717                           
  2718  0070                     ?_Button_DefaultCallback:	
  2719                           ; 1 bytes @ 0x0
  2720                           
  2721  0070                     ?_memcpy:	
  2722                           ; 1 bytes @ 0x0
  2723                           
  2724  0070                     ?_Button_Service:	
  2725                           ; 1 bytes @ 0x0
  2726                           
  2727  0070                     ?_Button_Reading_Update:	
  2728                           ; 1 bytes @ 0x0
  2729                           
  2730  0070                     ?_Button_Deviation_Update:	
  2731                           ; 1 bytes @ 0x0
  2732                           
  2733  0070                     ??_Button_Deviation_Update:	
  2734                           ; 1 bytes @ 0x0
  2735                           
  2736  0070                     ?_Button_Baseline_Initialize:	
  2737                           ; 1 bytes @ 0x0
  2738                           
  2739  0070                     ?_Button_Baseline_Update:	
  2740                           ; 1 bytes @ 0x0
  2741                           
  2742  0070                     ??_Button_Baseline_Update:	
  2743                           ; 1 bytes @ 0x0
  2744                           
  2745  0070                     ?_Button_Tick_helper:	
  2746                           ; 1 bytes @ 0x0
  2747                           
  2748  0070                     ??_Button_Tick_helper:	
  2749                           ; 1 bytes @ 0x0
  2750                           
  2751  0070                     ?_Button_Reading_Update_Helper:	
  2752                           ; 1 bytes @ 0x0
  2753                           
  2754  0070                     ?_MTOUCH_needReburst:	
  2755                           ; 1 bytes @ 0x0
  2756                           
  2757  0070                     ??_MTOUCH_needReburst:	
  2758                           ; 1 bytes @ 0x0
  2759                           
  2760  0070                     ?_MTOUCH_Tick:	
  2761                           ; 1 bytes @ 0x0
  2762                           
  2763  0070                     ?_PIN_MANAGER_Initialize:	
  2764                           ; 1 bytes @ 0x0
  2765                           
  2766  0070                     ?_OSCILLATOR_Initialize:	
  2767                           ; 1 bytes @ 0x0
  2768                           
  2769  0070                     ??_OSCILLATOR_Initialize:	
  2770                           ; 1 bytes @ 0x0
  2771                           
  2772  0070                     ?_WDT_Initialize:	
  2773                           ; 1 bytes @ 0x0
  2774                           
  2775  0070                     ??_WDT_Initialize:	
  2776                           ; 1 bytes @ 0x0
  2777                           
  2778  0070                     ?_ADC_Initialize:	
  2779                           ; 1 bytes @ 0x0
  2780                           
  2781  0070                     ??_ADC_Initialize:	
  2782                           ; 1 bytes @ 0x0
  2783                           
  2784  0070                     ?_TMR2_Initialize:	
  2785                           ; 1 bytes @ 0x0
  2786                           
  2787  0070                     ?_EUSART_Initialize:	
  2788                           ; 1 bytes @ 0x0
  2789                           
  2790  0070                     ?_IOCAF2_SetInterruptHandler:	
  2791                           ; 1 bytes @ 0x0
  2792                           
  2793  0070                     ?_IOCAF2_DefaultInterruptHandler:	
  2794                           ; 1 bytes @ 0x0
  2795                           
  2796  0070                     ??_IOCAF2_DefaultInterruptHandler:	
  2797                           ; 1 bytes @ 0x0
  2798                           
  2799  0070                     ?_IOCAF2_ISR:	
  2800                           ; 1 bytes @ 0x0
  2801                           
  2802  0070                     ??_IOCAF2_ISR:	
  2803                           ; 1 bytes @ 0x0
  2804                           
  2805  0070                     ?_EUSART_SetFramingErrorHandler:	
  2806                           ; 1 bytes @ 0x0
  2807                           
  2808  0070                     ?_EUSART_SetOverrunErrorHandler:	
  2809                           ; 1 bytes @ 0x0
  2810                           
  2811  0070                     ?_EUSART_SetErrorHandler:	
  2812                           ; 1 bytes @ 0x0
  2813                           
  2814  0070                     ?_TMR2_ISR:	
  2815                           ; 1 bytes @ 0x0
  2816                           
  2817  0070                     ??_TMR2_ISR:	
  2818                           ; 1 bytes @ 0x0
  2819                           
  2820  0070                     ?_TMR2_SetInterruptHandler:	
  2821                           ; 1 bytes @ 0x0
  2822                           
  2823  0070                     ?_TMR2_DefaultInterruptHandler:	
  2824                           ; 1 bytes @ 0x0
  2825                           
  2826  0070                     ??_TMR2_DefaultInterruptHandler:	
  2827                           ; 1 bytes @ 0x0
  2828                           
  2829  0070                     ?_Init_Function:	
  2830                           ; 1 bytes @ 0x0
  2831                           
  2832  0070                     ?_StartStop_AlarmLED:	
  2833                           ; 1 bytes @ 0x0
  2834                           
  2835  0070                     ??_StartStop_AlarmLED:	
  2836                           ; 1 bytes @ 0x0
  2837                           
  2838  0070                     ?_StopTouchDetection:	
  2839                           ; 1 bytes @ 0x0
  2840                           
  2841  0070                     ?_StartStop_Fan:	
  2842                           ; 1 bytes @ 0x0
  2843                           
  2844  0070                     ??_StartStop_Fan:	
  2845                           ; 1 bytes @ 0x0
  2846                           
  2847  0070                     ?_StartStop_Buzzer:	
  2848                           ; 1 bytes @ 0x0
  2849                           
  2850  0070                     ??_StartStop_Buzzer:	
  2851                           ; 1 bytes @ 0x0
  2852                           
  2853  0070                     ?_MTOUCH_Random:	
  2854                           ; 1 bytes @ 0x0
  2855                           
  2856  0070                     ??_MTOUCH_Random:	
  2857                           ; 1 bytes @ 0x0
  2858                           
  2859  0070                     ?_MTOUCH_Sensor_Initialize:	
  2860                           ; 1 bytes @ 0x0
  2861                           
  2862  0070                     ?_MTOUCH_Sensor_InitializeAll:	
  2863                           ; 1 bytes @ 0x0
  2864                           
  2865  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	
  2866                           ; 1 bytes @ 0x0
  2867                           
  2868  0070                     ??_MTOUCH_Sensor_Scan_Initialize:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0070                     ?_MTOUCH_Sensor_SampleAll:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  0070                     ?_MTOUCH_Sensor_isCalibrated:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877  0070                     ??_MTOUCH_Sensor_isCalibrated:	
  2878                           ; 1 bytes @ 0x0
  2879                           
  2880  0070                     ?_MTOUCH_Sensor_Calibrate:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883  0070                     ??_MTOUCH_Sensor_Calibrate:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  0070                     ?_MTOUCH_Sensor_wasSampled:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  0070                     ?_MTOUCH_Button_Initialize:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  0070                     ??_MTOUCH_Button_Initialize:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0070                     ?_MTOUCH_Button_InitializeAll:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0070                     ?_MTOUCH_Button_ServiceAll:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0070                     ?_MTOUCH_Button_Tick:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0070                     ?_MTOUCH_Initialize:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0070                     ?_SYSTEM_Initialize:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0070                     ?_PIN_MANAGER_IOC:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0070                     ??_PIN_MANAGER_IOC:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0070                     ?_ADC_SelectChannel:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0070                     ??_ADC_SelectChannel:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0070                     ?_INTERRUPT_InterruptManager:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0070                     ??_INTERRUPT_InterruptManager:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0070                     ?_main:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0070                     ?___bmul:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0070                     ?_abs:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0070                     ?__Umul8_16:	
  2941                           ; 2 bytes @ 0x0
  2942                           
  2943  0070                     ?___fladd:	
  2944                           ; 2 bytes @ 0x0
  2945                           
  2946  0070                     Sensor_RawSample_Update@sensor:	
  2947                           ; 4 bytes @ 0x0
  2948                           
  2949  0070                     Sensor_DefaultCallback@sensor:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952  0070                     Sensor_setScanFunction@sensor:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955  0070                     Sensor_isEnabled@sensor:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958  0070                     Sensor_setActive@sensor:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961  0070                     Sensor_setInactive@sensor:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964  0070                     MTOUCH_Sensor_isCalibrated@sensor:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967  0070                     MTOUCH_Sensor_Calibrate@sensor:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970  0070                     Sensor_Sampled_Reset@sensor:	
  2971                           ; 1 bytes @ 0x0
  2972                           
  2973  0070                     Sensor_setSampled@sensor:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976  0070                     Button_DefaultCallback@button:	
  2977                           ; 1 bytes @ 0x0
  2978                           
  2979  0070                     StartStop_AlarmLED@OnOff:	
  2980                           ; 1 bytes @ 0x0
  2981                           
  2982  0070                     StartStop_Fan@OnOff:	
  2983                           ; 1 bytes @ 0x0
  2984                           
  2985  0070                     StartStop_Buzzer@OnOff:	
  2986                           ; 1 bytes @ 0x0
  2987                           
  2988  0070                     ___bmul@multiplicand:	
  2989                           ; 1 bytes @ 0x0
  2990                           
  2991  0070                     __Umul8_16@multiplicand:	
  2992                           ; 1 bytes @ 0x0
  2993                           
  2994  0070                     IOCAF2_SetInterruptHandler@InterruptHandler:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2998                           ; 2 bytes @ 0x0
  2999                           
  3000  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3001                           ; 2 bytes @ 0x0
  3002                           
  3003  0070                     EUSART_SetErrorHandler@interruptHandler:	
  3004                           ; 2 bytes @ 0x0
  3005                           
  3006  0070                     TMR2_SetInterruptHandler@InterruptHandler:	
  3007                           ; 2 bytes @ 0x0
  3008                           
  3009  0070                     abs@a:	
  3010                           ; 2 bytes @ 0x0
  3011                           
  3012  0070                     memcpy@s1:	
  3013                           ; 2 bytes @ 0x0
  3014                           
  3015  0070                     ___fladd@b:	
  3016                           ; 2 bytes @ 0x0
  3017                           
  3018                           
  3019                           ; 4 bytes @ 0x0
  3020  0070                     	ds	1
  3021  0071                     ??_Sensor_DefaultCallback:
  3022  0071                     ??_Button_DefaultCallback:	
  3023                           ; 1 bytes @ 0x1
  3024                           
  3025  0071                     ??_MTOUCH_Sensor_Sampled_ResetAll:	
  3026                           ; 1 bytes @ 0x1
  3027                           
  3028  0071                     ??___bmul:	
  3029                           ; 1 bytes @ 0x1
  3030                           
  3031  0071                     MTOUCH_Delay@i:	
  3032                           ; 1 bytes @ 0x1
  3033                           
  3034  0071                     MTOUCH_Button_isPressed@name:	
  3035                           ; 1 bytes @ 0x1
  3036                           
  3037  0071                     ADC_SelectChannel@channel:	
  3038                           ; 1 bytes @ 0x1
  3039                           
  3040                           
  3041                           ; 1 bytes @ 0x1
  3042  0071                     	ds	1
  3043  0072                     ??_abs:
  3044  0072                     ??_PIN_MANAGER_Initialize:	
  3045                           ; 1 bytes @ 0x2
  3046                           
  3047  0072                     ??_TMR2_Initialize:	
  3048                           ; 1 bytes @ 0x2
  3049                           
  3050  0072                     ??_EUSART_Initialize:	
  3051                           ; 1 bytes @ 0x2
  3052                           
  3053  0072                     ??_IOCAF2_SetInterruptHandler:	
  3054                           ; 1 bytes @ 0x2
  3055                           
  3056  0072                     ??_EUSART_SetFramingErrorHandler:	
  3057                           ; 1 bytes @ 0x2
  3058                           
  3059  0072                     ??_EUSART_SetOverrunErrorHandler:	
  3060                           ; 1 bytes @ 0x2
  3061                           
  3062  0072                     ??_EUSART_SetErrorHandler:	
  3063                           ; 1 bytes @ 0x2
  3064                           
  3065  0072                     ??_TMR2_SetInterruptHandler:	
  3066                           ; 1 bytes @ 0x2
  3067                           
  3068  0072                     ??__Umul8_16:	
  3069                           ; 1 bytes @ 0x2
  3070                           
  3071  0072                     MTOUCH_Sensor_Sampled_ResetAll@sensor:	
  3072                           ; 1 bytes @ 0x2
  3073                           
  3074  0072                     MTOUCH_Button_Initialize@name:	
  3075                           ; 1 bytes @ 0x2
  3076                           
  3077  0072                     Button_Tick_helper@button:	
  3078                           ; 1 bytes @ 0x2
  3079                           
  3080  0072                     ___bmul@product:	
  3081                           ; 1 bytes @ 0x2
  3082                           
  3083  0072                     memcpy@n:	
  3084                           ; 1 bytes @ 0x2
  3085                           
  3086                           
  3087                           ; 2 bytes @ 0x2
  3088  0072                     	ds	1
  3089  0073                     ??_MTOUCH_Button_Tick:
  3090  0073                     MTOUCH_Button_Initialize@button:	
  3091                           ; 1 bytes @ 0x3
  3092                           
  3093  0073                     ___bmul@multiplier:	
  3094                           ; 1 bytes @ 0x3
  3095                           
  3096                           
  3097                           ; 1 bytes @ 0x3
  3098  0073                     	ds	1
  3099  0074                     ??_MTOUCH_Sensor_Enable:
  3100  0074                     ??_Sensor_Acq_ExecuteScan:	
  3101                           ; 1 bytes @ 0x4
  3102                           
  3103  0074                     ??_memcpy:	
  3104                           ; 1 bytes @ 0x4
  3105                           
  3106  0074                     ??_MTOUCH_Sensor_wasSampled:	
  3107                           ; 1 bytes @ 0x4
  3108                           
  3109  0074                     ?_MTOUCH_Sensor_RawSample_Get:	
  3110                           ; 1 bytes @ 0x4
  3111                           
  3112  0074                     MTOUCH_Button_Tick@i:	
  3113                           ; 2 bytes @ 0x4
  3114                           
  3115  0074                     __Umul8_16@product:	
  3116                           ; 1 bytes @ 0x4
  3117                           
  3118  0074                     ___fladd@a:	
  3119                           ; 2 bytes @ 0x4
  3120                           
  3121                           
  3122                           ; 4 bytes @ 0x4
  3123  0074                     	ds	1
  3124  0075                     ??_MTOUCH_Tick:
  3125  0075                     MTOUCH_Sensor_Enable@sensor:	
  3126                           ; 1 bytes @ 0x5
  3127                           
  3128  0075                     MTOUCH_Sensor_wasSampled@sensor:	
  3129                           ; 1 bytes @ 0x5
  3130                           
  3131  0075                     memcpy@s:	
  3132                           ; 1 bytes @ 0x5
  3133                           
  3134                           
  3135                           ; 2 bytes @ 0x5
  3136  0075                     	ds	1
  3137  0076                     ??_MTOUCH_Sensor_Initialize:
  3138  0076                     ??_MTOUCH_Sensor_RawSample_Get:	
  3139                           ; 1 bytes @ 0x6
  3140                           
  3141  0076                     Button_Baseline_Update@button:	
  3142                           ; 1 bytes @ 0x6
  3143                           
  3144  0076                     Sensor_Acq_ExecuteScan@result:	
  3145                           ; 1 bytes @ 0x6
  3146                           
  3147  0076                     __Umul8_16@word_mpld:	
  3148                           ; 2 bytes @ 0x6
  3149                           
  3150                           
  3151                           ; 2 bytes @ 0x6
  3152  0076                     	ds	1
  3153  0077                     MTOUCH_Sensor_Initialize@sensor:
  3154  0077                     MTOUCH_Sensor_RawSample_Get@name:	
  3155                           ; 1 bytes @ 0x7
  3156                           
  3157  0077                     memcpy@tmp:	
  3158                           ; 1 bytes @ 0x7
  3159                           
  3160                           
  3161                           ; 1 bytes @ 0x7
  3162  0077                     	ds	1
  3163  0078                     ??_Sensor_Acq_ExecutePacket:
  3164  0078                     ??_Button_Baseline_Initialize:	
  3165                           ; 1 bytes @ 0x8
  3166                           
  3167  0078                     ??_Button_Reading_Update_Helper:	
  3168                           ; 1 bytes @ 0x8
  3169                           
  3170  0078                     ??_MTOUCH_Sensor_InitializeAll:	
  3171                           ; 1 bytes @ 0x8
  3172                           
  3173  0078                     ___fladd@signs:	
  3174                           ; 1 bytes @ 0x8
  3175                           
  3176  0078                     __Umul8_16@multiplier:	
  3177                           ; 1 bytes @ 0x8
  3178                           
  3179  0078                     memcpy@d1:	
  3180                           ; 1 bytes @ 0x8
  3181                           
  3182                           
  3183                           ; 1 bytes @ 0x8
  3184  0078                     	ds	1
  3185  0079                     ??___flmul:
  3186  0079                     MTOUCH_Sensor_InitializeAll@sensor:	
  3187                           ; 1 bytes @ 0x9
  3188                           
  3189  0079                     Sensor_Acq_ExecutePacket@ADCON0_temp:	
  3190                           ; 1 bytes @ 0x9
  3191                           
  3192  0079                     ___fladd@aexp:	
  3193                           ; 1 bytes @ 0x9
  3194                           
  3195  0079                     memcpy@d:	
  3196                           ; 1 bytes @ 0x9
  3197                           
  3198                           
  3199                           ; 1 bytes @ 0x9
  3200  0079                     	ds	1
  3201  007A                     ??_MTOUCH_Button_InitializeAll:
  3202  007A                     Sensor_Acq_ExecutePacket@ADCON1_temp:	
  3203                           ; 1 bytes @ 0xA
  3204                           
  3205  007A                     Button_Reading_Update_Helper@button:	
  3206                           ; 1 bytes @ 0xA
  3207                           
  3208  007A                     ___fladd@bexp:	
  3209                           ; 1 bytes @ 0xA
  3210                           
  3211                           
  3212                           ; 1 bytes @ 0xA
  3213  007A                     	ds	1
  3214  007B                     ??_Button_Reading_Update:
  3215  007B                     Sensor_Acq_ExecutePacket@GIE_state:	
  3216                           ; 1 bytes @ 0xB
  3217                           
  3218  007B                     MTOUCH_Button_InitializeAll@button:	
  3219                           ; 1 bytes @ 0xB
  3220                           
  3221  007B                     Button_Reading_Update@button:	
  3222                           ; 1 bytes @ 0xB
  3223                           
  3224  007B                     ___fladd@grs:	
  3225                           ; 1 bytes @ 0xB
  3226                           
  3227                           
  3228                           ; 1 bytes @ 0xB
  3229  007B                     	ds	1
  3230  007C                     ??_MTOUCH_Initialize:
  3231  007C                     ??_SYSTEM_Initialize:	
  3232                           ; 1 bytes @ 0xC
  3233                           
  3234  007C                     Sensor_Acq_ExecutePacket@error:	
  3235                           ; 1 bytes @ 0xC
  3236                           
  3237  007C                     Button_Baseline_Initialize@button:	
  3238                           ; 1 bytes @ 0xC
  3239                           
  3240                           
  3241                           ; 1 bytes @ 0xC
  3242  007C                     	ds	1
  3243  007D                     ?_Button_State_Initializing:
  3244  007D                     ?_Button_State_NotPressed:	
  3245                           ; 1 bytes @ 0xD
  3246                           
  3247  007D                     ?_Button_State_Pressed:	
  3248                           ; 1 bytes @ 0xD
  3249                           
  3250  007D                     Sensor_Acq_ExecutePacket@sensor:	
  3251                           ; 1 bytes @ 0xD
  3252                           
  3253  007D                     Button_State_Initializing@button:	
  3254                           ; 1 bytes @ 0xD
  3255                           
  3256  007D                     Button_State_NotPressed@button:	
  3257                           ; 1 bytes @ 0xD
  3258                           
  3259  007D                     Button_State_Pressed@button:	
  3260                           ; 1 bytes @ 0xD
  3261                           
  3262                           
  3263                           ; 1 bytes @ 0xD
  3264  007D                     	ds	1
  3265  007E                     ??_Init_Function:
  3266  007E                     ??_StopTouchDetection:	
  3267                           ; 1 bytes @ 0xE
  3268                           
  3269  007E                     ??_CalcRequiredDelayForTrigTRIAC:	
  3270                           ; 1 bytes @ 0xE
  3271                           
  3272  007E                     ??_main:	
  3273                           ; 1 bytes @ 0xE
  3274                           
  3275  007E                     ??___flsub:	
  3276                           ; 1 bytes @ 0xE
  3277                           
  3278                           
  3279                           	psect	cstackBANK0
  3280  0020                     __pcstackBANK0:	
  3281                           ; 1 bytes @ 0xE
  3282                           
  3283  0020                     ??_Sensor_Acquisition:
  3284  0020                     ??_Button_State_Initializing:	
  3285                           ; 1 bytes @ 0x0
  3286                           
  3287  0020                     ??_Button_State_NotPressed:	
  3288                           ; 1 bytes @ 0x0
  3289                           
  3290  0020                     ??_Button_State_Pressed:	
  3291                           ; 1 bytes @ 0x0
  3292                           
  3293  0020                     ??___fladd:	
  3294                           ; 1 bytes @ 0x0
  3295                           
  3296  0020                     ?___flmul:	
  3297                           ; 1 bytes @ 0x0
  3298                           
  3299  0020                     Button_Deviation_Update@button:	
  3300                           ; 4 bytes @ 0x0
  3301                           
  3302  0020                     ___flmul@b:	
  3303                           ; 1 bytes @ 0x0
  3304                           
  3305                           
  3306                           ; 4 bytes @ 0x0
  3307  0020                     	ds	1
  3308  0021                     Sensor_Acquisition@retry:
  3309  0021                     Button_Deviation_Update@deviation:	
  3310                           ; 1 bytes @ 0x1
  3311                           
  3312                           
  3313                           ; 4 bytes @ 0x1
  3314  0021                     	ds	1
  3315  0022                     Sensor_Acquisition@sensor:
  3316                           
  3317                           ; 1 bytes @ 0x2
  3318  0022                     	ds	1
  3319  0023                     ??_Sensor_Service:
  3320                           
  3321                           ; 1 bytes @ 0x3
  3322  0023                     	ds	1
  3323  0024                     ___flmul@a:
  3324                           
  3325                           ; 4 bytes @ 0x4
  3326  0024                     	ds	1
  3327  0025                     ??_Button_Service:
  3328  0025                     Sensor_Service@name:	
  3329                           ; 1 bytes @ 0x5
  3330                           
  3331                           
  3332                           ; 1 bytes @ 0x5
  3333  0025                     	ds	1
  3334  0026                     Sensor_Service@error:
  3335                           
  3336                           ; 1 bytes @ 0x6
  3337  0026                     	ds	1
  3338  0027                     Sensor_Service@sensor:
  3339  0027                     Button_Service@name:	
  3340                           ; 1 bytes @ 0x7
  3341                           
  3342                           
  3343                           ; 1 bytes @ 0x7
  3344  0027                     	ds	1
  3345  0028                     ??_MTOUCH_Sensor_SampleAll:
  3346  0028                     Button_Service@button:	
  3347                           ; 1 bytes @ 0x8
  3348                           
  3349  0028                     ___flmul@sign:	
  3350                           ; 1 bytes @ 0x8
  3351                           
  3352                           
  3353                           ; 1 bytes @ 0x8
  3354  0028                     	ds	1
  3355  0029                     ??_MTOUCH_Button_ServiceAll:
  3356  0029                     MTOUCH_Sensor_SampleAll@sensor:	
  3357                           ; 1 bytes @ 0x9
  3358                           
  3359  0029                     ___flmul@aexp:	
  3360                           ; 1 bytes @ 0x9
  3361                           
  3362                           
  3363                           ; 1 bytes @ 0x9
  3364  0029                     	ds	1
  3365  002A                     MTOUCH_Button_ServiceAll@button:
  3366  002A                     ___flmul@grs:	
  3367                           ; 1 bytes @ 0xA
  3368                           
  3369                           
  3370                           ; 4 bytes @ 0xA
  3371  002A                     	ds	1
  3372  002B                     ??_MTOUCH_Service_Mainloop:
  3373                           
  3374                           ; 1 bytes @ 0xB
  3375  002B                     	ds	3
  3376  002E                     ___flmul@bexp:
  3377                           
  3378                           ; 1 bytes @ 0xE
  3379  002E                     	ds	1
  3380  002F                     ___flmul@prod:
  3381                           
  3382                           ; 4 bytes @ 0xF
  3383  002F                     	ds	4
  3384  0033                     ___flmul@temp:
  3385                           
  3386                           ; 2 bytes @ 0x13
  3387  0033                     	ds	2
  3388  0035                     ?___fldiv:
  3389  0035                     ___fldiv@a:	
  3390                           ; 4 bytes @ 0x15
  3391                           
  3392                           
  3393                           ; 4 bytes @ 0x15
  3394  0035                     	ds	4
  3395  0039                     ___fldiv@b:
  3396                           
  3397                           ; 4 bytes @ 0x19
  3398  0039                     	ds	4
  3399  003D                     ??___fldiv:
  3400                           
  3401                           ; 1 bytes @ 0x1D
  3402  003D                     	ds	5
  3403  0042                     ___fldiv@rem:
  3404                           
  3405                           ; 4 bytes @ 0x22
  3406  0042                     	ds	4
  3407  0046                     ___fldiv@sign:
  3408                           
  3409                           ; 1 bytes @ 0x26
  3410  0046                     	ds	1
  3411  0047                     ___fldiv@new_exp:
  3412                           
  3413                           ; 2 bytes @ 0x27
  3414  0047                     	ds	2
  3415  0049                     ___fldiv@grs:
  3416                           
  3417                           ; 4 bytes @ 0x29
  3418  0049                     	ds	4
  3419  004D                     ___fldiv@bexp:
  3420                           
  3421                           ; 1 bytes @ 0x2D
  3422  004D                     	ds	1
  3423  004E                     ___fldiv@aexp:
  3424                           
  3425                           ; 1 bytes @ 0x2E
  3426  004E                     	ds	1
  3427  004F                     ?___fltol:
  3428  004F                     ?___flsub:	
  3429                           ; 4 bytes @ 0x2F
  3430                           
  3431  004F                     ___fltol@f1:	
  3432                           ; 4 bytes @ 0x2F
  3433                           
  3434  004F                     ___flsub@a:	
  3435                           ; 4 bytes @ 0x2F
  3436                           
  3437                           
  3438                           ; 4 bytes @ 0x2F
  3439  004F                     	ds	4
  3440  0053                     ??___fltol:
  3441  0053                     ___flsub@b:	
  3442                           ; 1 bytes @ 0x33
  3443                           
  3444                           
  3445                           ; 4 bytes @ 0x33
  3446  0053                     	ds	5
  3447  0058                     ___fltol@sign1:
  3448                           
  3449                           ; 1 bytes @ 0x38
  3450  0058                     	ds	1
  3451  0059                     ___fltol@exp1:
  3452                           
  3453                           ; 1 bytes @ 0x39
  3454  0059                     	ds	1
  3455  005A                     ?_CalcRequiredDelayForTrigTRIAC:
  3456  005A                     CalcRequiredDelayForTrigTRIAC@dim_percentage:	
  3457                           ; 2 bytes @ 0x3A
  3458                           
  3459                           
  3460                           ; 4 bytes @ 0x3A
  3461  005A                     	ds	4
  3462  005E                     CalcRequiredDelayForTrigTRIAC@delay:
  3463                           
  3464                           ; 4 bytes @ 0x3E
  3465  005E                     	ds	4
  3466  0062                     CalcRequiredDelayForTrigTRIAC@ret:
  3467                           
  3468                           ; 2 bytes @ 0x42
  3469  0062                     	ds	2
  3470                           
  3471                           	psect	maintext
  3472  09AB                     __pmaintext:	
  3473 ;;
  3474 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3475 ;;
  3476 ;; *************** function _main *****************
  3477 ;; Defined at:
  3478 ;;		line 63 in file "main.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;		None
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  Temp_PT100      4    0        float 
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      void 
  3485 ;; Registers used:
  3486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3487 ;; Tracked objects:
  3488 ;;		On entry : B1F/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3493 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3495 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3496 ;;Total ram usage:        4 bytes
  3497 ;; Hardware stack levels required when called:   12
  3498 ;; This function calls:
  3499 ;;		_Init_Function
  3500 ;;		_SYSTEM_Initialize
  3501 ;;		_StartStop_AlarmLED
  3502 ;;		_StopTouchDetection
  3503 ;; This function is called by:
  3504 ;;		Startup code after reset
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           
  3509                           ;psect for function _main
  3510  09AB                     _main:
  3511                           
  3512                           ;main.c: 65:     SYSTEM_Initialize();
  3513                           
  3514                           ;incstack = 0
  3515                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3516  09AB  318A  2227  3189   	fcall	_SYSTEM_Initialize
  3517                           
  3518                           ;main.c: 66:     Init_Function();
  3519  09AE  318C  2405  3189   	fcall	_Init_Function
  3520                           
  3521                           ;main.c: 67:     StartStop_AlarmLED(1);
  3522  09B1  3001               	movlw	1
  3523  09B2  3189  210E  3189   	fcall	_StartStop_AlarmLED
  3524                           
  3525                           ;main.c: 69:     (INTCONbits.GIE = 1);
  3526  09B5  178B               	bsf	11,7	;volatile
  3527                           
  3528                           ;main.c: 70:     (INTCONbits.PEIE = 1);
  3529  09B6  170B               	bsf	11,6	;volatile
  3530  09B7                     l4147:
  3531                           
  3532                           ;main.c: 79:         StopTouchDetection();
  3533  09B7  318A  223C  3189   	fcall	_StopTouchDetection
  3534  09BA  29B7               	goto	l4147
  3535  09BB                     __end_of_main:
  3536                           
  3537                           	psect	text1
  3538  0A3C                     __ptext1:	
  3539 ;; *************** function _StopTouchDetection *****************
  3540 ;; Defined at:
  3541 ;;		line 293 in file "main.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/2
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3559 ;;Total ram usage:        0 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:   11
  3562 ;; This function calls:
  3563 ;;		_MTOUCH_Button_isPressed
  3564 ;;		_MTOUCH_Service_Mainloop
  3565 ;;		_StartStop_AlarmLED
  3566 ;; This function is called by:
  3567 ;;		_main
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function _StopTouchDetection
  3573  0A3C                     _StopTouchDetection:
  3574                           
  3575                           ;main.c: 295:     if (1 == MTOUCH_Service_Mainloop()) {
  3576                           
  3577                           ;incstack = 0
  3578                           ; Regs used in _StopTouchDetection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3579  0A3C  318B  23E2  318A   	fcall	_MTOUCH_Service_Mainloop
  3580  0A3F  3A01               	xorlw	1
  3581  0A40  1D03               	skipz
  3582  0A41  0008               	return
  3583                           
  3584                           ;main.c: 297:         if (1 == MTOUCH_Button_isPressed(T_stop)){
  3585  0A42  3001               	movlw	1
  3586  0A43  318A  22C8  318A   	fcall	_MTOUCH_Button_isPressed
  3587  0A46  3A01               	xorlw	1
  3588  0A47  1D03               	skipz
  3589  0A48  2A4D               	goto	l4121
  3590                           
  3591                           ;main.c: 299:             StartStop_AlarmLED(1);
  3592  0A49  3001               	movlw	1
  3593  0A4A  3189  210E         	fcall	_StartStop_AlarmLED
  3594                           
  3595                           ;main.c: 301:         }
  3596  0A4C  0008               	return
  3597  0A4D                     l4121:
  3598                           
  3599                           ;main.c: 304:             StartStop_AlarmLED(0);
  3600  0A4D  3000               	movlw	0
  3601  0A4E  3189  210E         	fcall	_StartStop_AlarmLED
  3602  0A50  0008               	return
  3603  0A51                     __end_of_StopTouchDetection:
  3604                           
  3605                           	psect	text2
  3606  0BE2                     __ptext2:	
  3607 ;; *************** function _MTOUCH_Service_Mainloop *****************
  3608 ;; Defined at:
  3609 ;;		line 96 in file "mcc_generated_files/mtouch/mtouch.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      _Bool 
  3616 ;; Registers used:
  3617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/2
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;Total ram usage:        1 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:   10
  3630 ;; This function calls:
  3631 ;;		_MTOUCH_Button_ServiceAll
  3632 ;;		_MTOUCH_Initialize
  3633 ;;		_MTOUCH_Sensor_SampleAll
  3634 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  3635 ;;		_MTOUCH_Tick
  3636 ;;		_MTOUCH_needReburst
  3637 ;; This function is called by:
  3638 ;;		_StopTouchDetection
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           
  3643                           ;psect for function _MTOUCH_Service_Mainloop
  3644  0BE2                     _MTOUCH_Service_Mainloop:
  3645                           
  3646                           ;mcc_generated_files/mtouch/mtouch.c: 99:     if(mtouch_request_init)
  3647                           
  3648                           ;incstack = 0
  3649                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3650  0BE2  0020               	movlb	0	; select bank0
  3651  0BE3  0864               	movf	_mtouch_request_init,w
  3652  0BE4  1903               	btfsc	3,2
  3653  0BE5  2BEB               	goto	l3963
  3654                           
  3655                           ;mcc_generated_files/mtouch/mtouch.c: 100:     {;mcc_generated_files/mtouch/mtouch.c: 10
      +                          1:         MTOUCH_Initialize();
  3656  0BE6  3189  212E  318B   	fcall	_MTOUCH_Initialize
  3657                           
  3658                           ;mcc_generated_files/mtouch/mtouch.c: 102:         mtouch_request_init = 0;
  3659  0BE9  0020               	movlb	0	; select bank0
  3660  0BEA  01E4               	clrf	_mtouch_request_init
  3661  0BEB                     l3963:
  3662                           
  3663                           ;mcc_generated_files/mtouch/mtouch.c: 106:     mtouch_time_toScan = 1;
  3664  0BEB  01E5               	clrf	_mtouch_time_toScan
  3665  0BEC  0AE5               	incf	_mtouch_time_toScan,f
  3666                           
  3667                           ;mcc_generated_files/mtouch/mtouch.c: 109:     {;mcc_generated_files/mtouch/mtouch.c: 11
      +                          0:         if(MTOUCH_Sensor_SampleAll() == 0)
  3668                           
  3669                           ;mcc_generated_files/mtouch/mtouch.c: 108:     if(mtouch_time_toScan)
  3670  0BED  318A  2213  318B   	fcall	_MTOUCH_Sensor_SampleAll
  3671  0BF0  3A00               	xorlw	0
  3672  0BF1  1D03               	skipz
  3673  0BF2  2BF5               	goto	l3973
  3674                           
  3675                           ;mcc_generated_files/mtouch/mtouch.c: 111:             return 0;
  3676  0BF3  3000               	movlw	0
  3677  0BF4  0008               	return
  3678  0BF5                     l3973:
  3679                           
  3680                           ;mcc_generated_files/mtouch/mtouch.c: 113:             MTOUCH_Button_ServiceAll();
  3681  0BF5  3189  217C  318B   	fcall	_MTOUCH_Button_ServiceAll
  3682                           
  3683                           ;mcc_generated_files/mtouch/mtouch.c: 114:             mtouch_time_toScan = MTOUCH_needR
      +                          eburst();
  3684  0BF8  3180  2002  318B   	fcall	_MTOUCH_needReburst
  3685  0BFB  00AB               	movwf	??_MTOUCH_Service_Mainloop
  3686  0BFC  082B               	movf	??_MTOUCH_Service_Mainloop,w
  3687  0BFD  00E5               	movwf	_mtouch_time_toScan
  3688                           
  3689                           ;mcc_generated_files/mtouch/mtouch.c: 115:             MTOUCH_Sensor_Sampled_ResetAll();
  3690  0BFE  3187  27ED  318B   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  3691                           
  3692                           ;mcc_generated_files/mtouch/mtouch.c: 116:             MTOUCH_Tick();
  3693  0C01  3188  209C         	fcall	_MTOUCH_Tick
  3694                           
  3695                           ;mcc_generated_files/mtouch/mtouch.c: 117:             return 1;
  3696  0C03  3001               	movlw	1
  3697  0C04  0008               	return
  3698  0C05                     __end_of_MTOUCH_Service_Mainloop:
  3699                           
  3700                           	psect	text3
  3701  0002                     __ptext3:	
  3702 ;; *************** function _MTOUCH_needReburst *****************
  3703 ;; Defined at:
  3704 ;;		line 140 in file "mcc_generated_files/mtouch/mtouch.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  needReburst     1    0        _Bool 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      _Bool 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2
  3713 ;; Tracked objects:
  3714 ;;		On entry : 1F/0
  3715 ;;		On exit  : 1F/0
  3716 ;;		Unchanged: 1F/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3722 ;;Total ram usage:        1 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    4
  3725 ;; This function calls:
  3726 ;;		Nothing
  3727 ;; This function is called by:
  3728 ;;		_MTOUCH_Service_Mainloop
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           
  3733                           ;psect for function _MTOUCH_needReburst
  3734  0002                     _MTOUCH_needReburst:
  3735                           
  3736                           ;mcc_generated_files/mtouch/mtouch.c: 144:     return needReburst;
  3737                           
  3738                           ;incstack = 0
  3739                           ; Regs used in _MTOUCH_needReburst: [wreg+status,2]
  3740  0002  3000               	movlw	0
  3741  0003  0008               	return
  3742  0004                     __end_of_MTOUCH_needReburst:
  3743                           
  3744                           	psect	text4
  3745  089C                     __ptext4:	
  3746 ;; *************** function _MTOUCH_Tick *****************
  3747 ;; Defined at:
  3748 ;;		line 130 in file "mcc_generated_files/mtouch/mtouch.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3766 ;;Total ram usage:        0 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    6
  3769 ;; This function calls:
  3770 ;;		_MTOUCH_Button_Tick
  3771 ;; This function is called by:
  3772 ;;		_MTOUCH_Service_Mainloop
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           
  3777                           ;psect for function _MTOUCH_Tick
  3778  089C                     _MTOUCH_Tick:
  3779                           
  3780                           ;mcc_generated_files/mtouch/mtouch.c: 132:     MTOUCH_Button_Tick();
  3781                           
  3782                           ;incstack = 0
  3783                           ; Regs used in _MTOUCH_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3784  089C  318A  2251         	fcall	_MTOUCH_Button_Tick
  3785  089E  0008               	return
  3786  089F                     __end_of_MTOUCH_Tick:
  3787                           
  3788                           	psect	text5
  3789  0A51                     __ptext5:	
  3790 ;; *************** function _MTOUCH_Button_Tick *****************
  3791 ;; Defined at:
  3792 ;;		line 289 in file "mcc_generated_files/mtouch/mtouch_button.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;		None
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  i               1    4[COMMON] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3810 ;;Total ram usage:        2 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    5
  3813 ;; This function calls:
  3814 ;;		_Button_Tick_helper
  3815 ;; This function is called by:
  3816 ;;		_MTOUCH_Tick
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           
  3821                           ;psect for function _MTOUCH_Button_Tick
  3822  0A51                     _MTOUCH_Button_Tick:
  3823                           
  3824                           ;mcc_generated_files/mtouch/mtouch_button.c: 291:     uint8_t i;;mcc_generated_files/mto
      +                          uch/mtouch_button.c: 292:     for (i = 0; i < 2u; i++)
  3825                           
  3826                           ;incstack = 0
  3827                           ; Regs used in _MTOUCH_Button_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3828  0A51  01F4               	clrf	MTOUCH_Button_Tick@i
  3829  0A52                     l3363:
  3830                           
  3831                           ;mcc_generated_files/mtouch/mtouch_button.c: 293:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 294:         Button_Tick_helper(&mtouch_button[i]);
  3832  0A52  0874               	movf	MTOUCH_Button_Tick@i,w
  3833  0A53  00F3               	movwf	??_MTOUCH_Button_Tick
  3834  0A54  3003               	movlw	3
  3835  0A55                     u2435:
  3836  0A55  35F3               	lslf	??_MTOUCH_Button_Tick,f
  3837  0A56  3EFF               	addlw	-1
  3838  0A57  1D03               	skipz
  3839  0A58  2A55               	goto	u2435
  3840  0A59  3573               	lslf	??_MTOUCH_Button_Tick,w
  3841  0A5A  3E20               	addlw	(low (_mtouch_button| (0+256)))& (0+255)
  3842  0A5B  318C  2429  318A   	fcall	_Button_Tick_helper
  3843                           
  3844                           ;mcc_generated_files/mtouch/mtouch_button.c: 295:     }
  3845  0A5E  3001               	movlw	1
  3846  0A5F  00F3               	movwf	??_MTOUCH_Button_Tick
  3847  0A60  0873               	movf	??_MTOUCH_Button_Tick,w
  3848  0A61  07F4               	addwf	MTOUCH_Button_Tick@i,f
  3849  0A62  3002               	movlw	2
  3850  0A63  0274               	subwf	MTOUCH_Button_Tick@i,w
  3851  0A64  1803               	btfsc	3,0
  3852  0A65  0008               	return
  3853  0A66  2A52               	goto	l3363
  3854  0A67                     __end_of_MTOUCH_Button_Tick:
  3855                           
  3856                           	psect	text6
  3857  0C29                     __ptext6:	
  3858 ;; *************** function _Button_Tick_helper *****************
  3859 ;; Defined at:
  3860 ;;		line 297 in file "mcc_generated_files/mtouch/mtouch_button.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;  button          1    wreg     PTR struct .
  3863 ;;		 -> mtouch_button(32), 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;  button          1    2[COMMON] PTR struct .
  3866 ;;		 -> mtouch_button(32), 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3879 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3880 ;;Total ram usage:        3 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    4
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_MTOUCH_Button_Tick
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           
  3891                           ;psect for function _Button_Tick_helper
  3892  0C29                     _Button_Tick_helper:
  3893                           
  3894                           ;incstack = 0
  3895                           ; Regs used in _Button_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
  3896                           ;Button_Tick_helper@button stored from wreg
  3897  0C29  00F2               	movwf	Button_Tick_helper@button
  3898                           
  3899                           ;mcc_generated_files/mtouch/mtouch_button.c: 297: static void Button_Tick_helper(mtouch_
      +                          button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 298: {;mcc_generated_files
      +                          /mtouch/mtouch_button.c: 300:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  3900  0C2A  0872               	movf	Button_Tick_helper@button,w
  3901  0C2B  3E02               	addlw	2
  3902  0C2C  0086               	movwf	6
  3903  0C2D  3001               	movlw	1	; select bank2/3
  3904  0C2E  0087               	movwf	7
  3905  0C2F  3002               	movlw	2
  3906  0C30  0601               	xorwf	1,w
  3907  0C31  1D03               	btfss	3,2
  3908  0C32  0008               	return
  3909                           
  3910                           ;mcc_generated_files/mtouch/mtouch_button.c: 301:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 302:         (button->counter)++;
  3911  0C33  0872               	movf	Button_Tick_helper@button,w
  3912  0C34  3E0A               	addlw	10
  3913  0C35  0086               	movwf	6
  3914  0C36  3001               	movlw	1	; select bank2/3
  3915  0C37  0087               	movwf	7
  3916  0C38  3001               	movlw	1
  3917  0C39  0781               	addwf	1,f
  3918  0C3A  3141               	addfsr 1,1
  3919  0C3B  1803               	skipnc
  3920  0C3C  0A81               	incf	1,f
  3921                           
  3922                           ;mcc_generated_files/mtouch/mtouch_button.c: 303:         if (button->counter == (mtouch
      +                          _button_statecounter_t)0)
  3923  0C3D  0872               	movf	Button_Tick_helper@button,w
  3924  0C3E  3E0A               	addlw	10
  3925  0C3F  0086               	movwf	6
  3926  0C40  3001               	movlw	1	; select bank2/3
  3927  0C41  0087               	movwf	7
  3928  0C42  0016               	moviw fsr1++
  3929  0C43  0401               	iorwf	1,w
  3930  0C44  1D03               	btfss	3,2
  3931  0C45  0008               	return
  3932                           
  3933                           ;mcc_generated_files/mtouch/mtouch_button.c: 304:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 305:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
  3934  0C46  0872               	movf	Button_Tick_helper@button,w
  3935  0C47  3E0A               	addlw	10
  3936  0C48  0086               	movwf	6
  3937  0C49  3001               	movlw	1	; select bank2/3
  3938  0C4A  0087               	movwf	7
  3939  0C4B  30FF               	movlw	255
  3940  0C4C  3FC0               	movwi [0]fsr1
  3941  0C4D  30FF               	movlw	255
  3942  0C4E  3FC1               	movwi [1]fsr1
  3943  0C4F  0008               	return
  3944  0C50                     __end_of_Button_Tick_helper:
  3945                           
  3946                           	psect	text7
  3947  0A13                     __ptext7:	
  3948 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  3949 ;; Defined at:
  3950 ;;		line 187 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  sensor          1    9[BANK0 ] enum E2661
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      _Bool 
  3957 ;; Registers used:
  3958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 1F/0
  3961 ;;		On exit  : 1F/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3965 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3966 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3967 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3968 ;;Total ram usage:        2 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    9
  3971 ;; This function calls:
  3972 ;;		_Sensor_Service
  3973 ;; This function is called by:
  3974 ;;		_MTOUCH_Service_Mainloop
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           
  3979                           ;psect for function _MTOUCH_Sensor_SampleAll
  3980  0A13                     _MTOUCH_Sensor_SampleAll:
  3981                           
  3982                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 189:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 190:     for (sensor = 0; sensor < (2u); sens
      +                          or++)
  3983                           
  3984                           ;incstack = 0
  3985                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3986  0A13  01A9               	clrf	MTOUCH_Sensor_SampleAll@sensor
  3987  0A14                     l3583:
  3988                           
  3989                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 191:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 192:         if(Sensor_Service(sensor)!= MTOUCH_SENSOR_ERROR_none)
  3990  0A14  0829               	movf	MTOUCH_Sensor_SampleAll@sensor,w
  3991  0A15  318D  2590  318A   	fcall	_Sensor_Service
  3992  0A18  3A00               	xorlw	0
  3993  0A19  1903               	skipnz
  3994  0A1A  2A1D               	goto	l3589
  3995                           
  3996                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 193:             return 0;
  3997  0A1B  3000               	movlw	0
  3998  0A1C  0008               	return
  3999  0A1D                     l3589:
  4000                           
  4001                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 194:     }
  4002  0A1D  3001               	movlw	1
  4003  0A1E  00A8               	movwf	??_MTOUCH_Sensor_SampleAll
  4004  0A1F  0828               	movf	??_MTOUCH_Sensor_SampleAll,w
  4005  0A20  07A9               	addwf	MTOUCH_Sensor_SampleAll@sensor,f
  4006  0A21  3002               	movlw	2
  4007  0A22  0229               	subwf	MTOUCH_Sensor_SampleAll@sensor,w
  4008  0A23  1C03               	skipc
  4009  0A24  2A14               	goto	l3583
  4010                           
  4011                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 195:     return 1;
  4012  0A25  3001               	movlw	1
  4013  0A26  0008               	return
  4014  0A27                     __end_of_MTOUCH_Sensor_SampleAll:
  4015                           
  4016                           	psect	text8
  4017  0D90                     __ptext8:	
  4018 ;; *************** function _Sensor_Service *****************
  4019 ;; Defined at:
  4020 ;;		line 233 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  name            1    wreg     enum E2661
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  name            1    5[BANK0 ] enum E2661
  4025 ;;  sensor          1    7[BANK0 ] PTR struct .
  4026 ;;		 -> mtouch_sensor(18), 
  4027 ;;  error           1    6[BANK0 ] enum E2664
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      enum E2664
  4030 ;; Registers used:
  4031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 1F/0
  4034 ;;		On exit  : 1F/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4038 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4039 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4040 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4041 ;;Total ram usage:        5 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    8
  4044 ;; This function calls:
  4045 ;;		_Sensor_Acquisition
  4046 ;;		_Sensor_DefaultCallback
  4047 ;;		_Sensor_RawSample_Update
  4048 ;;		_Sensor_isEnabled
  4049 ;;		_Sensor_setSampled
  4050 ;;		___bmul
  4051 ;; This function is called by:
  4052 ;;		_MTOUCH_Sensor_SampleAll
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           
  4057                           ;psect for function _Sensor_Service
  4058  0D90                     _Sensor_Service:
  4059                           
  4060                           ;incstack = 0
  4061                           ; Regs used in _Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4062                           ;Sensor_Service@name stored from wreg
  4063  0D90  00A5               	movwf	Sensor_Service@name
  4064                           
  4065                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 233: static enum mtouch_sensor_error Sensor
      +                          _Service(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 234:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 235:     mtouch_sensor_t* sensor = &mtouc
      +                          h_sensor[name];
  4066  0D91  3009               	movlw	9
  4067  0D92  00A3               	movwf	??_Sensor_Service
  4068  0D93  0823               	movf	??_Sensor_Service,w
  4069  0D94  00F0               	movwf	___bmul@multiplicand
  4070  0D95  0825               	movf	Sensor_Service@name,w
  4071  0D96  3189  21BB  318D   	fcall	___bmul
  4072  0D99  3EB0               	addlw	(low (_mtouch_sensor| 0))& (0+255)
  4073  0D9A  0020               	movlb	0	; select bank0
  4074  0D9B  00A4               	movwf	??_Sensor_Service+1
  4075  0D9C  0824               	movf	??_Sensor_Service+1,w
  4076  0D9D  00A7               	movwf	Sensor_Service@sensor
  4077                           
  4078                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 236:     enum mtouch_sensor_error error = S
      +                          ensor_Acquisition(sensor);
  4079  0D9E  0827               	movf	Sensor_Service@sensor,w
  4080  0D9F  318D  2506  318D   	fcall	_Sensor_Acquisition
  4081  0DA2  00A3               	movwf	??_Sensor_Service
  4082  0DA3  0823               	movf	??_Sensor_Service,w
  4083  0DA4  00A6               	movwf	Sensor_Service@error
  4084                           
  4085                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 239:     switch(error)
  4086  0DA5  2DBE               	goto	l3305
  4087  0DA6                     l3297:
  4088                           
  4089                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 244:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 249:                 if(!lowpowerActivated)
  4090  0DA6  0827               	movf	Sensor_Service@sensor,w
  4091  0DA7  3189  2161  318D   	fcall	_Sensor_isEnabled
  4092  0DAA  3A00               	xorlw	0
  4093  0DAB  1903               	skipnz
  4094  0DAC  2DDB               	goto	l3307
  4095                           
  4096                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 250:                 {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 251:                     Sensor_RawSample_Update(sensor);
  4097  0DAD  0827               	movf	Sensor_Service@sensor,w
  4098  0DAE  318A  2295  318D   	fcall	_Sensor_RawSample_Update
  4099                           
  4100                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 253:                 Sensor_setSampled(sens
      +                          or);
  4101                           
  4102                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 252:                 }
  4103  0DB1  0020               	movlb	0	; select bank0
  4104  0DB2  0827               	movf	Sensor_Service@sensor,w
  4105  0DB3  3188  20F7  318D   	fcall	_Sensor_setSampled
  4106                           
  4107                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 254:                 callback_sampled(name)
      +                          ;
  4108  0DB6  0825               	movf	Sensor_Service@name,w
  4109  0DB7  00A3               	movwf	??_Sensor_Service
  4110  0DB8  0823               	movf	??_Sensor_Service,w
  4111  0DB9  00F0               	movwf	Sensor_DefaultCallback@sensor
  4112  0DBA  3188  2099  318D   	fcall	_Sensor_DefaultCallback
  4113  0DBD  2DDB               	goto	l3307
  4114  0DBE                     l3305:
  4115  0DBE  0826               	movf	Sensor_Service@error,w
  4116  0DBF  00A3               	movwf	??_Sensor_Service
  4117  0DC0  01A4               	clrf	??_Sensor_Service+1
  4118  0DC1  1BA3               	btfsc	??_Sensor_Service,7
  4119  0DC2  03A4               	decf	??_Sensor_Service+1,f
  4120                           
  4121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4122                           ; Switch size 1, requested type "simple"
  4123                           ; Number of cases is 2, Range of values is 0 to 255
  4124                           ; switch strategies available:
  4125                           ; Name         Instructions Cycles
  4126                           ; simple_byte            7     4 (average)
  4127                           ; jumptable            260     6 (fixed)
  4128                           ;	Chosen strategy is simple_byte
  4129  0DC3  0824               	movf	??_Sensor_Service+1,w
  4130  0DC4  3A00               	xorlw	0	; case 0
  4131  0DC5  1903               	skipnz
  4132  0DC6  2DCB               	goto	l4209
  4133  0DC7  3AFF               	xorlw	255	; case 255
  4134  0DC8  1903               	skipnz
  4135  0DC9  2DD0               	goto	l4211
  4136  0DCA  2DDB               	goto	l3307
  4137  0DCB                     l4209:
  4138                           
  4139                           ; Switch size 1, requested type "simple"
  4140                           ; Number of cases is 1, Range of values is 0 to 0
  4141                           ; switch strategies available:
  4142                           ; Name         Instructions Cycles
  4143                           ; simple_byte            4     3 (average)
  4144                           ; direct_byte            8     6 (fixed)
  4145                           ; jumptable            260     6 (fixed)
  4146                           ;	Chosen strategy is simple_byte
  4147  0DCB  0823               	movf	??_Sensor_Service,w
  4148  0DCC  3A00               	xorlw	0	; case 0
  4149  0DCD  1903               	skipnz
  4150  0DCE  2DA6               	goto	l3297
  4151  0DCF  2DDB               	goto	l3307
  4152  0DD0                     l4211:
  4153                           
  4154                           ; Switch size 1, requested type "simple"
  4155                           ; Number of cases is 3, Range of values is 253 to 255
  4156                           ; switch strategies available:
  4157                           ; Name         Instructions Cycles
  4158                           ; simple_byte           10     6 (average)
  4159                           ; direct_byte           11     5 (fixed)
  4160                           ; jumptable            263     9 (fixed)
  4161                           ;	Chosen strategy is simple_byte
  4162  0DD0  0823               	movf	??_Sensor_Service,w
  4163  0DD1  3AFD               	xorlw	253	; case 253
  4164  0DD2  1903               	skipnz
  4165  0DD3  2DDB               	goto	l3307
  4166  0DD4  3A03               	xorlw	3	; case 254
  4167  0DD5  1903               	skipnz
  4168  0DD6  2DDB               	goto	l3307
  4169  0DD7  3A01               	xorlw	1	; case 255
  4170  0DD8  1903               	skipnz
  4171  0DD9  2DDB               	goto	l3307
  4172  0DDA  2DDB               	goto	l3307
  4173  0DDB                     l3307:
  4174                           
  4175                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 266:     return error;
  4176  0DDB  0826               	movf	Sensor_Service@error,w
  4177  0DDC  0008               	return
  4178  0DDD                     __end_of_Sensor_Service:
  4179                           
  4180                           	psect	text9
  4181  08F7                     __ptext9:	
  4182 ;; *************** function _Sensor_setSampled *****************
  4183 ;; Defined at:
  4184 ;;		line 569 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  sensor          1    wreg     PTR struct .
  4187 ;;		 -> mtouch_sensor(18), 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  sensor          1    0[COMMON] PTR struct .
  4190 ;;		 -> mtouch_sensor(18), 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4195 ;; Tracked objects:
  4196 ;;		On entry : 1F/0
  4197 ;;		On exit  : 1F/0
  4198 ;;		Unchanged: 1F/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4203 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;Total ram usage:        1 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    4
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_Sensor_Service
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           
  4215                           ;psect for function _Sensor_setSampled
  4216  08F7                     _Sensor_setSampled:
  4217                           
  4218                           ;incstack = 0
  4219                           ; Regs used in _Sensor_setSampled: [wreg+fsr1l+fsr1h+status,2+status,0]
  4220                           ;Sensor_setSampled@sensor stored from wreg
  4221  08F7  00F0               	movwf	Sensor_setSampled@sensor
  4222                           
  4223                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 569: static __attribute__((inline)) void Se
      +                          nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 570
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 571:     sensor->sampled = 1;
  4224  08F8  0870               	movf	Sensor_setSampled@sensor,w
  4225  08F9  3E08               	addlw	8
  4226  08FA  0086               	movwf	6
  4227  08FB  0187               	clrf	7
  4228  08FC  1481               	bsf	1,1
  4229  08FD  0008               	return
  4230  08FE                     __end_of_Sensor_setSampled:
  4231                           
  4232                           	psect	text10
  4233  0A95                     __ptext10:	
  4234 ;; *************** function _Sensor_RawSample_Update *****************
  4235 ;; Defined at:
  4236 ;;		line 430 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  sensor          1    wreg     PTR struct .
  4239 ;;		 -> mtouch_sensor(18), 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  sensor          1    0[COMMON] PTR struct .
  4242 ;;		 -> mtouch_sensor(18), 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4247 ;; Tracked objects:
  4248 ;;		On entry : 1F/0
  4249 ;;		On exit  : 1F/1
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4255 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4256 ;;Total ram usage:        1 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    4
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_Sensor_Service
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           
  4267                           ;psect for function _Sensor_RawSample_Update
  4268  0A95                     _Sensor_RawSample_Update:
  4269                           
  4270                           ;incstack = 0
  4271                           ; Regs used in _Sensor_RawSample_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  4272                           ;Sensor_RawSample_Update@sensor stored from wreg
  4273  0A95  00F0               	movwf	Sensor_RawSample_Update@sensor
  4274  0A96  1F8B               	btfss	11,7	;volatile
  4275  0A97  2AA4               	goto	l3179
  4276  0A98  138B               	bcf	11,7	;volatile
  4277  0A99  0870               	movf	Sensor_RawSample_Update@sensor,w
  4278  0A9A  3E06               	addlw	6
  4279  0A9B  0086               	movwf	6
  4280  0A9C  0187               	clrf	7
  4281  0A9D  0021               	movlb	1	; select bank1
  4282  0A9E  085E               	movf	_packet_sample^(0+128),w
  4283  0A9F  3FC0               	movwi [0]fsr1
  4284  0AA0  085F               	movf	(_packet_sample+1)^(0+128),w
  4285  0AA1  3FC1               	movwi [1]fsr1
  4286  0AA2  178B               	bsf	11,7	;volatile
  4287  0AA3  0008               	return
  4288  0AA4                     l3179:
  4289  0AA4  0870               	movf	Sensor_RawSample_Update@sensor,w
  4290  0AA5  3E06               	addlw	6
  4291  0AA6  0086               	movwf	6
  4292  0AA7  0187               	clrf	7
  4293  0AA8  0021               	movlb	1	; select bank1
  4294  0AA9  085E               	movf	_packet_sample^(0+128),w
  4295  0AAA  3FC0               	movwi [0]fsr1
  4296  0AAB  085F               	movf	(_packet_sample+1)^(0+128),w
  4297  0AAC  3FC1               	movwi [1]fsr1
  4298  0AAD  0008               	return
  4299  0AAE                     __end_of_Sensor_RawSample_Update:
  4300                           
  4301                           	psect	text11
  4302  0899                     __ptext11:	
  4303 ;; *************** function _Sensor_DefaultCallback *****************
  4304 ;; Defined at:
  4305 ;;		line 450 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  sensor          1    0[COMMON] enum E2661
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		None
  4314 ;; Tracked objects:
  4315 ;;		On entry : 1F/0
  4316 ;;		On exit  : 1F/0
  4317 ;;		Unchanged: 1F/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4319 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;Total ram usage:        1 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:    4
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_Sensor_Service
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           
  4334                           ;psect for function _Sensor_DefaultCallback
  4335  0899                     _Sensor_DefaultCallback:
  4336                           
  4337                           ;incstack = 0
  4338                           ; Regs used in _Sensor_DefaultCallback: []
  4339  0899  0008               	return
  4340  089A                     __end_of_Sensor_DefaultCallback:
  4341                           
  4342                           	psect	text12
  4343  0D06                     __ptext12:	
  4344 ;; *************** function _Sensor_Acquisition *****************
  4345 ;; Defined at:
  4346 ;;		line 280 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  sensor          1    wreg     PTR struct .
  4349 ;;		 -> mtouch_sensor(18), 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  sensor          1    2[BANK0 ] PTR struct .
  4352 ;;		 -> mtouch_sensor(18), 
  4353 ;;  retry           1    1[BANK0 ] unsigned char 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      enum E2664
  4356 ;; Registers used:
  4357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 1F/0
  4360 ;;		On exit  : 1F/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4364 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4365 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4366 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4367 ;;Total ram usage:        3 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    7
  4370 ;; This function calls:
  4371 ;;		_Sensor_Acq_ExecutePacket
  4372 ;;		_Sensor_isEnabled
  4373 ;;		_Sensor_setActive
  4374 ;;		_Sensor_setInactive
  4375 ;;		_abs
  4376 ;; This function is called by:
  4377 ;;		_Sensor_Service
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           
  4382                           ;psect for function _Sensor_Acquisition
  4383  0D06                     _Sensor_Acquisition:
  4384                           
  4385                           ;incstack = 0
  4386                           ; Regs used in _Sensor_Acquisition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4387                           ;Sensor_Acquisition@sensor stored from wreg
  4388  0D06  00A2               	movwf	Sensor_Acquisition@sensor
  4389                           
  4390                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 280: static enum mtouch_sensor_error Sensor
      +                          _Acquisition(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 281: {
      +                          ;mcc_generated_files/mtouch/mtouch_sensor.c: 283:     uint8_t retry = (uint8_t)5u;
  4391  0D07  3005               	movlw	5
  4392  0D08  00A0               	movwf	??_Sensor_Acquisition
  4393  0D09  0820               	movf	??_Sensor_Acquisition,w
  4394  0D0A  00A1               	movwf	Sensor_Acquisition@retry
  4395                           
  4396                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 285:     if(!Sensor_isEnabled(sensor))
  4397  0D0B  0822               	movf	Sensor_Acquisition@sensor,w
  4398  0D0C  3189  2161  318D   	fcall	_Sensor_isEnabled
  4399  0D0F  3A00               	xorlw	0
  4400  0D10  1D03               	skipz
  4401  0D11  2D1B               	goto	l3159
  4402  0D12                     l3149:
  4403                           
  4404                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 286:         return MTOUCH_SENSOR_ERROR_non
      +                          e;
  4405  0D12  3000               	movlw	0
  4406  0D13  0008               	return
  4407  0D14                     l3153:
  4408                           
  4409                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 289:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 290:         retry--;
  4410  0D14  3001               	movlw	1
  4411  0D15  02A1               	subwf	Sensor_Acquisition@retry,f
  4412                           
  4413                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 291:         if(retry == 0)
  4414  0D16  0821               	movf	Sensor_Acquisition@retry,w
  4415  0D17  1D03               	btfss	3,2
  4416  0D18  2D1B               	goto	l3159
  4417                           
  4418                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 292:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 293:             return MTOUCH_SENSOR_ERROR_tooManyRetries;
  4419  0D19  30FC               	movlw	252
  4420  0D1A  0008               	return
  4421  0D1B                     l3159:
  4422                           
  4423                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 288:     while(Sensor_Acq_ExecutePacket(sen
      +                          sor))
  4424  0D1B  0822               	movf	Sensor_Acquisition@sensor,w
  4425  0D1C  318E  262F  318D   	fcall	_Sensor_Acq_ExecutePacket
  4426  0D1F  3A00               	xorlw	0
  4427  0D20  1D03               	skipz
  4428  0D21  2D14               	goto	l3153
  4429                           
  4430                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 297:     if((mtouch_sensor_packetsample_t)a
      +                          bs(packet_sample - sensor->rawSample) > 100u)
  4431  0D22  0822               	movf	Sensor_Acquisition@sensor,w
  4432  0D23  3E06               	addlw	6
  4433  0D24  0086               	movwf	6
  4434  0D25  0187               	clrf	7
  4435  0D26  3F40               	moviw [0]fsr1
  4436  0D27  0021               	movlb	1	; select bank1
  4437  0D28  025E               	subwf	_packet_sample^(0+128),w
  4438  0D29  00F0               	movwf	abs@a
  4439  0D2A  3F41               	moviw [1]fsr1
  4440  0D2B  3B5F               	subwfb	(_packet_sample+1)^(0+128),w
  4441  0D2C  00F1               	movwf	abs@a+1
  4442  0D2D  318A  227E  318D   	fcall	_abs
  4443  0D30  3000               	movlw	0
  4444  0D31  0271               	subwf	?_abs+1,w
  4445  0D32  3065               	movlw	101
  4446  0D33  1903               	skipnz
  4447  0D34  0270               	subwf	?_abs,w
  4448  0D35  1C03               	skipc
  4449  0D36  2D3D               	goto	l3165
  4450                           
  4451                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 298:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 299:         Sensor_setActive(sensor);
  4452  0D37  0020               	movlb	0	; select bank0
  4453  0D38  0822               	movf	Sensor_Acquisition@sensor,w
  4454  0D39  3188  20E9  318D   	fcall	_Sensor_setActive
  4455                           
  4456                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 300:     }
  4457  0D3C  2D12               	goto	l3149
  4458  0D3D                     l3165:
  4459                           
  4460                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 302:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 303:         Sensor_setInactive(sensor);
  4461  0D3D  0020               	movlb	0	; select bank0
  4462  0D3E  0822               	movf	Sensor_Acquisition@sensor,w
  4463  0D3F  3188  20F0  318D   	fcall	_Sensor_setInactive
  4464  0D42  2D12               	goto	l3149
  4465  0D43                     __end_of_Sensor_Acquisition:
  4466                           
  4467                           	psect	text13
  4468  0A7E                     __ptext13:	
  4469 ;; *************** function _abs *****************
  4470 ;; Defined at:
  4471 ;;		line 1 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/abs.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  a               2    0[COMMON] int 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  2    0[COMMON] int 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 1F/1
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;Total ram usage:        4 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    4
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_Sensor_Acquisition
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           
  4500                           ;psect for function _abs
  4501  0A7E                     _abs:
  4502                           
  4503                           ;incstack = 0
  4504                           ; Regs used in _abs: [wreg+status,2+status,0]
  4505  0A7E  0871               	movf	abs@a+1,w
  4506  0A7F  3A80               	xorlw	128
  4507  0A80  00F2               	movwf	??_abs
  4508  0A81  3080               	movlw	128
  4509  0A82  0272               	subwf	??_abs,w
  4510  0A83  1D03               	skipz
  4511  0A84  2A87               	goto	u2045
  4512  0A85  3001               	movlw	1
  4513  0A86  0270               	subwf	abs@a,w
  4514  0A87                     u2045:
  4515  0A87  1803               	skipnc
  4516  0A88  0008               	return
  4517  0A89  0970               	comf	abs@a,w
  4518  0A8A  00F2               	movwf	??_abs
  4519  0A8B  0971               	comf	abs@a+1,w
  4520  0A8C  00F3               	movwf	??_abs+1
  4521  0A8D  0AF2               	incf	??_abs,f
  4522  0A8E  1903               	skipnz
  4523  0A8F  0AF3               	incf	??_abs+1,f
  4524  0A90  0872               	movf	??_abs,w
  4525  0A91  00F0               	movwf	?_abs
  4526  0A92  0873               	movf	??_abs+1,w
  4527  0A93  00F1               	movwf	?_abs+1
  4528  0A94  0008               	return
  4529  0A95                     __end_of_abs:
  4530                           
  4531                           	psect	text14
  4532  08F0                     __ptext14:	
  4533 ;; *************** function _Sensor_setInactive *****************
  4534 ;; Defined at:
  4535 ;;		line 515 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  sensor          1    wreg     PTR struct .
  4538 ;;		 -> mtouch_sensor(18), 
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;  sensor          1    0[COMMON] PTR struct .
  4541 ;;		 -> mtouch_sensor(18), 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 1F/0
  4548 ;;		On exit  : 1F/0
  4549 ;;		Unchanged: 1F/0
  4550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4554 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4555 ;;Total ram usage:        1 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:    4
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_Sensor_Acquisition
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           
  4566                           ;psect for function _Sensor_setInactive
  4567  08F0                     _Sensor_setInactive:
  4568                           
  4569                           ;incstack = 0
  4570                           ; Regs used in _Sensor_setInactive: [wreg+fsr1l+fsr1h+status,2+status,0]
  4571                           ;Sensor_setInactive@sensor stored from wreg
  4572  08F0  00F0               	movwf	Sensor_setInactive@sensor
  4573                           
  4574                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 515: static __attribute__((inline)) void Se
      +                          nsor_setInactive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 51
      +                          6: {;mcc_generated_files/mtouch/mtouch_sensor.c: 517:     sensor->active = 0;
  4575  08F1  0870               	movf	Sensor_setInactive@sensor,w
  4576  08F2  3E08               	addlw	8
  4577  08F3  0086               	movwf	6
  4578  08F4  0187               	clrf	7
  4579  08F5  1101               	bcf	1,2
  4580  08F6  0008               	return
  4581  08F7                     __end_of_Sensor_setInactive:
  4582                           
  4583                           	psect	text15
  4584  08E9                     __ptext15:	
  4585 ;; *************** function _Sensor_setActive *****************
  4586 ;; Defined at:
  4587 ;;		line 510 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  sensor          1    wreg     PTR struct .
  4590 ;;		 -> mtouch_sensor(18), 
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  sensor          1    0[COMMON] PTR struct .
  4593 ;;		 -> mtouch_sensor(18), 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4598 ;; Tracked objects:
  4599 ;;		On entry : 1F/0
  4600 ;;		On exit  : 1F/0
  4601 ;;		Unchanged: 1F/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;Total ram usage:        1 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    4
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_Sensor_Acquisition
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           
  4618                           ;psect for function _Sensor_setActive
  4619  08E9                     _Sensor_setActive:
  4620                           
  4621                           ;incstack = 0
  4622                           ; Regs used in _Sensor_setActive: [wreg+fsr1l+fsr1h+status,2+status,0]
  4623                           ;Sensor_setActive@sensor stored from wreg
  4624  08E9  00F0               	movwf	Sensor_setActive@sensor
  4625                           
  4626                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 510: static __attribute__((inline)) void Se
      +                          nsor_setActive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 511:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 512:     sensor->active = 1;
  4627  08EA  0870               	movf	Sensor_setActive@sensor,w
  4628  08EB  3E08               	addlw	8
  4629  08EC  0086               	movwf	6
  4630  08ED  0187               	clrf	7
  4631  08EE  1501               	bsf	1,2
  4632  08EF  0008               	return
  4633  08F0                     __end_of_Sensor_setActive:
  4634                           
  4635                           	psect	text16
  4636  0961                     __ptext16:	
  4637 ;; *************** function _Sensor_isEnabled *****************
  4638 ;; Defined at:
  4639 ;;		line 495 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;  sensor          1    wreg     PTR struct .
  4642 ;;		 -> mtouch_sensor(18), 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  sensor          1    0[COMMON] PTR struct .
  4645 ;;		 -> mtouch_sensor(18), 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      _Bool 
  4648 ;; Registers used:
  4649 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4650 ;; Tracked objects:
  4651 ;;		On entry : 1F/0
  4652 ;;		On exit  : 1F/0
  4653 ;;		Unchanged: 1F/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;Total ram usage:        1 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    4
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_Sensor_Service
  4666 ;;		_Sensor_Acquisition
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           
  4671                           ;psect for function _Sensor_isEnabled
  4672  0961                     _Sensor_isEnabled:
  4673                           
  4674                           ;incstack = 0
  4675                           ; Regs used in _Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0]
  4676                           ;Sensor_isEnabled@sensor stored from wreg
  4677  0961  00F0               	movwf	Sensor_isEnabled@sensor
  4678                           
  4679                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 495: static _Bool Sensor_isEnabled(mtouch_s
      +                          ensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 496: {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 497:     if(sensor!=((void*)0))
  4680  0962  0870               	movf	Sensor_isEnabled@sensor,w
  4681  0963  1903               	btfsc	3,2
  4682  0964  296C               	goto	l3057
  4683                           
  4684                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 498:         return (_Bool)sensor->enabled;
  4685  0965  0870               	movf	Sensor_isEnabled@sensor,w
  4686  0966  3E08               	addlw	8
  4687  0967  0086               	movwf	6
  4688  0968  0187               	clrf	7
  4689  0969  0801               	movf	1,w
  4690  096A  3901               	andlw	1
  4691  096B  0008               	return
  4692  096C                     l3057:
  4693                           
  4694                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 500:         return 0;
  4695  096C  3000               	movlw	0
  4696  096D  0008               	return
  4697  096E                     __end_of_Sensor_isEnabled:
  4698                           
  4699                           	psect	text17
  4700  0E2F                     __ptext17:	
  4701 ;; *************** function _Sensor_Acq_ExecutePacket *****************
  4702 ;; Defined at:
  4703 ;;		line 315 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  sensor          1    wreg     PTR struct .
  4706 ;;		 -> mtouch_sensor(18), 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  sensor          1   13[COMMON] PTR struct .
  4709 ;;		 -> mtouch_sensor(18), 
  4710 ;;  error           1   12[COMMON] enum E2664
  4711 ;;  GIE_state       1   11[COMMON] unsigned char 
  4712 ;;  ADCON1_temp     1   10[COMMON] unsigned char 
  4713 ;;  ADCON0_temp     1    9[COMMON] unsigned char 
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  1    wreg      enum E2664
  4716 ;; Registers used:
  4717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4718 ;; Tracked objects:
  4719 ;;		On entry : 1F/0
  4720 ;;		On exit  : 1F/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4724 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4725 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4726 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4727 ;;Total ram usage:        6 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    6
  4730 ;; This function calls:
  4731 ;;		_MTOUCH_Delay
  4732 ;;		_MTOUCH_Random
  4733 ;;		_MTOUCH_Sensor_Scan_Initialize
  4734 ;;		_Sensor_Acq_ExecuteScan
  4735 ;;		_Sensor_setScanFunction
  4736 ;; This function is called by:
  4737 ;;		_Sensor_Acquisition
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           
  4742                           ;psect for function _Sensor_Acq_ExecutePacket
  4743  0E2F                     _Sensor_Acq_ExecutePacket:
  4744                           
  4745                           ;incstack = 0
  4746                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4747                           ;Sensor_Acq_ExecutePacket@sensor stored from wreg
  4748  0E2F  00FD               	movwf	Sensor_Acq_ExecutePacket@sensor
  4749                           
  4750                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 315: static enum mtouch_sensor_error Sensor
      +                          _Acq_ExecutePacket(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          316: {;mcc_generated_files/mtouch/mtouch_sensor.c: 318:     enum mtouch_sensor_error err
      +                          or = MTOUCH_SENSOR_ERROR_none;
  4751  0E30  01FC               	clrf	Sensor_Acq_ExecutePacket@error
  4752                           
  4753                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 319:     uint8_t ADCON0_temp;;mcc_generated
      +                          _files/mtouch/mtouch_sensor.c: 320:     uint8_t ADCON1_temp;;mcc_generated_files/mtouch/
      +                          mtouch_sensor.c: 322:     uint8_t GIE_state;;mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           324:     ADCON0_temp = ADCON0;
  4754  0E31  0021               	movlb	1	; select bank1
  4755  0E32  081D               	movf	29,w	;volatile
  4756  0E33  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  4757  0E34  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  4758  0E35  00F9               	movwf	Sensor_Acq_ExecutePacket@ADCON0_temp
  4759                           
  4760                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 325:     ADCON1_temp = ADCON1;
  4761  0E36  081E               	movf	30,w	;volatile
  4762  0E37  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  4763  0E38  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  4764  0E39  00FA               	movwf	Sensor_Acq_ExecutePacket@ADCON1_temp
  4765                           
  4766                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 326:     MTOUCH_Sensor_Scan_Initialize();
  4767  0E3A  3188  20AD  318E   	fcall	_MTOUCH_Sensor_Scan_Initialize
  4768                           
  4769                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 328:     GIE_state = INTCONbits.GIE;
  4770  0E3D  3000               	movlw	0
  4771  0E3E  1B8B               	btfsc	11,7	;volatile
  4772  0E3F  3001               	movlw	1
  4773  0E40  00FB               	movwf	Sensor_Acq_ExecutePacket@GIE_state
  4774                           
  4775                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 330:     Sensor_setScanFunction(sensor);
  4776  0E41  087D               	movf	Sensor_Acq_ExecutePacket@sensor,w
  4777  0E42  3189  21EE  318E   	fcall	_Sensor_setScanFunction
  4778                           
  4779                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 332:     currentScannSensor = sensor->senso
      +                          r_name;
  4780  0E45  087D               	movf	Sensor_Acq_ExecutePacket@sensor,w
  4781  0E46  0086               	movwf	6
  4782  0E47  0187               	clrf	7
  4783  0E48  0801               	movf	1,w
  4784  0E49  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  4785  0E4A  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  4786  0E4B  0020               	movlb	0	; select bank0
  4787  0E4C  00E9               	movwf	_currentScannSensor
  4788                           
  4789                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 333:     packet_counter = sensor->oversampl
      +                          ing;
  4790  0E4D  087D               	movf	Sensor_Acq_ExecutePacket@sensor,w
  4791  0E4E  0086               	movwf	6
  4792  0E4F  0187               	clrf	7
  4793  0E50  3F45               	moviw [5]fsr1
  4794  0E51  00E8               	movwf	_packet_counter
  4795                           
  4796                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 334:     packet_sample = 0;
  4797  0E52  0021               	movlb	1	; select bank1
  4798  0E53  01DE               	clrf	_packet_sample^(0+128)
  4799  0E54  01DF               	clrf	(_packet_sample+1)^(0+128)
  4800                           
  4801                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 335:     sensor_globalFlags.packet_done = 0
      +                          ;
  4802  0E55  0020               	movlb	0	; select bank0
  4803  0E56  106A               	bcf	_sensor_globalFlags,0	;volatile
  4804                           
  4805                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 336:     sample_delay = MTOUCH_Random();
  4806  0E57  3189  219B  318E   	fcall	_MTOUCH_Random
  4807  0E5A  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  4808  0E5B  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  4809  0E5C  00E7               	movwf	_sample_delay
  4810                           
  4811                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 337:     packet_sample = 0;
  4812  0E5D  0021               	movlb	1	; select bank1
  4813  0E5E  01DE               	clrf	_packet_sample^(0+128)
  4814  0E5F  01DF               	clrf	(_packet_sample+1)^(0+128)
  4815                           
  4816                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 339:     sensor_globalFlags.interrupted = 0
      +                          ;
  4817  0E60  0020               	movlb	0	; select bank0
  4818  0E61  10EA               	bcf	_sensor_globalFlags,1	;volatile
  4819  0E62                     l3083:
  4820                           
  4821                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 343:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 344:         INTCONbits.GIE = (uint8_t)0;
  4822  0E62  138B               	bcf	11,7	;volatile
  4823                           
  4824                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 345:         Sensor_Acq_ExecuteScan();
  4825  0E63  318E  2682  318E   	fcall	_Sensor_Acq_ExecuteScan
  4826                           
  4827                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 346:         INTCONbits.GIE = GIE_state;
  4828  0E66  0C7B               	rrf	Sensor_Acq_ExecutePacket@GIE_state,w
  4829  0E67  1C03               	skipc
  4830  0E68  138B               	bcf	11,7	;volatile
  4831  0E69  1803               	skipnc
  4832  0E6A  178B               	bsf	11,7	;volatile
  4833                           
  4834                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 347:         MTOUCH_Delay();
  4835  0E6B  3189  2118  318E   	fcall	_MTOUCH_Delay
  4836  0E6E                     l136:	
  4837                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 348:         while(ADCON0bits.GO_nDONE == 1
      +                          );
  4838                           
  4839  0E6E  0021               	movlb	1	; select bank1
  4840  0E6F  189D               	btfsc	29,1	;volatile
  4841  0E70  2E6E               	goto	l136
  4842                           
  4843                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 349:     } while(sensor_globalFlags.packet_
      +                          done == 0);
  4844  0E71  0020               	movlb	0	; select bank0
  4845  0E72  1C6A               	btfss	_sensor_globalFlags,0	;volatile
  4846  0E73  2E62               	goto	l3083
  4847                           
  4848                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 352:     ADCON0 = ADCON0_temp;
  4849  0E74  0879               	movf	Sensor_Acq_ExecutePacket@ADCON0_temp,w
  4850  0E75  0021               	movlb	1	; select bank1
  4851  0E76  009D               	movwf	29	;volatile
  4852                           
  4853                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 353:     ADCON1 = ADCON1_temp;
  4854  0E77  087A               	movf	Sensor_Acq_ExecutePacket@ADCON1_temp,w
  4855  0E78  009E               	movwf	30	;volatile
  4856                           
  4857                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 355:     if(sensor_globalFlags.interrupted)
  4858  0E79  0020               	movlb	0	; select bank0
  4859  0E7A  1CEA               	btfss	_sensor_globalFlags,1	;volatile
  4860  0E7B  2E80               	goto	l140
  4861                           
  4862                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 356:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 357:         error = MTOUCH_SENSOR_ERROR_interruptedScan;
  4863  0E7C  30FA               	movlw	250
  4864  0E7D  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  4865  0E7E  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  4866  0E7F  00FC               	movwf	Sensor_Acq_ExecutePacket@error
  4867  0E80                     l140:	
  4868                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 358:     }
  4869                           
  4870                           
  4871                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 360:     return error;
  4872  0E80  087C               	movf	Sensor_Acq_ExecutePacket@error,w
  4873  0E81  0008               	return
  4874  0E82                     __end_of_Sensor_Acq_ExecutePacket:
  4875                           
  4876                           	psect	text18
  4877  09EE                     __ptext18:	
  4878 ;; *************** function _Sensor_setScanFunction *****************
  4879 ;; Defined at:
  4880 ;;		line 462 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;  sensor          1    wreg     PTR struct .
  4883 ;;		 -> mtouch_sensor(18), 
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;  sensor          1    0[COMMON] PTR struct .
  4886 ;;		 -> mtouch_sensor(18), 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  1    wreg      void 
  4889 ;; Registers used:
  4890 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4891 ;; Tracked objects:
  4892 ;;		On entry : 1F/1
  4893 ;;		On exit  : 1F/1
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;Total ram usage:        1 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    4
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_Sensor_Acq_ExecutePacket
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           
  4911                           ;psect for function _Sensor_setScanFunction
  4912  09EE                     _Sensor_setScanFunction:
  4913                           
  4914                           ;incstack = 0
  4915                           ; Regs used in _Sensor_setScanFunction: [wreg+fsr1l+fsr1h+status,2+status,0]
  4916                           ;Sensor_setScanFunction@sensor stored from wreg
  4917  09EE  00F0               	movwf	Sensor_setScanFunction@sensor
  4918  09EF  0A70               	incf	Sensor_setScanFunction@sensor,w
  4919  09F0  0086               	movwf	6
  4920  09F1  0187               	clrf	7
  4921  09F2  3F40               	moviw [0]fsr1
  4922  09F3  00AC               	movwf	_Sensor_scanA^(0+128)
  4923  09F4  3F41               	moviw [1]fsr1
  4924  09F5  00AD               	movwf	(_Sensor_scanA+1)^(0+128)
  4925  09F6  0870               	movf	Sensor_setScanFunction@sensor,w
  4926  09F7  3E03               	addlw	3
  4927  09F8  0086               	movwf	6
  4928  09F9  0187               	clrf	7
  4929  09FA  3F40               	moviw [0]fsr1
  4930  09FB  00AA               	movwf	_Sensor_scanB^(0+128)
  4931  09FC  3F41               	moviw [1]fsr1
  4932  09FD  00AB               	movwf	(_Sensor_scanB+1)^(0+128)
  4933  09FE  0008               	return
  4934  09FF                     __end_of_Sensor_setScanFunction:
  4935                           
  4936                           	psect	text19
  4937  0E82                     __ptext19:	
  4938 ;; *************** function _Sensor_Acq_ExecuteScan *****************
  4939 ;; Defined at:
  4940 ;;		line 379 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;		None
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  result          2    6[COMMON] unsigned short 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 1F/0
  4951 ;;		On exit  : 1F/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;Total ram usage:        4 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    5
  4961 ;; This function calls:
  4962 ;;		_MTOUCH_CVD_ScanA_0
  4963 ;;		_MTOUCH_CVD_ScanA_1
  4964 ;;		_MTOUCH_CVD_ScanB_0
  4965 ;;		_MTOUCH_CVD_ScanB_1
  4966 ;;		___bmul
  4967 ;; This function is called by:
  4968 ;;		_Sensor_Acq_ExecutePacket
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           
  4973                           ;psect for function _Sensor_Acq_ExecuteScan
  4974  0E82                     _Sensor_Acq_ExecuteScan:
  4975                           
  4976                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 382:     mtouch_sensor_adcsample_t result =
      +                           ADRES;
  4977                           
  4978                           ;incstack = 0
  4979                           ; Regs used in _Sensor_Acq_ExecuteScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4980  0E82  0021               	movlb	1	; select bank1
  4981  0E83  081C               	movf	28,w	;volatile
  4982  0E84  00F7               	movwf	Sensor_Acq_ExecuteScan@result+1
  4983  0E85  081B               	movf	27,w	;volatile
  4984  0E86  00F6               	movwf	Sensor_Acq_ExecuteScan@result
  4985                           
  4986                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 384:     if(sensor_globalFlags.packet_done)
  4987  0E87  0020               	movlb	0	; select bank0
  4988  0E88  186A               	btfsc	_sensor_globalFlags,0	;volatile
  4989  0E89  0008               	return
  4990                           
  4991                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 387:     if (packet_counter != (uint8_t)0)
  4992  0E8A  0868               	movf	_packet_counter,w
  4993  0E8B  1D03               	btfss	3,2
  4994  0E8C  2E9C               	goto	l3001
  4995  0E8D  2ED3               	goto	l3013
  4996  0E8E                     l2995:
  4997  0E8E  0021               	movlb	1	; select bank1
  4998  0E8F  082D               	movf	(_Sensor_scanA+1)^(0+128),w
  4999  0E90  008A               	movwf	10
  5000  0E91  082C               	movf	_Sensor_scanA^(0+128),w
  5001  0E92  000A               	callw
  5002  0E93  318E               	pagesel	$
  5003  0E94  2EAD               	goto	l3003
  5004  0E95                     l2997:
  5005  0E95  0021               	movlb	1	; select bank1
  5006  0E96  082B               	movf	(_Sensor_scanB+1)^(0+128),w
  5007  0E97  008A               	movwf	10
  5008  0E98  082A               	movf	_Sensor_scanB^(0+128),w
  5009  0E99  000A               	callw
  5010  0E9A  318E               	pagesel	$
  5011  0E9B  2EAD               	goto	l3003
  5012  0E9C                     l3001:
  5013  0E9C  0868               	movf	_packet_counter,w
  5014  0E9D  3901               	andlw	1
  5015  0E9E  00F4               	movwf	??_Sensor_Acq_ExecuteScan
  5016  0E9F  01F5               	clrf	??_Sensor_Acq_ExecuteScan+1
  5017                           
  5018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5019                           ; Switch size 1, requested type "simple"
  5020                           ; Number of cases is 1, Range of values is 0 to 0
  5021                           ; switch strategies available:
  5022                           ; Name         Instructions Cycles
  5023                           ; simple_byte            4     3 (average)
  5024                           ; direct_byte            8     6 (fixed)
  5025                           ; jumptable            260     6 (fixed)
  5026                           ;	Chosen strategy is simple_byte
  5027  0EA0  0875               	movf	??_Sensor_Acq_ExecuteScan+1,w
  5028  0EA1  3A00               	xorlw	0	; case 0
  5029  0EA2  1903               	skipnz
  5030  0EA3  2EA5               	goto	l4213
  5031  0EA4  2EAD               	goto	l3003
  5032  0EA5                     l4213:
  5033                           
  5034                           ; Switch size 1, requested type "simple"
  5035                           ; Number of cases is 2, Range of values is 0 to 1
  5036                           ; switch strategies available:
  5037                           ; Name         Instructions Cycles
  5038                           ; simple_byte            7     4 (average)
  5039                           ; direct_byte           10     6 (fixed)
  5040                           ; jumptable            260     6 (fixed)
  5041                           ;	Chosen strategy is simple_byte
  5042  0EA5  0874               	movf	??_Sensor_Acq_ExecuteScan,w
  5043  0EA6  3A00               	xorlw	0	; case 0
  5044  0EA7  1903               	skipnz
  5045  0EA8  2E8E               	goto	l2995
  5046  0EA9  3A01               	xorlw	1	; case 1
  5047  0EAA  1903               	skipnz
  5048  0EAB  2E95               	goto	l2997
  5049  0EAC  2EAD               	goto	l3003
  5050  0EAD                     l3003:
  5051  0EAD  3009               	movlw	9
  5052  0EAE  00F4               	movwf	??_Sensor_Acq_ExecuteScan
  5053  0EAF  0874               	movf	??_Sensor_Acq_ExecuteScan,w
  5054  0EB0  00F0               	movwf	___bmul@multiplicand
  5055  0EB1  0020               	movlb	0	; select bank0
  5056  0EB2  0869               	movf	_currentScannSensor,w
  5057  0EB3  3189  21BB  318E   	fcall	___bmul
  5058  0EB6  3EB5               	addlw	(low ((_mtouch_sensor| 0+5)))& (0+255)
  5059  0EB7  0086               	movwf	6
  5060  0EB8  0187               	clrf	7
  5061  0EB9  0801               	movf	1,w
  5062  0EBA  0020               	movlb	0	; select bank0
  5063  0EBB  0668               	xorwf	_packet_counter,w
  5064  0EBC  1903               	skipnz
  5065  0EBD  2ECF               	goto	l3011
  5066  0EBE  1C68               	btfss	_packet_counter,0
  5067  0EBF  2ECA               	goto	l3009
  5068  0EC0  3000               	movlw	0
  5069  0EC1  00F4               	movwf	??_Sensor_Acq_ExecuteScan
  5070  0EC2  3004               	movlw	4
  5071  0EC3  00F5               	movwf	??_Sensor_Acq_ExecuteScan+1
  5072  0EC4  0876               	movf	Sensor_Acq_ExecuteScan@result,w
  5073  0EC5  0274               	subwf	??_Sensor_Acq_ExecuteScan,w
  5074  0EC6  00F6               	movwf	Sensor_Acq_ExecuteScan@result
  5075  0EC7  0877               	movf	Sensor_Acq_ExecuteScan@result+1,w
  5076  0EC8  3B75               	subwfb	??_Sensor_Acq_ExecuteScan+1,w
  5077  0EC9  00F7               	movwf	Sensor_Acq_ExecuteScan@result+1
  5078  0ECA                     l3009:
  5079  0ECA  0876               	movf	Sensor_Acq_ExecuteScan@result,w
  5080  0ECB  0021               	movlb	1	; select bank1
  5081  0ECC  07DE               	addwf	_packet_sample^(0+128),f
  5082  0ECD  0877               	movf	Sensor_Acq_ExecuteScan@result+1,w
  5083  0ECE  3DDF               	addwfc	(_packet_sample+1)^(0+128),f
  5084  0ECF                     l3011:
  5085  0ECF  3001               	movlw	1
  5086  0ED0  0020               	movlb	0	; select bank0
  5087  0ED1  02E8               	subwf	_packet_counter,f
  5088  0ED2  0008               	return
  5089  0ED3                     l3013:
  5090  0ED3  0876               	movf	Sensor_Acq_ExecuteScan@result,w
  5091  0ED4  0021               	movlb	1	; select bank1
  5092  0ED5  07DE               	addwf	_packet_sample^(0+128),f
  5093  0ED6  0877               	movf	Sensor_Acq_ExecuteScan@result+1,w
  5094  0ED7  3DDF               	addwfc	(_packet_sample+1)^(0+128),f
  5095  0ED8  0020               	movlb	0	; select bank0
  5096  0ED9  146A               	bsf	_sensor_globalFlags,0	;volatile
  5097  0EDA  0008               	return
  5098  0EDB                     __end_of_Sensor_Acq_ExecuteScan:
  5099                           
  5100                           	psect	text20
  5101  0BA0                     __ptext20:	
  5102 ;; *************** function _MTOUCH_CVD_ScanB_0 *****************
  5103 ;; Defined at:
  5104 ;;		line 113 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;		None
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;		None
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  1    wreg      void 
  5111 ;; Registers used:
  5112 ;;		wreg
  5113 ;; Tracked objects:
  5114 ;;		On entry : 1F/1
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5122 ;;Total ram usage:        0 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    4
  5125 ;; This function calls:
  5126 ;;		Nothing
  5127 ;; This function is called by:
  5128 ;;		_Sensor_Acq_ExecuteScan
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           
  5133                           ;psect for function _MTOUCH_CVD_ScanB_0
  5134  0BA0                     _MTOUCH_CVD_ScanB_0:
  5135                           
  5136                           ;incstack = 0
  5137                           ; Regs used in _MTOUCH_CVD_ScanB_0: [wreg]
  5138  0BA0  0022               	banksel	270	;# 
  5139  0BA1  138E               	bcf	14,7	;# 
  5140  0BA2  0021               	banksel	157	;# 
  5141  0BA3  3025               	movlw	37	;# 
  5142  0BA4  009D               	movwf	29	;# 
  5143                           
  5144                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 125:     _delay(16u);
  5145  0BA5  3005               	movlw	5
  5146  0BA6                     u3777:
  5147  0BA6  0B89               	decfsz	9,f
  5148  0BA7  2BA6               	goto	u3777
  5149  0BA8  0000               	nop
  5150  0BA9  308E               	movlw	142	;# 
  5151  0BAA  0084               	movwf	4	;# 
  5152  0BAB  3000               	movlw	0	;# 
  5153  0BAC  0085               	movwf	5	;# 
  5154  0BAD  300E               	movlw	14	;# 
  5155  0BAE  0086               	movwf	6	;# 
  5156  0BAF  3001               	movlw	1	;# 
  5157  0BB0  0087               	movwf	7	;# 
  5158  0BB1  3021               	movlw	33	;# 
  5159  0BB2  1700               	bsf	0,6	;# 
  5160                           
  5161                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 143:     _delay(0u);
  5162  0BB3  009D               	movwf	29	;# 
  5163                           
  5164                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 150:     _delay(8u);
  5165  0BB4  3200               	nop2	;2 cycle nop
  5166  0BB5  3200               	nop2	;2 cycle nop
  5167  0BB6  3200               	nop2	;2 cycle nop
  5168  0BB7  3200               	nop2	;2 cycle nop
  5169  0BB8  0021               	banksel	157	;# 
  5170  0BB9  149D               	bsf	29,1	;# 
  5171                           
  5172                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 157:     _delay(3u);
  5173  0BBA  3200               	nop2	;2 cycle nop
  5174  0BBB  0000               	nop
  5175  0BBC  0022               	banksel	270	;# 
  5176  0BBD  130E               	bcf	14,6	;# 
  5177  0BBE  1300               	bcf	0,6	;# 
  5178  0BBF  0008               	return
  5179  0BC0                     __end_of_MTOUCH_CVD_ScanB_0:
  5180                           
  5181                           	psect	text21
  5182  0B80                     __ptext21:	
  5183 ;; *************** function _MTOUCH_CVD_ScanB_1 *****************
  5184 ;; Defined at:
  5185 ;;		line 240 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;		None
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;		None
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  1    wreg      void 
  5192 ;; Registers used:
  5193 ;;		wreg
  5194 ;; Tracked objects:
  5195 ;;		On entry : 1F/1
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5203 ;;Total ram usage:        0 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    4
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_Sensor_Acq_ExecuteScan
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function _MTOUCH_CVD_ScanB_1
  5215  0B80                     _MTOUCH_CVD_ScanB_1:
  5216                           
  5217                           ;incstack = 0
  5218                           ; Regs used in _MTOUCH_CVD_ScanB_1: [wreg]
  5219  0B80  0022               	banksel	270	;# 
  5220  0B81  130E               	bcf	14,6	;# 
  5221  0B82  0021               	banksel	157	;# 
  5222  0B83  3021               	movlw	33	;# 
  5223  0B84  009D               	movwf	29	;# 
  5224                           
  5225                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 252:     _delay(16u);
  5226  0B85  3005               	movlw	5
  5227  0B86                     u3787:
  5228  0B86  0B89               	decfsz	9,f
  5229  0B87  2B86               	goto	u3787
  5230  0B88  0000               	nop
  5231  0B89  308E               	movlw	142	;# 
  5232  0B8A  0084               	movwf	4	;# 
  5233  0B8B  3000               	movlw	0	;# 
  5234  0B8C  0085               	movwf	5	;# 
  5235  0B8D  300E               	movlw	14	;# 
  5236  0B8E  0086               	movwf	6	;# 
  5237  0B8F  3001               	movlw	1	;# 
  5238  0B90  0087               	movwf	7	;# 
  5239  0B91  3025               	movlw	37	;# 
  5240  0B92  1780               	bsf	0,7	;# 
  5241                           
  5242                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 270:     _delay(0u);
  5243  0B93  009D               	movwf	29	;# 
  5244                           
  5245                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 277:     _delay(8u);
  5246  0B94  3200               	nop2	;2 cycle nop
  5247  0B95  3200               	nop2	;2 cycle nop
  5248  0B96  3200               	nop2	;2 cycle nop
  5249  0B97  3200               	nop2	;2 cycle nop
  5250  0B98  0021               	banksel	157	;# 
  5251  0B99  149D               	bsf	29,1	;# 
  5252                           
  5253                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 284:     _delay(3u);
  5254  0B9A  3200               	nop2	;2 cycle nop
  5255  0B9B  0000               	nop
  5256  0B9C  0022               	banksel	270	;# 
  5257  0B9D  138E               	bcf	14,7	;# 
  5258  0B9E  1380               	bcf	0,7	;# 
  5259  0B9F  0008               	return
  5260  0BA0                     __end_of_MTOUCH_CVD_ScanB_1:
  5261                           
  5262                           	psect	text22
  5263  0B60                     __ptext22:	
  5264 ;; *************** function _MTOUCH_CVD_ScanA_0 *****************
  5265 ;; Defined at:
  5266 ;;		line 50 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;		None
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;		None
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  1    wreg      void 
  5273 ;; Registers used:
  5274 ;;		wreg
  5275 ;; Tracked objects:
  5276 ;;		On entry : 1F/1
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5284 ;;Total ram usage:        0 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    4
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_Sensor_Acq_ExecuteScan
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           
  5295                           ;psect for function _MTOUCH_CVD_ScanA_0
  5296  0B60                     _MTOUCH_CVD_ScanA_0:
  5297                           
  5298                           ;incstack = 0
  5299                           ; Regs used in _MTOUCH_CVD_ScanA_0: [wreg]
  5300  0B60  0022               	banksel	270	;# 
  5301  0B61  178E               	bsf	14,7	;# 
  5302  0B62  0021               	banksel	157	;# 
  5303  0B63  3025               	movlw	37	;# 
  5304  0B64  009D               	movwf	29	;# 
  5305                           
  5306                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 62:     _delay(16u);
  5307  0B65  3005               	movlw	5
  5308  0B66                     u3797:
  5309  0B66  0B89               	decfsz	9,f
  5310  0B67  2B66               	goto	u3797
  5311  0B68  0000               	nop
  5312  0B69  308E               	movlw	142	;# 
  5313  0B6A  0084               	movwf	4	;# 
  5314  0B6B  3000               	movlw	0	;# 
  5315  0B6C  0085               	movwf	5	;# 
  5316  0B6D  300E               	movlw	14	;# 
  5317  0B6E  0086               	movwf	6	;# 
  5318  0B6F  3001               	movlw	1	;# 
  5319  0B70  0087               	movwf	7	;# 
  5320  0B71  3021               	movlw	33	;# 
  5321  0B72  1700               	bsf	0,6	;# 
  5322                           
  5323                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 80:     _delay(0u);
  5324  0B73  009D               	movwf	29	;# 
  5325                           
  5326                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 86:     _delay(8u);
  5327  0B74  3200               	nop2	;2 cycle nop
  5328  0B75  3200               	nop2	;2 cycle nop
  5329  0B76  3200               	nop2	;2 cycle nop
  5330  0B77  3200               	nop2	;2 cycle nop
  5331  0B78  0021               	banksel	157	;# 
  5332  0B79  149D               	bsf	29,1	;# 
  5333                           
  5334                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 93:     _delay(3u);
  5335  0B7A  3200               	nop2	;2 cycle nop
  5336  0B7B  0000               	nop
  5337  0B7C  0022               	banksel	270	;# 
  5338  0B7D  170E               	bsf	14,6	;# 
  5339  0B7E  1300               	bcf	0,6	;# 
  5340  0B7F  0008               	return
  5341  0B80                     __end_of_MTOUCH_CVD_ScanA_0:
  5342                           
  5343                           	psect	text23
  5344  0B40                     __ptext23:	
  5345 ;; *************** function _MTOUCH_CVD_ScanA_1 *****************
  5346 ;; Defined at:
  5347 ;;		line 177 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;		None
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;		None
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  1    wreg      void 
  5354 ;; Registers used:
  5355 ;;		wreg
  5356 ;; Tracked objects:
  5357 ;;		On entry : 1F/1
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;Total ram usage:        0 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    4
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		_Sensor_Acq_ExecuteScan
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           
  5376                           ;psect for function _MTOUCH_CVD_ScanA_1
  5377  0B40                     _MTOUCH_CVD_ScanA_1:
  5378                           
  5379                           ;incstack = 0
  5380                           ; Regs used in _MTOUCH_CVD_ScanA_1: [wreg]
  5381  0B40  0022               	banksel	270	;# 
  5382  0B41  170E               	bsf	14,6	;# 
  5383  0B42  0021               	banksel	157	;# 
  5384  0B43  3021               	movlw	33	;# 
  5385  0B44  009D               	movwf	29	;# 
  5386                           
  5387                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 189:     _delay(16u);
  5388  0B45  3005               	movlw	5
  5389  0B46                     u3807:
  5390  0B46  0B89               	decfsz	9,f
  5391  0B47  2B46               	goto	u3807
  5392  0B48  0000               	nop
  5393  0B49  308E               	movlw	142	;# 
  5394  0B4A  0084               	movwf	4	;# 
  5395  0B4B  3000               	movlw	0	;# 
  5396  0B4C  0085               	movwf	5	;# 
  5397  0B4D  300E               	movlw	14	;# 
  5398  0B4E  0086               	movwf	6	;# 
  5399  0B4F  3001               	movlw	1	;# 
  5400  0B50  0087               	movwf	7	;# 
  5401  0B51  3025               	movlw	37	;# 
  5402  0B52  1780               	bsf	0,7	;# 
  5403                           
  5404                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 207:     _delay(0u);
  5405  0B53  009D               	movwf	29	;# 
  5406                           
  5407                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 213:     _delay(8u);
  5408  0B54  3200               	nop2	;2 cycle nop
  5409  0B55  3200               	nop2	;2 cycle nop
  5410  0B56  3200               	nop2	;2 cycle nop
  5411  0B57  3200               	nop2	;2 cycle nop
  5412  0B58  0021               	banksel	157	;# 
  5413  0B59  149D               	bsf	29,1	;# 
  5414                           
  5415                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 220:     _delay(3u);
  5416  0B5A  3200               	nop2	;2 cycle nop
  5417  0B5B  0000               	nop
  5418  0B5C  0022               	banksel	270	;# 
  5419  0B5D  178E               	bsf	14,7	;# 
  5420  0B5E  1380               	bcf	0,7	;# 
  5421  0B5F  0008               	return
  5422  0B60                     __end_of_MTOUCH_CVD_ScanA_1:
  5423                           
  5424                           	psect	text24
  5425  099B                     __ptext24:	
  5426 ;; *************** function _MTOUCH_Random *****************
  5427 ;; Defined at:
  5428 ;;		line 66 in file "mcc_generated_files/mtouch/mtouch_random.c"
  5429 ;; Parameters:    Size  Location     Type
  5430 ;;		None
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;		None
  5433 ;; Return value:  Size  Location     Type
  5434 ;;                  1    wreg      unsigned char 
  5435 ;; Registers used:
  5436 ;;		wreg, status,2, status,0
  5437 ;; Tracked objects:
  5438 ;;		On entry : 1F/0
  5439 ;;		On exit  : 1F/0
  5440 ;;		Unchanged: 0/0
  5441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5446 ;;Total ram usage:        1 bytes
  5447 ;; Hardware stack levels used:    1
  5448 ;; Hardware stack levels required when called:    4
  5449 ;; This function calls:
  5450 ;;		Nothing
  5451 ;; This function is called by:
  5452 ;;		_Sensor_Acq_ExecutePacket
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           
  5457                           ;psect for function _MTOUCH_Random
  5458  099B                     _MTOUCH_Random:
  5459                           
  5460                           ;mcc_generated_files/mtouch/mtouch_random.c: 68:     static MTOUCH_RANDOM_t seed = (MTOU
      +                          CH_RANDOM_t)0;;mcc_generated_files/mtouch/mtouch_random.c: 70:     if ((seed & (MTOUCH_R
      +                          ANDOM_t)1) != (MTOUCH_RANDOM_t)0)
  5461                           
  5462                           ;incstack = 0
  5463                           ; Regs used in _MTOUCH_Random: [wreg+status,2+status,0]
  5464  099B  1C6B               	btfss	MTOUCH_Random@seed,0
  5465  099C  299F               	goto	l2971
  5466                           
  5467                           ;mcc_generated_files/mtouch/mtouch_random.c: 71:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 73:         seed = seed >> (uint8_t)1;
  5468  099D  366B               	lsrf	MTOUCH_Random@seed,w
  5469  099E  29A5               	goto	L1
  5470  099F                     l2971:	
  5471                           ;mcc_generated_files/mtouch/mtouch_random.c: 74:     }
  5472                           
  5473                           
  5474                           ;mcc_generated_files/mtouch/mtouch_random.c: 76:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 81:         seed = seed >> (uint8_t)1;
  5475  099F  366B               	lsrf	MTOUCH_Random@seed,w
  5476  09A0  00F0               	movwf	??_MTOUCH_Random
  5477  09A1  0870               	movf	??_MTOUCH_Random,w
  5478  09A2  00EB               	movwf	MTOUCH_Random@seed
  5479                           
  5480                           ;mcc_generated_files/mtouch/mtouch_random.c: 82:         seed = seed ^ (MTOUCH_RANDOM_t)
      +                          0xB4;
  5481  09A3  086B               	movf	MTOUCH_Random@seed,w
  5482  09A4  3AB4               	xorlw	180
  5483  09A5                     L1:
  5484  09A5  00F0               	movwf	??_MTOUCH_Random
  5485  09A6  0870               	movf	??_MTOUCH_Random,w
  5486  09A7  00EB               	movwf	MTOUCH_Random@seed
  5487                           
  5488                           ;mcc_generated_files/mtouch/mtouch_random.c: 85:     return (uint8_t)seed & 0x0F;
  5489  09A8  086B               	movf	MTOUCH_Random@seed,w
  5490  09A9  390F               	andlw	15
  5491  09AA  0008               	return
  5492  09AB                     __end_of_MTOUCH_Random:
  5493                           
  5494                           	psect	text25
  5495  0918                     __ptext25:	
  5496 ;; *************** function _MTOUCH_Delay *****************
  5497 ;; Defined at:
  5498 ;;		line 363 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  i               1    1[COMMON] unsigned char 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg, status,2, status,0
  5507 ;; Tracked objects:
  5508 ;;		On entry : 1F/0
  5509 ;;		On exit  : 1F/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5516 ;;Total ram usage:        2 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    4
  5519 ;; This function calls:
  5520 ;;		Nothing
  5521 ;; This function is called by:
  5522 ;;		_Sensor_Acq_ExecutePacket
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           
  5527                           ;psect for function _MTOUCH_Delay
  5528  0918                     _MTOUCH_Delay:
  5529                           
  5530                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 365:     for(uint8_t i = sample_delay;i>0;i
      +                          --)
  5531                           
  5532                           ;incstack = 0
  5533                           ; Regs used in _MTOUCH_Delay: [wreg+status,2+status,0]
  5534  0918  0867               	movf	_sample_delay,w
  5535  0919  00F0               	movwf	??_MTOUCH_Delay
  5536  091A  0870               	movf	??_MTOUCH_Delay,w
  5537  091B  00F1               	movwf	MTOUCH_Delay@i
  5538  091C                     L2:
  5539  091C  0871               	movf	MTOUCH_Delay@i,w
  5540  091D  1903               	btfsc	3,2
  5541  091E  0008               	return
  5542                           
  5543                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 366:     { }
  5544  091F  3001               	movlw	1
  5545  0920  02F1               	subwf	MTOUCH_Delay@i,f
  5546  0921  291C               	goto	L2
  5547  0922                     __end_of_MTOUCH_Delay:
  5548                           
  5549                           	psect	text26
  5550  097C                     __ptext26:	
  5551 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  5552 ;; Defined at:
  5553 ;;		line 181 in file "mcc_generated_files/mtouch/mtouch_button.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  button          1   10[BANK0 ] enum E2819
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5562 ;; Tracked objects:
  5563 ;;		On entry : 1F/0
  5564 ;;		On exit  : 1F/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5568 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5569 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5570 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;Total ram usage:        2 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    9
  5574 ;; This function calls:
  5575 ;;		_Button_Service
  5576 ;; This function is called by:
  5577 ;;		_MTOUCH_Service_Mainloop
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function _MTOUCH_Button_ServiceAll
  5583  097C                     _MTOUCH_Button_ServiceAll:
  5584                           
  5585                           ;mcc_generated_files/mtouch/mtouch_button.c: 183:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 186:     for (button = 0; button < 2u; button
      +                          ++)
  5586                           
  5587                           ;incstack = 0
  5588                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5589  097C  01AA               	clrf	MTOUCH_Button_ServiceAll@button
  5590  097D                     l3603:
  5591                           
  5592                           ;mcc_generated_files/mtouch/mtouch_button.c: 187:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 188:         Button_Service(button);
  5593  097D  082A               	movf	MTOUCH_Button_ServiceAll@button,w
  5594  097E  318D  25DD  3189   	fcall	_Button_Service
  5595                           
  5596                           ;mcc_generated_files/mtouch/mtouch_button.c: 189:     }
  5597  0981  3001               	movlw	1
  5598  0982  0020               	movlb	0	; select bank0
  5599  0983  00A9               	movwf	??_MTOUCH_Button_ServiceAll
  5600  0984  0829               	movf	??_MTOUCH_Button_ServiceAll,w
  5601  0985  07AA               	addwf	MTOUCH_Button_ServiceAll@button,f
  5602  0986  3002               	movlw	2
  5603  0987  022A               	subwf	MTOUCH_Button_ServiceAll@button,w
  5604  0988  1803               	btfsc	3,0
  5605  0989  0008               	return
  5606  098A  297D               	goto	l3603
  5607  098B                     __end_of_MTOUCH_Button_ServiceAll:
  5608                           
  5609                           	psect	text27
  5610  0DDD                     __ptext27:	
  5611 ;; *************** function _Button_Service *****************
  5612 ;; Defined at:
  5613 ;;		line 192 in file "mcc_generated_files/mtouch/mtouch_button.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  name            1    wreg     enum E2819
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  name            1    7[BANK0 ] enum E2819
  5618 ;;  button          1    8[BANK0 ] PTR struct .
  5619 ;;		 -> mtouch_button(32), 
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5624 ;; Tracked objects:
  5625 ;;		On entry : 1F/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;Total ram usage:        4 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    8
  5636 ;; This function calls:
  5637 ;;		_Button_Deviation_Update
  5638 ;;		_Button_Reading_Update
  5639 ;;		_Button_State_Initializing
  5640 ;;		_Button_State_NotPressed
  5641 ;;		_Button_State_Pressed
  5642 ;;		_MTOUCH_Button_Initialize
  5643 ;;		_MTOUCH_Sensor_isCalibrated
  5644 ;;		_MTOUCH_Sensor_wasSampled
  5645 ;; This function is called by:
  5646 ;;		_MTOUCH_Button_ServiceAll
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           
  5651                           ;psect for function _Button_Service
  5652  0DDD                     _Button_Service:
  5653                           
  5654                           ;incstack = 0
  5655                           ; Regs used in _Button_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5656                           ;Button_Service@name stored from wreg
  5657  0DDD  00A7               	movwf	Button_Service@name
  5658                           
  5659                           ;mcc_generated_files/mtouch/mtouch_button.c: 192: static void Button_Service(enum mtouch
      +                          _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 193: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 194:     mtouch_button_t* button = &mtouch_button[name];
  5660  0DDE  0827               	movf	Button_Service@name,w
  5661  0DDF  00A5               	movwf	??_Button_Service
  5662  0DE0  3003               	movlw	3
  5663  0DE1                     u2395:
  5664  0DE1  35A5               	lslf	??_Button_Service,f
  5665  0DE2  3EFF               	addlw	-1
  5666  0DE3  1D03               	skipz
  5667  0DE4  2DE1               	goto	u2395
  5668  0DE5  3525               	lslf	??_Button_Service,w
  5669  0DE6  3E20               	addlw	(low (_mtouch_button| (0+256)))& (0+255)
  5670  0DE7  00A6               	movwf	??_Button_Service+1
  5671  0DE8  0826               	movf	??_Button_Service+1,w
  5672  0DE9  00A8               	movwf	Button_Service@button
  5673                           
  5674                           ;mcc_generated_files/mtouch/mtouch_button.c: 196:     if (MTOUCH_Sensor_wasSampled(butto
      +                          n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
  5675  0DEA  0A28               	incf	Button_Service@button,w
  5676  0DEB  0086               	movwf	6
  5677  0DEC  3001               	movlw	1	; select bank2/3
  5678  0DED  0087               	movwf	7
  5679  0DEE  0801               	movf	1,w
  5680  0DEF  3189  21FF  318D   	fcall	_MTOUCH_Sensor_wasSampled
  5681  0DF2  3A00               	xorlw	0
  5682  0DF3  1903               	skipnz
  5683  0DF4  0008               	return
  5684  0DF5  0020               	movlb	0	; select bank0
  5685  0DF6  0A28               	incf	Button_Service@button,w
  5686  0DF7  0086               	movwf	6
  5687  0DF8  3001               	movlw	1	; select bank2/3
  5688  0DF9  0087               	movwf	7
  5689  0DFA  0801               	movf	1,w
  5690  0DFB  3188  209A  318D   	fcall	_MTOUCH_Sensor_isCalibrated
  5691  0DFE  3A00               	xorlw	0
  5692  0DFF  1903               	skipnz
  5693  0E00  0008               	return
  5694                           
  5695                           ;mcc_generated_files/mtouch/mtouch_button.c: 197:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 198:         Button_Reading_Update(button);
  5696  0E01  0828               	movf	Button_Service@button,w
  5697  0E02  3189  2154  318D   	fcall	_Button_Reading_Update
  5698                           
  5699                           ;mcc_generated_files/mtouch/mtouch_button.c: 199:         Button_Deviation_Update(button
      +                          );
  5700  0E05  0020               	movlb	0	; select bank0
  5701  0E06  0828               	movf	Button_Service@button,w
  5702  0E07  3186  26E9  318D   	fcall	_Button_Deviation_Update
  5703                           
  5704                           ;mcc_generated_files/mtouch/mtouch_button.c: 201:         if (button->state >= (uint8_t)
      +                          (sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
  5705  0E0A  0828               	movf	Button_Service@button,w
  5706  0E0B  3E02               	addlw	2
  5707  0E0C  0086               	movwf	6
  5708  0E0D  3001               	movlw	1	; select bank2/3
  5709  0E0E  0087               	movwf	7
  5710  0E0F  3003               	movlw	3
  5711  0E10  0201               	subwf	1,w
  5712  0E11  1C03               	skipc
  5713  0E12  2E1B               	goto	l3355
  5714                           
  5715                           ;mcc_generated_files/mtouch/mtouch_button.c: 202:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 203:             MTOUCH_Button_Initialize(button->name);
  5716  0E13  0828               	movf	Button_Service@button,w
  5717  0E14  0086               	movwf	6
  5718  0E15  3001               	movlw	1	; select bank2/3
  5719  0E16  0087               	movwf	7
  5720  0E17  0801               	movf	1,w
  5721  0E18  318C  24D0  318D   	fcall	_MTOUCH_Button_Initialize
  5722  0E1B                     l3355:
  5723                           
  5724                           ;mcc_generated_files/mtouch/mtouch_button.c: 205:         Button_StateMachine[(uint8_t)b
      +                          utton->state](button);
  5725  0E1B  0020               	movlb	0	; select bank0
  5726  0E1C  0828               	movf	Button_Service@button,w
  5727  0E1D  00A5               	movwf	??_Button_Service
  5728  0E1E  0825               	movf	??_Button_Service,w
  5729  0E1F  00FD               	movwf	Button_State_Pressed@button
  5730  0E20  0828               	movf	Button_Service@button,w
  5731  0E21  3E02               	addlw	2
  5732  0E22  0086               	movwf	6
  5733  0E23  3001               	movlw	1	; select bank2/3
  5734  0E24  0087               	movwf	7
  5735  0E25  3501               	lslf	1,w
  5736  0E26  3EA0               	addlw	(low (_Button_StateMachine| 0))& (0+255)
  5737  0E27  0086               	movwf	6
  5738  0E28  0187               	clrf	7
  5739  0E29  3F41               	moviw [1]fsr1
  5740  0E2A  008A               	movwf	10
  5741  0E2B  3F40               	moviw [0]fsr1
  5742  0E2C  000A               	callw
  5743  0E2D  318D               	pagesel	$
  5744  0E2E  0008               	return
  5745  0E2F                     __end_of_Button_Service:
  5746                           
  5747                           	psect	text28
  5748  09FF                     __ptext28:	
  5749 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  5750 ;; Defined at:
  5751 ;;		line 556 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  sensor          1    wreg     enum E2661
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  sensor          1    5[COMMON] enum E2661
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      _Bool 
  5758 ;; Registers used:
  5759 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 1F/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;Total ram usage:        2 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    5
  5772 ;; This function calls:
  5773 ;;		___bmul
  5774 ;; This function is called by:
  5775 ;;		_Button_Service
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           
  5780                           ;psect for function _MTOUCH_Sensor_wasSampled
  5781  09FF                     _MTOUCH_Sensor_wasSampled:
  5782                           
  5783                           ;incstack = 0
  5784                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5785                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  5786  09FF  00F5               	movwf	MTOUCH_Sensor_wasSampled@sensor
  5787                           
  5788                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 556: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 557: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 558:     if(sensor < (2u))
  5789  0A00  3002               	movlw	2
  5790  0A01  0275               	subwf	MTOUCH_Sensor_wasSampled@sensor,w
  5791  0A02  1803               	skipnc
  5792  0A03  2A11               	goto	l3195
  5793                           
  5794                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 559:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
  5795  0A04  3009               	movlw	9
  5796  0A05  00F4               	movwf	??_MTOUCH_Sensor_wasSampled
  5797  0A06  0874               	movf	??_MTOUCH_Sensor_wasSampled,w
  5798  0A07  00F0               	movwf	___bmul@multiplicand
  5799  0A08  0875               	movf	MTOUCH_Sensor_wasSampled@sensor,w
  5800  0A09  3189  21BB         	fcall	___bmul
  5801  0A0B  3EB8               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
  5802  0A0C  0086               	movwf	6
  5803  0A0D  0187               	clrf	7
  5804  0A0E  0C01               	rrf	1,w
  5805  0A0F  3901               	andlw	1
  5806  0A10  0008               	return
  5807  0A11                     l3195:
  5808                           
  5809                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 561:         return 0;
  5810  0A11  3000               	movlw	0
  5811  0A12  0008               	return
  5812  0A13                     __end_of_MTOUCH_Sensor_wasSampled:
  5813                           
  5814                           	psect	text29
  5815  089A                     __ptext29:	
  5816 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  5817 ;; Defined at:
  5818 ;;		line 529 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  sensor          1    wreg     enum E2661
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  sensor          1    0[COMMON] enum E2661
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      _Bool 
  5825 ;; Registers used:
  5826 ;;		wreg
  5827 ;; Tracked objects:
  5828 ;;		On entry : 1F/0
  5829 ;;		On exit  : 1F/0
  5830 ;;		Unchanged: 1F/0
  5831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5836 ;;Total ram usage:        0 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; Hardware stack levels required when called:    4
  5839 ;; This function calls:
  5840 ;;		Nothing
  5841 ;; This function is called by:
  5842 ;;		_Button_Service
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           
  5847                           ;psect for function _MTOUCH_Sensor_isCalibrated
  5848  089A                     _MTOUCH_Sensor_isCalibrated:
  5849                           
  5850                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 529: _Bool MTOUCH_Sensor_isCalibrated(enum 
      +                          mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 530: {;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 532:     return 1;
  5851                           
  5852                           ;incstack = 0
  5853                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg]
  5854  089A  3001               	movlw	1
  5855  089B  0008               	return
  5856  089C                     __end_of_MTOUCH_Sensor_isCalibrated:
  5857                           
  5858                           	psect	text30
  5859  05BB                     __ptext30:	
  5860 ;; *************** function _Button_State_NotPressed *****************
  5861 ;; Defined at:
  5862 ;;		line 229 in file "mcc_generated_files/mtouch/mtouch_button.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  button          1   13[COMMON] PTR struct .
  5865 ;;		 -> mtouch_button(32), 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;		None
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1    wreg      void 
  5870 ;; Registers used:
  5871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5872 ;; Tracked objects:
  5873 ;;		On entry : 1F/0
  5874 ;;		On exit  : 1F/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5877 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5881 ;;Total ram usage:        3 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; Hardware stack levels required when called:    6
  5884 ;; This function calls:
  5885 ;;		_Button_Baseline_Update
  5886 ;;		_Button_DefaultCallback
  5887 ;;		_MTOUCH_Button_Initialize
  5888 ;; This function is called by:
  5889 ;;		_Button_Service
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           
  5894                           ;psect for function _Button_State_NotPressed
  5895  05BB                     _Button_State_NotPressed:
  5896                           
  5897                           ;mcc_generated_files/mtouch/mtouch_button.c: 229: static void Button_State_NotPressed(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 230: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 232:     if ((button->deviation) < (mtouch_button_deviatio
      +                          n_t)(-button->threshold))
  5898                           
  5899                           ;incstack = 0
  5900                           ; Regs used in _Button_State_NotPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5901  05BB  087D               	movf	Button_State_NotPressed@button,w
  5902  05BC  3E09               	addlw	9
  5903  05BD  0086               	movwf	6
  5904  05BE  3001               	movlw	1	; select bank2/3
  5905  05BF  0087               	movwf	7
  5906  05C0  0801               	movf	1,w
  5907  05C1  3A80               	xorlw	128
  5908  05C2  00A0               	movwf	??_Button_State_NotPressed
  5909  05C3  087D               	movf	Button_State_NotPressed@button,w
  5910  05C4  3E0E               	addlw	14
  5911  05C5  0086               	movwf	6
  5912  05C6  3001               	movlw	1	; select bank2/3
  5913  05C7  0087               	movwf	7
  5914  05C8  0301               	decf	1,w
  5915  05C9  3AFF               	xorlw	255
  5916  05CA  3A80               	xorlw	128
  5917  05CB  02A0               	subwf	??_Button_State_NotPressed,f
  5918  05CC  1803               	skipnc
  5919  05CD  2DF9               	goto	l3253
  5920                           
  5921                           ;mcc_generated_files/mtouch/mtouch_button.c: 233:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 234:         (button->counter)++;
  5922  05CE  087D               	movf	Button_State_NotPressed@button,w
  5923  05CF  3E0A               	addlw	10
  5924  05D0  0086               	movwf	6
  5925  05D1  3001               	movlw	1	; select bank2/3
  5926  05D2  0087               	movwf	7
  5927  05D3  3001               	movlw	1
  5928  05D4  0781               	addwf	1,f
  5929  05D5  3141               	addfsr 1,1
  5930  05D6  1803               	skipnc
  5931  05D7  0A81               	incf	1,f
  5932                           
  5933                           ;mcc_generated_files/mtouch/mtouch_button.c: 235:         if ((button->counter) > (mtouc
      +                          h_button_statecounter_t)((mtouch_button_statecounter_t)64u))
  5934  05D8  087D               	movf	Button_State_NotPressed@button,w
  5935  05D9  3E0A               	addlw	10
  5936  05DA  0086               	movwf	6
  5937  05DB  3001               	movlw	1	; select bank2/3
  5938  05DC  0087               	movwf	7
  5939  05DD  3F40               	moviw [0]fsr1
  5940  05DE  00A0               	movwf	??_Button_State_NotPressed
  5941  05DF  3F41               	moviw [1]fsr1
  5942  05E0  00A1               	movwf	??_Button_State_NotPressed+1
  5943  05E1  3000               	movlw	0
  5944  05E2  0221               	subwf	??_Button_State_NotPressed+1,w
  5945  05E3  3041               	movlw	65
  5946  05E4  1903               	skipnz
  5947  05E5  0220               	subwf	??_Button_State_NotPressed,w
  5948  05E6  1C03               	skipc
  5949  05E7  2E37               	goto	l340
  5950                           
  5951                           ;mcc_generated_files/mtouch/mtouch_button.c: 236:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 237:             button->counter = (mtouch_button_statecounter_t)0;
  5952  05E8  087D               	movf	Button_State_NotPressed@button,w
  5953  05E9  3E0A               	addlw	10
  5954  05EA  0086               	movwf	6
  5955  05EB  3001               	movlw	1	; select bank2/3
  5956  05EC  0087               	movwf	7
  5957  05ED  3000               	movlw	0
  5958  05EE  3FC0               	movwi [0]fsr1
  5959  05EF  3FC1               	movwi [1]fsr1
  5960                           
  5961                           ;mcc_generated_files/mtouch/mtouch_button.c: 238:             MTOUCH_Button_Initialize(b
      +                          utton->name);
  5962  05F0  087D               	movf	Button_State_NotPressed@button,w
  5963  05F1  0086               	movwf	6
  5964  05F2  3001               	movlw	1	; select bank2/3
  5965  05F3  0087               	movwf	7
  5966  05F4  0801               	movf	1,w
  5967  05F5  318C  24D0  3185   	fcall	_MTOUCH_Button_Initialize
  5968  05F8  2E37               	goto	l340
  5969  05F9                     l3253:
  5970  05F9  087D               	movf	Button_State_NotPressed@button,w
  5971  05FA  3E09               	addlw	9
  5972  05FB  0086               	movwf	6
  5973  05FC  3001               	movlw	1	; select bank2/3
  5974  05FD  0087               	movwf	7
  5975  05FE  0801               	movf	1,w
  5976  05FF  00A0               	movwf	??_Button_State_NotPressed
  5977  0600  01A1               	clrf	??_Button_State_NotPressed+1
  5978  0601  1BA0               	btfsc	??_Button_State_NotPressed,7
  5979  0602  03A1               	decf	??_Button_State_NotPressed+1,f
  5980  0603  087D               	movf	Button_State_NotPressed@button,w
  5981  0604  3E0E               	addlw	14
  5982  0605  0086               	movwf	6
  5983  0606  3001               	movlw	1	; select bank2/3
  5984  0607  0087               	movwf	7
  5985  0608  0821               	movf	??_Button_State_NotPressed+1,w
  5986  0609  3A80               	xorlw	128
  5987  060A  3C80               	sublw	128
  5988  060B  1D03               	skipz
  5989  060C  2E0F               	goto	u2285
  5990  060D  0820               	movf	??_Button_State_NotPressed,w
  5991  060E  0201               	subwf	1,w
  5992  060F                     u2285:
  5993  060F  1803               	skipnc
  5994  0610  2E2F               	goto	l3259
  5995                           
  5996                           ;mcc_generated_files/mtouch/mtouch_button.c: 243:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 245:         button->state = MTOUCH_BUTTON_STATE_pressed;
  5997  0611  3002               	movlw	2
  5998  0612  0020               	movlb	0	; select bank0
  5999  0613  00A0               	movwf	??_Button_State_NotPressed
  6000  0614  087D               	movf	Button_State_NotPressed@button,w
  6001  0615  3E02               	addlw	2
  6002  0616  0086               	movwf	6
  6003  0617  3001               	movlw	1	; select bank2/3
  6004  0618  0087               	movwf	7
  6005  0619  0820               	movf	??_Button_State_NotPressed,w
  6006  061A  0081               	movwf	1
  6007                           
  6008                           ;mcc_generated_files/mtouch/mtouch_button.c: 246:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  6009  061B  087D               	movf	Button_State_NotPressed@button,w
  6010  061C  3E0A               	addlw	10
  6011  061D  0086               	movwf	6
  6012  061E  3001               	movlw	1	; select bank2/3
  6013  061F  0087               	movwf	7
  6014  0620  3000               	movlw	0
  6015  0621  3FC0               	movwi [0]fsr1
  6016  0622  3FC1               	movwi [1]fsr1
  6017                           
  6018                           ;mcc_generated_files/mtouch/mtouch_button.c: 247:         callback_pressed(button->name)
      +                          ;
  6019  0623  087D               	movf	Button_State_NotPressed@button,w
  6020  0624  0086               	movwf	6
  6021  0625  3001               	movlw	1	; select bank2/3
  6022  0626  0087               	movwf	7
  6023  0627  0801               	movf	1,w
  6024  0628  00A0               	movwf	??_Button_State_NotPressed
  6025  0629  0820               	movf	??_Button_State_NotPressed,w
  6026  062A  00F0               	movwf	Button_DefaultCallback@button
  6027  062B  3188  2098  3185   	fcall	_Button_DefaultCallback
  6028                           
  6029                           ;mcc_generated_files/mtouch/mtouch_button.c: 248:     }
  6030  062E  2E37               	goto	l340
  6031  062F                     l3259:
  6032                           
  6033                           ;mcc_generated_files/mtouch/mtouch_button.c: 250:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 252:         button->counter = (mtouch_button_statecounter_t)0;
  6034  062F  087D               	movf	Button_State_NotPressed@button,w
  6035  0630  3E0A               	addlw	10
  6036  0631  0086               	movwf	6
  6037  0632  3001               	movlw	1	; select bank2/3
  6038  0633  0087               	movwf	7
  6039  0634  3000               	movlw	0
  6040  0635  3FC0               	movwi [0]fsr1
  6041  0636  3FC1               	movwi [1]fsr1
  6042  0637                     l340:
  6043                           
  6044                           ;mcc_generated_files/mtouch/mtouch_button.c: 257:     (button->baseline_count)++;
  6045  0637  087D               	movf	Button_State_NotPressed@button,w
  6046  0638  3E0C               	addlw	12
  6047  0639  0086               	movwf	6
  6048  063A  3001               	movlw	1	; select bank2/3
  6049  063B  0087               	movwf	7
  6050  063C  3001               	movlw	1
  6051  063D  0781               	addwf	1,f
  6052  063E  3141               	addfsr 1,1
  6053  063F  1803               	skipnc
  6054  0640  0A81               	incf	1,f
  6055                           
  6056                           ;mcc_generated_files/mtouch/mtouch_button.c: 258:     if ((button->baseline_count) == ((
      +                          mtouch_button_baselinecounter_t)64u))
  6057  0641  087D               	movf	Button_State_NotPressed@button,w
  6058  0642  3E0C               	addlw	12
  6059  0643  0086               	movwf	6
  6060  0644  3001               	movlw	1	; select bank2/3
  6061  0645  0087               	movwf	7
  6062  0646  0016               	moviw fsr1++
  6063  0647  3A40               	xorlw	64
  6064  0648  0020               	movlb	0	; select bank0
  6065  0649  00A0               	movwf	??_Button_State_NotPressed
  6066  064A  0016               	moviw fsr1++
  6067  064B  04A0               	iorwf	??_Button_State_NotPressed,f
  6068  064C  1D03               	btfss	3,2
  6069  064D  0008               	return
  6070                           
  6071                           ;mcc_generated_files/mtouch/mtouch_button.c: 259:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 260:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
  6072  064E  087D               	movf	Button_State_NotPressed@button,w
  6073  064F  3E0C               	addlw	12
  6074  0650  0086               	movwf	6
  6075  0651  3001               	movlw	1	; select bank2/3
  6076  0652  0087               	movwf	7
  6077  0653  3000               	movlw	0
  6078  0654  3FC0               	movwi [0]fsr1
  6079  0655  3FC1               	movwi [1]fsr1
  6080                           
  6081                           ;mcc_generated_files/mtouch/mtouch_button.c: 261:         Button_Baseline_Update(button)
      +                          ;
  6082  0656  087D               	movf	Button_State_NotPressed@button,w
  6083  0657  3186  265A         	fcall	_Button_Baseline_Update
  6084  0659  0008               	return
  6085  065A                     __end_of_Button_State_NotPressed:
  6086                           
  6087                           	psect	text31
  6088  0F3A                     __ptext31:	
  6089 ;; *************** function _Button_State_Initializing *****************
  6090 ;; Defined at:
  6091 ;;		line 209 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;  button          1   13[COMMON] PTR struct .
  6094 ;;		 -> mtouch_button(32), 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      void 
  6099 ;; Registers used:
  6100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 1F/0
  6103 ;;		On exit  : 1F/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6106 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6108 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;Total ram usage:        5 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; Hardware stack levels required when called:    7
  6113 ;; This function calls:
  6114 ;;		_Button_Baseline_Initialize
  6115 ;;		_Button_Baseline_Update
  6116 ;; This function is called by:
  6117 ;;		_Button_Service
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           
  6122                           ;psect for function _Button_State_Initializing
  6123  0F3A                     _Button_State_Initializing:
  6124                           
  6125                           ;mcc_generated_files/mtouch/mtouch_button.c: 209: static void Button_State_Initializing(
      +                          mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 210: {;mcc_generate
      +                          d_files/mtouch/mtouch_button.c: 212:     if ((button->counter) <= (mtouch_button_stateco
      +                          unter_t)((mtouch_button_baselinecounter_t)16u)/2)
  6126                           
  6127                           ;incstack = 0
  6128                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  6129  0F3A  087D               	movf	Button_State_Initializing@button,w
  6130  0F3B  3E0A               	addlw	10
  6131  0F3C  0086               	movwf	6
  6132  0F3D  3001               	movlw	1	; select bank2/3
  6133  0F3E  0087               	movwf	7
  6134  0F3F  3F40               	moviw [0]fsr1
  6135  0F40  00A0               	movwf	??_Button_State_Initializing
  6136  0F41  3F41               	moviw [1]fsr1
  6137  0F42  00A1               	movwf	??_Button_State_Initializing+1
  6138  0F43  3000               	movlw	0
  6139  0F44  0221               	subwf	??_Button_State_Initializing+1,w
  6140  0F45  3009               	movlw	9
  6141  0F46  1903               	skipnz
  6142  0F47  0220               	subwf	??_Button_State_Initializing,w
  6143  0F48  1803               	skipnc
  6144  0F49  2F4F               	goto	l3237
  6145                           
  6146                           ;mcc_generated_files/mtouch/mtouch_button.c: 213:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 214:         Button_Baseline_Initialize(button);
  6147  0F4A  087D               	movf	Button_State_Initializing@button,w
  6148  0F4B  318C  24A3  318F   	fcall	_Button_Baseline_Initialize
  6149                           
  6150                           ;mcc_generated_files/mtouch/mtouch_button.c: 215:     } else {
  6151  0F4E  2F53               	goto	l3239
  6152  0F4F                     l3237:
  6153                           
  6154                           ;mcc_generated_files/mtouch/mtouch_button.c: 216:         Button_Baseline_Update(button)
      +                          ;
  6155  0F4F  087D               	movf	Button_State_Initializing@button,w
  6156  0F50  3186  265A  318F   	fcall	_Button_Baseline_Update
  6157  0F53                     l3239:
  6158                           
  6159                           ;mcc_generated_files/mtouch/mtouch_button.c: 220:     (button->counter)++;
  6160  0F53  087D               	movf	Button_State_Initializing@button,w
  6161  0F54  3E0A               	addlw	10
  6162  0F55  0086               	movwf	6
  6163  0F56  3001               	movlw	1	; select bank2/3
  6164  0F57  0087               	movwf	7
  6165  0F58  3001               	movlw	1
  6166  0F59  0781               	addwf	1,f
  6167  0F5A  3141               	addfsr 1,1
  6168  0F5B  1803               	skipnc
  6169  0F5C  0A81               	incf	1,f
  6170                           
  6171                           ;mcc_generated_files/mtouch/mtouch_button.c: 221:     if ((button->counter) >= (mtouch_b
      +                          utton_statecounter_t)((mtouch_button_baselinecounter_t)16u))
  6172  0F5D  087D               	movf	Button_State_Initializing@button,w
  6173  0F5E  3E0A               	addlw	10
  6174  0F5F  0086               	movwf	6
  6175  0F60  3001               	movlw	1	; select bank2/3
  6176  0F61  0087               	movwf	7
  6177  0F62  3F40               	moviw [0]fsr1
  6178  0F63  0020               	movlb	0	; select bank0
  6179  0F64  00A0               	movwf	??_Button_State_Initializing
  6180  0F65  3F41               	moviw [1]fsr1
  6181  0F66  00A1               	movwf	??_Button_State_Initializing+1
  6182  0F67  3000               	movlw	0
  6183  0F68  0221               	subwf	??_Button_State_Initializing+1,w
  6184  0F69  3010               	movlw	16
  6185  0F6A  1903               	skipnz
  6186  0F6B  0220               	subwf	??_Button_State_Initializing,w
  6187  0F6C  1C03               	skipc
  6188  0F6D  0008               	return
  6189                           
  6190                           ;mcc_generated_files/mtouch/mtouch_button.c: 222:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 223:         button->reading = (mtouch_button_reading_t)((button->baseline)>
      +                          >((uint8_t)4u));
  6191  0F6E  087D               	movf	Button_State_Initializing@button,w
  6192  0F6F  3E05               	addlw	5
  6193  0F70  0086               	movwf	6
  6194  0F71  3001               	movlw	1	; select bank2/3
  6195  0F72  0087               	movwf	7
  6196  0F73  3F40               	moviw [0]fsr1
  6197  0F74  00A0               	movwf	??_Button_State_Initializing
  6198  0F75  3F41               	moviw [1]fsr1
  6199  0F76  00A1               	movwf	??_Button_State_Initializing+1
  6200  0F77  3F42               	moviw [2]fsr1
  6201  0F78  00A2               	movwf	??_Button_State_Initializing+2
  6202  0F79  3F43               	moviw [3]fsr1
  6203  0F7A  00A3               	movwf	??_Button_State_Initializing+3
  6204  0F7B  3004               	movlw	4
  6205  0F7C                     u2255:
  6206  0F7C  36A3               	lsrf	??_Button_State_Initializing+3,f
  6207  0F7D  0CA2               	rrf	??_Button_State_Initializing+2,f
  6208  0F7E  0CA1               	rrf	??_Button_State_Initializing+1,f
  6209  0F7F  0CA0               	rrf	??_Button_State_Initializing,f
  6210  0F80  0B89               	decfsz	9,f
  6211  0F81  2F7C               	goto	u2255
  6212  0F82  087D               	movf	Button_State_Initializing@button,w
  6213  0F83  3E03               	addlw	3
  6214  0F84  0086               	movwf	6
  6215  0F85  3001               	movlw	1	; select bank2/3
  6216  0F86  0087               	movwf	7
  6217  0F87  0820               	movf	??_Button_State_Initializing,w
  6218  0F88  3FC0               	movwi [0]fsr1
  6219  0F89  0821               	movf	??_Button_State_Initializing+1,w
  6220  0F8A  3FC1               	movwi [1]fsr1
  6221                           
  6222                           ;mcc_generated_files/mtouch/mtouch_button.c: 224:         button->state = MTOUCH_BUTTON_
      +                          STATE_notPressed;
  6223  0F8B  087D               	movf	Button_State_Initializing@button,w
  6224  0F8C  3E02               	addlw	2
  6225  0F8D  0086               	movwf	6
  6226  0F8E  3001               	movlw	1	; select bank2/3
  6227  0F8F  0087               	movwf	7
  6228  0F90  0181               	clrf	1
  6229  0F91  0A81               	incf	1,f
  6230                           
  6231                           ;mcc_generated_files/mtouch/mtouch_button.c: 225:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  6232  0F92  087D               	movf	Button_State_Initializing@button,w
  6233  0F93  3E0A               	addlw	10
  6234  0F94  0086               	movwf	6
  6235  0F95  3001               	movlw	1	; select bank2/3
  6236  0F96  0087               	movwf	7
  6237  0F97  3000               	movlw	0
  6238  0F98  3FC0               	movwi [0]fsr1
  6239  0F99  3FC1               	movwi [1]fsr1
  6240  0F9A  0008               	return
  6241  0F9B                     __end_of_Button_State_Initializing:
  6242                           
  6243                           	psect	text32
  6244  0EDB                     __ptext32:	
  6245 ;; *************** function _Button_State_Pressed *****************
  6246 ;; Defined at:
  6247 ;;		line 265 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  button          1   13[COMMON] PTR struct .
  6250 ;;		 -> mtouch_button(32), 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      void 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 1F/0
  6259 ;;		On exit  : 1F/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6262 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6264 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6265 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6266 ;;Total ram usage:        3 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    6
  6269 ;; This function calls:
  6270 ;;		_Button_DefaultCallback
  6271 ;;		_MTOUCH_Button_Initialize
  6272 ;; This function is called by:
  6273 ;;		_Button_Service
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           
  6278                           ;psect for function _Button_State_Pressed
  6279  0EDB                     _Button_State_Pressed:
  6280                           
  6281                           ;mcc_generated_files/mtouch/mtouch_button.c: 265: static void Button_State_Pressed(mtouc
      +                          h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 266: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 268:     if ((button->counter) >= ((mtouch_button_statecounte
      +                          r_t)1000u))
  6282                           
  6283                           ;incstack = 0
  6284                           ; Regs used in _Button_State_Pressed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6285  0EDB  087D               	movf	Button_State_Pressed@button,w
  6286  0EDC  3E0A               	addlw	10
  6287  0EDD  0086               	movwf	6
  6288  0EDE  3001               	movlw	1	; select bank2/3
  6289  0EDF  0087               	movwf	7
  6290  0EE0  3F40               	moviw [0]fsr1
  6291  0EE1  00A0               	movwf	??_Button_State_Pressed
  6292  0EE2  3F41               	moviw [1]fsr1
  6293  0EE3  00A1               	movwf	??_Button_State_Pressed+1
  6294  0EE4  3003               	movlw	3
  6295  0EE5  0221               	subwf	??_Button_State_Pressed+1,w
  6296  0EE6  30E8               	movlw	232
  6297  0EE7  1903               	skipnz
  6298  0EE8  0220               	subwf	??_Button_State_Pressed,w
  6299  0EE9  1C03               	skipc
  6300  0EEA  2EFF               	goto	l3269
  6301                           
  6302                           ;mcc_generated_files/mtouch/mtouch_button.c: 269:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 270:         MTOUCH_Button_Initialize(button->name);
  6303  0EEB  087D               	movf	Button_State_Pressed@button,w
  6304  0EEC  0086               	movwf	6
  6305  0EED  3001               	movlw	1	; select bank2/3
  6306  0EEE  0087               	movwf	7
  6307  0EEF  0801               	movf	1,w
  6308  0EF0  318C  24D0  318E   	fcall	_MTOUCH_Button_Initialize
  6309                           
  6310                           ;mcc_generated_files/mtouch/mtouch_button.c: 271:         callback_notPressed(button->na
      +                          me);
  6311  0EF3  087D               	movf	Button_State_Pressed@button,w
  6312  0EF4  0086               	movwf	6
  6313  0EF5  3001               	movlw	1	; select bank2/3
  6314  0EF6  0087               	movwf	7
  6315  0EF7  0801               	movf	1,w
  6316  0EF8  0020               	movlb	0	; select bank0
  6317  0EF9  00A0               	movwf	??_Button_State_Pressed
  6318  0EFA  0820               	movf	??_Button_State_Pressed,w
  6319  0EFB  00F0               	movwf	Button_DefaultCallback@button
  6320  0EFC  3188  2098         	fcall	_Button_DefaultCallback
  6321                           
  6322                           ;mcc_generated_files/mtouch/mtouch_button.c: 272:     }
  6323  0EFE  0008               	return
  6324  0EFF                     l3269:
  6325  0EFF  087D               	movf	Button_State_Pressed@button,w
  6326  0F00  3E09               	addlw	9
  6327  0F01  0086               	movwf	6
  6328  0F02  3001               	movlw	1	; select bank2/3
  6329  0F03  0087               	movwf	7
  6330  0F04  0801               	movf	1,w
  6331  0F05  3A80               	xorlw	128
  6332  0F06  00A0               	movwf	??_Button_State_Pressed
  6333  0F07  087D               	movf	Button_State_Pressed@button,w
  6334  0F08  3E0E               	addlw	14
  6335  0F09  0086               	movwf	6
  6336  0F0A  3001               	movlw	1	; select bank2/3
  6337  0F0B  0087               	movwf	7
  6338  0F0C  087D               	movf	Button_State_Pressed@button,w
  6339  0F0D  3E0E               	addlw	14
  6340  0F0E  0084               	movwf	4
  6341  0F0F  3001               	movlw	1	; select bank2/3
  6342  0F10  0085               	movwf	5
  6343  0F11  3600               	lsrf	0,w
  6344  0F12  0201               	subwf	1,w
  6345  0F13  3A80               	xorlw	128
  6346  0F14  02A0               	subwf	??_Button_State_Pressed,f
  6347  0F15  1803               	skipnc
  6348  0F16  0008               	return
  6349                           
  6350                           ;mcc_generated_files/mtouch/mtouch_button.c: 276:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 277:         button->state = MTOUCH_BUTTON_STATE_notPressed;
  6351  0F17  087D               	movf	Button_State_Pressed@button,w
  6352  0F18  3E02               	addlw	2
  6353  0F19  0086               	movwf	6
  6354  0F1A  3001               	movlw	1	; select bank2/3
  6355  0F1B  0087               	movwf	7
  6356  0F1C  0181               	clrf	1
  6357  0F1D  0A81               	incf	1,f
  6358                           
  6359                           ;mcc_generated_files/mtouch/mtouch_button.c: 278:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  6360  0F1E  087D               	movf	Button_State_Pressed@button,w
  6361  0F1F  3E0A               	addlw	10
  6362  0F20  0086               	movwf	6
  6363  0F21  3001               	movlw	1	; select bank2/3
  6364  0F22  0087               	movwf	7
  6365  0F23  3000               	movlw	0
  6366  0F24  3FC0               	movwi [0]fsr1
  6367  0F25  3FC1               	movwi [1]fsr1
  6368                           
  6369                           ;mcc_generated_files/mtouch/mtouch_button.c: 279:         button->baseline_count = (mtou
      +                          ch_button_baselinecounter_t)((0xffff))-((mtouch_button_baselinecounter_t)1024u);
  6370  0F26  087D               	movf	Button_State_Pressed@button,w
  6371  0F27  3E0C               	addlw	12
  6372  0F28  0086               	movwf	6
  6373  0F29  3001               	movlw	1	; select bank2/3
  6374  0F2A  0087               	movwf	7
  6375  0F2B  30FF               	movlw	255
  6376  0F2C  3FC0               	movwi [0]fsr1
  6377  0F2D  30FB               	movlw	251
  6378  0F2E  3FC1               	movwi [1]fsr1
  6379                           
  6380                           ;mcc_generated_files/mtouch/mtouch_button.c: 280:         callback_notPressed(button->na
      +                          me);
  6381  0F2F  087D               	movf	Button_State_Pressed@button,w
  6382  0F30  0086               	movwf	6
  6383  0F31  3001               	movlw	1	; select bank2/3
  6384  0F32  0087               	movwf	7
  6385  0F33  0801               	movf	1,w
  6386  0F34  00A0               	movwf	??_Button_State_Pressed
  6387  0F35  0820               	movf	??_Button_State_Pressed,w
  6388  0F36  00F0               	movwf	Button_DefaultCallback@button
  6389  0F37  3188  2098         	fcall	_Button_DefaultCallback
  6390  0F39  0008               	return
  6391  0F3A                     __end_of_Button_State_Pressed:
  6392                           
  6393                           	psect	text33
  6394  0898                     __ptext33:	
  6395 ;; *************** function _Button_DefaultCallback *****************
  6396 ;; Defined at:
  6397 ;;		line 519 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;  button          1    0[COMMON] enum E2819
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;		None
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  1    wreg      void 
  6404 ;; Registers used:
  6405 ;;		None
  6406 ;; Tracked objects:
  6407 ;;		On entry : 1F/0
  6408 ;;		On exit  : 1F/0
  6409 ;;		Unchanged: 1F/0
  6410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6411 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6415 ;;Total ram usage:        1 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:    4
  6418 ;; This function calls:
  6419 ;;		Nothing
  6420 ;; This function is called by:
  6421 ;;		_Button_State_NotPressed
  6422 ;;		_Button_State_Pressed
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           
  6427                           ;psect for function _Button_DefaultCallback
  6428  0898                     _Button_DefaultCallback:
  6429                           
  6430                           ;incstack = 0
  6431                           ; Regs used in _Button_DefaultCallback: []
  6432  0898  0008               	return
  6433  0899                     __end_of_Button_DefaultCallback:
  6434                           
  6435                           	psect	text34
  6436  065A                     __ptext34:	
  6437 ;; *************** function _Button_Baseline_Update *****************
  6438 ;; Defined at:
  6439 ;;		line 473 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;  button          1    wreg     PTR struct .
  6442 ;;		 -> mtouch_button(32), 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  button          1    6[COMMON] PTR struct .
  6445 ;;		 -> mtouch_button(32), 
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      void 
  6448 ;; Registers used:
  6449 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6450 ;; Tracked objects:
  6451 ;;		On entry : 1F/0
  6452 ;;		On exit  : 1F/0
  6453 ;;		Unchanged: 1F/0
  6454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6457 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6458 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;Total ram usage:        7 bytes
  6460 ;; Hardware stack levels used:    1
  6461 ;; Hardware stack levels required when called:    4
  6462 ;; This function calls:
  6463 ;;		Nothing
  6464 ;; This function is called by:
  6465 ;;		_Button_State_Initializing
  6466 ;;		_Button_State_NotPressed
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           
  6471                           ;psect for function _Button_Baseline_Update
  6472  065A                     _Button_Baseline_Update:
  6473                           
  6474                           ;incstack = 0
  6475                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  6476                           ;Button_Baseline_Update@button stored from wreg
  6477  065A  00F6               	movwf	Button_Baseline_Update@button
  6478                           
  6479                           ;mcc_generated_files/mtouch/mtouch_button.c: 473: static void Button_Baseline_Update(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 474: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 475:     if (GIE == (uint8_t)1)
  6480  065B  1F8B               	btfss	11,7	;volatile
  6481  065C  2EA4               	goto	l3131
  6482                           
  6483                           ;mcc_generated_files/mtouch/mtouch_button.c: 476:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 477:         GIE = (uint8_t)0;
  6484  065D  138B               	bcf	11,7	;volatile
  6485                           
  6486                           ;mcc_generated_files/mtouch/mtouch_button.c: 478:         button->baseline -= (button->b
      +                          aseline) >> ((uint8_t)4u);
  6487  065E  0876               	movf	Button_Baseline_Update@button,w
  6488  065F  3E05               	addlw	5
  6489  0660  0086               	movwf	6
  6490  0661  3001               	movlw	1	; select bank2/3
  6491  0662  0087               	movwf	7
  6492  0663  3F40               	moviw [0]fsr1
  6493  0664  00F0               	movwf	??_Button_Baseline_Update
  6494  0665  3F41               	moviw [1]fsr1
  6495  0666  00F1               	movwf	??_Button_Baseline_Update+1
  6496  0667  3F42               	moviw [2]fsr1
  6497  0668  00F2               	movwf	??_Button_Baseline_Update+2
  6498  0669  3F43               	moviw [3]fsr1
  6499  066A  00F3               	movwf	??_Button_Baseline_Update+3
  6500  066B  3004               	movlw	4
  6501  066C                     u2085:
  6502  066C  36F3               	lsrf	??_Button_Baseline_Update+3,f
  6503  066D  0CF2               	rrf	??_Button_Baseline_Update+2,f
  6504  066E  0CF1               	rrf	??_Button_Baseline_Update+1,f
  6505  066F  0CF0               	rrf	??_Button_Baseline_Update,f
  6506  0670  0B89               	decfsz	9,f
  6507  0671  2E6C               	goto	u2085
  6508  0672  0876               	movf	Button_Baseline_Update@button,w
  6509  0673  3E05               	addlw	5
  6510  0674  0086               	movwf	6
  6511  0675  3001               	movlw	1	; select bank2/3
  6512  0676  0087               	movwf	7
  6513  0677  0870               	movf	??_Button_Baseline_Update,w
  6514  0678  0281               	subwf	1,f
  6515  0679  3141               	addfsr 1,1
  6516  067A  0871               	movf	??_Button_Baseline_Update+1,w
  6517  067B  3B81               	subwfb	1,f
  6518  067C  3141               	addfsr 1,1
  6519  067D  0872               	movf	??_Button_Baseline_Update+2,w
  6520  067E  3B81               	subwfb	1,f
  6521  067F  3141               	addfsr 1,1
  6522  0680  0873               	movf	??_Button_Baseline_Update+3,w
  6523  0681  3B81               	subwfb	1,f
  6524  0682  317D               	addfsr 1,-3
  6525                           
  6526                           ;mcc_generated_files/mtouch/mtouch_button.c: 479:         button->baseline += button->re
      +                          ading;
  6527  0683  0876               	movf	Button_Baseline_Update@button,w
  6528  0684  3E03               	addlw	3
  6529  0685  0086               	movwf	6
  6530  0686  3001               	movlw	1	; select bank2/3
  6531  0687  0087               	movwf	7
  6532  0688  3F40               	moviw [0]fsr1
  6533  0689  00F0               	movwf	??_Button_Baseline_Update
  6534  068A  3F41               	moviw [1]fsr1
  6535  068B  00F1               	movwf	??_Button_Baseline_Update+1
  6536  068C  0870               	movf	??_Button_Baseline_Update,w
  6537  068D  00F2               	movwf	??_Button_Baseline_Update+2
  6538  068E  0871               	movf	??_Button_Baseline_Update+1,w
  6539  068F  00F3               	movwf	??_Button_Baseline_Update+3
  6540  0690  01F4               	clrf	??_Button_Baseline_Update+4
  6541  0691  01F5               	clrf	??_Button_Baseline_Update+5
  6542  0692  0876               	movf	Button_Baseline_Update@button,w
  6543  0693  3E05               	addlw	5
  6544  0694  0086               	movwf	6
  6545  0695  3001               	movlw	1	; select bank2/3
  6546  0696  0087               	movwf	7
  6547  0697  0872               	movf	??_Button_Baseline_Update+2,w
  6548  0698  0781               	addwf	1,f
  6549  0699  3141               	addfsr 1,1
  6550  069A  0873               	movf	??_Button_Baseline_Update+3,w
  6551  069B  3D81               	addwfc	1,f
  6552  069C  3141               	addfsr 1,1
  6553  069D  0874               	movf	??_Button_Baseline_Update+4,w
  6554  069E  3D81               	addwfc	1,f
  6555  069F  3141               	addfsr 1,1
  6556  06A0  0875               	movf	??_Button_Baseline_Update+5,w
  6557  06A1  3D81               	addwfc	1,f
  6558                           
  6559                           ;mcc_generated_files/mtouch/mtouch_button.c: 480:         GIE = (uint8_t)1;
  6560  06A2  178B               	bsf	11,7	;volatile
  6561                           
  6562                           ;mcc_generated_files/mtouch/mtouch_button.c: 481:     }
  6563  06A3  0008               	return
  6564  06A4                     l3131:
  6565                           
  6566                           ;mcc_generated_files/mtouch/mtouch_button.c: 483:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 484:         button->baseline -= (button->baseline) >> ((uint8_t)4u);
  6567  06A4  0876               	movf	Button_Baseline_Update@button,w
  6568  06A5  3E05               	addlw	5
  6569  06A6  0086               	movwf	6
  6570  06A7  3001               	movlw	1	; select bank2/3
  6571  06A8  0087               	movwf	7
  6572  06A9  3F40               	moviw [0]fsr1
  6573  06AA  00F0               	movwf	??_Button_Baseline_Update
  6574  06AB  3F41               	moviw [1]fsr1
  6575  06AC  00F1               	movwf	??_Button_Baseline_Update+1
  6576  06AD  3F42               	moviw [2]fsr1
  6577  06AE  00F2               	movwf	??_Button_Baseline_Update+2
  6578  06AF  3F43               	moviw [3]fsr1
  6579  06B0  00F3               	movwf	??_Button_Baseline_Update+3
  6580  06B1  3004               	movlw	4
  6581  06B2                     u2095:
  6582  06B2  36F3               	lsrf	??_Button_Baseline_Update+3,f
  6583  06B3  0CF2               	rrf	??_Button_Baseline_Update+2,f
  6584  06B4  0CF1               	rrf	??_Button_Baseline_Update+1,f
  6585  06B5  0CF0               	rrf	??_Button_Baseline_Update,f
  6586  06B6  0B89               	decfsz	9,f
  6587  06B7  2EB2               	goto	u2095
  6588  06B8  0876               	movf	Button_Baseline_Update@button,w
  6589  06B9  3E05               	addlw	5
  6590  06BA  0086               	movwf	6
  6591  06BB  3001               	movlw	1	; select bank2/3
  6592  06BC  0087               	movwf	7
  6593  06BD  0870               	movf	??_Button_Baseline_Update,w
  6594  06BE  0281               	subwf	1,f
  6595  06BF  3141               	addfsr 1,1
  6596  06C0  0871               	movf	??_Button_Baseline_Update+1,w
  6597  06C1  3B81               	subwfb	1,f
  6598  06C2  3141               	addfsr 1,1
  6599  06C3  0872               	movf	??_Button_Baseline_Update+2,w
  6600  06C4  3B81               	subwfb	1,f
  6601  06C5  3141               	addfsr 1,1
  6602  06C6  0873               	movf	??_Button_Baseline_Update+3,w
  6603  06C7  3B81               	subwfb	1,f
  6604  06C8  317D               	addfsr 1,-3
  6605                           
  6606                           ;mcc_generated_files/mtouch/mtouch_button.c: 485:         button->baseline += button->re
      +                          ading;
  6607  06C9  0876               	movf	Button_Baseline_Update@button,w
  6608  06CA  3E03               	addlw	3
  6609  06CB  0086               	movwf	6
  6610  06CC  3001               	movlw	1	; select bank2/3
  6611  06CD  0087               	movwf	7
  6612  06CE  3F40               	moviw [0]fsr1
  6613  06CF  00F0               	movwf	??_Button_Baseline_Update
  6614  06D0  3F41               	moviw [1]fsr1
  6615  06D1  00F1               	movwf	??_Button_Baseline_Update+1
  6616  06D2  0870               	movf	??_Button_Baseline_Update,w
  6617  06D3  00F2               	movwf	??_Button_Baseline_Update+2
  6618  06D4  0871               	movf	??_Button_Baseline_Update+1,w
  6619  06D5  00F3               	movwf	??_Button_Baseline_Update+3
  6620  06D6  01F4               	clrf	??_Button_Baseline_Update+4
  6621  06D7  01F5               	clrf	??_Button_Baseline_Update+5
  6622  06D8  0876               	movf	Button_Baseline_Update@button,w
  6623  06D9  3E05               	addlw	5
  6624  06DA  0086               	movwf	6
  6625  06DB  3001               	movlw	1	; select bank2/3
  6626  06DC  0087               	movwf	7
  6627  06DD  0872               	movf	??_Button_Baseline_Update+2,w
  6628  06DE  0781               	addwf	1,f
  6629  06DF  3141               	addfsr 1,1
  6630  06E0  0873               	movf	??_Button_Baseline_Update+3,w
  6631  06E1  3D81               	addwfc	1,f
  6632  06E2  3141               	addfsr 1,1
  6633  06E3  0874               	movf	??_Button_Baseline_Update+4,w
  6634  06E4  3D81               	addwfc	1,f
  6635  06E5  3141               	addfsr 1,1
  6636  06E6  0875               	movf	??_Button_Baseline_Update+5,w
  6637  06E7  3D81               	addwfc	1,f
  6638  06E8  0008               	return
  6639  06E9                     __end_of_Button_Baseline_Update:
  6640                           
  6641                           	psect	text35
  6642  0CA3                     __ptext35:	
  6643 ;; *************** function _Button_Baseline_Initialize *****************
  6644 ;; Defined at:
  6645 ;;		line 467 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  button          1    wreg     PTR struct .
  6648 ;;		 -> mtouch_button(32), 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;  button          1   12[COMMON] PTR struct .
  6651 ;;		 -> mtouch_button(32), 
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  1    wreg      void 
  6654 ;; Registers used:
  6655 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6656 ;; Tracked objects:
  6657 ;;		On entry : 1F/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6663 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6665 ;;Total ram usage:        5 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:    6
  6668 ;; This function calls:
  6669 ;;		_MTOUCH_Sensor_RawSample_Get
  6670 ;; This function is called by:
  6671 ;;		_Button_State_Initializing
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           
  6676                           ;psect for function _Button_Baseline_Initialize
  6677  0CA3                     _Button_Baseline_Initialize:
  6678                           
  6679                           ;incstack = 0
  6680                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6681                           ;Button_Baseline_Initialize@button stored from wreg
  6682  0CA3  00FC               	movwf	Button_Baseline_Initialize@button
  6683                           
  6684                           ;mcc_generated_files/mtouch/mtouch_button.c: 467: static void Button_Baseline_Initialize
      +                          (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 468: {;mcc_generat
      +                          ed_files/mtouch/mtouch_button.c: 469:     button->baseline = MTOUCH_Sensor_RawSample_Get
      +                          (button->sensor);
  6685  0CA4  0A7C               	incf	Button_Baseline_Initialize@button,w
  6686  0CA5  0086               	movwf	6
  6687  0CA6  3001               	movlw	1	; select bank2/3
  6688  0CA7  0087               	movwf	7
  6689  0CA8  0801               	movf	1,w
  6690  0CA9  318A  2267  318C   	fcall	_MTOUCH_Sensor_RawSample_Get
  6691  0CAC  0874               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  6692  0CAD  00F8               	movwf	??_Button_Baseline_Initialize
  6693  0CAE  0875               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  6694  0CAF  00F9               	movwf	??_Button_Baseline_Initialize+1
  6695  0CB0  01FA               	clrf	??_Button_Baseline_Initialize+2
  6696  0CB1  01FB               	clrf	??_Button_Baseline_Initialize+3
  6697  0CB2  087C               	movf	Button_Baseline_Initialize@button,w
  6698  0CB3  3E05               	addlw	5
  6699  0CB4  0086               	movwf	6
  6700  0CB5  3001               	movlw	1	; select bank2/3
  6701  0CB6  0087               	movwf	7
  6702  0CB7  0878               	movf	??_Button_Baseline_Initialize,w
  6703  0CB8  3FC0               	movwi [0]fsr1
  6704  0CB9  0879               	movf	??_Button_Baseline_Initialize+1,w
  6705  0CBA  3FC1               	movwi [1]fsr1
  6706  0CBB  087A               	movf	??_Button_Baseline_Initialize+2,w
  6707  0CBC  3FC2               	movwi [2]fsr1
  6708  0CBD  087B               	movf	??_Button_Baseline_Initialize+3,w
  6709  0CBE  3FC3               	movwi [3]fsr1
  6710                           
  6711                           ;mcc_generated_files/mtouch/mtouch_button.c: 470:     button->baseline <<= ((uint8_t)4u)
      +                          ;
  6712  0CBF  087C               	movf	Button_Baseline_Initialize@button,w
  6713  0CC0  3E05               	addlw	5
  6714  0CC1  0086               	movwf	6
  6715  0CC2  3001               	movlw	1	; select bank2/3
  6716  0CC3  0087               	movwf	7
  6717  0CC4  3004               	movlw	4
  6718  0CC5                     u2065:
  6719  0CC5  3581               	lslf	1,f
  6720  0CC6  3141               	addfsr 1,1
  6721  0CC7  0D81               	rlf	1,f
  6722  0CC8  3141               	addfsr 1,1
  6723  0CC9  0D81               	rlf	1,f
  6724  0CCA  3141               	addfsr 1,1
  6725  0CCB  0D81               	rlf	1,f
  6726  0CCC  317D               	addfsr 1,-3
  6727  0CCD  0B89               	decfsz	9,f
  6728  0CCE  2CC5               	goto	u2065
  6729  0CCF  0008               	return
  6730  0CD0                     __end_of_Button_Baseline_Initialize:
  6731                           
  6732                           	psect	text36
  6733  0954                     __ptext36:	
  6734 ;; *************** function _Button_Reading_Update *****************
  6735 ;; Defined at:
  6736 ;;		line 440 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;  button          1    wreg     PTR struct .
  6739 ;;		 -> mtouch_button(32), 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;  button          1   11[COMMON] PTR struct .
  6742 ;;		 -> mtouch_button(32), 
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  1    wreg      void 
  6745 ;; Registers used:
  6746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6747 ;; Tracked objects:
  6748 ;;		On entry : 1F/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;Total ram usage:        1 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:    7
  6759 ;; This function calls:
  6760 ;;		_Button_Reading_Update_Helper
  6761 ;; This function is called by:
  6762 ;;		_Button_Service
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766                           
  6767                           ;psect for function _Button_Reading_Update
  6768  0954                     _Button_Reading_Update:
  6769                           
  6770                           ;incstack = 0
  6771                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6772                           ;Button_Reading_Update@button stored from wreg
  6773  0954  00FB               	movwf	Button_Reading_Update@button
  6774                           
  6775                           ;mcc_generated_files/mtouch/mtouch_button.c: 440: static void Button_Reading_Update(mtou
      +                          ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 441: {;mcc_generated_fi
      +                          les/mtouch/mtouch_button.c: 442:     if (GIE == (uint8_t) 1)
  6776  0955  1F8B               	btfss	11,7	;volatile
  6777  0956  295D               	goto	l3219
  6778                           
  6779                           ;mcc_generated_files/mtouch/mtouch_button.c: 443:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 444:         GIE = (uint8_t) 0;
  6780  0957  138B               	bcf	11,7	;volatile
  6781                           
  6782                           ;mcc_generated_files/mtouch/mtouch_button.c: 445:         Button_Reading_Update_Helper(b
      +                          utton);
  6783  0958  087B               	movf	Button_Reading_Update@button,w
  6784  0959  318D  2543         	fcall	_Button_Reading_Update_Helper
  6785                           
  6786                           ;mcc_generated_files/mtouch/mtouch_button.c: 446:         GIE = (uint8_t) 1;
  6787  095B  178B               	bsf	11,7	;volatile
  6788                           
  6789                           ;mcc_generated_files/mtouch/mtouch_button.c: 447:     }
  6790  095C  0008               	return
  6791  095D                     l3219:
  6792                           
  6793                           ;mcc_generated_files/mtouch/mtouch_button.c: 449:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 450:         Button_Reading_Update_Helper(button);
  6794  095D  087B               	movf	Button_Reading_Update@button,w
  6795  095E  318D  2543         	fcall	_Button_Reading_Update_Helper
  6796  0960  0008               	return
  6797  0961                     __end_of_Button_Reading_Update:
  6798                           
  6799                           	psect	text37
  6800  0D43                     __ptext37:	
  6801 ;; *************** function _Button_Reading_Update_Helper *****************
  6802 ;; Defined at:
  6803 ;;		line 454 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  button          1    wreg     PTR struct .
  6806 ;;		 -> mtouch_button(32), 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  button          1   10[COMMON] PTR struct .
  6809 ;;		 -> mtouch_button(32), 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      void 
  6812 ;; Registers used:
  6813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6814 ;; Tracked objects:
  6815 ;;		On entry : 1F/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6822 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6823 ;;Total ram usage:        3 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:    6
  6826 ;; This function calls:
  6827 ;;		_MTOUCH_Sensor_RawSample_Get
  6828 ;; This function is called by:
  6829 ;;		_Button_Reading_Update
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           
  6834                           ;psect for function _Button_Reading_Update_Helper
  6835  0D43                     _Button_Reading_Update_Helper:
  6836                           
  6837                           ;incstack = 0
  6838                           ; Regs used in _Button_Reading_Update_Helper: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  6839                           ;Button_Reading_Update_Helper@button stored from wreg
  6840  0D43  00FA               	movwf	Button_Reading_Update_Helper@button
  6841                           
  6842                           ;mcc_generated_files/mtouch/mtouch_button.c: 454: static void Button_Reading_Update_Help
      +                          er(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 455: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 456:     if (button->state != MTOUCH_BUTTON_STATE_ini
      +                          tializing)
  6843  0D44  087A               	movf	Button_Reading_Update_Helper@button,w
  6844  0D45  3E02               	addlw	2
  6845  0D46  0086               	movwf	6
  6846  0D47  3001               	movlw	1	; select bank2/3
  6847  0D48  0087               	movwf	7
  6848  0D49  0801               	movf	1,w
  6849  0D4A  1903               	btfsc	3,2
  6850  0D4B  2D7F               	goto	l3139
  6851                           
  6852                           ;mcc_generated_files/mtouch/mtouch_button.c: 457:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 458:         button->reading -= button->reading>>((uint8_t)2u);
  6853  0D4C  087A               	movf	Button_Reading_Update_Helper@button,w
  6854  0D4D  3E03               	addlw	3
  6855  0D4E  0086               	movwf	6
  6856  0D4F  3001               	movlw	1	; select bank2/3
  6857  0D50  0087               	movwf	7
  6858  0D51  3F40               	moviw [0]fsr1
  6859  0D52  00F8               	movwf	??_Button_Reading_Update_Helper
  6860  0D53  3F41               	moviw [1]fsr1
  6861  0D54  00F9               	movwf	??_Button_Reading_Update_Helper+1
  6862  0D55  36F9               	lsrf	??_Button_Reading_Update_Helper+1,f
  6863  0D56  0CF8               	rrf	??_Button_Reading_Update_Helper,f
  6864  0D57  36F9               	lsrf	??_Button_Reading_Update_Helper+1,f
  6865  0D58  0CF8               	rrf	??_Button_Reading_Update_Helper,f
  6866  0D59  087A               	movf	Button_Reading_Update_Helper@button,w
  6867  0D5A  3E03               	addlw	3
  6868  0D5B  0086               	movwf	6
  6869  0D5C  3001               	movlw	1	; select bank2/3
  6870  0D5D  0087               	movwf	7
  6871  0D5E  0878               	movf	??_Button_Reading_Update_Helper,w
  6872  0D5F  0281               	subwf	1,f
  6873  0D60  3141               	addfsr 1,1
  6874  0D61  0879               	movf	??_Button_Reading_Update_Helper+1,w
  6875  0D62  3B81               	subwfb	1,f
  6876  0D63  317F               	addfsr 1,-1
  6877                           
  6878                           ;mcc_generated_files/mtouch/mtouch_button.c: 459:         button->reading += MTOUCH_Sens
      +                          or_RawSample_Get(button->sensor) >> ((uint8_t)2u);
  6879  0D64  0A7A               	incf	Button_Reading_Update_Helper@button,w
  6880  0D65  0086               	movwf	6
  6881  0D66  3001               	movlw	1	; select bank2/3
  6882  0D67  0087               	movwf	7
  6883  0D68  0801               	movf	1,w
  6884  0D69  318A  2267         	fcall	_MTOUCH_Sensor_RawSample_Get
  6885  0D6B  0874               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  6886  0D6C  00F8               	movwf	??_Button_Reading_Update_Helper
  6887  0D6D  0875               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  6888  0D6E  00F9               	movwf	??_Button_Reading_Update_Helper+1
  6889  0D6F  36F9               	lsrf	??_Button_Reading_Update_Helper+1,f
  6890  0D70  0CF8               	rrf	??_Button_Reading_Update_Helper,f
  6891  0D71  36F9               	lsrf	??_Button_Reading_Update_Helper+1,f
  6892  0D72  0CF8               	rrf	??_Button_Reading_Update_Helper,f
  6893  0D73  087A               	movf	Button_Reading_Update_Helper@button,w
  6894  0D74  3E03               	addlw	3
  6895  0D75  0086               	movwf	6
  6896  0D76  3001               	movlw	1	; select bank2/3
  6897  0D77  0087               	movwf	7
  6898  0D78  0878               	movf	??_Button_Reading_Update_Helper,w
  6899  0D79  0781               	addwf	1,f
  6900  0D7A  3141               	addfsr 1,1
  6901  0D7B  0879               	movf	??_Button_Reading_Update_Helper+1,w
  6902  0D7C  3D81               	addwfc	1,f
  6903  0D7D  317F               	addfsr 1,-1
  6904                           
  6905                           ;mcc_generated_files/mtouch/mtouch_button.c: 460:     }
  6906  0D7E  0008               	return
  6907  0D7F                     l3139:
  6908                           
  6909                           ;mcc_generated_files/mtouch/mtouch_button.c: 462:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 463:         button->reading = MTOUCH_Sensor_RawSample_Get(button->sensor);
  6910  0D7F  0A7A               	incf	Button_Reading_Update_Helper@button,w
  6911  0D80  0086               	movwf	6
  6912  0D81  3001               	movlw	1	; select bank2/3
  6913  0D82  0087               	movwf	7
  6914  0D83  0801               	movf	1,w
  6915  0D84  318A  2267         	fcall	_MTOUCH_Sensor_RawSample_Get
  6916  0D86  087A               	movf	Button_Reading_Update_Helper@button,w
  6917  0D87  3E03               	addlw	3
  6918  0D88  0086               	movwf	6
  6919  0D89  3001               	movlw	1	; select bank2/3
  6920  0D8A  0087               	movwf	7
  6921  0D8B  0874               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  6922  0D8C  3FC0               	movwi [0]fsr1
  6923  0D8D  0875               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  6924  0D8E  3FC1               	movwi [1]fsr1
  6925  0D8F  0008               	return
  6926  0D90                     __end_of_Button_Reading_Update_Helper:
  6927                           
  6928                           	psect	text38
  6929  0A67                     __ptext38:	
  6930 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
  6931 ;; Defined at:
  6932 ;;		line 420 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  name            1    wreg     enum E2661
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  name            1    7[COMMON] enum E2661
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  2    4[COMMON] unsigned short 
  6939 ;; Registers used:
  6940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6941 ;; Tracked objects:
  6942 ;;		On entry : 1F/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6949 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6950 ;;Total ram usage:        4 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:    5
  6953 ;; This function calls:
  6954 ;;		___bmul
  6955 ;; This function is called by:
  6956 ;;		_Button_Reading_Update_Helper
  6957 ;;		_Button_Baseline_Initialize
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           
  6962                           ;psect for function _MTOUCH_Sensor_RawSample_Get
  6963  0A67                     _MTOUCH_Sensor_RawSample_Get:
  6964                           
  6965                           ;incstack = 0
  6966                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6967                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
  6968  0A67  00F7               	movwf	MTOUCH_Sensor_RawSample_Get@name
  6969  0A68  3002               	movlw	2
  6970  0A69  0277               	subwf	MTOUCH_Sensor_RawSample_Get@name,w
  6971  0A6A  1803               	skipnc
  6972  0A6B  2A7B               	goto	l3039
  6973  0A6C  3009               	movlw	9
  6974  0A6D  00F6               	movwf	??_MTOUCH_Sensor_RawSample_Get
  6975  0A6E  0876               	movf	??_MTOUCH_Sensor_RawSample_Get,w
  6976  0A6F  00F0               	movwf	___bmul@multiplicand
  6977  0A70  0877               	movf	MTOUCH_Sensor_RawSample_Get@name,w
  6978  0A71  3189  21BB         	fcall	___bmul
  6979  0A73  3EB6               	addlw	(low ((_mtouch_sensor| 0+6)))& (0+255)
  6980  0A74  0086               	movwf	6
  6981  0A75  0187               	clrf	7
  6982  0A76  3F40               	moviw [0]fsr1
  6983  0A77  00F4               	movwf	?_MTOUCH_Sensor_RawSample_Get
  6984  0A78  3F41               	moviw [1]fsr1
  6985  0A79  00F5               	movwf	?_MTOUCH_Sensor_RawSample_Get+1
  6986  0A7A  0008               	return
  6987  0A7B                     l3039:
  6988  0A7B  01F4               	clrf	?_MTOUCH_Sensor_RawSample_Get
  6989  0A7C  01F5               	clrf	?_MTOUCH_Sensor_RawSample_Get+1
  6990  0A7D  0008               	return
  6991  0A7E                     __end_of_MTOUCH_Sensor_RawSample_Get:
  6992                           
  6993                           	psect	text39
  6994  06E9                     __ptext39:	
  6995 ;; *************** function _Button_Deviation_Update *****************
  6996 ;; Defined at:
  6997 ;;		line 391 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6998 ;; Parameters:    Size  Location     Type
  6999 ;;  button          1    wreg     PTR struct .
  7000 ;;		 -> mtouch_button(32), 
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;  button          1    0[BANK0 ] PTR struct .
  7003 ;;		 -> mtouch_button(32), 
  7004 ;;  deviation       4    1[BANK0 ] long 
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  1    wreg      void 
  7007 ;; Registers used:
  7008 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7009 ;; Tracked objects:
  7010 ;;		On entry : 1F/0
  7011 ;;		On exit  : 1F/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7016 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;      Totals:        10       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7018 ;;Total ram usage:       15 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; Hardware stack levels required when called:    4
  7021 ;; This function calls:
  7022 ;;		Nothing
  7023 ;; This function is called by:
  7024 ;;		_Button_Service
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           
  7029                           ;psect for function _Button_Deviation_Update
  7030  06E9                     _Button_Deviation_Update:
  7031                           
  7032                           ;incstack = 0
  7033                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  7034                           ;Button_Deviation_Update@button stored from wreg
  7035  06E9  00A0               	movwf	Button_Deviation_Update@button
  7036                           
  7037                           ;mcc_generated_files/mtouch/mtouch_button.c: 391: static void Button_Deviation_Update(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 392: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 393:     int32_t deviation;;mcc_generated_files/mtouch/mto
      +                          uch_button.c: 395:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4u)));
  7038  06EA  0820               	movf	Button_Deviation_Update@button,w
  7039  06EB  3E05               	addlw	5
  7040  06EC  0086               	movwf	6
  7041  06ED  3001               	movlw	1	; select bank2/3
  7042  06EE  0087               	movwf	7
  7043  06EF  3F40               	moviw [0]fsr1
  7044  06F0  00F0               	movwf	??_Button_Deviation_Update
  7045  06F1  3F41               	moviw [1]fsr1
  7046  06F2  00F1               	movwf	??_Button_Deviation_Update+1
  7047  06F3  3F42               	moviw [2]fsr1
  7048  06F4  00F2               	movwf	??_Button_Deviation_Update+2
  7049  06F5  3F43               	moviw [3]fsr1
  7050  06F6  00F3               	movwf	??_Button_Deviation_Update+3
  7051  06F7  3004               	movlw	4
  7052  06F8                     u2195:
  7053  06F8  36F3               	lsrf	??_Button_Deviation_Update+3,f
  7054  06F9  0CF2               	rrf	??_Button_Deviation_Update+2,f
  7055  06FA  0CF1               	rrf	??_Button_Deviation_Update+1,f
  7056  06FB  0CF0               	rrf	??_Button_Deviation_Update,f
  7057  06FC  0B89               	decfsz	9,f
  7058  06FD  2EF8               	goto	u2195
  7059  06FE  0820               	movf	Button_Deviation_Update@button,w
  7060  06FF  3E03               	addlw	3
  7061  0700  0086               	movwf	6
  7062  0701  3001               	movlw	1	; select bank2/3
  7063  0702  0087               	movwf	7
  7064  0703  3F40               	moviw [0]fsr1
  7065  0704  00F4               	movwf	??_Button_Deviation_Update+4
  7066  0705  3F41               	moviw [1]fsr1
  7067  0706  00F5               	movwf	??_Button_Deviation_Update+5
  7068  0707  0874               	movf	??_Button_Deviation_Update+4,w
  7069  0708  00F6               	movwf	??_Button_Deviation_Update+6
  7070  0709  0875               	movf	??_Button_Deviation_Update+5,w
  7071  070A  00F7               	movwf	??_Button_Deviation_Update+7
  7072  070B  01F8               	clrf	??_Button_Deviation_Update+8
  7073  070C  01F9               	clrf	??_Button_Deviation_Update+9
  7074  070D  0870               	movf	??_Button_Deviation_Update,w
  7075  070E  02F6               	subwf	??_Button_Deviation_Update+6,f
  7076  070F  0871               	movf	??_Button_Deviation_Update+1,w
  7077  0710  3BF7               	subwfb	??_Button_Deviation_Update+7,f
  7078  0711  0872               	movf	??_Button_Deviation_Update+2,w
  7079  0712  3BF8               	subwfb	??_Button_Deviation_Update+8,f
  7080  0713  0873               	movf	??_Button_Deviation_Update+3,w
  7081  0714  3BF9               	subwfb	??_Button_Deviation_Update+9,f
  7082  0715  0879               	movf	??_Button_Deviation_Update+9,w
  7083  0716  00A4               	movwf	Button_Deviation_Update@deviation+3
  7084  0717  0878               	movf	??_Button_Deviation_Update+8,w
  7085  0718  00A3               	movwf	Button_Deviation_Update@deviation+2
  7086  0719  0877               	movf	??_Button_Deviation_Update+7,w
  7087  071A  00A2               	movwf	Button_Deviation_Update@deviation+1
  7088  071B  0876               	movf	??_Button_Deviation_Update+6,w
  7089  071C  00A1               	movwf	Button_Deviation_Update@deviation
  7090                           
  7091                           ;mcc_generated_files/mtouch/mtouch_button.c: 398:     deviation = deviation >> (button->
      +                          scaling);
  7092  071D  0821               	movf	Button_Deviation_Update@deviation,w
  7093  071E  00F0               	movwf	??_Button_Deviation_Update
  7094  071F  0822               	movf	Button_Deviation_Update@deviation+1,w
  7095  0720  00F1               	movwf	??_Button_Deviation_Update+1
  7096  0721  0823               	movf	Button_Deviation_Update@deviation+2,w
  7097  0722  00F2               	movwf	??_Button_Deviation_Update+2
  7098  0723  0824               	movf	Button_Deviation_Update@deviation+3,w
  7099  0724  00F3               	movwf	??_Button_Deviation_Update+3
  7100  0725  0820               	movf	Button_Deviation_Update@button,w
  7101  0726  3E0F               	addlw	15
  7102  0727  0086               	movwf	6
  7103  0728  3001               	movlw	1	; select bank2/3
  7104  0729  0087               	movwf	7
  7105  072A  0A01               	incf	1,w
  7106  072B  2F30               	goto	u2200
  7107  072C                     u2205:
  7108  072C  37F3               	asrf	??_Button_Deviation_Update+3,f
  7109  072D  0CF2               	rrf	??_Button_Deviation_Update+2,f
  7110  072E  0CF1               	rrf	??_Button_Deviation_Update+1,f
  7111  072F  0CF0               	rrf	??_Button_Deviation_Update,f
  7112  0730                     u2200:
  7113  0730  0B89               	decfsz	9,f
  7114  0731  2F2C               	goto	u2205
  7115  0732  0873               	movf	??_Button_Deviation_Update+3,w
  7116  0733  00A4               	movwf	Button_Deviation_Update@deviation+3
  7117  0734  0872               	movf	??_Button_Deviation_Update+2,w
  7118  0735  00A3               	movwf	Button_Deviation_Update@deviation+2
  7119  0736  0871               	movf	??_Button_Deviation_Update+1,w
  7120  0737  00A2               	movwf	Button_Deviation_Update@deviation+1
  7121  0738  0870               	movf	??_Button_Deviation_Update,w
  7122  0739  00A1               	movwf	Button_Deviation_Update@deviation
  7123                           
  7124                           ;mcc_generated_files/mtouch/mtouch_button.c: 401:     if (deviation > ((0x7f)))
  7125  073A  1BA4               	btfsc	Button_Deviation_Update@deviation+3,7
  7126  073B  2F52               	goto	l3227
  7127  073C  0824               	movf	Button_Deviation_Update@deviation+3,w
  7128  073D  1D03               	btfss	3,2
  7129  073E  2F49               	goto	l3225
  7130  073F  0823               	movf	Button_Deviation_Update@deviation+2,w
  7131  0740  1D03               	btfss	3,2
  7132  0741  2F49               	goto	l3225
  7133  0742  0822               	movf	Button_Deviation_Update@deviation+1,w
  7134  0743  1D03               	btfss	3,2
  7135  0744  2F49               	goto	l3225
  7136  0745  3080               	movlw	128
  7137  0746  0221               	subwf	Button_Deviation_Update@deviation,w
  7138  0747  1C03               	btfss	3,0
  7139  0748  2F52               	goto	l3227
  7140  0749                     l3225:
  7141                           
  7142                           ;mcc_generated_files/mtouch/mtouch_button.c: 402:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 403:         deviation = ((0x7f));
  7143  0749  3000               	movlw	0
  7144  074A  0020               	movlb	0	; select bank0
  7145  074B  00A4               	movwf	Button_Deviation_Update@deviation+3
  7146  074C  3000               	movlw	0
  7147  074D  00A3               	movwf	Button_Deviation_Update@deviation+2
  7148  074E  3000               	movlw	0
  7149  074F  00A2               	movwf	Button_Deviation_Update@deviation+1
  7150  0750  307F               	movlw	127
  7151  0751  00A1               	movwf	Button_Deviation_Update@deviation
  7152  0752                     l3227:
  7153                           
  7154                           ;mcc_generated_files/mtouch/mtouch_button.c: 405:     if (deviation < ((-1-0x7f)))
  7155  0752  0020               	movlb	0	; select bank0
  7156  0753  1FA4               	btfss	Button_Deviation_Update@deviation+3,7
  7157  0754  2F68               	goto	l3231
  7158  0755  3080               	movlw	128
  7159  0756  0221               	subwf	Button_Deviation_Update@deviation,w
  7160  0757  30FF               	movlw	255
  7161  0758  3B22               	subwfb	Button_Deviation_Update@deviation+1,w
  7162  0759  30FF               	movlw	255
  7163  075A  3B23               	subwfb	Button_Deviation_Update@deviation+2,w
  7164  075B  30FF               	movlw	255
  7165  075C  3B24               	subwfb	Button_Deviation_Update@deviation+3,w
  7166  075D  1803               	btfsc	3,0
  7167  075E  2F68               	goto	l3231
  7168                           
  7169                           ;mcc_generated_files/mtouch/mtouch_button.c: 406:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 407:         deviation = ((-1-0x7f));
  7170  075F  30FF               	movlw	255
  7171  0760  0020               	movlb	0	; select bank0
  7172  0761  00A4               	movwf	Button_Deviation_Update@deviation+3
  7173  0762  30FF               	movlw	255
  7174  0763  00A3               	movwf	Button_Deviation_Update@deviation+2
  7175  0764  30FF               	movlw	255
  7176  0765  00A2               	movwf	Button_Deviation_Update@deviation+1
  7177  0766  3080               	movlw	128
  7178  0767  00A1               	movwf	Button_Deviation_Update@deviation
  7179  0768                     l3231:
  7180                           
  7181                           ;mcc_generated_files/mtouch/mtouch_button.c: 410:     button->deviation = (mtouch_button
      +                          _deviation_t)deviation;
  7182  0768  0020               	movlb	0	; select bank0
  7183  0769  0821               	movf	Button_Deviation_Update@deviation,w
  7184  076A  00F0               	movwf	??_Button_Deviation_Update
  7185  076B  0820               	movf	Button_Deviation_Update@button,w
  7186  076C  3E09               	addlw	9
  7187  076D  0086               	movwf	6
  7188  076E  3001               	movlw	1	; select bank2/3
  7189  076F  0087               	movwf	7
  7190  0770  0870               	movf	??_Button_Deviation_Update,w
  7191  0771  0081               	movwf	1
  7192  0772  0008               	return
  7193  0773                     __end_of_Button_Deviation_Update:
  7194                           
  7195                           	psect	text40
  7196  0AC8                     __ptext40:	
  7197 ;; *************** function _MTOUCH_Button_isPressed *****************
  7198 ;; Defined at:
  7199 ;;		line 366 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  name            1    wreg     enum E2819
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  name            1    1[COMMON] enum E2819
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  1    wreg      _Bool 
  7206 ;; Registers used:
  7207 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/2
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7214 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7215 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;Total ram usage:        2 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; Hardware stack levels required when called:    4
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_StopTouchDetection
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           
  7228                           ;psect for function _MTOUCH_Button_isPressed
  7229  0AC8                     _MTOUCH_Button_isPressed:
  7230                           
  7231                           ;incstack = 0
  7232                           ; Regs used in _MTOUCH_Button_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0]
  7233                           ;MTOUCH_Button_isPressed@name stored from wreg
  7234  0AC8  00F1               	movwf	MTOUCH_Button_isPressed@name
  7235                           
  7236                           ;mcc_generated_files/mtouch/mtouch_button.c: 366: _Bool MTOUCH_Button_isPressed(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 367: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 368:     if(name < 2u)
  7237  0AC9  3002               	movlw	2
  7238  0ACA  0271               	subwf	MTOUCH_Button_isPressed@name,w
  7239  0ACB  1803               	skipnc
  7240  0ACC  2AE1               	goto	l3999
  7241                           
  7242                           ;mcc_generated_files/mtouch/mtouch_button.c: 369:         return (_Bool)((mtouch_button[
      +                          name].state == MTOUCH_BUTTON_STATE_pressed) ? 1 : 0);
  7243  0ACD  0871               	movf	MTOUCH_Button_isPressed@name,w
  7244  0ACE  00F0               	movwf	??_MTOUCH_Button_isPressed
  7245  0ACF  3003               	movlw	3
  7246  0AD0                     u3615:
  7247  0AD0  35F0               	lslf	??_MTOUCH_Button_isPressed,f
  7248  0AD1  3EFF               	addlw	-1
  7249  0AD2  1D03               	skipz
  7250  0AD3  2AD0               	goto	u3615
  7251  0AD4  3570               	lslf	??_MTOUCH_Button_isPressed,w
  7252  0AD5  3E22               	addlw	(low ((_mtouch_button| (0+256)+2)))& (0+255)
  7253  0AD6  0086               	movwf	6
  7254  0AD7  3001               	movlw	1	; select bank2/3
  7255  0AD8  0087               	movwf	7
  7256  0AD9  3002               	movlw	2
  7257  0ADA  0601               	xorwf	1,w
  7258  0ADB  1D03               	btfss	3,2
  7259  0ADC  2ADF               	goto	u3620
  7260  0ADD  3001               	movlw	1
  7261  0ADE  0008               	return
  7262  0ADF                     u3620:
  7263  0ADF  3000               	movlw	0
  7264  0AE0  0008               	return
  7265  0AE1                     l3999:
  7266                           
  7267                           ;mcc_generated_files/mtouch/mtouch_button.c: 371:         return 0;
  7268  0AE1  3000               	movlw	0
  7269  0AE2  0008               	return
  7270  0AE3                     __end_of_MTOUCH_Button_isPressed:
  7271                           
  7272                           	psect	text41
  7273  0A27                     __ptext41:	
  7274 ;; *************** function _SYSTEM_Initialize *****************
  7275 ;; Defined at:
  7276 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;		None
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  1    wreg      void 
  7283 ;; Registers used:
  7284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7285 ;; Tracked objects:
  7286 ;;		On entry : B1F/0
  7287 ;;		On exit  : 1F/1
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7294 ;;Total ram usage:        0 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; Hardware stack levels required when called:    9
  7297 ;; This function calls:
  7298 ;;		_ADC_Initialize
  7299 ;;		_EUSART_Initialize
  7300 ;;		_MTOUCH_Initialize
  7301 ;;		_OSCILLATOR_Initialize
  7302 ;;		_PIN_MANAGER_Initialize
  7303 ;;		_TMR2_Initialize
  7304 ;;		_WDT_Initialize
  7305 ;; This function is called by:
  7306 ;;		_main
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           
  7311                           ;psect for function _SYSTEM_Initialize
  7312  0A27                     _SYSTEM_Initialize:
  7313                           
  7314                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7315                           
  7316                           ;incstack = 0
  7317                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7318  0A27  318C  2450  318A   	fcall	_PIN_MANAGER_Initialize
  7319                           
  7320                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7321  0A2A  3188  20C3  318A   	fcall	_OSCILLATOR_Initialize
  7322                           
  7323                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  7324  0A2D  3188  209F  318A   	fcall	_WDT_Initialize
  7325                           
  7326                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  7327  0A30  3188  20DB  318A   	fcall	_ADC_Initialize
  7328                           
  7329                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  7330  0A33  3189  218B  318A   	fcall	_TMR2_Initialize
  7331                           
  7332                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  7333  0A36  318B  2320  318A   	fcall	_EUSART_Initialize
  7334                           
  7335                           ;mcc_generated_files/mcc.c: 59:     MTOUCH_Initialize();
  7336  0A39  3189  212E         	fcall	_MTOUCH_Initialize
  7337  0A3B  0008               	return
  7338  0A3C                     __end_of_SYSTEM_Initialize:
  7339                           
  7340                           	psect	text42
  7341  089F                     __ptext42:	
  7342 ;; *************** function _WDT_Initialize *****************
  7343 ;; Defined at:
  7344 ;;		line 72 in file "mcc_generated_files/mcc.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;		None
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      void 
  7351 ;; Registers used:
  7352 ;;		wreg
  7353 ;; Tracked objects:
  7354 ;;		On entry : B1F/2
  7355 ;;		On exit  : B1F/1
  7356 ;;		Unchanged: B00/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;Total ram usage:        0 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    4
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_SYSTEM_Initialize
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           
  7373                           ;psect for function _WDT_Initialize
  7374  089F                     _WDT_Initialize:
  7375                           
  7376                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
  7377                           
  7378                           ;incstack = 0
  7379                           ; Regs used in _WDT_Initialize: [wreg]
  7380  089F  3016               	movlw	22
  7381  08A0  0021               	movlb	1	; select bank1
  7382  08A1  0097               	movwf	23	;volatile
  7383  08A2  0008               	return
  7384  08A3                     __end_of_WDT_Initialize:
  7385                           
  7386                           	psect	text43
  7387  098B                     __ptext43:	
  7388 ;; *************** function _TMR2_Initialize *****************
  7389 ;; Defined at:
  7390 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;		None
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;		None
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      void 
  7397 ;; Registers used:
  7398 ;;		wreg, status,2, status,0, pclath, cstack
  7399 ;; Tracked objects:
  7400 ;;		On entry : B1F/1
  7401 ;;		On exit  : B1F/0
  7402 ;;		Unchanged: B00/0
  7403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7408 ;;Total ram usage:        0 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; Hardware stack levels required when called:    5
  7411 ;; This function calls:
  7412 ;;		_TMR2_SetInterruptHandler
  7413 ;; This function is called by:
  7414 ;;		_SYSTEM_Initialize
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           
  7419                           ;psect for function _TMR2_Initialize
  7420  098B                     _TMR2_Initialize:
  7421                           
  7422                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xC7;
  7423                           
  7424                           ;incstack = 0
  7425                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7426  098B  30C7               	movlw	199
  7427  098C  0020               	movlb	0	; select bank0
  7428  098D  009B               	movwf	27	;volatile
  7429                           
  7430                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  7431  098E  019A               	clrf	26	;volatile
  7432                           
  7433                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  7434  098F  1091               	bcf	17,1	;volatile
  7435                           
  7436                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  7437  0990  0021               	movlb	1	; select bank1
  7438  0991  1491               	bsf	17,1	;volatile
  7439                           
  7440                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  7441  0992  3096               	movlw	low _TMR2_DefaultInterruptHandler
  7442  0993  00F0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  7443  0994  3008               	movlw	high _TMR2_DefaultInterruptHandler
  7444  0995  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  7445  0996  3188  20B2         	fcall	_TMR2_SetInterruptHandler
  7446                           
  7447                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x00;
  7448  0998  0020               	movlb	0	; select bank0
  7449  0999  019C               	clrf	28	;volatile
  7450  099A  0008               	return
  7451  099B                     __end_of_TMR2_Initialize:
  7452                           
  7453                           	psect	text44
  7454  08B2                     __ptext44:	
  7455 ;; *************** function _TMR2_SetInterruptHandler *****************
  7456 ;; Defined at:
  7457 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  7460 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;		None
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  1    wreg      void 
  7465 ;; Registers used:
  7466 ;;		wreg
  7467 ;; Tracked objects:
  7468 ;;		On entry : B1F/1
  7469 ;;		On exit  : B1F/1
  7470 ;;		Unchanged: B00/0
  7471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;Total ram usage:        2 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; Hardware stack levels required when called:    4
  7479 ;; This function calls:
  7480 ;;		Nothing
  7481 ;; This function is called by:
  7482 ;;		_TMR2_Initialize
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           
  7487                           ;psect for function _TMR2_SetInterruptHandler
  7488  08B2                     _TMR2_SetInterruptHandler:
  7489                           
  7490                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  7491                           
  7492                           ;incstack = 0
  7493                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  7494  08B2  0871               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  7495  08B3  00E2               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
  7496  08B4  0870               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  7497  08B5  00E1               	movwf	_TMR2_InterruptHandler^(0+128)
  7498  08B6  0008               	return
  7499  08B7                     __end_of_TMR2_SetInterruptHandler:
  7500                           
  7501                           	psect	text45
  7502  0C50                     __ptext45:	
  7503 ;; *************** function _PIN_MANAGER_Initialize *****************
  7504 ;; Defined at:
  7505 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;		None
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		wreg, status,2, status,0, pclath, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : B1F/0
  7516 ;;		On exit  : B1F/1
  7517 ;;		Unchanged: B00/0
  7518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7523 ;;Total ram usage:        0 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:    5
  7526 ;; This function calls:
  7527 ;;		_IOCAF2_SetInterruptHandler
  7528 ;; This function is called by:
  7529 ;;		_SYSTEM_Initialize
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533                           
  7534                           ;psect for function _PIN_MANAGER_Initialize
  7535  0C50                     _PIN_MANAGER_Initialize:
  7536                           
  7537                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7538                           
  7539                           ;incstack = 0
  7540                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7541  0C50  0022               	movlb	2	; select bank2
  7542  0C51  018C               	clrf	12	;volatile
  7543                           
  7544                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7545  0C52  018D               	clrf	13	;volatile
  7546                           
  7547                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7548  0C53  018E               	clrf	14	;volatile
  7549                           
  7550                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x2F;
  7551  0C54  302F               	movlw	47
  7552  0C55  0021               	movlb	1	; select bank1
  7553  0C56  008C               	movwf	12	;volatile
  7554                           
  7555                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
  7556  0C57  3070               	movlw	112
  7557  0C58  008D               	movwf	13	;volatile
  7558                           
  7559                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x03;
  7560  0C59  3003               	movlw	3
  7561  0C5A  008E               	movwf	14	;volatile
  7562                           
  7563                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x03;
  7564  0C5B  3003               	movlw	3
  7565  0C5C  0023               	movlb	3	; select bank3
  7566  0C5D  008E               	movwf	14	;volatile
  7567                           
  7568                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x10;
  7569  0C5E  3010               	movlw	16
  7570  0C5F  008D               	movwf	13	;volatile
  7571                           
  7572                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x03;
  7573  0C60  3003               	movlw	3
  7574  0C61  008C               	movwf	12	;volatile
  7575                           
  7576                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  7577  0C62  0024               	movlb	4	; select bank4
  7578  0C63  018D               	clrf	13	;volatile
  7579                           
  7580                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x04;
  7581  0C64  3004               	movlw	4
  7582  0C65  008C               	movwf	12	;volatile
  7583                           
  7584                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  7585  0C66  018E               	clrf	14	;volatile
  7586                           
  7587                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 0;
  7588  0C67  0021               	movlb	1	; select bank1
  7589  0C68  1395               	bcf	21,7	;volatile
  7590                           
  7591                           ;mcc_generated_files/pin_manager.c: 92:     APFCON0 = 0x00;
  7592  0C69  0022               	movlb	2	; select bank2
  7593  0C6A  019D               	clrf	29	;volatile
  7594                           
  7595                           ;mcc_generated_files/pin_manager.c: 93:     APFCON1 = 0x00;
  7596  0C6B  019E               	clrf	30	;volatile
  7597                           
  7598                           ;mcc_generated_files/pin_manager.c: 99:     IOCAFbits.IOCAF2 = 0;
  7599  0C6C  0027               	movlb	7	; select bank7
  7600  0C6D  1113               	bcf	19,2	;volatile
  7601                           
  7602                           ;mcc_generated_files/pin_manager.c: 101:     IOCANbits.IOCAN2 = 0;
  7603  0C6E  1112               	bcf	18,2	;volatile
  7604                           
  7605                           ;mcc_generated_files/pin_manager.c: 103:     IOCAPbits.IOCAP2 = 1;
  7606  0C6F  1511               	bsf	17,2	;volatile
  7607                           
  7608                           ;mcc_generated_files/pin_manager.c: 108:     IOCAF2_SetInterruptHandler(IOCAF2_DefaultIn
      +                          terruptHandler);
  7609  0C70  3095               	movlw	low _IOCAF2_DefaultInterruptHandler
  7610  0C71  00F0               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
  7611  0C72  3008               	movlw	high _IOCAF2_DefaultInterruptHandler
  7612  0C73  00F1               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
  7613  0C74  3188  20C9         	fcall	_IOCAF2_SetInterruptHandler
  7614                           
  7615                           ;mcc_generated_files/pin_manager.c: 111:     INTCONbits.IOCIE = 1;
  7616  0C76  158B               	bsf	11,3	;volatile
  7617  0C77  0008               	return
  7618  0C78                     __end_of_PIN_MANAGER_Initialize:
  7619                           
  7620                           	psect	text46
  7621  08C9                     __ptext46:	
  7622 ;; *************** function _IOCAF2_SetInterruptHandler *****************
  7623 ;; Defined at:
  7624 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  7627 ;;		 -> IOCAF2_DefaultInterruptHandler(1), 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;		None
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  1    wreg      void 
  7632 ;; Registers used:
  7633 ;;		wreg
  7634 ;; Tracked objects:
  7635 ;;		On entry : B1F/7
  7636 ;;		On exit  : B1F/1
  7637 ;;		Unchanged: B00/0
  7638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7642 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7643 ;;Total ram usage:        2 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; Hardware stack levels required when called:    4
  7646 ;; This function calls:
  7647 ;;		Nothing
  7648 ;; This function is called by:
  7649 ;;		_PIN_MANAGER_Initialize
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           
  7654                           ;psect for function _IOCAF2_SetInterruptHandler
  7655  08C9                     _IOCAF2_SetInterruptHandler:
  7656                           
  7657                           ;mcc_generated_files/pin_manager.c: 143:     IOCAF2_InterruptHandler = InterruptHandler;
  7658                           
  7659                           ;incstack = 0
  7660                           ; Regs used in _IOCAF2_SetInterruptHandler: [wreg]
  7661  08C9  0871               	movf	IOCAF2_SetInterruptHandler@InterruptHandler+1,w
  7662  08CA  0021               	movlb	1	; select bank1
  7663  08CB  00EA               	movwf	(_IOCAF2_InterruptHandler+1)^(0+128)
  7664  08CC  0870               	movf	IOCAF2_SetInterruptHandler@InterruptHandler,w
  7665  08CD  00E9               	movwf	_IOCAF2_InterruptHandler^(0+128)
  7666  08CE  0008               	return
  7667  08CF                     __end_of_IOCAF2_SetInterruptHandler:
  7668                           
  7669                           	psect	text47
  7670  08C3                     __ptext47:	
  7671 ;; *************** function _OSCILLATOR_Initialize *****************
  7672 ;; Defined at:
  7673 ;;		line 62 in file "mcc_generated_files/mcc.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;		None
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;		None
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  1    wreg      void 
  7680 ;; Registers used:
  7681 ;;		wreg, status,2
  7682 ;; Tracked objects:
  7683 ;;		On entry : B1F/1
  7684 ;;		On exit  : B1F/2
  7685 ;;		Unchanged: B00/0
  7686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7691 ;;Total ram usage:        0 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:    4
  7694 ;; This function calls:
  7695 ;;		Nothing
  7696 ;; This function is called by:
  7697 ;;		_SYSTEM_Initialize
  7698 ;; This function uses a non-reentrant model
  7699 ;;
  7700                           
  7701                           
  7702                           ;psect for function _OSCILLATOR_Initialize
  7703  08C3                     _OSCILLATOR_Initialize:
  7704                           
  7705                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  7706                           
  7707                           ;incstack = 0
  7708                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7709  08C3  3070               	movlw	112
  7710  08C4  0099               	movwf	25	;volatile
  7711                           
  7712                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  7713  08C5  0198               	clrf	24	;volatile
  7714                           
  7715                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  7716  08C6  0022               	movlb	2	; select bank2
  7717  08C7  0196               	clrf	22	;volatile
  7718  08C8  0008               	return
  7719  08C9                     __end_of_OSCILLATOR_Initialize:
  7720                           
  7721                           	psect	text48
  7722  092E                     __ptext48:	
  7723 ;; *************** function _MTOUCH_Initialize *****************
  7724 ;; Defined at:
  7725 ;;		line 81 in file "mcc_generated_files/mtouch/mtouch.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;		None
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;		None
  7730 ;; Return value:  Size  Location     Type
  7731 ;;                  1    wreg      void 
  7732 ;; Registers used:
  7733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7734 ;; Tracked objects:
  7735 ;;		On entry : 1E/0
  7736 ;;		On exit  : 1F/1
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7743 ;;Total ram usage:        0 bytes
  7744 ;; Hardware stack levels used:    1
  7745 ;; Hardware stack levels required when called:    8
  7746 ;; This function calls:
  7747 ;;		_MTOUCH_Button_InitializeAll
  7748 ;;		_MTOUCH_Sensor_InitializeAll
  7749 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  7750 ;;		_MTOUCH_Sensor_Scan_Initialize
  7751 ;; This function is called by:
  7752 ;;		_MTOUCH_Service_Mainloop
  7753 ;;		_SYSTEM_Initialize
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           
  7758                           ;psect for function _MTOUCH_Initialize
  7759  092E                     _MTOUCH_Initialize:
  7760                           
  7761                           ;mcc_generated_files/mtouch/mtouch.c: 83:     MTOUCH_Sensor_InitializeAll();
  7762                           
  7763                           ;incstack = 0
  7764                           ; Regs used in _MTOUCH_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7765  092E  3189  216E  3189   	fcall	_MTOUCH_Sensor_InitializeAll
  7766                           
  7767                           ;mcc_generated_files/mtouch/mtouch.c: 84:     MTOUCH_Button_InitializeAll();
  7768  0931  318A  22AE  3189   	fcall	_MTOUCH_Button_InitializeAll
  7769                           
  7770                           ;mcc_generated_files/mtouch/mtouch.c: 85:     MTOUCH_Sensor_Sampled_ResetAll();
  7771  0934  3187  27ED  3189   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  7772                           
  7773                           ;mcc_generated_files/mtouch/mtouch.c: 86:     MTOUCH_Sensor_Scan_Initialize();
  7774  0937  3188  20AD         	fcall	_MTOUCH_Sensor_Scan_Initialize
  7775  0939  0008               	return
  7776  093A                     __end_of_MTOUCH_Initialize:
  7777                           
  7778                           	psect	text49
  7779  08AD                     __ptext49:	
  7780 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  7781 ;; Defined at:
  7782 ;;		line 172 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;		None
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;		None
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  1    wreg      void 
  7789 ;; Registers used:
  7790 ;;		wreg, status,2
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/1
  7793 ;;		On exit  : 1F/1
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;Total ram usage:        0 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; Hardware stack levels required when called:    4
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_Sensor_Acq_ExecutePacket
  7807 ;;		_MTOUCH_Initialize
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           
  7812                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
  7813  08AD                     _MTOUCH_Sensor_Scan_Initialize:
  7814                           
  7815                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 175:     ADCON0 = (uint8_t)0;
  7816                           
  7817                           ;incstack = 0
  7818                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2]
  7819  08AD  0021               	movlb	1	; select bank1
  7820  08AE  019D               	clrf	29	;volatile
  7821                           
  7822                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 176:     ADCON1 = (uint8_t)( 0x1<<7 | 0x1<<
      +                          4 | 0x0 );
  7823  08AF  3090               	movlw	144
  7824  08B0  009E               	movwf	30	;volatile
  7825  08B1  0008               	return
  7826  08B2                     __end_of_MTOUCH_Sensor_Scan_Initialize:
  7827                           
  7828                           	psect	text50
  7829  07ED                     __ptext50:	
  7830 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  7831 ;; Defined at:
  7832 ;;		line 547 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  sensor          1    2[COMMON] PTR struct .
  7837 ;;		 -> mtouch_sensor(18), 
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1    wreg      void 
  7840 ;; Registers used:
  7841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7849 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;Total ram usage:        2 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:    5
  7854 ;; This function calls:
  7855 ;;		_Sensor_Sampled_Reset
  7856 ;; This function is called by:
  7857 ;;		_MTOUCH_Initialize
  7858 ;;		_MTOUCH_Service_Mainloop
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           
  7863                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
  7864  07ED                     _MTOUCH_Sensor_Sampled_ResetAll:
  7865                           
  7866                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 549:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 550:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[(2u)-1];sensor++)
  7867                           
  7868                           ;incstack = 0
  7869                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  7870  07ED  30B0               	movlw	(low (_mtouch_sensor| 0))& (0+255)
  7871  07EE  00F1               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  7872  07EF  0871               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  7873  07F0  00F2               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
  7874  07F1                     L3:
  7875  07F1  30B9               	movlw	(low ((_mtouch_sensor| 0+9)))& (0+255)
  7876  07F2  00F1               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  7877  07F3  0872               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  7878  07F4  0271               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  7879  07F5  1C03               	btfss	3,0
  7880  07F6  0008               	return
  7881                           
  7882                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 551:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 552:         Sensor_Sampled_Reset(sensor);
  7883  07F7  0872               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  7884  07F8  3188  20E2  3187   	fcall	_Sensor_Sampled_Reset
  7885                           
  7886                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 553:     }
  7887  07FB  3009               	movlw	9
  7888  07FC  00F1               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  7889  07FD  0871               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  7890  07FE  07F2               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
  7891  07FF  2FF1               	goto	L3
  7892  0800                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:
  7893                           
  7894                           	psect	text51
  7895  096E                     __ptext51:	
  7896 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
  7897 ;; Defined at:
  7898 ;;		line 157 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;		None
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;  sensor          1    9[COMMON] enum E2661
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  1    wreg      void 
  7905 ;; Registers used:
  7906 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7907 ;; Tracked objects:
  7908 ;;		On entry : 1E/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7916 ;;Total ram usage:        2 bytes
  7917 ;; Hardware stack levels used:    1
  7918 ;; Hardware stack levels required when called:    7
  7919 ;; This function calls:
  7920 ;;		_MTOUCH_Sensor_Initialize
  7921 ;; This function is called by:
  7922 ;;		_MTOUCH_Initialize
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           
  7927                           ;psect for function _MTOUCH_Sensor_InitializeAll
  7928  096E                     _MTOUCH_Sensor_InitializeAll:
  7929                           
  7930                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 159:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 160:     for (sensor = 0; sensor < (2u); sens
      +                          or++)
  7931                           
  7932                           ;incstack = 0
  7933                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7934  096E  01F9               	clrf	MTOUCH_Sensor_InitializeAll@sensor
  7935  096F                     l3287:
  7936                           
  7937                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 161:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 162:         MTOUCH_Sensor_Initialize(sensor);
  7938  096F  0879               	movf	MTOUCH_Sensor_InitializeAll@sensor,w
  7939  0970  3189  21DD  3189   	fcall	_MTOUCH_Sensor_Initialize
  7940                           
  7941                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 163:     }
  7942  0973  3001               	movlw	1
  7943  0974  00F8               	movwf	??_MTOUCH_Sensor_InitializeAll
  7944  0975  0878               	movf	??_MTOUCH_Sensor_InitializeAll,w
  7945  0976  07F9               	addwf	MTOUCH_Sensor_InitializeAll@sensor,f
  7946  0977  3002               	movlw	2
  7947  0978  0279               	subwf	MTOUCH_Sensor_InitializeAll@sensor,w
  7948  0979  1803               	btfsc	3,0
  7949  097A  0008               	return
  7950  097B  296F               	goto	l3287
  7951  097C                     __end_of_MTOUCH_Sensor_InitializeAll:
  7952                           
  7953                           	psect	text52
  7954  09DD                     __ptext52:	
  7955 ;; *************** function _MTOUCH_Sensor_Initialize *****************
  7956 ;; Defined at:
  7957 ;;		line 143 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7958 ;; Parameters:    Size  Location     Type
  7959 ;;  sensor          1    wreg     enum E2661
  7960 ;; Auto vars:     Size  Location     Type
  7961 ;;  sensor          1    7[COMMON] enum E2661
  7962 ;; Return value:  Size  Location     Type
  7963 ;;                  1    wreg      enum E2664
  7964 ;; Registers used:
  7965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7966 ;; Tracked objects:
  7967 ;;		On entry : 0/0
  7968 ;;		On exit  : 0/0
  7969 ;;		Unchanged: 0/0
  7970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7974 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;Total ram usage:        2 bytes
  7976 ;; Hardware stack levels used:    1
  7977 ;; Hardware stack levels required when called:    6
  7978 ;; This function calls:
  7979 ;;		_MTOUCH_Sensor_Enable
  7980 ;;		_Sensor_Sampled_Reset
  7981 ;;		___bmul
  7982 ;; This function is called by:
  7983 ;;		_MTOUCH_Sensor_InitializeAll
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           
  7988                           ;psect for function _MTOUCH_Sensor_Initialize
  7989  09DD                     _MTOUCH_Sensor_Initialize:
  7990                           
  7991                           ;incstack = 0
  7992                           ; Regs used in _MTOUCH_Sensor_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  7993                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
  7994  09DD  00F7               	movwf	MTOUCH_Sensor_Initialize@sensor
  7995                           
  7996                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 143: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           144: {;mcc_generated_files/mtouch/mtouch_sensor.c: 145:     MTOUCH_Sensor_Enable(sensor
      +                          );
  7997  09DE  0877               	movf	MTOUCH_Sensor_Initialize@sensor,w
  7998  09DF  3189  21CC  3189   	fcall	_MTOUCH_Sensor_Enable
  7999                           
  8000                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 146:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
  8001  09E2  3009               	movlw	9
  8002  09E3  00F6               	movwf	??_MTOUCH_Sensor_Initialize
  8003  09E4  0876               	movf	??_MTOUCH_Sensor_Initialize,w
  8004  09E5  00F0               	movwf	___bmul@multiplicand
  8005  09E6  0877               	movf	MTOUCH_Sensor_Initialize@sensor,w
  8006  09E7  3189  21BB  3189   	fcall	___bmul
  8007  09EA  3EB0               	addlw	(low (_mtouch_sensor| 0))& (0+255)
  8008  09EB  3188  20E2         	fcall	_Sensor_Sampled_Reset
  8009  09ED  0008               	return
  8010  09EE                     __end_of_MTOUCH_Sensor_Initialize:
  8011                           
  8012                           	psect	text53
  8013  08E2                     __ptext53:	
  8014 ;; *************** function _Sensor_Sampled_Reset *****************
  8015 ;; Defined at:
  8016 ;;		line 564 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  sensor          1    wreg     PTR struct .
  8019 ;;		 -> mtouch_sensor(18), 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;  sensor          1    0[COMMON] PTR struct .
  8022 ;;		 -> mtouch_sensor(18), 
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  1    wreg      void 
  8025 ;; Registers used:
  8026 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/0
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;Total ram usage:        1 bytes
  8037 ;; Hardware stack levels used:    1
  8038 ;; Hardware stack levels required when called:    4
  8039 ;; This function calls:
  8040 ;;		Nothing
  8041 ;; This function is called by:
  8042 ;;		_MTOUCH_Sensor_Initialize
  8043 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  8044 ;; This function uses a non-reentrant model
  8045 ;;
  8046                           
  8047                           
  8048                           ;psect for function _Sensor_Sampled_Reset
  8049  08E2                     _Sensor_Sampled_Reset:
  8050                           
  8051                           ;incstack = 0
  8052                           ; Regs used in _Sensor_Sampled_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8053                           ;Sensor_Sampled_Reset@sensor stored from wreg
  8054  08E2  00F0               	movwf	Sensor_Sampled_Reset@sensor
  8055                           
  8056                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 564: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          565: {;mcc_generated_files/mtouch/mtouch_sensor.c: 566:     sensor->sampled = 0;
  8057  08E3  0870               	movf	Sensor_Sampled_Reset@sensor,w
  8058  08E4  3E08               	addlw	8
  8059  08E5  0086               	movwf	6
  8060  08E6  0187               	clrf	7
  8061  08E7  1081               	bcf	1,1
  8062  08E8  0008               	return
  8063  08E9                     __end_of_Sensor_Sampled_Reset:
  8064                           
  8065                           	psect	text54
  8066  09CC                     __ptext54:	
  8067 ;; *************** function _MTOUCH_Sensor_Enable *****************
  8068 ;; Defined at:
  8069 ;;		line 481 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;  sensor          1    wreg     enum E2661
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;  sensor          1    5[COMMON] enum E2661
  8074 ;; Return value:  Size  Location     Type
  8075 ;;                  1    wreg      void 
  8076 ;; Registers used:
  8077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8078 ;; Tracked objects:
  8079 ;;		On entry : 0/0
  8080 ;;		On exit  : 0/0
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8086 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8087 ;;Total ram usage:        2 bytes
  8088 ;; Hardware stack levels used:    1
  8089 ;; Hardware stack levels required when called:    5
  8090 ;; This function calls:
  8091 ;;		___bmul
  8092 ;; This function is called by:
  8093 ;;		_MTOUCH_Sensor_Initialize
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           
  8098                           ;psect for function _MTOUCH_Sensor_Enable
  8099  09CC                     _MTOUCH_Sensor_Enable:
  8100                           
  8101                           ;incstack = 0
  8102                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8103                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
  8104  09CC  00F5               	movwf	MTOUCH_Sensor_Enable@sensor
  8105                           
  8106                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 481: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 482: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 483:     if(sensor < (2u))
  8107  09CD  3002               	movlw	2
  8108  09CE  0275               	subwf	MTOUCH_Sensor_Enable@sensor,w
  8109  09CF  1803               	skipnc
  8110  09D0  0008               	return
  8111                           
  8112                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 484:         mtouch_sensor[sensor].enabled 
      +                          = 1;
  8113  09D1  3009               	movlw	9
  8114  09D2  00F4               	movwf	??_MTOUCH_Sensor_Enable
  8115  09D3  0874               	movf	??_MTOUCH_Sensor_Enable,w
  8116  09D4  00F0               	movwf	___bmul@multiplicand
  8117  09D5  0875               	movf	MTOUCH_Sensor_Enable@sensor,w
  8118  09D6  3189  21BB         	fcall	___bmul
  8119  09D8  3EB8               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
  8120  09D9  0086               	movwf	6
  8121  09DA  0187               	clrf	7
  8122  09DB  1401               	bsf	1,0
  8123  09DC  0008               	return
  8124  09DD                     __end_of_MTOUCH_Sensor_Enable:
  8125                           
  8126                           	psect	text55
  8127  09BB                     __ptext55:	
  8128 ;; *************** function ___bmul *****************
  8129 ;; Defined at:
  8130 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul8.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  multiplier      1    wreg     unsigned char 
  8133 ;;  multiplicand    1    0[COMMON] unsigned char 
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;  multiplier      1    3[COMMON] unsigned char 
  8136 ;;  product         1    2[COMMON] unsigned char 
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      unsigned char 
  8139 ;; Registers used:
  8140 ;;		wreg, status,2, status,0
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8146 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8149 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8150 ;;Total ram usage:        4 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:    4
  8153 ;; This function calls:
  8154 ;;		Nothing
  8155 ;; This function is called by:
  8156 ;;		_MTOUCH_Sensor_Initialize
  8157 ;;		_Sensor_Service
  8158 ;;		_Sensor_Acq_ExecuteScan
  8159 ;;		_MTOUCH_Sensor_RawSample_Get
  8160 ;;		_MTOUCH_Sensor_Enable
  8161 ;;		_MTOUCH_Sensor_wasSampled
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           
  8166                           ;psect for function ___bmul
  8167  09BB                     ___bmul:
  8168                           
  8169                           ;incstack = 0
  8170                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8171                           ;___bmul@multiplier stored from wreg
  8172  09BB  00F3               	movwf	___bmul@multiplier
  8173  09BC  01F2               	clrf	___bmul@product
  8174  09BD                     l2955:
  8175  09BD  1C73               	btfss	___bmul@multiplier,0
  8176  09BE  29C3               	goto	l2959
  8177  09BF  0870               	movf	___bmul@multiplicand,w
  8178  09C0  00F1               	movwf	??___bmul
  8179  09C1  0871               	movf	??___bmul,w
  8180  09C2  07F2               	addwf	___bmul@product,f
  8181  09C3                     l2959:
  8182  09C3  1003               	clrc
  8183  09C4  0DF0               	rlf	___bmul@multiplicand,f
  8184  09C5  1003               	clrc
  8185  09C6  0CF3               	rrf	___bmul@multiplier,f
  8186  09C7  0873               	movf	___bmul@multiplier,w
  8187  09C8  1D03               	btfss	3,2
  8188  09C9  29BD               	goto	l2955
  8189  09CA  0872               	movf	___bmul@product,w
  8190  09CB  0008               	return
  8191  09CC                     __end_of___bmul:
  8192                           
  8193                           	psect	text56
  8194  0AAE                     __ptext56:	
  8195 ;; *************** function _MTOUCH_Button_InitializeAll *****************
  8196 ;; Defined at:
  8197 ;;		line 163 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;		None
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;  button          1   11[COMMON] enum E2819
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  1    wreg      void 
  8204 ;; Registers used:
  8205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8214 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8215 ;;Total ram usage:        2 bytes
  8216 ;; Hardware stack levels used:    1
  8217 ;; Hardware stack levels required when called:    6
  8218 ;; This function calls:
  8219 ;;		_MTOUCH_Button_Initialize
  8220 ;;		_memcpy
  8221 ;; This function is called by:
  8222 ;;		_MTOUCH_Initialize
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           
  8227                           ;psect for function _MTOUCH_Button_InitializeAll
  8228  0AAE                     _MTOUCH_Button_InitializeAll:
  8229                           
  8230                           ;mcc_generated_files/mtouch/mtouch_button.c: 165:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 167:     memcpy(mtouch_button,mtouch_button_i
      +                          nit,sizeof(mtouch_button_init));
  8231                           
  8232                           ;incstack = 0
  8233                           ; Regs used in _MTOUCH_Button_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8234  0AAE  3000               	movlw	low (_mtouch_button_init| (0+32768))
  8235  0AAF  00F0               	movwf	memcpy@s1
  8236  0AB0  3090               	movlw	high (_mtouch_button_init| (0+32768))
  8237  0AB1  00F1               	movwf	memcpy@s1+1
  8238  0AB2  3020               	movlw	32
  8239  0AB3  00F2               	movwf	memcpy@n
  8240  0AB4  3000               	movlw	0
  8241  0AB5  00F3               	movwf	memcpy@n+1
  8242  0AB6  3020               	movlw	(low (_mtouch_button| (0+256)))& (0+255)
  8243  0AB7  318C  2478  318A   	fcall	_memcpy
  8244                           
  8245                           ;mcc_generated_files/mtouch/mtouch_button.c: 169:     for (button = 0; button < 2u; butt
      +                          on++)
  8246  0ABA  01FB               	clrf	MTOUCH_Button_InitializeAll@button
  8247  0ABB                     l3337:
  8248                           
  8249                           ;mcc_generated_files/mtouch/mtouch_button.c: 170:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 171:         MTOUCH_Button_Initialize(button);
  8250  0ABB  087B               	movf	MTOUCH_Button_InitializeAll@button,w
  8251  0ABC  318C  24D0  318A   	fcall	_MTOUCH_Button_Initialize
  8252                           
  8253                           ;mcc_generated_files/mtouch/mtouch_button.c: 172:     }
  8254  0ABF  3001               	movlw	1
  8255  0AC0  00FA               	movwf	??_MTOUCH_Button_InitializeAll
  8256  0AC1  087A               	movf	??_MTOUCH_Button_InitializeAll,w
  8257  0AC2  07FB               	addwf	MTOUCH_Button_InitializeAll@button,f
  8258  0AC3  3002               	movlw	2
  8259  0AC4  027B               	subwf	MTOUCH_Button_InitializeAll@button,w
  8260  0AC5  1803               	btfsc	3,0
  8261  0AC6  0008               	return
  8262  0AC7  2ABB               	goto	l3337
  8263  0AC8                     __end_of_MTOUCH_Button_InitializeAll:
  8264                           
  8265                           	psect	text57
  8266  0C78                     __ptext57:	
  8267 ;; *************** function _memcpy *****************
  8268 ;; Defined at:
  8269 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/memcpy.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  d1              1    wreg     PTR void 
  8272 ;;		 -> mtouch_button(32), 
  8273 ;;  s1              2    0[COMMON] PTR const void 
  8274 ;;		 -> mtouch_button_init(32), 
  8275 ;;  n               2    2[COMMON] unsigned int 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  d1              1    8[COMMON] PTR void 
  8278 ;;		 -> mtouch_button(32), 
  8279 ;;  s               2    5[COMMON] PTR const unsigned char 
  8280 ;;		 -> mtouch_button_init(32), 
  8281 ;;  d               1    9[COMMON] PTR unsigned char 
  8282 ;;		 -> mtouch_button(32), 
  8283 ;;  tmp             1    7[COMMON] unsigned char 
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      PTR void 
  8286 ;; Registers used:
  8287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8294 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8296 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8297 ;;Total ram usage:       10 bytes
  8298 ;; Hardware stack levels used:    1
  8299 ;; Hardware stack levels required when called:    4
  8300 ;; This function calls:
  8301 ;;		Nothing
  8302 ;; This function is called by:
  8303 ;;		_MTOUCH_Button_InitializeAll
  8304 ;; This function uses a non-reentrant model
  8305 ;;
  8306                           
  8307                           
  8308                           ;psect for function _memcpy
  8309  0C78                     _memcpy:
  8310                           
  8311                           ;incstack = 0
  8312                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  8313                           ;memcpy@d1 stored from wreg
  8314  0C78  00F8               	movwf	memcpy@d1
  8315  0C79  0871               	movf	memcpy@s1+1,w
  8316  0C7A  00F6               	movwf	memcpy@s+1
  8317  0C7B  0870               	movf	memcpy@s1,w
  8318  0C7C  00F5               	movwf	memcpy@s
  8319  0C7D  0878               	movf	memcpy@d1,w
  8320  0C7E  00F4               	movwf	??_memcpy
  8321  0C7F  0874               	movf	??_memcpy,w
  8322  0C80  00F9               	movwf	memcpy@d
  8323  0C81                     l3209:
  8324  0C81  3001               	movlw	1
  8325  0C82  02F2               	subwf	memcpy@n,f
  8326  0C83  3000               	movlw	0
  8327  0C84  3BF3               	subwfb	memcpy@n+1,f
  8328  0C85  0A72               	incf	memcpy@n,w
  8329  0C86  1903               	btfsc	3,2
  8330  0C87  0A73               	incf	memcpy@n+1,w
  8331  0C88  1903               	btfsc	3,2
  8332  0C89  0008               	return
  8333  0C8A  0875               	movf	memcpy@s,w
  8334  0C8B  0084               	movwf	4
  8335  0C8C  0876               	movf	memcpy@s+1,w
  8336  0C8D  0085               	movwf	5
  8337  0C8E  0800               	movf	0,w	;code access
  8338  0C8F  00F4               	movwf	??_memcpy
  8339  0C90  0874               	movf	??_memcpy,w
  8340  0C91  00F7               	movwf	memcpy@tmp
  8341  0C92  3001               	movlw	1
  8342  0C93  07F5               	addwf	memcpy@s,f
  8343  0C94  3000               	movlw	0
  8344  0C95  3DF6               	addwfc	memcpy@s+1,f
  8345  0C96  0877               	movf	memcpy@tmp,w
  8346  0C97  00F4               	movwf	??_memcpy
  8347  0C98  0879               	movf	memcpy@d,w
  8348  0C99  0086               	movwf	6
  8349  0C9A  3001               	movlw	1	; select bank2/3
  8350  0C9B  0087               	movwf	7
  8351  0C9C  0874               	movf	??_memcpy,w
  8352  0C9D  0081               	movwf	1
  8353  0C9E  3001               	movlw	1
  8354  0C9F  00F4               	movwf	??_memcpy
  8355  0CA0  0874               	movf	??_memcpy,w
  8356  0CA1  07F9               	addwf	memcpy@d,f
  8357  0CA2  2C81               	goto	l3209
  8358  0CA3                     __end_of_memcpy:
  8359                           
  8360                           	psect	text58
  8361  0CD0                     __ptext58:	
  8362 ;; *************** function _MTOUCH_Button_Initialize *****************
  8363 ;; Defined at:
  8364 ;;		line 151 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;  name            1    wreg     enum E2819
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;  name            1    2[COMMON] enum E2819
  8369 ;;  button          1    3[COMMON] PTR struct .
  8370 ;;		 -> mtouch_button(32), 
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1    wreg      void 
  8373 ;; Registers used:
  8374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8381 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8383 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;Total ram usage:        4 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:    5
  8387 ;; This function calls:
  8388 ;;		_MTOUCH_Sensor_Calibrate
  8389 ;; This function is called by:
  8390 ;;		_MTOUCH_Button_InitializeAll
  8391 ;;		_Button_Service
  8392 ;;		_Button_State_NotPressed
  8393 ;;		_Button_State_Pressed
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           
  8398                           ;psect for function _MTOUCH_Button_Initialize
  8399  0CD0                     _MTOUCH_Button_Initialize:
  8400                           
  8401                           ;incstack = 0
  8402                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  8403                           ;MTOUCH_Button_Initialize@name stored from wreg
  8404  0CD0  00F2               	movwf	MTOUCH_Button_Initialize@name
  8405                           
  8406                           ;mcc_generated_files/mtouch/mtouch_button.c: 151: void MTOUCH_Button_Initialize(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 152: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 153:     mtouch_button_t* button = &mtouch_button[name];
  8407  0CD1  0872               	movf	MTOUCH_Button_Initialize@name,w
  8408  0CD2  00F0               	movwf	??_MTOUCH_Button_Initialize
  8409  0CD3  3003               	movlw	3
  8410  0CD4                     u2055:
  8411  0CD4  35F0               	lslf	??_MTOUCH_Button_Initialize,f
  8412  0CD5  3EFF               	addlw	-1
  8413  0CD6  1D03               	skipz
  8414  0CD7  2CD4               	goto	u2055
  8415  0CD8  3570               	lslf	??_MTOUCH_Button_Initialize,w
  8416  0CD9  3E20               	addlw	(low (_mtouch_button| (0+256)))& (0+255)
  8417  0CDA  00F1               	movwf	??_MTOUCH_Button_Initialize+1
  8418  0CDB  0871               	movf	??_MTOUCH_Button_Initialize+1,w
  8419  0CDC  00F3               	movwf	MTOUCH_Button_Initialize@button
  8420                           
  8421                           ;mcc_generated_files/mtouch/mtouch_button.c: 155:     button->state = MTOUCH_BUTTON_STAT
      +                          E_initializing;
  8422  0CDD  0873               	movf	MTOUCH_Button_Initialize@button,w
  8423  0CDE  3E02               	addlw	2
  8424  0CDF  0086               	movwf	6
  8425  0CE0  3001               	movlw	1	; select bank2/3
  8426  0CE1  0087               	movwf	7
  8427  0CE2  0181               	clrf	1
  8428                           
  8429                           ;mcc_generated_files/mtouch/mtouch_button.c: 156:     button->baseline = (mtouch_button_
      +                          baseline_t)0;
  8430  0CE3  0873               	movf	MTOUCH_Button_Initialize@button,w
  8431  0CE4  3E05               	addlw	5
  8432  0CE5  0086               	movwf	6
  8433  0CE6  3001               	movlw	1	; select bank2/3
  8434  0CE7  0087               	movwf	7
  8435  0CE8  3000               	movlw	0
  8436  0CE9  3FC0               	movwi [0]fsr1
  8437  0CEA  3000               	movlw	0
  8438  0CEB  3FC1               	movwi [1]fsr1
  8439  0CEC  3FC2               	movwi [2]fsr1
  8440  0CED  3FC3               	movwi [3]fsr1
  8441                           
  8442                           ;mcc_generated_files/mtouch/mtouch_button.c: 157:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
  8443  0CEE  0873               	movf	MTOUCH_Button_Initialize@button,w
  8444  0CEF  3E0A               	addlw	10
  8445  0CF0  0086               	movwf	6
  8446  0CF1  3001               	movlw	1	; select bank2/3
  8447  0CF2  0087               	movwf	7
  8448  0CF3  3000               	movlw	0
  8449  0CF4  3FC0               	movwi [0]fsr1
  8450  0CF5  3FC1               	movwi [1]fsr1
  8451                           
  8452                           ;mcc_generated_files/mtouch/mtouch_button.c: 158:     button->baseline_count = (mtouch_b
      +                          utton_baselinecounter_t)0;
  8453  0CF6  0873               	movf	MTOUCH_Button_Initialize@button,w
  8454  0CF7  3E0C               	addlw	12
  8455  0CF8  0086               	movwf	6
  8456  0CF9  3001               	movlw	1	; select bank2/3
  8457  0CFA  0087               	movwf	7
  8458  0CFB  3000               	movlw	0
  8459  0CFC  3FC0               	movwi [0]fsr1
  8460  0CFD  3FC1               	movwi [1]fsr1
  8461                           
  8462                           ;mcc_generated_files/mtouch/mtouch_button.c: 160:     MTOUCH_Sensor_Calibrate(button->se
      +                          nsor);
  8463  0CFE  0A73               	incf	MTOUCH_Button_Initialize@button,w
  8464  0CFF  0086               	movwf	6
  8465  0D00  3001               	movlw	1	; select bank2/3
  8466  0D01  0087               	movwf	7
  8467  0D02  0801               	movf	1,w
  8468  0D03  3188  2097         	fcall	_MTOUCH_Sensor_Calibrate
  8469  0D05  0008               	return
  8470  0D06                     __end_of_MTOUCH_Button_Initialize:
  8471                           
  8472                           	psect	text59
  8473  0897                     __ptext59:	
  8474 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
  8475 ;; Defined at:
  8476 ;;		line 535 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;  sensor          1    wreg     enum E2661
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;  sensor          1    0[COMMON] enum E2661
  8481 ;; Return value:  Size  Location     Type
  8482 ;;                  1    wreg      void 
  8483 ;; Registers used:
  8484 ;;		wreg
  8485 ;; Tracked objects:
  8486 ;;		On entry : 0/0
  8487 ;;		On exit  : 0/0
  8488 ;;		Unchanged: 0/0
  8489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8494 ;;Total ram usage:        0 bytes
  8495 ;; Hardware stack levels used:    1
  8496 ;; Hardware stack levels required when called:    4
  8497 ;; This function calls:
  8498 ;;		Nothing
  8499 ;; This function is called by:
  8500 ;;		_MTOUCH_Button_Initialize
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           
  8505                           ;psect for function _MTOUCH_Sensor_Calibrate
  8506  0897                     _MTOUCH_Sensor_Calibrate:
  8507                           
  8508                           ;incstack = 0
  8509                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg]
  8510  0897  0008               	return
  8511  0898                     __end_of_MTOUCH_Sensor_Calibrate:
  8512                           
  8513                           	psect	text60
  8514  0B20                     __ptext60:	
  8515 ;; *************** function _EUSART_Initialize *****************
  8516 ;; Defined at:
  8517 ;;		line 66 in file "mcc_generated_files/eusart.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;		None
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;		None
  8522 ;; Return value:  Size  Location     Type
  8523 ;;                  1    wreg      void 
  8524 ;; Registers used:
  8525 ;;		wreg, status,2, status,0, pclath, cstack
  8526 ;; Tracked objects:
  8527 ;;		On entry : B1F/0
  8528 ;;		On exit  : 1F/1
  8529 ;;		Unchanged: 0/0
  8530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8535 ;;Total ram usage:        0 bytes
  8536 ;; Hardware stack levels used:    1
  8537 ;; Hardware stack levels required when called:    5
  8538 ;; This function calls:
  8539 ;;		_EUSART_SetErrorHandler
  8540 ;;		_EUSART_SetFramingErrorHandler
  8541 ;;		_EUSART_SetOverrunErrorHandler
  8542 ;; This function is called by:
  8543 ;;		_SYSTEM_Initialize
  8544 ;; This function uses a non-reentrant model
  8545 ;;
  8546                           
  8547                           
  8548                           ;psect for function _EUSART_Initialize
  8549  0B20                     _EUSART_Initialize:
  8550                           
  8551                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  8552                           
  8553                           ;incstack = 0
  8554                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8555  0B20  3008               	movlw	8
  8556  0B21  0023               	movlb	3	; select bank3
  8557  0B22  009F               	movwf	31	;volatile
  8558                           
  8559                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  8560  0B23  3090               	movlw	144
  8561  0B24  009D               	movwf	29	;volatile
  8562                           
  8563                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  8564  0B25  3024               	movlw	36
  8565  0B26  009E               	movwf	30	;volatile
  8566                           
  8567                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xCF;
  8568  0B27  30CF               	movlw	207
  8569  0B28  009B               	movwf	27	;volatile
  8570                           
  8571                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  8572  0B29  019C               	clrf	28	;volatile
  8573                           
  8574                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8575  0B2A  3000               	movlw	0
  8576  0B2B  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8577  0B2C  3000               	movlw	0
  8578  0B2D  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8579  0B2E  3188  20BD  318B   	fcall	_EUSART_SetFramingErrorHandler
  8580                           
  8581                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8582  0B31  3000               	movlw	0
  8583  0B32  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8584  0B33  3000               	movlw	0
  8585  0B34  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8586  0B35  3188  20A8  318B   	fcall	_EUSART_SetOverrunErrorHandler
  8587                           
  8588                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8589  0B38  3000               	movlw	0
  8590  0B39  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  8591  0B3A  3000               	movlw	0
  8592  0B3B  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8593  0B3C  3188  20A3         	fcall	_EUSART_SetErrorHandler
  8594                           
  8595                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  8596  0B3E  01E0               	clrf	_eusartRxLastError^(0+128)	;volatile
  8597  0B3F  0008               	return
  8598  0B40                     __end_of_EUSART_Initialize:
  8599                           
  8600                           	psect	text61
  8601  08A8                     __ptext61:	
  8602 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8603 ;; Defined at:
  8604 ;;		line 161 in file "mcc_generated_files/eusart.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8607 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;		None
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  1    wreg      void 
  8612 ;; Registers used:
  8613 ;;		wreg
  8614 ;; Tracked objects:
  8615 ;;		On entry : 1F/1
  8616 ;;		On exit  : 1F/1
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8623 ;;Total ram usage:        2 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; Hardware stack levels required when called:    4
  8626 ;; This function calls:
  8627 ;;		Nothing
  8628 ;; This function is called by:
  8629 ;;		_EUSART_Initialize
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           
  8634                           ;psect for function _EUSART_SetOverrunErrorHandler
  8635  08A8                     _EUSART_SetOverrunErrorHandler:
  8636                           
  8637                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  8638                           
  8639                           ;incstack = 0
  8640                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8641  08A8  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8642  08A9  00E6               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  8643  08AA  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8644  08AB  00E5               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  8645  08AC  0008               	return
  8646  08AD                     __end_of_EUSART_SetOverrunErrorHandler:
  8647                           
  8648                           	psect	text62
  8649  08BD                     __ptext62:	
  8650 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8651 ;; Defined at:
  8652 ;;		line 157 in file "mcc_generated_files/eusart.c"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8655 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;		None
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  1    wreg      void 
  8660 ;; Registers used:
  8661 ;;		wreg
  8662 ;; Tracked objects:
  8663 ;;		On entry : 1F/3
  8664 ;;		On exit  : 1F/1
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8671 ;;Total ram usage:        2 bytes
  8672 ;; Hardware stack levels used:    1
  8673 ;; Hardware stack levels required when called:    4
  8674 ;; This function calls:
  8675 ;;		Nothing
  8676 ;; This function is called by:
  8677 ;;		_EUSART_Initialize
  8678 ;; This function uses a non-reentrant model
  8679 ;;
  8680                           
  8681                           
  8682                           ;psect for function _EUSART_SetFramingErrorHandler
  8683  08BD                     _EUSART_SetFramingErrorHandler:
  8684                           
  8685                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  8686                           
  8687                           ;incstack = 0
  8688                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8689  08BD  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8690  08BE  0021               	movlb	1	; select bank1
  8691  08BF  00E8               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  8692  08C0  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8693  08C1  00E7               	movwf	_EUSART_FramingErrorHandler^(0+128)
  8694  08C2  0008               	return
  8695  08C3                     __end_of_EUSART_SetFramingErrorHandler:
  8696                           
  8697                           	psect	text63
  8698  08A3                     __ptext63:	
  8699 ;; *************** function _EUSART_SetErrorHandler *****************
  8700 ;; Defined at:
  8701 ;;		line 165 in file "mcc_generated_files/eusart.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8704 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;		None
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  1    wreg      void 
  8709 ;; Registers used:
  8710 ;;		wreg
  8711 ;; Tracked objects:
  8712 ;;		On entry : 1F/1
  8713 ;;		On exit  : 1F/1
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8720 ;;Total ram usage:        2 bytes
  8721 ;; Hardware stack levels used:    1
  8722 ;; Hardware stack levels required when called:    4
  8723 ;; This function calls:
  8724 ;;		Nothing
  8725 ;; This function is called by:
  8726 ;;		_EUSART_Initialize
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           
  8731                           ;psect for function _EUSART_SetErrorHandler
  8732  08A3                     _EUSART_SetErrorHandler:
  8733                           
  8734                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  8735                           
  8736                           ;incstack = 0
  8737                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8738  08A3  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  8739  08A4  00E4               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  8740  08A5  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  8741  08A6  00E3               	movwf	_EUSART_ErrorHandler^(0+128)
  8742  08A7  0008               	return
  8743  08A8                     __end_of_EUSART_SetErrorHandler:
  8744                           
  8745                           	psect	text64
  8746  08DB                     __ptext64:	
  8747 ;; *************** function _ADC_Initialize *****************
  8748 ;; Defined at:
  8749 ;;		line 67 in file "mcc_generated_files/adc.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;		None
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;		None
  8754 ;; Return value:  Size  Location     Type
  8755 ;;                  1    wreg      void 
  8756 ;; Registers used:
  8757 ;;		wreg, status,2
  8758 ;; Tracked objects:
  8759 ;;		On entry : B1F/1
  8760 ;;		On exit  : B1F/1
  8761 ;;		Unchanged: B00/0
  8762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8767 ;;Total ram usage:        0 bytes
  8768 ;; Hardware stack levels used:    1
  8769 ;; Hardware stack levels required when called:    4
  8770 ;; This function calls:
  8771 ;;		Nothing
  8772 ;; This function is called by:
  8773 ;;		_SYSTEM_Initialize
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777                           
  8778                           ;psect for function _ADC_Initialize
  8779  08DB                     _ADC_Initialize:
  8780                           
  8781                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x10;
  8782                           
  8783                           ;incstack = 0
  8784                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  8785  08DB  3010               	movlw	16
  8786  08DC  009E               	movwf	30	;volatile
  8787                           
  8788                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  8789  08DD  019B               	clrf	27	;volatile
  8790                           
  8791                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  8792  08DE  019C               	clrf	28	;volatile
  8793                           
  8794                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  8795  08DF  3001               	movlw	1
  8796  08E0  009D               	movwf	29	;volatile
  8797  08E1  0008               	return
  8798  08E2                     __end_of_ADC_Initialize:
  8799                           
  8800                           	psect	text65
  8801  0C05                     __ptext65:	
  8802 ;; *************** function _Init_Function *****************
  8803 ;; Defined at:
  8804 ;;		line 95 in file "main.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;		None
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;		None
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  1    wreg      void 
  8811 ;; Registers used:
  8812 ;;		wreg, status,2, status,0, pclath, cstack
  8813 ;; Tracked objects:
  8814 ;;		On entry : 1F/1
  8815 ;;		On exit  : 1F/1
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8822 ;;Total ram usage:        0 bytes
  8823 ;; Hardware stack levels used:    1
  8824 ;; Hardware stack levels required when called:    7
  8825 ;; This function calls:
  8826 ;;		_ADC_SelectChannel
  8827 ;;		_CalcRequiredDelayForTrigTRIAC
  8828 ;;		_StartStop_AlarmLED
  8829 ;;		_StartStop_Buzzer
  8830 ;;		_StartStop_Fan
  8831 ;; This function is called by:
  8832 ;;		_main
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           
  8837                           ;psect for function _Init_Function
  8838  0C05                     _Init_Function:
  8839                           
  8840                           ;main.c: 97:     StartStop_AlarmLED(0);
  8841                           
  8842                           ;incstack = 0
  8843                           ; Regs used in _Init_Function: [wreg+status,2+status,0+pclath+cstack]
  8844  0C05  3000               	movlw	0
  8845  0C06  3189  210E  318C   	fcall	_StartStop_AlarmLED
  8846                           
  8847                           ;main.c: 98:     StartStop_Fan(0);
  8848  0C09  3000               	movlw	0
  8849  0C0A  3189  2106  318C   	fcall	_StartStop_Fan
  8850                           
  8851                           ;main.c: 99:     StartStop_Buzzer(0);
  8852  0C0D  3000               	movlw	0
  8853  0C0E  3188  20FE  318C   	fcall	_StartStop_Buzzer
  8854  0C11  128E               	bcf	14,5	;volatile
  8855                           
  8856                           ;main.c: 102:     ADC_SelectChannel(channel_AN10);
  8857  0C12  300A               	movlw	10
  8858  0C13  3189  2147  318C   	fcall	_ADC_SelectChannel
  8859                           
  8860                           ;main.c: 104:     required_delay_for_dim_ms_g = CalcRequiredDelayForTrigTRIAC(25);
  8861  0C16  3041               	movlw	65
  8862  0C17  0020               	movlb	0	; select bank0
  8863  0C18  00DD               	movwf	CalcRequiredDelayForTrigTRIAC@dim_percentage+3
  8864  0C19  30C8               	movlw	200
  8865  0C1A  00DC               	movwf	CalcRequiredDelayForTrigTRIAC@dim_percentage+2
  8866  0C1B  3000               	movlw	0
  8867  0C1C  00DB               	movwf	CalcRequiredDelayForTrigTRIAC@dim_percentage+1
  8868  0C1D  3000               	movlw	0
  8869  0C1E  00DA               	movwf	CalcRequiredDelayForTrigTRIAC@dim_percentage
  8870  0C1F  3187  2773         	fcall	_CalcRequiredDelayForTrigTRIAC
  8871  0C21  085B               	movf	?_CalcRequiredDelayForTrigTRIAC+1,w
  8872  0C22  0021               	movlb	1	; select bank1
  8873  0C23  00DB               	movwf	(_required_delay_for_dim_ms_g+1)^(0+128)
  8874  0C24  0020               	movlb	0	; select bank0
  8875  0C25  085A               	movf	?_CalcRequiredDelayForTrigTRIAC,w
  8876  0C26  0021               	movlb	1	; select bank1
  8877  0C27  00DA               	movwf	_required_delay_for_dim_ms_g^(0+128)
  8878  0C28  0008               	return
  8879  0C29                     __end_of_Init_Function:
  8880                           
  8881                           	psect	text66
  8882  0906                     __ptext66:	
  8883 ;; *************** function _StartStop_Fan *****************
  8884 ;; Defined at:
  8885 ;;		line 247 in file "main.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  OnOff           1    wreg     _Bool 
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;  OnOff           1    0[COMMON] _Bool 
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      void 
  8892 ;; Registers used:
  8893 ;;		wreg, status,2, status,0
  8894 ;; Tracked objects:
  8895 ;;		On entry : 1F/2
  8896 ;;		On exit  : 1F/2
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;Total ram usage:        1 bytes
  8904 ;; Hardware stack levels used:    1
  8905 ;; Hardware stack levels required when called:    4
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		_Init_Function
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           
  8914                           ;psect for function _StartStop_Fan
  8915  0906                     _StartStop_Fan:
  8916                           
  8917                           ;incstack = 0
  8918                           ; Regs used in _StartStop_Fan: [wreg+status,2+status,0]
  8919                           ;StartStop_Fan@OnOff stored from wreg
  8920  0906  00F0               	movwf	StartStop_Fan@OnOff
  8921                           
  8922                           ;main.c: 249:     if (1 == OnOff){
  8923  0907  0370               	decf	StartStop_Fan@OnOff,w
  8924  0908  1D03               	btfss	3,2
  8925  0909  290C               	goto	l929
  8926                           
  8927                           ;main.c: 251:         do { LATCbits.LATC3 = 1; } while(0);
  8928  090A  158E               	bsf	14,3	;volatile
  8929  090B  0008               	return
  8930  090C                     l929:	
  8931                           ;main.c: 255:         do { LATCbits.LATC3 = 0; } while(0);
  8932                           
  8933  090C  118E               	bcf	14,3	;volatile
  8934  090D  0008               	return
  8935  090E                     __end_of_StartStop_Fan:
  8936                           
  8937                           	psect	text67
  8938  08FE                     __ptext67:	
  8939 ;; *************** function _StartStop_Buzzer *****************
  8940 ;; Defined at:
  8941 ;;		line 261 in file "main.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;  OnOff           1    wreg     _Bool 
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;  OnOff           1    0[COMMON] _Bool 
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      void 
  8948 ;; Registers used:
  8949 ;;		wreg, status,2, status,0
  8950 ;; Tracked objects:
  8951 ;;		On entry : 1F/2
  8952 ;;		On exit  : 1F/2
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;Total ram usage:        1 bytes
  8960 ;; Hardware stack levels used:    1
  8961 ;; Hardware stack levels required when called:    4
  8962 ;; This function calls:
  8963 ;;		Nothing
  8964 ;; This function is called by:
  8965 ;;		_Init_Function
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           
  8970                           ;psect for function _StartStop_Buzzer
  8971  08FE                     _StartStop_Buzzer:
  8972                           
  8973                           ;incstack = 0
  8974                           ; Regs used in _StartStop_Buzzer: [wreg+status,2+status,0]
  8975                           ;StartStop_Buzzer@OnOff stored from wreg
  8976  08FE  00F0               	movwf	StartStop_Buzzer@OnOff
  8977                           
  8978                           ;main.c: 263:     if (1 == OnOff){
  8979  08FF  0370               	decf	StartStop_Buzzer@OnOff,w
  8980  0900  1D03               	btfss	3,2
  8981  0901  2904               	goto	l938
  8982                           
  8983                           ;main.c: 265:         do { LATCbits.LATC4 = 1; } while(0);
  8984  0902  160E               	bsf	14,4	;volatile
  8985  0903  0008               	return
  8986  0904                     l938:	
  8987                           ;main.c: 269:         do { LATCbits.LATC4 = 0; } while(0);
  8988                           
  8989  0904  120E               	bcf	14,4	;volatile
  8990  0905  0008               	return
  8991  0906                     __end_of_StartStop_Buzzer:
  8992                           
  8993                           	psect	text68
  8994  090E                     __ptext68:	
  8995 ;; *************** function _StartStop_AlarmLED *****************
  8996 ;; Defined at:
  8997 ;;		line 233 in file "main.c"
  8998 ;; Parameters:    Size  Location     Type
  8999 ;;  OnOff           1    wreg     _Bool 
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;  OnOff           1    0[COMMON] _Bool 
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  1    wreg      void 
  9004 ;; Registers used:
  9005 ;;		wreg, status,2, status,0
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/1
  9008 ;;		On exit  : 1F/2
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;Total ram usage:        1 bytes
  9016 ;; Hardware stack levels used:    1
  9017 ;; Hardware stack levels required when called:    4
  9018 ;; This function calls:
  9019 ;;		Nothing
  9020 ;; This function is called by:
  9021 ;;		_main
  9022 ;;		_Init_Function
  9023 ;;		_StopTouchDetection
  9024 ;; This function uses a non-reentrant model
  9025 ;;
  9026                           
  9027                           
  9028                           ;psect for function _StartStop_AlarmLED
  9029  090E                     _StartStop_AlarmLED:
  9030                           
  9031                           ;incstack = 0
  9032                           ; Regs used in _StartStop_AlarmLED: [wreg+status,2+status,0]
  9033                           ;StartStop_AlarmLED@OnOff stored from wreg
  9034  090E  00F0               	movwf	StartStop_AlarmLED@OnOff
  9035                           
  9036                           ;main.c: 235:     if (1 == OnOff){
  9037  090F  0370               	decf	StartStop_AlarmLED@OnOff,w
  9038  0910  1D03               	btfss	3,2
  9039  0911  2915               	goto	l920
  9040                           
  9041                           ;main.c: 237:         do { LATCbits.LATC2 = 1; } while(0);
  9042  0912  0022               	movlb	2	; select bank2
  9043  0913  150E               	bsf	14,2	;volatile
  9044  0914  0008               	return
  9045  0915                     l920:	
  9046                           ;main.c: 241:         do { LATCbits.LATC2 = 0; } while(0);
  9047                           
  9048  0915  0022               	movlb	2	; select bank2
  9049  0916  110E               	bcf	14,2	;volatile
  9050  0917  0008               	return
  9051  0918                     __end_of_StartStop_AlarmLED:
  9052                           
  9053                           	psect	text69
  9054  0773                     __ptext69:	
  9055 ;; *************** function _CalcRequiredDelayForTrigTRIAC *****************
  9056 ;; Defined at:
  9057 ;;		line 312 in file "main.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  dim_percenta    4   58[BANK0 ] float 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;  delay           4   62[BANK0 ] float 
  9062 ;;  ret             2   66[BANK0 ] unsigned short 
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  2   58[BANK0 ] unsigned short 
  9065 ;; Registers used:
  9066 ;;		wreg, status,2, status,0, pclath, cstack
  9067 ;; Tracked objects:
  9068 ;;		On entry : 1F/0
  9069 ;;		On exit  : 1F/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9072 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;Total ram usage:       10 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; Hardware stack levels required when called:    6
  9079 ;; This function calls:
  9080 ;;		___fldiv
  9081 ;;		___flmul
  9082 ;;		___flsub
  9083 ;;		___fltol
  9084 ;; This function is called by:
  9085 ;;		_Init_Function
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           
  9090                           ;psect for function _CalcRequiredDelayForTrigTRIAC
  9091  0773                     _CalcRequiredDelayForTrigTRIAC:
  9092                           
  9093                           ;main.c: 314:     float delay;;main.c: 315:     uint16_t ret;;main.c: 317:     delay = H
      +                          alfCycleACDuration_const - (5.0 * dim_percentage / 50.0);
  9094                           
  9095                           ;incstack = 0
  9096                           ; Regs used in _CalcRequiredDelayForTrigTRIAC: [wreg+status,2+status,0+pclath+cstack]
  9097  0773  3042               	movlw	66
  9098  0774  00B8               	movwf	___fldiv@a+3
  9099  0775  3048               	movlw	72
  9100  0776  00B7               	movwf	___fldiv@a+2
  9101  0777  3000               	movlw	0
  9102  0778  00B6               	movwf	___fldiv@a+1
  9103  0779  3000               	movlw	0
  9104  077A  00B5               	movwf	___fldiv@a
  9105  077B  3040               	movlw	64
  9106  077C  00A3               	movwf	___flmul@b+3
  9107  077D  30A0               	movlw	160
  9108  077E  00A2               	movwf	___flmul@b+2
  9109  077F  3000               	movlw	0
  9110  0780  00A1               	movwf	___flmul@b+1
  9111  0781  3000               	movlw	0
  9112  0782  00A0               	movwf	___flmul@b
  9113  0783  085D               	movf	CalcRequiredDelayForTrigTRIAC@dim_percentage+3,w
  9114  0784  00A7               	movwf	___flmul@a+3
  9115  0785  085C               	movf	CalcRequiredDelayForTrigTRIAC@dim_percentage+2,w
  9116  0786  00A6               	movwf	___flmul@a+2
  9117  0787  085B               	movf	CalcRequiredDelayForTrigTRIAC@dim_percentage+1,w
  9118  0788  00A5               	movwf	___flmul@a+1
  9119  0789  085A               	movf	CalcRequiredDelayForTrigTRIAC@dim_percentage,w
  9120  078A  00A4               	movwf	___flmul@a
  9121  078B  3180  2042  3187   	fcall	___flmul
  9122  078E  0823               	movf	?___flmul+3,w
  9123  078F  00BC               	movwf	___fldiv@b+3
  9124  0790  0822               	movf	?___flmul+2,w
  9125  0791  00BB               	movwf	___fldiv@b+2
  9126  0792  0821               	movf	?___flmul+1,w
  9127  0793  00BA               	movwf	___fldiv@b+1
  9128  0794  0820               	movf	?___flmul,w
  9129  0795  00B9               	movwf	___fldiv@b
  9130  0796  3184  2442  3187   	fcall	___fldiv
  9131  0799  0838               	movf	?___fldiv+3,w
  9132  079A  00D2               	movwf	___flsub@a+3
  9133  079B  0837               	movf	?___fldiv+2,w
  9134  079C  00D1               	movwf	___flsub@a+2
  9135  079D  0836               	movf	?___fldiv+1,w
  9136  079E  00D0               	movwf	___flsub@a+1
  9137  079F  0835               	movf	?___fldiv,w
  9138  07A0  00CF               	movwf	___flsub@a
  9139  07A1  3041               	movlw	65
  9140  07A2  00D6               	movwf	___flsub@b+3
  9141  07A3  3020               	movlw	32
  9142  07A4  00D5               	movwf	___flsub@b+2
  9143  07A5  3000               	movlw	0
  9144  07A6  00D4               	movwf	___flsub@b+1
  9145  07A7  3000               	movlw	0
  9146  07A8  00D3               	movwf	___flsub@b
  9147  07A9  318A  22E3  3187   	fcall	___flsub
  9148  07AC  0852               	movf	?___flsub+3,w
  9149  07AD  00E1               	movwf	CalcRequiredDelayForTrigTRIAC@delay+3
  9150  07AE  0851               	movf	?___flsub+2,w
  9151  07AF  00E0               	movwf	CalcRequiredDelayForTrigTRIAC@delay+2
  9152  07B0  0850               	movf	?___flsub+1,w
  9153  07B1  00DF               	movwf	CalcRequiredDelayForTrigTRIAC@delay+1
  9154  07B2  084F               	movf	?___flsub,w
  9155  07B3  00DE               	movwf	CalcRequiredDelayForTrigTRIAC@delay
  9156                           
  9157                           ;main.c: 318:     ret = (delay * 1000) / TMR2_Period_const;
  9158  07B4  0861               	movf	CalcRequiredDelayForTrigTRIAC@delay+3,w
  9159  07B5  00A7               	movwf	___flmul@a+3
  9160  07B6  0860               	movf	CalcRequiredDelayForTrigTRIAC@delay+2,w
  9161  07B7  00A6               	movwf	___flmul@a+2
  9162  07B8  085F               	movf	CalcRequiredDelayForTrigTRIAC@delay+1,w
  9163  07B9  00A5               	movwf	___flmul@a+1
  9164  07BA  085E               	movf	CalcRequiredDelayForTrigTRIAC@delay,w
  9165  07BB  00A4               	movwf	___flmul@a
  9166  07BC  3044               	movlw	68
  9167  07BD  00A3               	movwf	___flmul@b+3
  9168  07BE  307A               	movlw	122
  9169  07BF  00A2               	movwf	___flmul@b+2
  9170  07C0  3000               	movlw	0
  9171  07C1  00A1               	movwf	___flmul@b+1
  9172  07C2  3000               	movlw	0
  9173  07C3  00A0               	movwf	___flmul@b
  9174  07C4  3180  2042  3187   	fcall	___flmul
  9175  07C7  0823               	movf	?___flmul+3,w
  9176  07C8  00BC               	movwf	___fldiv@b+3
  9177  07C9  0822               	movf	?___flmul+2,w
  9178  07CA  00BB               	movwf	___fldiv@b+2
  9179  07CB  0821               	movf	?___flmul+1,w
  9180  07CC  00BA               	movwf	___fldiv@b+1
  9181  07CD  0820               	movf	?___flmul,w
  9182  07CE  00B9               	movwf	___fldiv@b
  9183  07CF  3042               	movlw	66
  9184  07D0  00B8               	movwf	___fldiv@a+3
  9185  07D1  30C8               	movlw	200
  9186  07D2  00B7               	movwf	___fldiv@a+2
  9187  07D3  3000               	movlw	0
  9188  07D4  00B6               	movwf	___fldiv@a+1
  9189  07D5  3000               	movlw	0
  9190  07D6  00B5               	movwf	___fldiv@a
  9191  07D7  3184  2442  3187   	fcall	___fldiv
  9192  07DA  0838               	movf	?___fldiv+3,w
  9193  07DB  00D2               	movwf	___fltol@f1+3
  9194  07DC  0837               	movf	?___fldiv+2,w
  9195  07DD  00D1               	movwf	___fltol@f1+2
  9196  07DE  0836               	movf	?___fldiv+1,w
  9197  07DF  00D0               	movwf	___fltol@f1+1
  9198  07E0  0835               	movf	?___fldiv,w
  9199  07E1  00CF               	movwf	___fltol@f1
  9200  07E2  318F  279B         	fcall	___fltol
  9201  07E4  0850               	movf	?___fltol+1,w
  9202  07E5  00E3               	movwf	CalcRequiredDelayForTrigTRIAC@ret+1
  9203  07E6  084F               	movf	?___fltol,w
  9204  07E7  00E2               	movwf	CalcRequiredDelayForTrigTRIAC@ret
  9205                           
  9206                           ;main.c: 320:     return ret;
  9207  07E8  0863               	movf	CalcRequiredDelayForTrigTRIAC@ret+1,w
  9208  07E9  00DB               	movwf	?_CalcRequiredDelayForTrigTRIAC+1
  9209  07EA  0862               	movf	CalcRequiredDelayForTrigTRIAC@ret,w
  9210  07EB  00DA               	movwf	?_CalcRequiredDelayForTrigTRIAC
  9211  07EC  0008               	return
  9212  07ED                     __end_of_CalcRequiredDelayForTrigTRIAC:
  9213                           
  9214                           	psect	text70
  9215  0F9B                     __ptext70:	
  9216 ;; *************** function ___fltol *****************
  9217 ;; Defined at:
  9218 ;;		line 43 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/fltol.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;  f1              4   47[BANK0 ] unsigned short 
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;  exp1            1   57[BANK0 ] unsigned char 
  9223 ;;  sign1           1   56[BANK0 ] unsigned char 
  9224 ;; Return value:  Size  Location     Type
  9225 ;;                  4   47[BANK0 ] long 
  9226 ;; Registers used:
  9227 ;;		wreg, status,2, status,0
  9228 ;; Tracked objects:
  9229 ;;		On entry : 1F/0
  9230 ;;		On exit  : 1F/0
  9231 ;;		Unchanged: 0/0
  9232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9233 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9237 ;;Total ram usage:       11 bytes
  9238 ;; Hardware stack levels used:    1
  9239 ;; Hardware stack levels required when called:    4
  9240 ;; This function calls:
  9241 ;;		Nothing
  9242 ;; This function is called by:
  9243 ;;		_CalcRequiredDelayForTrigTRIAC
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           
  9248                           ;psect for function ___fltol
  9249  0F9B                     ___fltol:
  9250                           
  9251                           ;incstack = 0
  9252                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9253  0F9B  1003               	clrc
  9254  0F9C  0D51               	rlf	___fltol@f1+2,w
  9255  0F9D  0D52               	rlf	___fltol@f1+3,w
  9256  0F9E  00D3               	movwf	??___fltol
  9257  0F9F  0853               	movf	??___fltol,w
  9258  0FA0  00D9               	movwf	___fltol@exp1
  9259  0FA1  0859               	movf	___fltol@exp1,w
  9260  0FA2  1D03               	btfss	3,2
  9261  0FA3  2FAD               	goto	l3641
  9262  0FA4                     l3637:
  9263  0FA4  3000               	movlw	0
  9264  0FA5  00D2               	movwf	?___fltol+3
  9265  0FA6  3000               	movlw	0
  9266  0FA7  00D1               	movwf	?___fltol+2
  9267  0FA8  3000               	movlw	0
  9268  0FA9  00D0               	movwf	?___fltol+1
  9269  0FAA  3000               	movlw	0
  9270  0FAB  00CF               	movwf	?___fltol
  9271  0FAC  0008               	return
  9272  0FAD                     l3641:
  9273  0FAD  084F               	movf	___fltol@f1,w
  9274  0FAE  00D3               	movwf	??___fltol
  9275  0FAF  0850               	movf	___fltol@f1+1,w
  9276  0FB0  00D4               	movwf	??___fltol+1
  9277  0FB1  0851               	movf	___fltol@f1+2,w
  9278  0FB2  00D5               	movwf	??___fltol+2
  9279  0FB3  0852               	movf	___fltol@f1+3,w
  9280  0FB4  00D6               	movwf	??___fltol+3
  9281  0FB5  301F               	movlw	31
  9282  0FB6                     u2955:
  9283  0FB6  36D6               	lsrf	??___fltol+3,f
  9284  0FB7  0CD5               	rrf	??___fltol+2,f
  9285  0FB8  0CD4               	rrf	??___fltol+1,f
  9286  0FB9  0CD3               	rrf	??___fltol,f
  9287  0FBA  0B89               	decfsz	9,f
  9288  0FBB  2FB6               	goto	u2955
  9289  0FBC  0853               	movf	??___fltol,w
  9290  0FBD  00D7               	movwf	??___fltol+4
  9291  0FBE  0857               	movf	??___fltol+4,w
  9292  0FBF  00D8               	movwf	___fltol@sign1
  9293  0FC0  17D1               	bsf	___fltol@f1+2,7
  9294  0FC1  30FF               	movlw	255
  9295  0FC2  05CF               	andwf	___fltol@f1,f
  9296  0FC3  30FF               	movlw	255
  9297  0FC4  05D0               	andwf	___fltol@f1+1,f
  9298  0FC5  30FF               	movlw	255
  9299  0FC6  05D1               	andwf	___fltol@f1+2,f
  9300  0FC7  3000               	movlw	0
  9301  0FC8  05D2               	andwf	___fltol@f1+3,f
  9302  0FC9  3096               	movlw	150
  9303  0FCA  02D9               	subwf	___fltol@exp1,f
  9304  0FCB  1FD9               	btfss	___fltol@exp1,7
  9305  0FCC  2FE0               	goto	l3659
  9306  0FCD  0859               	movf	___fltol@exp1,w
  9307  0FCE  3A80               	xorlw	128
  9308  0FCF  3E97               	addlw	151
  9309  0FD0  1C03               	btfss	3,0
  9310  0FD1  2FA4               	goto	l3637
  9311  0FD2                     l3657:
  9312  0FD2  3001               	movlw	1
  9313  0FD3                     u2985:
  9314  0FD3  36D2               	lsrf	___fltol@f1+3,f
  9315  0FD4  0CD1               	rrf	___fltol@f1+2,f
  9316  0FD5  0CD0               	rrf	___fltol@f1+1,f
  9317  0FD6  0CCF               	rrf	___fltol@f1,f
  9318  0FD7  0B89               	decfsz	9,f
  9319  0FD8  2FD3               	goto	u2985
  9320  0FD9  3001               	movlw	1
  9321  0FDA  00D3               	movwf	??___fltol
  9322  0FDB  0853               	movf	??___fltol,w
  9323  0FDC  07D9               	addwf	___fltol@exp1,f
  9324  0FDD  1903               	btfsc	3,2
  9325  0FDE  2FF1               	goto	l3667
  9326  0FDF  2FD2               	goto	l3657
  9327  0FE0                     l3659:
  9328  0FE0  3020               	movlw	32
  9329  0FE1  0259               	subwf	___fltol@exp1,w
  9330  0FE2  1803               	btfsc	3,0
  9331  0FE3  2FA4               	goto	l3637
  9332  0FE4                     l1306:
  9333  0FE4  0859               	movf	___fltol@exp1,w
  9334  0FE5  1903               	btfsc	3,2
  9335  0FE6  2FF1               	goto	l3667
  9336  0FE7  3001               	movlw	1
  9337  0FE8                     u3015:
  9338  0FE8  35CF               	lslf	___fltol@f1,f
  9339  0FE9  0DD0               	rlf	___fltol@f1+1,f
  9340  0FEA  0DD1               	rlf	___fltol@f1+2,f
  9341  0FEB  0DD2               	rlf	___fltol@f1+3,f
  9342  0FEC  0B89               	decfsz	9,f
  9343  0FED  2FE8               	goto	u3015
  9344  0FEE  3001               	movlw	1
  9345  0FEF  02D9               	subwf	___fltol@exp1,f
  9346  0FF0  2FE4               	goto	l1306
  9347  0FF1                     l3667:
  9348  0FF1  0858               	movf	___fltol@sign1,w
  9349  0FF2  1903               	btfsc	3,2
  9350  0FF3  0008               	return
  9351  0FF4  09CF               	comf	___fltol@f1,f
  9352  0FF5  09D0               	comf	___fltol@f1+1,f
  9353  0FF6  09D1               	comf	___fltol@f1+2,f
  9354  0FF7  09D2               	comf	___fltol@f1+3,f
  9355  0FF8  0ACF               	incf	___fltol@f1,f
  9356  0FF9  1903               	skipnz
  9357  0FFA  0AD0               	incf	___fltol@f1+1,f
  9358  0FFB  1903               	skipnz
  9359  0FFC  0AD1               	incf	___fltol@f1+2,f
  9360  0FFD  1903               	skipnz
  9361  0FFE  0AD2               	incf	___fltol@f1+3,f
  9362  0FFF  0008               	return
  9363  1000                     __end_of___fltol:
  9364                           
  9365                           	psect	text71
  9366  0AE3                     __ptext71:	
  9367 ;; *************** function ___flsub *****************
  9368 ;; Defined at:
  9369 ;;		line 242 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  a               4   47[BANK0 ] long 
  9372 ;;  b               4   51[BANK0 ] long 
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;		None
  9375 ;; Return value:  Size  Location     Type
  9376 ;;                  4   47[BANK0 ] long 
  9377 ;; Registers used:
  9378 ;;		wreg, status,2, status,0, pclath, cstack
  9379 ;; Tracked objects:
  9380 ;;		On entry : 1F/0
  9381 ;;		On exit  : 1F/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9384 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9387 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9388 ;;Total ram usage:        8 bytes
  9389 ;; Hardware stack levels used:    1
  9390 ;; Hardware stack levels required when called:    5
  9391 ;; This function calls:
  9392 ;;		___fladd
  9393 ;; This function is called by:
  9394 ;;		_CalcRequiredDelayForTrigTRIAC
  9395 ;; This function uses a non-reentrant model
  9396 ;;
  9397                           
  9398                           
  9399                           ;psect for function ___flsub
  9400  0AE3                     ___flsub:
  9401                           
  9402                           ;incstack = 0
  9403                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  9404  0AE3  3080               	movlw	128
  9405  0AE4  06D2               	xorwf	___flsub@a+3,f
  9406  0AE5  0856               	movf	___flsub@b+3,w
  9407  0AE6  00F3               	movwf	___fladd@b+3
  9408  0AE7  0855               	movf	___flsub@b+2,w
  9409  0AE8  00F2               	movwf	___fladd@b+2
  9410  0AE9  0854               	movf	___flsub@b+1,w
  9411  0AEA  00F1               	movwf	___fladd@b+1
  9412  0AEB  0853               	movf	___flsub@b,w
  9413  0AEC  00F0               	movwf	___fladd@b
  9414  0AED  0852               	movf	___flsub@a+3,w
  9415  0AEE  00F7               	movwf	___fladd@a+3
  9416  0AEF  0851               	movf	___flsub@a+2,w
  9417  0AF0  00F6               	movwf	___fladd@a+2
  9418  0AF1  0850               	movf	___flsub@a+1,w
  9419  0AF2  00F5               	movwf	___fladd@a+1
  9420  0AF3  084F               	movf	___flsub@a,w
  9421  0AF4  00F4               	movwf	___fladd@a
  9422  0AF5  3182  225A         	fcall	___fladd
  9423  0AF7  0873               	movf	?___fladd+3,w
  9424  0AF8  0020               	movlb	0	; select bank0
  9425  0AF9  00D2               	movwf	?___flsub+3
  9426  0AFA  0872               	movf	?___fladd+2,w
  9427  0AFB  00D1               	movwf	?___flsub+2
  9428  0AFC  0871               	movf	?___fladd+1,w
  9429  0AFD  00D0               	movwf	?___flsub+1
  9430  0AFE  0870               	movf	?___fladd,w
  9431  0AFF  00CF               	movwf	?___flsub
  9432  0B00  0008               	return
  9433  0B01                     __end_of___flsub:
  9434                           
  9435                           	psect	text72
  9436  025A                     __ptext72:	
  9437 ;; *************** function ___fladd *****************
  9438 ;; Defined at:
  9439 ;;		line 10 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  b               4    0[COMMON] long 
  9442 ;;  a               4    4[COMMON] long 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;  grs             1   11[COMMON] unsigned char 
  9445 ;;  bexp            1   10[COMMON] unsigned char 
  9446 ;;  aexp            1    9[COMMON] unsigned char 
  9447 ;;  signs           1    8[COMMON] unsigned char 
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  4    0[COMMON] unsigned char 
  9450 ;; Registers used:
  9451 ;;		wreg, status,2, status,0
  9452 ;; Tracked objects:
  9453 ;;		On entry : 1F/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9457 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;Total ram usage:       20 bytes
  9462 ;; Hardware stack levels used:    1
  9463 ;; Hardware stack levels required when called:    4
  9464 ;; This function calls:
  9465 ;;		Nothing
  9466 ;; This function is called by:
  9467 ;;		___flsub
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           
  9472                           ;psect for function ___fladd
  9473  025A                     ___fladd:
  9474                           
  9475                           ;incstack = 0
  9476                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9477  025A  0873               	movf	___fladd@b+3,w
  9478  025B  3980               	andlw	128
  9479  025C  00A0               	movwf	??___fladd
  9480  025D  0820               	movf	??___fladd,w
  9481  025E  00F8               	movwf	___fladd@signs
  9482  025F  3573               	lslf	___fladd@b+3,w
  9483  0260  00A0               	movwf	??___fladd
  9484  0261  0820               	movf	??___fladd,w
  9485  0262  00FA               	movwf	___fladd@bexp
  9486  0263  1BF2               	btfsc	___fladd@b+2,7
  9487  0264  147A               	bsf	___fladd@bexp,0
  9488  0265  087A               	movf	___fladd@bexp,w
  9489  0266  1903               	btfsc	3,2
  9490  0267  2A76               	goto	l3387
  9491  0268  0A7A               	incf	___fladd@bexp,w
  9492  0269  1D03               	btfss	3,2
  9493  026A  2A73               	goto	l3383
  9494  026B  3000               	movlw	0
  9495  026C  00F3               	movwf	___fladd@b+3
  9496  026D  3000               	movlw	0
  9497  026E  00F2               	movwf	___fladd@b+2
  9498  026F  3000               	movlw	0
  9499  0270  00F1               	movwf	___fladd@b+1
  9500  0271  3000               	movlw	0
  9501  0272  00F0               	movwf	___fladd@b
  9502  0273                     l3383:
  9503  0273  17F2               	bsf	___fladd@b+2,7
  9504  0274  01F3               	clrf	___fladd@b+3
  9505  0275  2A7E               	goto	l3389
  9506  0276                     l3387:
  9507  0276  3000               	movlw	0
  9508  0277  00F3               	movwf	___fladd@b+3
  9509  0278  3000               	movlw	0
  9510  0279  00F2               	movwf	___fladd@b+2
  9511  027A  3000               	movlw	0
  9512  027B  00F1               	movwf	___fladd@b+1
  9513  027C  3000               	movlw	0
  9514  027D  00F0               	movwf	___fladd@b
  9515  027E                     l3389:
  9516  027E  0877               	movf	___fladd@a+3,w
  9517  027F  3980               	andlw	128
  9518  0280  00A0               	movwf	??___fladd
  9519  0281  0820               	movf	??___fladd,w
  9520  0282  00F9               	movwf	___fladd@aexp
  9521  0283  0879               	movf	___fladd@aexp,w
  9522  0284  0678               	xorwf	___fladd@signs,w
  9523  0285  1D03               	btfss	3,2
  9524  0286  1778               	bsf	___fladd@signs,6
  9525  0287  3577               	lslf	___fladd@a+3,w
  9526  0288  00A0               	movwf	??___fladd
  9527  0289  0820               	movf	??___fladd,w
  9528  028A  00F9               	movwf	___fladd@aexp
  9529  028B  1BF6               	btfsc	___fladd@a+2,7
  9530  028C  1479               	bsf	___fladd@aexp,0
  9531  028D  0879               	movf	___fladd@aexp,w
  9532  028E  1903               	btfsc	3,2
  9533  028F  2A9E               	goto	l3411
  9534  0290  0A79               	incf	___fladd@aexp,w
  9535  0291  1D03               	btfss	3,2
  9536  0292  2A9B               	goto	l3407
  9537  0293  3000               	movlw	0
  9538  0294  00F7               	movwf	___fladd@a+3
  9539  0295  3000               	movlw	0
  9540  0296  00F6               	movwf	___fladd@a+2
  9541  0297  3000               	movlw	0
  9542  0298  00F5               	movwf	___fladd@a+1
  9543  0299  3000               	movlw	0
  9544  029A  00F4               	movwf	___fladd@a
  9545  029B                     l3407:
  9546  029B  17F6               	bsf	___fladd@a+2,7
  9547  029C  01F7               	clrf	___fladd@a+3
  9548  029D  2AA6               	goto	l1406
  9549  029E                     l3411:
  9550  029E  3000               	movlw	0
  9551  029F  00F7               	movwf	___fladd@a+3
  9552  02A0  3000               	movlw	0
  9553  02A1  00F6               	movwf	___fladd@a+2
  9554  02A2  3000               	movlw	0
  9555  02A3  00F5               	movwf	___fladd@a+1
  9556  02A4  3000               	movlw	0
  9557  02A5  00F4               	movwf	___fladd@a
  9558  02A6                     l1406:
  9559  02A6  087A               	movf	___fladd@bexp,w
  9560  02A7  0279               	subwf	___fladd@aexp,w
  9561  02A8  1803               	skipnc
  9562  02A9  2AEC               	goto	l3447
  9563  02AA  1F78               	btfss	___fladd@signs,6
  9564  02AB  2AB0               	goto	l3417
  9565  02AC  3080               	movlw	128
  9566  02AD  00A0               	movwf	??___fladd
  9567  02AE  0820               	movf	??___fladd,w
  9568  02AF  06F8               	xorwf	___fladd@signs,f
  9569  02B0                     l3417:
  9570  02B0  087A               	movf	___fladd@bexp,w
  9571  02B1  00A0               	movwf	??___fladd
  9572  02B2  0820               	movf	??___fladd,w
  9573  02B3  00FB               	movwf	___fladd@grs
  9574  02B4  0879               	movf	___fladd@aexp,w
  9575  02B5  00A0               	movwf	??___fladd
  9576  02B6  0820               	movf	??___fladd,w
  9577  02B7  00FA               	movwf	___fladd@bexp
  9578  02B8  087B               	movf	___fladd@grs,w
  9579  02B9  00A0               	movwf	??___fladd
  9580  02BA  0820               	movf	??___fladd,w
  9581  02BB  00F9               	movwf	___fladd@aexp
  9582  02BC  0870               	movf	___fladd@b,w
  9583  02BD  00A0               	movwf	??___fladd
  9584  02BE  0820               	movf	??___fladd,w
  9585  02BF  00FB               	movwf	___fladd@grs
  9586  02C0  0874               	movf	___fladd@a,w
  9587  02C1  00A0               	movwf	??___fladd
  9588  02C2  0820               	movf	??___fladd,w
  9589  02C3  00F0               	movwf	___fladd@b
  9590  02C4  087B               	movf	___fladd@grs,w
  9591  02C5  00A0               	movwf	??___fladd
  9592  02C6  0820               	movf	??___fladd,w
  9593  02C7  00F4               	movwf	___fladd@a
  9594  02C8  0871               	movf	___fladd@b+1,w
  9595  02C9  00A0               	movwf	??___fladd
  9596  02CA  0820               	movf	??___fladd,w
  9597  02CB  00FB               	movwf	___fladd@grs
  9598  02CC  0875               	movf	___fladd@a+1,w
  9599  02CD  00A0               	movwf	??___fladd
  9600  02CE  0820               	movf	??___fladd,w
  9601  02CF  00F1               	movwf	___fladd@b+1
  9602  02D0  087B               	movf	___fladd@grs,w
  9603  02D1  00A0               	movwf	??___fladd
  9604  02D2  0820               	movf	??___fladd,w
  9605  02D3  00F5               	movwf	___fladd@a+1
  9606  02D4  0872               	movf	___fladd@b+2,w
  9607  02D5  00A0               	movwf	??___fladd
  9608  02D6  0820               	movf	??___fladd,w
  9609  02D7  00FB               	movwf	___fladd@grs
  9610  02D8  0876               	movf	___fladd@a+2,w
  9611  02D9  00A0               	movwf	??___fladd
  9612  02DA  0820               	movf	??___fladd,w
  9613  02DB  00F2               	movwf	___fladd@b+2
  9614  02DC  087B               	movf	___fladd@grs,w
  9615  02DD  00A0               	movwf	??___fladd
  9616  02DE  0820               	movf	??___fladd,w
  9617  02DF  00F6               	movwf	___fladd@a+2
  9618  02E0  0873               	movf	___fladd@b+3,w
  9619  02E1  00A0               	movwf	??___fladd
  9620  02E2  0820               	movf	??___fladd,w
  9621  02E3  00FB               	movwf	___fladd@grs
  9622  02E4  0877               	movf	___fladd@a+3,w
  9623  02E5  00A0               	movwf	??___fladd
  9624  02E6  0820               	movf	??___fladd,w
  9625  02E7  00F3               	movwf	___fladd@b+3
  9626  02E8  087B               	movf	___fladd@grs,w
  9627  02E9  00A0               	movwf	??___fladd
  9628  02EA  0820               	movf	??___fladd,w
  9629  02EB  00F7               	movwf	___fladd@a+3
  9630  02EC                     l3447:
  9631  02EC  01FB               	clrf	___fladd@grs
  9632  02ED  0879               	movf	___fladd@aexp,w
  9633  02EE  00A0               	movwf	??___fladd
  9634  02EF  01A1               	clrf	??___fladd+1
  9635  02F0  0821               	movf	??___fladd+1,w
  9636  02F1  00A3               	movwf	??___fladd+3
  9637  02F2  087A               	movf	___fladd@bexp,w
  9638  02F3  0220               	subwf	??___fladd,w
  9639  02F4  00A2               	movwf	??___fladd+2
  9640  02F5  1C03               	skipc
  9641  02F6  03A3               	decf	??___fladd+3,f
  9642  02F7  0823               	movf	??___fladd+3,w
  9643  02F8  3A80               	xorlw	128
  9644  02F9  00A4               	movwf	??___fladd+4
  9645  02FA  3080               	movlw	128
  9646  02FB  0224               	subwf	??___fladd+4,w
  9647  02FC  1D03               	skipz
  9648  02FD  2B00               	goto	u2545
  9649  02FE  301A               	movlw	26
  9650  02FF  0222               	subwf	??___fladd+2,w
  9651  0300                     u2545:
  9652  0300  1C03               	skipc
  9653  0301  2B36               	goto	l3465
  9654  0302  0873               	movf	___fladd@b+3,w
  9655  0303  0472               	iorwf	___fladd@b+2,w
  9656  0304  0471               	iorwf	___fladd@b+1,w
  9657  0305  0470               	iorwf	___fladd@b,w
  9658  0306  1903               	btfsc	3,2
  9659  0307  2B0A               	goto	u2550
  9660  0308  3001               	movlw	1
  9661  0309  2B0B               	goto	u2560
  9662  030A                     u2550:
  9663  030A  3000               	movlw	0
  9664  030B                     u2560:
  9665  030B  0020               	movlb	0	; select bank0
  9666  030C  00A0               	movwf	??___fladd
  9667  030D  0820               	movf	??___fladd,w
  9668  030E  00FB               	movwf	___fladd@grs
  9669  030F  3000               	movlw	0
  9670  0310  00F3               	movwf	___fladd@b+3
  9671  0311  3000               	movlw	0
  9672  0312  00F2               	movwf	___fladd@b+2
  9673  0313  3000               	movlw	0
  9674  0314  00F1               	movwf	___fladd@b+1
  9675  0315  3000               	movlw	0
  9676  0316  00F0               	movwf	___fladd@b
  9677  0317  0879               	movf	___fladd@aexp,w
  9678  0318  00A0               	movwf	??___fladd
  9679  0319  0820               	movf	??___fladd,w
  9680  031A  00FA               	movwf	___fladd@bexp
  9681  031B  2B3A               	goto	l1410
  9682  031C                     l1412:
  9683  031C  1C7B               	btfss	___fladd@grs,0
  9684  031D  2B25               	goto	l3455
  9685  031E  367B               	lsrf	___fladd@grs,w
  9686  031F  3801               	iorlw	1
  9687  0320  0020               	movlb	0	; select bank0
  9688  0321  00A0               	movwf	??___fladd
  9689  0322  0820               	movf	??___fladd,w
  9690  0323  00FB               	movwf	___fladd@grs
  9691  0324  2B27               	goto	l3457
  9692  0325                     l3455:
  9693  0325  1003               	clrc
  9694  0326  0CFB               	rrf	___fladd@grs,f
  9695  0327                     l3457:
  9696  0327  1870               	btfsc	___fladd@b,0
  9697  0328  17FB               	bsf	___fladd@grs,7
  9698  0329  3001               	movlw	1
  9699  032A  0020               	movlb	0	; select bank0
  9700  032B  00A0               	movwf	??___fladd
  9701  032C                     u2595:
  9702  032C  37F3               	asrf	___fladd@b+3,f
  9703  032D  0CF2               	rrf	___fladd@b+2,f
  9704  032E  0CF1               	rrf	___fladd@b+1,f
  9705  032F  0CF0               	rrf	___fladd@b,f
  9706  0330  0BA0               	decfsz	??___fladd& (0+127),f
  9707  0331  2B2C               	goto	u2595
  9708  0332  3001               	movlw	1
  9709  0333  00A0               	movwf	??___fladd
  9710  0334  0820               	movf	??___fladd,w
  9711  0335  07FA               	addwf	___fladd@bexp,f
  9712  0336                     l3465:
  9713  0336  0879               	movf	___fladd@aexp,w
  9714  0337  027A               	subwf	___fladd@bexp,w
  9715  0338  1C03               	skipc
  9716  0339  2B1C               	goto	l1412
  9717  033A                     l1410:
  9718  033A  1B78               	btfsc	___fladd@signs,6
  9719  033B  2B6D               	goto	l3491
  9720  033C  087A               	movf	___fladd@bexp,w
  9721  033D  1D03               	btfss	3,2
  9722  033E  2B48               	goto	l3473
  9723  033F  3000               	movlw	0
  9724  0340  00F3               	movwf	?___fladd+3
  9725  0341  3000               	movlw	0
  9726  0342  00F2               	movwf	?___fladd+2
  9727  0343  3000               	movlw	0
  9728  0344  00F1               	movwf	?___fladd+1
  9729  0345  3000               	movlw	0
  9730  0346  00F0               	movwf	?___fladd
  9731  0347  0008               	return
  9732  0348                     l3473:
  9733  0348  0874               	movf	___fladd@a,w
  9734  0349  07F0               	addwf	___fladd@b,f
  9735  034A  0875               	movf	___fladd@a+1,w
  9736  034B  3DF1               	addwfc	___fladd@b+1,f
  9737  034C  0876               	movf	___fladd@a+2,w
  9738  034D  3DF2               	addwfc	___fladd@b+2,f
  9739  034E  0877               	movf	___fladd@a+3,w
  9740  034F  3DF3               	addwfc	___fladd@b+3,f
  9741  0350  1C73               	btfss	___fladd@b+3,0
  9742  0351  2BE8               	goto	l3525
  9743  0352  1C7B               	btfss	___fladd@grs,0
  9744  0353  2B5B               	goto	l3481
  9745  0354  367B               	lsrf	___fladd@grs,w
  9746  0355  3801               	iorlw	1
  9747  0356  0020               	movlb	0	; select bank0
  9748  0357  00A0               	movwf	??___fladd
  9749  0358  0820               	movf	??___fladd,w
  9750  0359  00FB               	movwf	___fladd@grs
  9751  035A  2B5D               	goto	l3483
  9752  035B                     l3481:
  9753  035B  1003               	clrc
  9754  035C  0CFB               	rrf	___fladd@grs,f
  9755  035D                     l3483:
  9756  035D  1870               	btfsc	___fladd@b,0
  9757  035E  17FB               	bsf	___fladd@grs,7
  9758  035F  3001               	movlw	1
  9759  0360  0020               	movlb	0	; select bank0
  9760  0361  00A0               	movwf	??___fladd
  9761  0362                     u2665:
  9762  0362  37F3               	asrf	___fladd@b+3,f
  9763  0363  0CF2               	rrf	___fladd@b+2,f
  9764  0364  0CF1               	rrf	___fladd@b+1,f
  9765  0365  0CF0               	rrf	___fladd@b,f
  9766  0366  0BA0               	decfsz	??___fladd& (0+127),f
  9767  0367  2B62               	goto	u2665
  9768  0368  3001               	movlw	1
  9769  0369  00A0               	movwf	??___fladd
  9770  036A  0820               	movf	??___fladd,w
  9771  036B  07FA               	addwf	___fladd@bexp,f
  9772  036C  2BE8               	goto	l3525
  9773  036D                     l3491:
  9774  036D  0873               	movf	___fladd@b+3,w
  9775  036E  3A80               	xorlw	128
  9776  036F  0020               	movlb	0	; select bank0
  9777  0370  00A0               	movwf	??___fladd
  9778  0371  0877               	movf	___fladd@a+3,w
  9779  0372  3A80               	xorlw	128
  9780  0373  0220               	subwf	??___fladd,w
  9781  0374  1D03               	skipz
  9782  0375  2B80               	goto	u2673
  9783  0376  0876               	movf	___fladd@a+2,w
  9784  0377  0272               	subwf	___fladd@b+2,w
  9785  0378  1D03               	skipz
  9786  0379  2B80               	goto	u2673
  9787  037A  0875               	movf	___fladd@a+1,w
  9788  037B  0271               	subwf	___fladd@b+1,w
  9789  037C  1D03               	skipz
  9790  037D  2B80               	goto	u2673
  9791  037E  0874               	movf	___fladd@a,w
  9792  037F  0270               	subwf	___fladd@b,w
  9793  0380                     u2673:
  9794  0380  1803               	skipnc
  9795  0381  2BB8               	goto	l3501
  9796  0382  30FF               	movlw	255
  9797  0383  00A0               	movwf	??___fladd
  9798  0384  30FF               	movlw	255
  9799  0385  00A1               	movwf	??___fladd+1
  9800  0386  30FF               	movlw	255
  9801  0387  00A2               	movwf	??___fladd+2
  9802  0388  30FF               	movlw	255
  9803  0389  00A3               	movwf	??___fladd+3
  9804  038A  0870               	movf	___fladd@b,w
  9805  038B  0274               	subwf	___fladd@a,w
  9806  038C  00A4               	movwf	??___fladd+4
  9807  038D  0871               	movf	___fladd@b+1,w
  9808  038E  3B75               	subwfb	___fladd@a+1,w
  9809  038F  00A5               	movwf	??___fladd+5
  9810  0390  0872               	movf	___fladd@b+2,w
  9811  0391  3B76               	subwfb	___fladd@a+2,w
  9812  0392  00A6               	movwf	??___fladd+6
  9813  0393  0873               	movf	___fladd@b+3,w
  9814  0394  3B77               	subwfb	___fladd@a+3,w
  9815  0395  00A7               	movwf	??___fladd+7
  9816  0396  0824               	movf	??___fladd+4,w
  9817  0397  07A0               	addwf	??___fladd,f
  9818  0398  0825               	movf	??___fladd+5,w
  9819  0399  3DA1               	addwfc	??___fladd+1,f
  9820  039A  0826               	movf	??___fladd+6,w
  9821  039B  3DA2               	addwfc	??___fladd+2,f
  9822  039C  0827               	movf	??___fladd+7,w
  9823  039D  3DA3               	addwfc	??___fladd+3,f
  9824  039E  0823               	movf	??___fladd+3,w
  9825  039F  00F3               	movwf	___fladd@b+3
  9826  03A0  0822               	movf	??___fladd+2,w
  9827  03A1  00F2               	movwf	___fladd@b+2
  9828  03A2  0821               	movf	??___fladd+1,w
  9829  03A3  00F1               	movwf	___fladd@b+1
  9830  03A4  0820               	movf	??___fladd,w
  9831  03A5  00F0               	movwf	___fladd@b
  9832  03A6  3080               	movlw	128
  9833  03A7  00A0               	movwf	??___fladd
  9834  03A8  0820               	movf	??___fladd,w
  9835  03A9  06F8               	xorwf	___fladd@signs,f
  9836  03AA  09FB               	comf	___fladd@grs,f
  9837  03AB  0AFB               	incf	___fladd@grs,f
  9838  03AC  087B               	movf	___fladd@grs,w
  9839  03AD  1D03               	btfss	3,2
  9840  03AE  2BC0               	goto	l1427
  9841  03AF  3001               	movlw	1
  9842  03B0  07F0               	addwf	___fladd@b,f
  9843  03B1  3000               	movlw	0
  9844  03B2  3DF1               	addwfc	___fladd@b+1,f
  9845  03B3  3000               	movlw	0
  9846  03B4  3DF2               	addwfc	___fladd@b+2,f
  9847  03B5  3000               	movlw	0
  9848  03B6  3DF3               	addwfc	___fladd@b+3,f
  9849  03B7  2BC0               	goto	l1427
  9850  03B8                     l3501:
  9851  03B8  0874               	movf	___fladd@a,w
  9852  03B9  02F0               	subwf	___fladd@b,f
  9853  03BA  0875               	movf	___fladd@a+1,w
  9854  03BB  3BF1               	subwfb	___fladd@b+1,f
  9855  03BC  0876               	movf	___fladd@a+2,w
  9856  03BD  3BF2               	subwfb	___fladd@b+2,f
  9857  03BE  0877               	movf	___fladd@a+3,w
  9858  03BF  3BF3               	subwfb	___fladd@b+3,f
  9859  03C0                     l1427:
  9860  03C0  0873               	movf	___fladd@b+3,w
  9861  03C1  0472               	iorwf	___fladd@b+2,w
  9862  03C2  0471               	iorwf	___fladd@b+1,w
  9863  03C3  0470               	iorwf	___fladd@b,w
  9864  03C4  1D03               	skipz
  9865  03C5  2BE6               	goto	l3523
  9866  03C6  087B               	movf	___fladd@grs,w
  9867  03C7  1D03               	btfss	3,2
  9868  03C8  2BE6               	goto	l3523
  9869  03C9  3000               	movlw	0
  9870  03CA  00F3               	movwf	?___fladd+3
  9871  03CB  3000               	movlw	0
  9872  03CC  00F2               	movwf	?___fladd+2
  9873  03CD  3000               	movlw	0
  9874  03CE  00F1               	movwf	?___fladd+1
  9875  03CF  3000               	movlw	0
  9876  03D0  00F0               	movwf	?___fladd
  9877  03D1  0008               	return
  9878  03D2                     l3509:
  9879  03D2  3001               	movlw	1
  9880  03D3                     u2715:
  9881  03D3  35F0               	lslf	___fladd@b,f
  9882  03D4  0DF1               	rlf	___fladd@b+1,f
  9883  03D5  0DF2               	rlf	___fladd@b+2,f
  9884  03D6  0DF3               	rlf	___fladd@b+3,f
  9885  03D7  0B89               	decfsz	9,f
  9886  03D8  2BD3               	goto	u2715
  9887  03D9  1BFB               	btfsc	___fladd@grs,7
  9888  03DA  1470               	bsf	___fladd@b,0
  9889  03DB  1C7B               	btfss	___fladd@grs,0
  9890  03DC  2BDF               	goto	l3517
  9891  03DD  1403               	setc
  9892  03DE  2BE0               	goto	L4
  9893  03DF                     l3517:
  9894  03DF  1003               	clrc
  9895  03E0                     L4:
  9896  03E0  0DFB               	rlf	___fladd@grs,f
  9897  03E1  087A               	movf	___fladd@bexp,w
  9898  03E2  1903               	btfsc	3,2
  9899  03E3  2BE6               	goto	l3523
  9900  03E4  3001               	movlw	1
  9901  03E5  02FA               	subwf	___fladd@bexp,f
  9902  03E6                     l3523:
  9903  03E6  1FF2               	btfss	___fladd@b+2,7
  9904  03E7  2BD2               	goto	l3509
  9905  03E8                     l3525:
  9906  03E8  01F9               	clrf	___fladd@aexp
  9907  03E9  1FFB               	btfss	___fladd@grs,7
  9908  03EA  2BF3               	goto	l3535
  9909  03EB  087B               	movf	___fladd@grs,w
  9910  03EC  397F               	andlw	127
  9911  03ED  1903               	btfsc	3,2
  9912  03EE  1870               	btfsc	___fladd@b,0
  9913  03EF  2BF1               	goto	l3531
  9914  03F0  2BF3               	goto	l3535
  9915  03F1                     l3531:
  9916  03F1  01F9               	clrf	___fladd@aexp
  9917  03F2  0AF9               	incf	___fladd@aexp,f
  9918  03F3                     l3535:
  9919  03F3  0879               	movf	___fladd@aexp,w
  9920  03F4  1903               	btfsc	3,2
  9921  03F5  2C20               	goto	l1440
  9922  03F6  3001               	movlw	1
  9923  03F7  07F0               	addwf	___fladd@b,f
  9924  03F8  3000               	movlw	0
  9925  03F9  3DF1               	addwfc	___fladd@b+1,f
  9926  03FA  3000               	movlw	0
  9927  03FB  3DF2               	addwfc	___fladd@b+2,f
  9928  03FC  3000               	movlw	0
  9929  03FD  3DF3               	addwfc	___fladd@b+3,f
  9930  03FE  1C73               	btfss	___fladd@b+3,0
  9931  03FF  2C20               	goto	l1440
  9932  0400  0870               	movf	___fladd@b,w
  9933  0401  0020               	movlb	0	; select bank0
  9934  0402  00A0               	movwf	??___fladd
  9935  0403  0871               	movf	___fladd@b+1,w
  9936  0404  00A1               	movwf	??___fladd+1
  9937  0405  0872               	movf	___fladd@b+2,w
  9938  0406  00A2               	movwf	??___fladd+2
  9939  0407  0873               	movf	___fladd@b+3,w
  9940  0408  00A3               	movwf	??___fladd+3
  9941  0409  3001               	movlw	1
  9942  040A  00A4               	movwf	??___fladd+4
  9943  040B                     u2815:
  9944  040B  37A3               	asrf	??___fladd+3,f
  9945  040C  0CA2               	rrf	??___fladd+2,f
  9946  040D  0CA1               	rrf	??___fladd+1,f
  9947  040E  0CA0               	rrf	??___fladd,f
  9948  040F  0BA4               	decfsz	??___fladd+4,f
  9949  0410  2C0B               	goto	u2815
  9950  0411  0823               	movf	??___fladd+3,w
  9951  0412  00F3               	movwf	___fladd@b+3
  9952  0413  0822               	movf	??___fladd+2,w
  9953  0414  00F2               	movwf	___fladd@b+2
  9954  0415  0821               	movf	??___fladd+1,w
  9955  0416  00F1               	movwf	___fladd@b+1
  9956  0417  0820               	movf	??___fladd,w
  9957  0418  00F0               	movwf	___fladd@b
  9958  0419  0A7A               	incf	___fladd@bexp,w
  9959  041A  1903               	btfsc	3,2
  9960  041B  2C20               	goto	l1440
  9961  041C  3001               	movlw	1
  9962  041D  00A0               	movwf	??___fladd
  9963  041E  0820               	movf	??___fladd,w
  9964  041F  07FA               	addwf	___fladd@bexp,f
  9965  0420                     l1440:
  9966  0420  0A7A               	incf	___fladd@bexp,w
  9967  0421  1D03               	btfss	3,2
  9968  0422  087A               	movf	___fladd@bexp,w
  9969  0423  1D03               	btfss	3,2
  9970  0424  2C30               	goto	l3553
  9971  0425  3000               	movlw	0
  9972  0426  00F3               	movwf	___fladd@b+3
  9973  0427  3000               	movlw	0
  9974  0428  00F2               	movwf	___fladd@b+2
  9975  0429  3000               	movlw	0
  9976  042A  00F1               	movwf	___fladd@b+1
  9977  042B  3000               	movlw	0
  9978  042C  00F0               	movwf	___fladd@b
  9979  042D  087A               	movf	___fladd@bexp,w
  9980  042E  1903               	btfsc	3,2
  9981  042F  01F8               	clrf	___fladd@signs
  9982  0430                     l3553:
  9983  0430  1C7A               	btfss	___fladd@bexp,0
  9984  0431  2C34               	goto	l3557
  9985  0432  17F2               	bsf	___fladd@b+2,7
  9986  0433  2C39               	goto	l1448
  9987  0434                     l3557:
  9988  0434  307F               	movlw	127
  9989  0435  0020               	movlb	0	; select bank0
  9990  0436  00A0               	movwf	??___fladd
  9991  0437  0820               	movf	??___fladd,w
  9992  0438  05F2               	andwf	___fladd@b+2,f
  9993  0439                     l1448:
  9994  0439  367A               	lsrf	___fladd@bexp,w
  9995  043A  0020               	movlb	0	; select bank0
  9996  043B  00A0               	movwf	??___fladd
  9997  043C  0820               	movf	??___fladd,w
  9998  043D  00F3               	movwf	___fladd@b+3
  9999  043E  1FF8               	btfss	___fladd@signs,7
 10000  043F  0008               	return
 10001  0440  17F3               	bsf	___fladd@b+3,7
 10002  0441  0008               	return
 10003  0442                     __end_of___fladd:
 10004                           
 10005                           	psect	text73
 10006  0042                     __ptext73:	
 10007 ;; *************** function ___flmul *****************
 10008 ;; Defined at:
 10009 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcmul.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;  b               4    0[BANK0 ] unsigned char 
 10012 ;;  a               4    4[BANK0 ] unsigned char 
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;  prod            4   15[BANK0 ] struct .
 10015 ;;  grs             4   10[BANK0 ] unsigned long 
 10016 ;;  temp            2   19[BANK0 ] struct .
 10017 ;;  bexp            1   14[BANK0 ] unsigned char 
 10018 ;;  aexp            1    9[BANK0 ] unsigned char 
 10019 ;;  sign            1    8[BANK0 ] unsigned char 
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  4    0[BANK0 ] unsigned char 
 10022 ;; Registers used:
 10023 ;;		wreg, status,2, status,0, pclath, cstack
 10024 ;; Tracked objects:
 10025 ;;		On entry : 1F/0
 10026 ;;		On exit  : 1F/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10029 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10031 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10032 ;;      Totals:         5      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10033 ;;Total ram usage:       26 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:    5
 10036 ;; This function calls:
 10037 ;;		__Umul8_16
 10038 ;; This function is called by:
 10039 ;;		_CalcRequiredDelayForTrigTRIAC
 10040 ;; This function uses a non-reentrant model
 10041 ;;
 10042                           
 10043                           
 10044                           ;psect for function ___flmul
 10045  0042                     ___flmul:
 10046                           
 10047                           ;incstack = 0
 10048                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10049  0042  0823               	movf	___flmul@b+3,w
 10050  0043  3980               	andlw	128
 10051  0044  00F9               	movwf	??___flmul
 10052  0045  0879               	movf	??___flmul,w
 10053  0046  00A8               	movwf	___flmul@sign
 10054  0047  3523               	lslf	___flmul@b+3,w
 10055  0048  00F9               	movwf	??___flmul
 10056  0049  0879               	movf	??___flmul,w
 10057  004A  00AE               	movwf	___flmul@bexp
 10058  004B  1BA2               	btfsc	___flmul@b+2,7
 10059  004C  142E               	bsf	___flmul@bexp,0
 10060  004D  082E               	movf	___flmul@bexp,w
 10061  004E  1903               	btfsc	3,2
 10062  004F  285D               	goto	l3833
 10063  0050  0A2E               	incf	___flmul@bexp,w
 10064  0051  1D03               	btfss	3,2
 10065  0052  285B               	goto	l3831
 10066  0053  3000               	movlw	0
 10067  0054  00A3               	movwf	___flmul@b+3
 10068  0055  3000               	movlw	0
 10069  0056  00A2               	movwf	___flmul@b+2
 10070  0057  3000               	movlw	0
 10071  0058  00A1               	movwf	___flmul@b+1
 10072  0059  3000               	movlw	0
 10073  005A  00A0               	movwf	___flmul@b
 10074  005B                     l3831:
 10075  005B  17A2               	bsf	___flmul@b+2,7
 10076  005C  2865               	goto	l3835
 10077  005D                     l3833:
 10078  005D  3000               	movlw	0
 10079  005E  00A3               	movwf	___flmul@b+3
 10080  005F  3000               	movlw	0
 10081  0060  00A2               	movwf	___flmul@b+2
 10082  0061  3000               	movlw	0
 10083  0062  00A1               	movwf	___flmul@b+1
 10084  0063  3000               	movlw	0
 10085  0064  00A0               	movwf	___flmul@b
 10086  0065                     l3835:
 10087  0065  0827               	movf	___flmul@a+3,w
 10088  0066  3980               	andlw	128
 10089  0067  00F9               	movwf	??___flmul
 10090  0068  0879               	movf	??___flmul,w
 10091  0069  06A8               	xorwf	___flmul@sign,f
 10092  006A  3527               	lslf	___flmul@a+3,w
 10093  006B  00F9               	movwf	??___flmul
 10094  006C  0879               	movf	??___flmul,w
 10095  006D  00A9               	movwf	___flmul@aexp
 10096  006E  1BA6               	btfsc	___flmul@a+2,7
 10097  006F  1429               	bsf	___flmul@aexp,0
 10098  0070  0829               	movf	___flmul@aexp,w
 10099  0071  1903               	btfsc	3,2
 10100  0072  2880               	goto	l3851
 10101  0073  0A29               	incf	___flmul@aexp,w
 10102  0074  1D03               	btfss	3,2
 10103  0075  287E               	goto	l3849
 10104  0076  3000               	movlw	0
 10105  0077  00A7               	movwf	___flmul@a+3
 10106  0078  3000               	movlw	0
 10107  0079  00A6               	movwf	___flmul@a+2
 10108  007A  3000               	movlw	0
 10109  007B  00A5               	movwf	___flmul@a+1
 10110  007C  3000               	movlw	0
 10111  007D  00A4               	movwf	___flmul@a
 10112  007E                     l3849:
 10113  007E  17A6               	bsf	___flmul@a+2,7
 10114  007F  2888               	goto	l3853
 10115  0080                     l3851:
 10116  0080  3000               	movlw	0
 10117  0081  00A7               	movwf	___flmul@a+3
 10118  0082  3000               	movlw	0
 10119  0083  00A6               	movwf	___flmul@a+2
 10120  0084  3000               	movlw	0
 10121  0085  00A5               	movwf	___flmul@a+1
 10122  0086  3000               	movlw	0
 10123  0087  00A4               	movwf	___flmul@a
 10124  0088                     l3853:
 10125  0088  0829               	movf	___flmul@aexp,w
 10126  0089  1D03               	btfss	3,2
 10127  008A  082E               	movf	___flmul@bexp,w
 10128  008B  1D03               	btfss	3,2
 10129  008C  2896               	goto	l3861
 10130  008D  3000               	movlw	0
 10131  008E  00A3               	movwf	?___flmul+3
 10132  008F  3000               	movlw	0
 10133  0090  00A2               	movwf	?___flmul+2
 10134  0091  3000               	movlw	0
 10135  0092  00A1               	movwf	?___flmul+1
 10136  0093  3000               	movlw	0
 10137  0094  00A0               	movwf	?___flmul
 10138  0095  0008               	return
 10139  0096                     l3861:
 10140  0096  0820               	movf	___flmul@b,w
 10141  0097  00F9               	movwf	??___flmul
 10142  0098  0879               	movf	??___flmul,w
 10143  0099  00F0               	movwf	__Umul8_16@multiplicand
 10144  009A  0826               	movf	___flmul@a+2,w
 10145  009B  318B  2301  3180   	fcall	__Umul8_16
 10146  009E  0871               	movf	?__Umul8_16+1,w
 10147  009F  00B4               	movwf	___flmul@temp+1
 10148  00A0  0870               	movf	?__Umul8_16,w
 10149  00A1  00B3               	movwf	___flmul@temp
 10150  00A2  0833               	movf	___flmul@temp,w
 10151  00A3  00F9               	movwf	??___flmul
 10152  00A4  01FA               	clrf	??___flmul+1
 10153  00A5  01FB               	clrf	??___flmul+2
 10154  00A6  01FC               	clrf	??___flmul+3
 10155  00A7  087C               	movf	??___flmul+3,w
 10156  00A8  00AD               	movwf	___flmul@grs+3
 10157  00A9  087B               	movf	??___flmul+2,w
 10158  00AA  00AC               	movwf	___flmul@grs+2
 10159  00AB  087A               	movf	??___flmul+1,w
 10160  00AC  00AB               	movwf	___flmul@grs+1
 10161  00AD  0879               	movf	??___flmul,w
 10162  00AE  00AA               	movwf	___flmul@grs
 10163  00AF  0834               	movf	___flmul@temp+1,w
 10164  00B0  00F9               	movwf	??___flmul
 10165  00B1  01FA               	clrf	??___flmul+1
 10166  00B2  01FB               	clrf	??___flmul+2
 10167  00B3  01FC               	clrf	??___flmul+3
 10168  00B4  087C               	movf	??___flmul+3,w
 10169  00B5  00B2               	movwf	___flmul@prod+3
 10170  00B6  087B               	movf	??___flmul+2,w
 10171  00B7  00B1               	movwf	___flmul@prod+2
 10172  00B8  087A               	movf	??___flmul+1,w
 10173  00B9  00B0               	movwf	___flmul@prod+1
 10174  00BA  0879               	movf	??___flmul,w
 10175  00BB  00AF               	movwf	___flmul@prod
 10176  00BC  0821               	movf	___flmul@b+1,w
 10177  00BD  00F9               	movwf	??___flmul
 10178  00BE  0879               	movf	??___flmul,w
 10179  00BF  00F0               	movwf	__Umul8_16@multiplicand
 10180  00C0  0825               	movf	___flmul@a+1,w
 10181  00C1  318B  2301  3180   	fcall	__Umul8_16
 10182  00C4  0871               	movf	?__Umul8_16+1,w
 10183  00C5  00B4               	movwf	___flmul@temp+1
 10184  00C6  0870               	movf	?__Umul8_16,w
 10185  00C7  00B3               	movwf	___flmul@temp
 10186  00C8  0833               	movf	___flmul@temp,w
 10187  00C9  00F9               	movwf	??___flmul
 10188  00CA  01FA               	clrf	??___flmul+1
 10189  00CB  01FB               	clrf	??___flmul+2
 10190  00CC  01FC               	clrf	??___flmul+3
 10191  00CD  0879               	movf	??___flmul,w
 10192  00CE  07AA               	addwf	___flmul@grs,f
 10193  00CF  087A               	movf	??___flmul+1,w
 10194  00D0  3DAB               	addwfc	___flmul@grs+1,f
 10195  00D1  087B               	movf	??___flmul+2,w
 10196  00D2  3DAC               	addwfc	___flmul@grs+2,f
 10197  00D3  087C               	movf	??___flmul+3,w
 10198  00D4  3DAD               	addwfc	___flmul@grs+3,f
 10199  00D5  0834               	movf	___flmul@temp+1,w
 10200  00D6  00F9               	movwf	??___flmul
 10201  00D7  01FA               	clrf	??___flmul+1
 10202  00D8  01FB               	clrf	??___flmul+2
 10203  00D9  01FC               	clrf	??___flmul+3
 10204  00DA  0879               	movf	??___flmul,w
 10205  00DB  07AF               	addwf	___flmul@prod,f
 10206  00DC  087A               	movf	??___flmul+1,w
 10207  00DD  3DB0               	addwfc	___flmul@prod+1,f
 10208  00DE  087B               	movf	??___flmul+2,w
 10209  00DF  3DB1               	addwfc	___flmul@prod+2,f
 10210  00E0  087C               	movf	??___flmul+3,w
 10211  00E1  3DB2               	addwfc	___flmul@prod+3,f
 10212  00E2  0822               	movf	___flmul@b+2,w
 10213  00E3  00F9               	movwf	??___flmul
 10214  00E4  0879               	movf	??___flmul,w
 10215  00E5  00F0               	movwf	__Umul8_16@multiplicand
 10216  00E6  0824               	movf	___flmul@a,w
 10217  00E7  318B  2301  3180   	fcall	__Umul8_16
 10218  00EA  0871               	movf	?__Umul8_16+1,w
 10219  00EB  00B4               	movwf	___flmul@temp+1
 10220  00EC  0870               	movf	?__Umul8_16,w
 10221  00ED  00B3               	movwf	___flmul@temp
 10222  00EE  0833               	movf	___flmul@temp,w
 10223  00EF  00F9               	movwf	??___flmul
 10224  00F0  01FA               	clrf	??___flmul+1
 10225  00F1  01FB               	clrf	??___flmul+2
 10226  00F2  01FC               	clrf	??___flmul+3
 10227  00F3  0879               	movf	??___flmul,w
 10228  00F4  07AA               	addwf	___flmul@grs,f
 10229  00F5  087A               	movf	??___flmul+1,w
 10230  00F6  3DAB               	addwfc	___flmul@grs+1,f
 10231  00F7  087B               	movf	??___flmul+2,w
 10232  00F8  3DAC               	addwfc	___flmul@grs+2,f
 10233  00F9  087C               	movf	??___flmul+3,w
 10234  00FA  3DAD               	addwfc	___flmul@grs+3,f
 10235  00FB  0834               	movf	___flmul@temp+1,w
 10236  00FC  00F9               	movwf	??___flmul
 10237  00FD  01FA               	clrf	??___flmul+1
 10238  00FE  01FB               	clrf	??___flmul+2
 10239  00FF  01FC               	clrf	??___flmul+3
 10240  0100  0879               	movf	??___flmul,w
 10241  0101  07AF               	addwf	___flmul@prod,f
 10242  0102  087A               	movf	??___flmul+1,w
 10243  0103  3DB0               	addwfc	___flmul@prod+1,f
 10244  0104  087B               	movf	??___flmul+2,w
 10245  0105  3DB1               	addwfc	___flmul@prod+2,f
 10246  0106  087C               	movf	??___flmul+3,w
 10247  0107  3DB2               	addwfc	___flmul@prod+3,f
 10248  0108  3008               	movlw	8
 10249  0109                     u3415:
 10250  0109  35AA               	lslf	___flmul@grs,f
 10251  010A  0DAB               	rlf	___flmul@grs+1,f
 10252  010B  0DAC               	rlf	___flmul@grs+2,f
 10253  010C  0DAD               	rlf	___flmul@grs+3,f
 10254  010D  0B89               	decfsz	9,f
 10255  010E  2909               	goto	u3415
 10256  010F  0821               	movf	___flmul@b+1,w
 10257  0110  00F9               	movwf	??___flmul
 10258  0111  0879               	movf	??___flmul,w
 10259  0112  00F0               	movwf	__Umul8_16@multiplicand
 10260  0113  0824               	movf	___flmul@a,w
 10261  0114  318B  2301  3180   	fcall	__Umul8_16
 10262  0117  0871               	movf	?__Umul8_16+1,w
 10263  0118  00B4               	movwf	___flmul@temp+1
 10264  0119  0870               	movf	?__Umul8_16,w
 10265  011A  00B3               	movwf	___flmul@temp
 10266  011B  0833               	movf	___flmul@temp,w
 10267  011C  07AA               	addwf	___flmul@grs,f
 10268  011D  0834               	movf	___flmul@temp+1,w
 10269  011E  3DAB               	addwfc	___flmul@grs+1,f
 10270  011F  3000               	movlw	0
 10271  0120  3DAC               	addwfc	___flmul@grs+2,f
 10272  0121  3DAD               	addwfc	___flmul@grs+3,f
 10273  0122  0820               	movf	___flmul@b,w
 10274  0123  00F9               	movwf	??___flmul
 10275  0124  0879               	movf	??___flmul,w
 10276  0125  00F0               	movwf	__Umul8_16@multiplicand
 10277  0126  0825               	movf	___flmul@a+1,w
 10278  0127  318B  2301  3180   	fcall	__Umul8_16
 10279  012A  0871               	movf	?__Umul8_16+1,w
 10280  012B  00B4               	movwf	___flmul@temp+1
 10281  012C  0870               	movf	?__Umul8_16,w
 10282  012D  00B3               	movwf	___flmul@temp
 10283  012E  0833               	movf	___flmul@temp,w
 10284  012F  07AA               	addwf	___flmul@grs,f
 10285  0130  0834               	movf	___flmul@temp+1,w
 10286  0131  3DAB               	addwfc	___flmul@grs+1,f
 10287  0132  3000               	movlw	0
 10288  0133  3DAC               	addwfc	___flmul@grs+2,f
 10289  0134  3DAD               	addwfc	___flmul@grs+3,f
 10290  0135  3008               	movlw	8
 10291  0136                     u3425:
 10292  0136  35AA               	lslf	___flmul@grs,f
 10293  0137  0DAB               	rlf	___flmul@grs+1,f
 10294  0138  0DAC               	rlf	___flmul@grs+2,f
 10295  0139  0DAD               	rlf	___flmul@grs+3,f
 10296  013A  0B89               	decfsz	9,f
 10297  013B  2936               	goto	u3425
 10298  013C  0820               	movf	___flmul@b,w
 10299  013D  00F9               	movwf	??___flmul
 10300  013E  0879               	movf	??___flmul,w
 10301  013F  00F0               	movwf	__Umul8_16@multiplicand
 10302  0140  0824               	movf	___flmul@a,w
 10303  0141  318B  2301  3180   	fcall	__Umul8_16
 10304  0144  0871               	movf	?__Umul8_16+1,w
 10305  0145  00B4               	movwf	___flmul@temp+1
 10306  0146  0870               	movf	?__Umul8_16,w
 10307  0147  00B3               	movwf	___flmul@temp
 10308  0148  0833               	movf	___flmul@temp,w
 10309  0149  07AA               	addwf	___flmul@grs,f
 10310  014A  0834               	movf	___flmul@temp+1,w
 10311  014B  3DAB               	addwfc	___flmul@grs+1,f
 10312  014C  3000               	movlw	0
 10313  014D  3DAC               	addwfc	___flmul@grs+2,f
 10314  014E  3DAD               	addwfc	___flmul@grs+3,f
 10315  014F  0821               	movf	___flmul@b+1,w
 10316  0150  00F9               	movwf	??___flmul
 10317  0151  0879               	movf	??___flmul,w
 10318  0152  00F0               	movwf	__Umul8_16@multiplicand
 10319  0153  0826               	movf	___flmul@a+2,w
 10320  0154  318B  2301  3180   	fcall	__Umul8_16
 10321  0157  0871               	movf	?__Umul8_16+1,w
 10322  0158  00B4               	movwf	___flmul@temp+1
 10323  0159  0870               	movf	?__Umul8_16,w
 10324  015A  00B3               	movwf	___flmul@temp
 10325  015B  0833               	movf	___flmul@temp,w
 10326  015C  07AF               	addwf	___flmul@prod,f
 10327  015D  0834               	movf	___flmul@temp+1,w
 10328  015E  3DB0               	addwfc	___flmul@prod+1,f
 10329  015F  3000               	movlw	0
 10330  0160  3DB1               	addwfc	___flmul@prod+2,f
 10331  0161  3DB2               	addwfc	___flmul@prod+3,f
 10332  0162  0822               	movf	___flmul@b+2,w
 10333  0163  00F9               	movwf	??___flmul
 10334  0164  0879               	movf	??___flmul,w
 10335  0165  00F0               	movwf	__Umul8_16@multiplicand
 10336  0166  0825               	movf	___flmul@a+1,w
 10337  0167  318B  2301  3180   	fcall	__Umul8_16
 10338  016A  0871               	movf	?__Umul8_16+1,w
 10339  016B  00B4               	movwf	___flmul@temp+1
 10340  016C  0870               	movf	?__Umul8_16,w
 10341  016D  00B3               	movwf	___flmul@temp
 10342  016E  0833               	movf	___flmul@temp,w
 10343  016F  07AF               	addwf	___flmul@prod,f
 10344  0170  0834               	movf	___flmul@temp+1,w
 10345  0171  3DB0               	addwfc	___flmul@prod+1,f
 10346  0172  3000               	movlw	0
 10347  0173  3DB1               	addwfc	___flmul@prod+2,f
 10348  0174  3DB2               	addwfc	___flmul@prod+3,f
 10349  0175  0822               	movf	___flmul@b+2,w
 10350  0176  00F9               	movwf	??___flmul
 10351  0177  0879               	movf	??___flmul,w
 10352  0178  00F0               	movwf	__Umul8_16@multiplicand
 10353  0179  0826               	movf	___flmul@a+2,w
 10354  017A  318B  2301  3180   	fcall	__Umul8_16
 10355  017D  0871               	movf	?__Umul8_16+1,w
 10356  017E  00B4               	movwf	___flmul@temp+1
 10357  017F  0870               	movf	?__Umul8_16,w
 10358  0180  00B3               	movwf	___flmul@temp
 10359  0181  0833               	movf	___flmul@temp,w
 10360  0182  00F9               	movwf	??___flmul
 10361  0183  0834               	movf	___flmul@temp+1,w
 10362  0184  00FA               	movwf	??___flmul+1
 10363  0185  01FB               	clrf	??___flmul+2
 10364  0186  01FC               	clrf	??___flmul+3
 10365  0187  3008               	movlw	8
 10366  0188                     u3435:
 10367  0188  35F9               	lslf	??___flmul,f
 10368  0189  0DFA               	rlf	??___flmul+1,f
 10369  018A  0DFB               	rlf	??___flmul+2,f
 10370  018B  0DFC               	rlf	??___flmul+3,f
 10371  018C  0B89               	decfsz	9,f
 10372  018D  2988               	goto	u3435
 10373  018E  0879               	movf	??___flmul,w
 10374  018F  07AF               	addwf	___flmul@prod,f
 10375  0190  087A               	movf	??___flmul+1,w
 10376  0191  3DB0               	addwfc	___flmul@prod+1,f
 10377  0192  087B               	movf	??___flmul+2,w
 10378  0193  3DB1               	addwfc	___flmul@prod+2,f
 10379  0194  087C               	movf	??___flmul+3,w
 10380  0195  3DB2               	addwfc	___flmul@prod+3,f
 10381  0196  082D               	movf	___flmul@grs+3,w
 10382  0197  00F9               	movwf	??___flmul
 10383  0198  01FA               	clrf	??___flmul+1
 10384  0199  01FB               	clrf	??___flmul+2
 10385  019A  01FC               	clrf	??___flmul+3
 10386  019B  0879               	movf	??___flmul,w
 10387  019C  07AF               	addwf	___flmul@prod,f
 10388  019D  087A               	movf	??___flmul+1,w
 10389  019E  3DB0               	addwfc	___flmul@prod+1,f
 10390  019F  087B               	movf	??___flmul+2,w
 10391  01A0  3DB1               	addwfc	___flmul@prod+2,f
 10392  01A1  087C               	movf	??___flmul+3,w
 10393  01A2  3DB2               	addwfc	___flmul@prod+3,f
 10394  01A3  3008               	movlw	8
 10395  01A4                     u3445:
 10396  01A4  35AA               	lslf	___flmul@grs,f
 10397  01A5  0DAB               	rlf	___flmul@grs+1,f
 10398  01A6  0DAC               	rlf	___flmul@grs+2,f
 10399  01A7  0DAD               	rlf	___flmul@grs+3,f
 10400  01A8  0B89               	decfsz	9,f
 10401  01A9  29A4               	goto	u3445
 10402  01AA  082E               	movf	___flmul@bexp,w
 10403  01AB  0729               	addwf	___flmul@aexp,w
 10404  01AC  00F9               	movwf	??___flmul
 10405  01AD  01FA               	clrf	??___flmul+1
 10406  01AE  0DFA               	rlf	??___flmul+1,f
 10407  01AF  0879               	movf	??___flmul,w
 10408  01B0  3E82               	addlw	130
 10409  01B1  00B3               	movwf	___flmul@temp
 10410  01B2  30FF               	movlw	255
 10411  01B3  3D7A               	addwfc	??___flmul+1,w
 10412  01B4  00B4               	movwf	___flmul@temp+1
 10413  01B5                     l3913:
 10414  01B5  1BB1               	btfsc	___flmul@prod+2,7
 10415  01B6  29CC               	goto	l3915
 10416  01B7  3001               	movlw	1
 10417  01B8                     u3455:
 10418  01B8  35AF               	lslf	___flmul@prod,f
 10419  01B9  0DB0               	rlf	___flmul@prod+1,f
 10420  01BA  0DB1               	rlf	___flmul@prod+2,f
 10421  01BB  0DB2               	rlf	___flmul@prod+3,f
 10422  01BC  0B89               	decfsz	9,f
 10423  01BD  29B8               	goto	u3455
 10424  01BE  1BAD               	btfsc	___flmul@grs+3,7
 10425  01BF  142F               	bsf	___flmul@prod,0
 10426  01C0  3001               	movlw	1
 10427  01C1                     u3475:
 10428  01C1  35AA               	lslf	___flmul@grs,f
 10429  01C2  0DAB               	rlf	___flmul@grs+1,f
 10430  01C3  0DAC               	rlf	___flmul@grs+2,f
 10431  01C4  0DAD               	rlf	___flmul@grs+3,f
 10432  01C5  0B89               	decfsz	9,f
 10433  01C6  29C1               	goto	u3475
 10434  01C7  30FF               	movlw	255
 10435  01C8  07B3               	addwf	___flmul@temp,f
 10436  01C9  30FF               	movlw	255
 10437  01CA  3DB4               	addwfc	___flmul@temp+1,f
 10438  01CB  29B5               	goto	l3913
 10439  01CC                     l3915:
 10440  01CC  01A9               	clrf	___flmul@aexp
 10441  01CD  1FAD               	btfss	___flmul@grs+3,7
 10442  01CE  29E5               	goto	l3925
 10443  01CF  30FF               	movlw	255
 10444  01D0  052A               	andwf	___flmul@grs,w
 10445  01D1  00F9               	movwf	??___flmul
 10446  01D2  30FF               	movlw	255
 10447  01D3  052B               	andwf	___flmul@grs+1,w
 10448  01D4  00FA               	movwf	??___flmul+1
 10449  01D5  30FF               	movlw	255
 10450  01D6  052C               	andwf	___flmul@grs+2,w
 10451  01D7  00FB               	movwf	??___flmul+2
 10452  01D8  307F               	movlw	127
 10453  01D9  052D               	andwf	___flmul@grs+3,w
 10454  01DA  00FC               	movwf	??___flmul+3
 10455  01DB  087C               	movf	??___flmul+3,w
 10456  01DC  047B               	iorwf	??___flmul+2,w
 10457  01DD  047A               	iorwf	??___flmul+1,w
 10458  01DE  0479               	iorwf	??___flmul,w
 10459  01DF  1903               	skipnz
 10460  01E0  182F               	btfsc	___flmul@prod,0
 10461  01E1  29E3               	goto	l3921
 10462  01E2  29E5               	goto	l3925
 10463  01E3                     l3921:
 10464  01E3  01A9               	clrf	___flmul@aexp
 10465  01E4  0AA9               	incf	___flmul@aexp,f
 10466  01E5                     l3925:
 10467  01E5  0829               	movf	___flmul@aexp,w
 10468  01E6  1903               	btfsc	3,2
 10469  01E7  2A0E               	goto	l3935
 10470  01E8  3001               	movlw	1
 10471  01E9  07AF               	addwf	___flmul@prod,f
 10472  01EA  3000               	movlw	0
 10473  01EB  3DB0               	addwfc	___flmul@prod+1,f
 10474  01EC  3000               	movlw	0
 10475  01ED  3DB1               	addwfc	___flmul@prod+2,f
 10476  01EE  3000               	movlw	0
 10477  01EF  3DB2               	addwfc	___flmul@prod+3,f
 10478  01F0  1C32               	btfss	___flmul@prod+3,0
 10479  01F1  2A0E               	goto	l3935
 10480  01F2  082F               	movf	___flmul@prod,w
 10481  01F3  00F9               	movwf	??___flmul
 10482  01F4  0830               	movf	___flmul@prod+1,w
 10483  01F5  00FA               	movwf	??___flmul+1
 10484  01F6  0831               	movf	___flmul@prod+2,w
 10485  01F7  00FB               	movwf	??___flmul+2
 10486  01F8  0832               	movf	___flmul@prod+3,w
 10487  01F9  00FC               	movwf	??___flmul+3
 10488  01FA  3001               	movlw	1
 10489  01FB  00FD               	movwf	??___flmul+4
 10490  01FC                     u3545:
 10491  01FC  37FC               	asrf	??___flmul+3,f
 10492  01FD  0CFB               	rrf	??___flmul+2,f
 10493  01FE  0CFA               	rrf	??___flmul+1,f
 10494  01FF  0CF9               	rrf	??___flmul,f
 10495  0200  0BFD               	decfsz	??___flmul+4,f
 10496  0201  29FC               	goto	u3545
 10497  0202  087C               	movf	??___flmul+3,w
 10498  0203  00B2               	movwf	___flmul@prod+3
 10499  0204  087B               	movf	??___flmul+2,w
 10500  0205  00B1               	movwf	___flmul@prod+2
 10501  0206  087A               	movf	??___flmul+1,w
 10502  0207  00B0               	movwf	___flmul@prod+1
 10503  0208  0879               	movf	??___flmul,w
 10504  0209  00AF               	movwf	___flmul@prod
 10505  020A  3001               	movlw	1
 10506  020B  07B3               	addwf	___flmul@temp,f
 10507  020C  3000               	movlw	0
 10508  020D  3DB4               	addwfc	___flmul@temp+1,f
 10509  020E                     l3935:
 10510  020E  0834               	movf	___flmul@temp+1,w
 10511  020F  3A80               	xorlw	128
 10512  0210  00F9               	movwf	??___flmul
 10513  0211  3080               	movlw	128
 10514  0212  0279               	subwf	??___flmul,w
 10515  0213  1D03               	skipz
 10516  0214  2A17               	goto	u3555
 10517  0215  30FF               	movlw	255
 10518  0216  0233               	subwf	___flmul@temp,w
 10519  0217                     u3555:
 10520  0217  1C03               	skipc
 10521  0218  2A23               	goto	l3939
 10522  0219  307F               	movlw	127
 10523  021A  0020               	movlb	0	; select bank0
 10524  021B  00B2               	movwf	___flmul@prod+3
 10525  021C  3080               	movlw	128
 10526  021D  00B1               	movwf	___flmul@prod+2
 10527  021E  3000               	movlw	0
 10528  021F  00B0               	movwf	___flmul@prod+1
 10529  0220  3000               	movlw	0
 10530  0221  00AF               	movwf	___flmul@prod
 10531  0222  2A4D               	goto	l1514
 10532  0223                     l3939:
 10533  0223  0020               	movlb	0	; select bank0
 10534  0224  0834               	movf	___flmul@temp+1,w
 10535  0225  3A80               	xorlw	128
 10536  0226  00F9               	movwf	??___flmul
 10537  0227  3080               	movlw	128
 10538  0228  0279               	subwf	??___flmul,w
 10539  0229  1D03               	skipz
 10540  022A  2A2D               	goto	u3565
 10541  022B  3001               	movlw	1
 10542  022C  0233               	subwf	___flmul@temp,w
 10543  022D                     u3565:
 10544  022D  1803               	skipnc
 10545  022E  2A3A               	goto	l3945
 10546  022F  3000               	movlw	0
 10547  0230  0020               	movlb	0	; select bank0
 10548  0231  00B2               	movwf	___flmul@prod+3
 10549  0232  3000               	movlw	0
 10550  0233  00B1               	movwf	___flmul@prod+2
 10551  0234  3000               	movlw	0
 10552  0235  00B0               	movwf	___flmul@prod+1
 10553  0236  3000               	movlw	0
 10554  0237  00AF               	movwf	___flmul@prod
 10555  0238  01A8               	clrf	___flmul@sign
 10556  0239  2A4D               	goto	l1514
 10557  023A                     l3945:
 10558  023A  0020               	movlb	0	; select bank0
 10559  023B  0833               	movf	___flmul@temp,w
 10560  023C  00F9               	movwf	??___flmul
 10561  023D  0879               	movf	??___flmul,w
 10562  023E  00AE               	movwf	___flmul@bexp
 10563  023F  30FF               	movlw	255
 10564  0240  05AF               	andwf	___flmul@prod,f
 10565  0241  30FF               	movlw	255
 10566  0242  05B0               	andwf	___flmul@prod+1,f
 10567  0243  307F               	movlw	127
 10568  0244  05B1               	andwf	___flmul@prod+2,f
 10569  0245  3000               	movlw	0
 10570  0246  05B2               	andwf	___flmul@prod+3,f
 10571  0247  182E               	btfsc	___flmul@bexp,0
 10572  0248  17B1               	bsf	___flmul@prod+2,7
 10573  0249  362E               	lsrf	___flmul@bexp,w
 10574  024A  00F9               	movwf	??___flmul
 10575  024B  0879               	movf	??___flmul,w
 10576  024C  00B2               	movwf	___flmul@prod+3
 10577  024D                     l1514:
 10578  024D  0828               	movf	___flmul@sign,w
 10579  024E  00F9               	movwf	??___flmul
 10580  024F  0879               	movf	??___flmul,w
 10581  0250  04B2               	iorwf	___flmul@prod+3,f
 10582  0251  0832               	movf	___flmul@prod+3,w
 10583  0252  00A3               	movwf	?___flmul+3
 10584  0253  0831               	movf	___flmul@prod+2,w
 10585  0254  00A2               	movwf	?___flmul+2
 10586  0255  0830               	movf	___flmul@prod+1,w
 10587  0256  00A1               	movwf	?___flmul+1
 10588  0257  082F               	movf	___flmul@prod,w
 10589  0258  00A0               	movwf	?___flmul
 10590  0259  0008               	return
 10591  025A                     __end_of___flmul:
 10592                           
 10593                           	psect	text74
 10594  0B01                     __ptext74:	
 10595 ;; *************** function __Umul8_16 *****************
 10596 ;; Defined at:
 10597 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul8_16.c"
 10598 ;; Parameters:    Size  Location     Type
 10599 ;;  multiplier      1    wreg     unsigned char 
 10600 ;;  multiplicand    1    0[COMMON] unsigned char 
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;  multiplier      1    8[COMMON] unsigned char 
 10603 ;;  word_mpld       2    6[COMMON] unsigned int 
 10604 ;;  product         2    4[COMMON] unsigned int 
 10605 ;; Return value:  Size  Location     Type
 10606 ;;                  2    0[COMMON] unsigned int 
 10607 ;; Registers used:
 10608 ;;		wreg, status,2, status,0
 10609 ;; Tracked objects:
 10610 ;;		On entry : 1F/0
 10611 ;;		On exit  : 1F/0
 10612 ;;		Unchanged: 1F/0
 10613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10615 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;Total ram usage:        9 bytes
 10619 ;; Hardware stack levels used:    1
 10620 ;; Hardware stack levels required when called:    4
 10621 ;; This function calls:
 10622 ;;		Nothing
 10623 ;; This function is called by:
 10624 ;;		___flmul
 10625 ;; This function uses a non-reentrant model
 10626 ;;
 10627                           
 10628                           
 10629                           ;psect for function __Umul8_16
 10630  0B01                     __Umul8_16:
 10631                           
 10632                           ;incstack = 0
 10633                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10634                           ;__Umul8_16@multiplier stored from wreg
 10635  0B01  00F8               	movwf	__Umul8_16@multiplier
 10636  0B02  01F4               	clrf	__Umul8_16@product
 10637  0B03  01F5               	clrf	__Umul8_16@product+1
 10638  0B04  0870               	movf	__Umul8_16@multiplicand,w
 10639  0B05  00F2               	movwf	??__Umul8_16
 10640  0B06  01F3               	clrf	??__Umul8_16+1
 10641  0B07  0872               	movf	??__Umul8_16,w
 10642  0B08  00F6               	movwf	__Umul8_16@word_mpld
 10643  0B09  0873               	movf	??__Umul8_16+1,w
 10644  0B0A  00F7               	movwf	__Umul8_16@word_mpld+1
 10645  0B0B                     l3567:
 10646  0B0B  1C78               	btfss	__Umul8_16@multiplier,0
 10647  0B0C  2B11               	goto	l1521
 10648  0B0D  0876               	movf	__Umul8_16@word_mpld,w
 10649  0B0E  07F4               	addwf	__Umul8_16@product,f
 10650  0B0F  0877               	movf	__Umul8_16@word_mpld+1,w
 10651  0B10  3DF5               	addwfc	__Umul8_16@product+1,f
 10652  0B11                     l1521:
 10653  0B11  3001               	movlw	1
 10654  0B12                     u2895:
 10655  0B12  35F6               	lslf	__Umul8_16@word_mpld,f
 10656  0B13  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10657  0B14  0B89               	decfsz	9,f
 10658  0B15  2B12               	goto	u2895
 10659  0B16  1003               	clrc
 10660  0B17  0CF8               	rrf	__Umul8_16@multiplier,f
 10661  0B18  0878               	movf	__Umul8_16@multiplier,w
 10662  0B19  1D03               	btfss	3,2
 10663  0B1A  2B0B               	goto	l3567
 10664  0B1B  0875               	movf	__Umul8_16@product+1,w
 10665  0B1C  00F1               	movwf	?__Umul8_16+1
 10666  0B1D  0874               	movf	__Umul8_16@product,w
 10667  0B1E  00F0               	movwf	?__Umul8_16
 10668  0B1F  0008               	return
 10669  0B20                     __end_of__Umul8_16:
 10670                           
 10671                           	psect	text75
 10672  0442                     __ptext75:	
 10673 ;; *************** function ___fldiv *****************
 10674 ;; Defined at:
 10675 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcdiv.c"
 10676 ;; Parameters:    Size  Location     Type
 10677 ;;  a               4   21[BANK0 ] unsigned int 
 10678 ;;  b               4   25[BANK0 ] unsigned int 
 10679 ;; Auto vars:     Size  Location     Type
 10680 ;;  grs             4   41[BANK0 ] unsigned long 
 10681 ;;  rem             4   34[BANK0 ] unsigned long 
 10682 ;;  new_exp         2   39[BANK0 ] int 
 10683 ;;  aexp            1   46[BANK0 ] unsigned char 
 10684 ;;  bexp            1   45[BANK0 ] unsigned char 
 10685 ;;  sign            1   38[BANK0 ] unsigned char 
 10686 ;; Return value:  Size  Location     Type
 10687 ;;                  4   21[BANK0 ] unsigned char 
 10688 ;; Registers used:
 10689 ;;		wreg, status,2, status,0
 10690 ;; Tracked objects:
 10691 ;;		On entry : 1F/0
 10692 ;;		On exit  : 1F/0
 10693 ;;		Unchanged: 0/0
 10694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10695 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10698 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10699 ;;Total ram usage:       26 bytes
 10700 ;; Hardware stack levels used:    1
 10701 ;; Hardware stack levels required when called:    4
 10702 ;; This function calls:
 10703 ;;		Nothing
 10704 ;; This function is called by:
 10705 ;;		_CalcRequiredDelayForTrigTRIAC
 10706 ;; This function uses a non-reentrant model
 10707 ;;
 10708                           
 10709                           
 10710                           ;psect for function ___fldiv
 10711  0442                     ___fldiv:
 10712                           
 10713                           ;incstack = 0
 10714                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10715  0442  083C               	movf	___fldiv@b+3,w
 10716  0443  3980               	andlw	128
 10717  0444  00BD               	movwf	??___fldiv
 10718  0445  083D               	movf	??___fldiv,w
 10719  0446  00C6               	movwf	___fldiv@sign
 10720  0447  353C               	lslf	___fldiv@b+3,w
 10721  0448  00BD               	movwf	??___fldiv
 10722  0449  083D               	movf	??___fldiv,w
 10723  044A  00CD               	movwf	___fldiv@bexp
 10724  044B  1BBB               	btfsc	___fldiv@b+2,7
 10725  044C  144D               	bsf	___fldiv@bexp,0
 10726  044D  084D               	movf	___fldiv@bexp,w
 10727  044E  1903               	btfsc	3,2
 10728  044F  2C5E               	goto	l3695
 10729  0450  0A4D               	incf	___fldiv@bexp,w
 10730  0451  1D03               	btfss	3,2
 10731  0452  2C5B               	goto	l3691
 10732  0453  3000               	movlw	0
 10733  0454  00BC               	movwf	___fldiv@b+3
 10734  0455  3000               	movlw	0
 10735  0456  00BB               	movwf	___fldiv@b+2
 10736  0457  3000               	movlw	0
 10737  0458  00BA               	movwf	___fldiv@b+1
 10738  0459  3000               	movlw	0
 10739  045A  00B9               	movwf	___fldiv@b
 10740  045B                     l3691:
 10741  045B  17BB               	bsf	___fldiv@b+2,7
 10742  045C  01BC               	clrf	___fldiv@b+3
 10743  045D  2C66               	goto	l3697
 10744  045E                     l3695:
 10745  045E  3000               	movlw	0
 10746  045F  00BC               	movwf	___fldiv@b+3
 10747  0460  3000               	movlw	0
 10748  0461  00BB               	movwf	___fldiv@b+2
 10749  0462  3000               	movlw	0
 10750  0463  00BA               	movwf	___fldiv@b+1
 10751  0464  3000               	movlw	0
 10752  0465  00B9               	movwf	___fldiv@b
 10753  0466                     l3697:
 10754  0466  0838               	movf	___fldiv@a+3,w
 10755  0467  3980               	andlw	128
 10756  0468  00BD               	movwf	??___fldiv
 10757  0469  083D               	movf	??___fldiv,w
 10758  046A  06C6               	xorwf	___fldiv@sign,f
 10759  046B  3538               	lslf	___fldiv@a+3,w
 10760  046C  00BD               	movwf	??___fldiv
 10761  046D  083D               	movf	??___fldiv,w
 10762  046E  00CE               	movwf	___fldiv@aexp
 10763  046F  1BB7               	btfsc	___fldiv@a+2,7
 10764  0470  144E               	bsf	___fldiv@aexp,0
 10765  0471  084E               	movf	___fldiv@aexp,w
 10766  0472  1903               	btfsc	3,2
 10767  0473  2C82               	goto	l3715
 10768  0474  0A4E               	incf	___fldiv@aexp,w
 10769  0475  1D03               	btfss	3,2
 10770  0476  2C7F               	goto	l3711
 10771  0477  3000               	movlw	0
 10772  0478  00B8               	movwf	___fldiv@a+3
 10773  0479  3000               	movlw	0
 10774  047A  00B7               	movwf	___fldiv@a+2
 10775  047B  3000               	movlw	0
 10776  047C  00B6               	movwf	___fldiv@a+1
 10777  047D  3000               	movlw	0
 10778  047E  00B5               	movwf	___fldiv@a
 10779  047F                     l3711:
 10780  047F  17B7               	bsf	___fldiv@a+2,7
 10781  0480  01B8               	clrf	___fldiv@a+3
 10782  0481  2C8A               	goto	l1462
 10783  0482                     l3715:
 10784  0482  3000               	movlw	0
 10785  0483  00B8               	movwf	___fldiv@a+3
 10786  0484  3000               	movlw	0
 10787  0485  00B7               	movwf	___fldiv@a+2
 10788  0486  3000               	movlw	0
 10789  0487  00B6               	movwf	___fldiv@a+1
 10790  0488  3000               	movlw	0
 10791  0489  00B5               	movwf	___fldiv@a
 10792  048A                     l1462:
 10793  048A  0838               	movf	___fldiv@a+3,w
 10794  048B  0437               	iorwf	___fldiv@a+2,w
 10795  048C  0436               	iorwf	___fldiv@a+1,w
 10796  048D  0435               	iorwf	___fldiv@a,w
 10797  048E  1D03               	skipz
 10798  048F  2CA9               	goto	l3725
 10799  0490  3000               	movlw	0
 10800  0491  00BC               	movwf	___fldiv@b+3
 10801  0492  3000               	movlw	0
 10802  0493  00BB               	movwf	___fldiv@b+2
 10803  0494  3000               	movlw	0
 10804  0495  00BA               	movwf	___fldiv@b+1
 10805  0496  3000               	movlw	0
 10806  0497  00B9               	movwf	___fldiv@b
 10807  0498  3080               	movlw	128
 10808  0499  04BB               	iorwf	___fldiv@b+2,f
 10809  049A  307F               	movlw	127
 10810  049B  04BC               	iorwf	___fldiv@b+3,f
 10811  049C                     L5:
 10812  049C  0846               	movf	___fldiv@sign,w
 10813  049D  00BD               	movwf	??___fldiv
 10814  049E  083D               	movf	??___fldiv,w
 10815  049F  04BC               	iorwf	___fldiv@b+3,f
 10816  04A0  083C               	movf	___fldiv@b+3,w
 10817  04A1  00B8               	movwf	?___fldiv+3
 10818  04A2  083B               	movf	___fldiv@b+2,w
 10819  04A3  00B7               	movwf	?___fldiv+2
 10820  04A4  083A               	movf	___fldiv@b+1,w
 10821  04A5  00B6               	movwf	?___fldiv+1
 10822  04A6  0839               	movf	___fldiv@b,w
 10823  04A7  00B5               	movwf	?___fldiv
 10824  04A8  0008               	return
 10825  04A9                     l3725:
 10826  04A9  084D               	movf	___fldiv@bexp,w
 10827  04AA  1D03               	btfss	3,2
 10828  04AB  2CB5               	goto	l3731
 10829  04AC  3000               	movlw	0
 10830  04AD  00B8               	movwf	?___fldiv+3
 10831  04AE  3000               	movlw	0
 10832  04AF  00B7               	movwf	?___fldiv+2
 10833  04B0  3000               	movlw	0
 10834  04B1  00B6               	movwf	?___fldiv+1
 10835  04B2  3000               	movlw	0
 10836  04B3  00B5               	movwf	?___fldiv
 10837  04B4  0008               	return
 10838  04B5                     l3731:
 10839  04B5  084D               	movf	___fldiv@bexp,w
 10840  04B6  00BD               	movwf	??___fldiv
 10841  04B7  01BE               	clrf	??___fldiv+1
 10842  04B8  083E               	movf	??___fldiv+1,w
 10843  04B9  00C0               	movwf	??___fldiv+3
 10844  04BA  084E               	movf	___fldiv@aexp,w
 10845  04BB  023D               	subwf	??___fldiv,w
 10846  04BC  00BF               	movwf	??___fldiv+2
 10847  04BD  1C03               	skipc
 10848  04BE  03C0               	decf	??___fldiv+3,f
 10849  04BF  083F               	movf	??___fldiv+2,w
 10850  04C0  3E7F               	addlw	127
 10851  04C1  00C7               	movwf	___fldiv@new_exp
 10852  04C2  3000               	movlw	0
 10853  04C3  3D40               	addwfc	??___fldiv+3,w
 10854  04C4  00C8               	movwf	___fldiv@new_exp+1
 10855  04C5  083C               	movf	___fldiv@b+3,w
 10856  04C6  00C5               	movwf	___fldiv@rem+3
 10857  04C7  083B               	movf	___fldiv@b+2,w
 10858  04C8  00C4               	movwf	___fldiv@rem+2
 10859  04C9  083A               	movf	___fldiv@b+1,w
 10860  04CA  00C3               	movwf	___fldiv@rem+1
 10861  04CB  0839               	movf	___fldiv@b,w
 10862  04CC  00C2               	movwf	___fldiv@rem
 10863  04CD  3000               	movlw	0
 10864  04CE  00BC               	movwf	___fldiv@b+3
 10865  04CF  3000               	movlw	0
 10866  04D0  00BB               	movwf	___fldiv@b+2
 10867  04D1  3000               	movlw	0
 10868  04D2  00BA               	movwf	___fldiv@b+1
 10869  04D3  3000               	movlw	0
 10870  04D4  00B9               	movwf	___fldiv@b
 10871  04D5  3000               	movlw	0
 10872  04D6  00CC               	movwf	___fldiv@grs+3
 10873  04D7  3000               	movlw	0
 10874  04D8  00CB               	movwf	___fldiv@grs+2
 10875  04D9  3000               	movlw	0
 10876  04DA  00CA               	movwf	___fldiv@grs+1
 10877  04DB  3000               	movlw	0
 10878  04DC  00C9               	movwf	___fldiv@grs
 10879  04DD  01CE               	clrf	___fldiv@aexp
 10880  04DE                     l3759:
 10881  04DE  301A               	movlw	26
 10882  04DF  024E               	subwf	___fldiv@aexp,w
 10883  04E0  1803               	btfsc	3,0
 10884  04E1  2D1A               	goto	l3761
 10885  04E2  084E               	movf	___fldiv@aexp,w
 10886  04E3  1903               	btfsc	3,2
 10887  04E4  2CFC               	goto	l3751
 10888  04E5  3001               	movlw	1
 10889  04E6                     u3135:
 10890  04E6  35C2               	lslf	___fldiv@rem,f
 10891  04E7  0DC3               	rlf	___fldiv@rem+1,f
 10892  04E8  0DC4               	rlf	___fldiv@rem+2,f
 10893  04E9  0DC5               	rlf	___fldiv@rem+3,f
 10894  04EA  0B89               	decfsz	9,f
 10895  04EB  2CE6               	goto	u3135
 10896  04EC  3001               	movlw	1
 10897  04ED                     u3145:
 10898  04ED  35B9               	lslf	___fldiv@b,f
 10899  04EE  0DBA               	rlf	___fldiv@b+1,f
 10900  04EF  0DBB               	rlf	___fldiv@b+2,f
 10901  04F0  0DBC               	rlf	___fldiv@b+3,f
 10902  04F1  0B89               	decfsz	9,f
 10903  04F2  2CED               	goto	u3145
 10904  04F3  1BCC               	btfsc	___fldiv@grs+3,7
 10905  04F4  1439               	bsf	___fldiv@b,0
 10906  04F5  3001               	movlw	1
 10907  04F6                     u3165:
 10908  04F6  35C9               	lslf	___fldiv@grs,f
 10909  04F7  0DCA               	rlf	___fldiv@grs+1,f
 10910  04F8  0DCB               	rlf	___fldiv@grs+2,f
 10911  04F9  0DCC               	rlf	___fldiv@grs+3,f
 10912  04FA  0B89               	decfsz	9,f
 10913  04FB  2CF6               	goto	u3165
 10914  04FC                     l3751:
 10915  04FC  0838               	movf	___fldiv@a+3,w
 10916  04FD  0245               	subwf	___fldiv@rem+3,w
 10917  04FE  1D03               	skipz
 10918  04FF  2D0A               	goto	u3175
 10919  0500  0837               	movf	___fldiv@a+2,w
 10920  0501  0244               	subwf	___fldiv@rem+2,w
 10921  0502  1D03               	skipz
 10922  0503  2D0A               	goto	u3175
 10923  0504  0836               	movf	___fldiv@a+1,w
 10924  0505  0243               	subwf	___fldiv@rem+1,w
 10925  0506  1D03               	skipz
 10926  0507  2D0A               	goto	u3175
 10927  0508  0835               	movf	___fldiv@a,w
 10928  0509  0242               	subwf	___fldiv@rem,w
 10929  050A                     u3175:
 10930  050A  1C03               	skipc
 10931  050B  2D15               	goto	l3757
 10932  050C  174C               	bsf	___fldiv@grs+3,6
 10933  050D  0835               	movf	___fldiv@a,w
 10934  050E  02C2               	subwf	___fldiv@rem,f
 10935  050F  0836               	movf	___fldiv@a+1,w
 10936  0510  3BC3               	subwfb	___fldiv@rem+1,f
 10937  0511  0837               	movf	___fldiv@a+2,w
 10938  0512  3BC4               	subwfb	___fldiv@rem+2,f
 10939  0513  0838               	movf	___fldiv@a+3,w
 10940  0514  3BC5               	subwfb	___fldiv@rem+3,f
 10941  0515                     l3757:
 10942  0515  3001               	movlw	1
 10943  0516  00BD               	movwf	??___fldiv
 10944  0517  083D               	movf	??___fldiv,w
 10945  0518  07CE               	addwf	___fldiv@aexp,f
 10946  0519  2CDE               	goto	l3759
 10947  051A                     l3761:
 10948  051A  0845               	movf	___fldiv@rem+3,w
 10949  051B  0444               	iorwf	___fldiv@rem+2,w
 10950  051C  0443               	iorwf	___fldiv@rem+1,w
 10951  051D  0442               	iorwf	___fldiv@rem,w
 10952  051E  1D03               	btfss	3,2
 10953  051F  1449               	bsf	___fldiv@grs,0
 10954  0520                     l3775:
 10955  0520  1BBB               	btfsc	___fldiv@b+2,7
 10956  0521  2D37               	goto	l3777
 10957  0522  3001               	movlw	1
 10958  0523                     u3205:
 10959  0523  35B9               	lslf	___fldiv@b,f
 10960  0524  0DBA               	rlf	___fldiv@b+1,f
 10961  0525  0DBB               	rlf	___fldiv@b+2,f
 10962  0526  0DBC               	rlf	___fldiv@b+3,f
 10963  0527  0B89               	decfsz	9,f
 10964  0528  2D23               	goto	u3205
 10965  0529  1BCC               	btfsc	___fldiv@grs+3,7
 10966  052A  1439               	bsf	___fldiv@b,0
 10967  052B  3001               	movlw	1
 10968  052C                     u3225:
 10969  052C  35C9               	lslf	___fldiv@grs,f
 10970  052D  0DCA               	rlf	___fldiv@grs+1,f
 10971  052E  0DCB               	rlf	___fldiv@grs+2,f
 10972  052F  0DCC               	rlf	___fldiv@grs+3,f
 10973  0530  0B89               	decfsz	9,f
 10974  0531  2D2C               	goto	u3225
 10975  0532  30FF               	movlw	255
 10976  0533  07C7               	addwf	___fldiv@new_exp,f
 10977  0534  30FF               	movlw	255
 10978  0535  3DC8               	addwfc	___fldiv@new_exp+1,f
 10979  0536  2D20               	goto	l3775
 10980  0537                     l3777:
 10981  0537  01CE               	clrf	___fldiv@aexp
 10982  0538  1FCC               	btfss	___fldiv@grs+3,7
 10983  0539  2D50               	goto	l3787
 10984  053A  30FF               	movlw	255
 10985  053B  0549               	andwf	___fldiv@grs,w
 10986  053C  00BD               	movwf	??___fldiv
 10987  053D  30FF               	movlw	255
 10988  053E  054A               	andwf	___fldiv@grs+1,w
 10989  053F  00BE               	movwf	??___fldiv+1
 10990  0540  30FF               	movlw	255
 10991  0541  054B               	andwf	___fldiv@grs+2,w
 10992  0542  00BF               	movwf	??___fldiv+2
 10993  0543  307F               	movlw	127
 10994  0544  054C               	andwf	___fldiv@grs+3,w
 10995  0545  00C0               	movwf	??___fldiv+3
 10996  0546  0840               	movf	??___fldiv+3,w
 10997  0547  043F               	iorwf	??___fldiv+2,w
 10998  0548  043E               	iorwf	??___fldiv+1,w
 10999  0549  043D               	iorwf	??___fldiv,w
 11000  054A  1903               	skipnz
 11001  054B  1839               	btfsc	___fldiv@b,0
 11002  054C  2D4E               	goto	l3783
 11003  054D  2D50               	goto	l3787
 11004  054E                     l3783:
 11005  054E  01CE               	clrf	___fldiv@aexp
 11006  054F  0ACE               	incf	___fldiv@aexp,f
 11007  0550                     l3787:
 11008  0550  084E               	movf	___fldiv@aexp,w
 11009  0551  1903               	btfsc	3,2
 11010  0552  2D79               	goto	l3797
 11011  0553  3001               	movlw	1
 11012  0554  07B9               	addwf	___fldiv@b,f
 11013  0555  3000               	movlw	0
 11014  0556  3DBA               	addwfc	___fldiv@b+1,f
 11015  0557  3000               	movlw	0
 11016  0558  3DBB               	addwfc	___fldiv@b+2,f
 11017  0559  3000               	movlw	0
 11018  055A  3DBC               	addwfc	___fldiv@b+3,f
 11019  055B  1C3C               	btfss	___fldiv@b+3,0
 11020  055C  2D79               	goto	l3797
 11021  055D  0839               	movf	___fldiv@b,w
 11022  055E  00BD               	movwf	??___fldiv
 11023  055F  083A               	movf	___fldiv@b+1,w
 11024  0560  00BE               	movwf	??___fldiv+1
 11025  0561  083B               	movf	___fldiv@b+2,w
 11026  0562  00BF               	movwf	??___fldiv+2
 11027  0563  083C               	movf	___fldiv@b+3,w
 11028  0564  00C0               	movwf	??___fldiv+3
 11029  0565  3001               	movlw	1
 11030  0566  00C1               	movwf	??___fldiv+4
 11031  0567                     u3295:
 11032  0567  37C0               	asrf	??___fldiv+3,f
 11033  0568  0CBF               	rrf	??___fldiv+2,f
 11034  0569  0CBE               	rrf	??___fldiv+1,f
 11035  056A  0CBD               	rrf	??___fldiv,f
 11036  056B  0BC1               	decfsz	??___fldiv+4,f
 11037  056C  2D67               	goto	u3295
 11038  056D  0840               	movf	??___fldiv+3,w
 11039  056E  00BC               	movwf	___fldiv@b+3
 11040  056F  083F               	movf	??___fldiv+2,w
 11041  0570  00BB               	movwf	___fldiv@b+2
 11042  0571  083E               	movf	??___fldiv+1,w
 11043  0572  00BA               	movwf	___fldiv@b+1
 11044  0573  083D               	movf	??___fldiv,w
 11045  0574  00B9               	movwf	___fldiv@b
 11046  0575  3001               	movlw	1
 11047  0576  07C7               	addwf	___fldiv@new_exp,f
 11048  0577  3000               	movlw	0
 11049  0578  3DC8               	addwfc	___fldiv@new_exp+1,f
 11050  0579                     l3797:
 11051  0579  0848               	movf	___fldiv@new_exp+1,w
 11052  057A  3A80               	xorlw	128
 11053  057B  00BD               	movwf	??___fldiv
 11054  057C  3080               	movlw	128
 11055  057D  023D               	subwf	??___fldiv,w
 11056  057E  1D03               	skipz
 11057  057F  2D82               	goto	u3305
 11058  0580  30FF               	movlw	255
 11059  0581  0247               	subwf	___fldiv@new_exp,w
 11060  0582                     u3305:
 11061  0582  1C03               	skipc
 11062  0583  2D91               	goto	l1483
 11063  0584  30FF               	movlw	255
 11064  0585  0020               	movlb	0	; select bank0
 11065  0586  00C7               	movwf	___fldiv@new_exp
 11066  0587  3000               	movlw	0
 11067  0588  00C8               	movwf	___fldiv@new_exp+1
 11068  0589  3000               	movlw	0
 11069  058A  00BC               	movwf	___fldiv@b+3
 11070  058B  3000               	movlw	0
 11071  058C  00BB               	movwf	___fldiv@b+2
 11072  058D  3000               	movlw	0
 11073  058E  00BA               	movwf	___fldiv@b+1
 11074  058F  3000               	movlw	0
 11075  0590  00B9               	movwf	___fldiv@b
 11076  0591                     l1483:
 11077  0591  0020               	movlb	0	; select bank0
 11078  0592  0848               	movf	___fldiv@new_exp+1,w
 11079  0593  3A80               	xorlw	128
 11080  0594  00BD               	movwf	??___fldiv
 11081  0595  3080               	movlw	128
 11082  0596  023D               	subwf	??___fldiv,w
 11083  0597  1D03               	skipz
 11084  0598  2D9B               	goto	u3315
 11085  0599  3001               	movlw	1
 11086  059A  0247               	subwf	___fldiv@new_exp,w
 11087  059B                     u3315:
 11088  059B  1803               	skipnc
 11089  059C  2DA9               	goto	l1484
 11090  059D  0020               	movlb	0	; select bank0
 11091  059E  01C7               	clrf	___fldiv@new_exp
 11092  059F  01C8               	clrf	___fldiv@new_exp+1
 11093  05A0  3000               	movlw	0
 11094  05A1  00BC               	movwf	___fldiv@b+3
 11095  05A2  3000               	movlw	0
 11096  05A3  00BB               	movwf	___fldiv@b+2
 11097  05A4  3000               	movlw	0
 11098  05A5  00BA               	movwf	___fldiv@b+1
 11099  05A6  3000               	movlw	0
 11100  05A7  00B9               	movwf	___fldiv@b
 11101  05A8  01C6               	clrf	___fldiv@sign
 11102  05A9                     l1484:
 11103  05A9  0020               	movlb	0	; select bank0
 11104  05AA  0847               	movf	___fldiv@new_exp,w
 11105  05AB  00BD               	movwf	??___fldiv
 11106  05AC  083D               	movf	??___fldiv,w
 11107  05AD  00CD               	movwf	___fldiv@bexp
 11108  05AE  1C4D               	btfss	___fldiv@bexp,0
 11109  05AF  2DB2               	goto	l3811
 11110  05B0  17BB               	bsf	___fldiv@b+2,7
 11111  05B1  2DB6               	goto	l1486
 11112  05B2                     l3811:
 11113  05B2  307F               	movlw	127
 11114  05B3  00BD               	movwf	??___fldiv
 11115  05B4  083D               	movf	??___fldiv,w
 11116  05B5  05BB               	andwf	___fldiv@b+2,f
 11117  05B6                     l1486:
 11118  05B6  364D               	lsrf	___fldiv@bexp,w
 11119  05B7  00BD               	movwf	??___fldiv
 11120  05B8  083D               	movf	??___fldiv,w
 11121  05B9  00BC               	movwf	___fldiv@b+3
 11122  05BA  2C9C               	goto	L5
 11123  05BB                     __end_of___fldiv:
 11124                           
 11125                           	psect	text76
 11126  0947                     __ptext76:	
 11127 ;; *************** function _ADC_SelectChannel *****************
 11128 ;; Defined at:
 11129 ;;		line 85 in file "mcc_generated_files/adc.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;  channel         1    wreg     enum E2603
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;  channel         1    1[COMMON] enum E2603
 11134 ;; Return value:  Size  Location     Type
 11135 ;;                  1    wreg      void 
 11136 ;; Registers used:
 11137 ;;		wreg, status,2, status,0
 11138 ;; Tracked objects:
 11139 ;;		On entry : 1F/2
 11140 ;;		On exit  : 1F/1
 11141 ;;		Unchanged: 0/0
 11142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11145 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11147 ;;Total ram usage:        2 bytes
 11148 ;; Hardware stack levels used:    1
 11149 ;; Hardware stack levels required when called:    4
 11150 ;; This function calls:
 11151 ;;		Nothing
 11152 ;; This function is called by:
 11153 ;;		_Init_Function
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           
 11158                           ;psect for function _ADC_SelectChannel
 11159  0947                     _ADC_SelectChannel:
 11160                           
 11161                           ;incstack = 0
 11162                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 11163                           ;ADC_SelectChannel@channel stored from wreg
 11164  0947  00F1               	movwf	ADC_SelectChannel@channel
 11165                           
 11166                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
 11167  0948  0871               	movf	ADC_SelectChannel@channel,w
 11168  0949  00F0               	movwf	??_ADC_SelectChannel
 11169  094A  0DF0               	rlf	??_ADC_SelectChannel,f
 11170  094B  0DF0               	rlf	??_ADC_SelectChannel,f
 11171  094C  0021               	movlb	1	; select bank1
 11172  094D  081D               	movf	29,w	;volatile
 11173  094E  0670               	xorwf	??_ADC_SelectChannel,w
 11174  094F  3983               	andlw	-125
 11175  0950  0670               	xorwf	??_ADC_SelectChannel,w
 11176  0951  009D               	movwf	29	;volatile
 11177                           
 11178                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
 11179  0952  141D               	bsf	29,0	;volatile
 11180  0953  0008               	return
 11181  0954                     __end_of_ADC_SelectChannel:
 11182                           
 11183                           	psect	intentry
 11184  0004                     __pintentry:	
 11185 ;; *************** function _INTERRUPT_InterruptManager *****************
 11186 ;; Defined at:
 11187 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;		None
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;		None
 11192 ;; Return value:  Size  Location     Type
 11193 ;;                  1    wreg      void 
 11194 ;; Registers used:
 11195 ;;		wreg, status,2, status,0, pclath, cstack
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11205 ;;Total ram usage:        0 bytes
 11206 ;; Hardware stack levels used:    1
 11207 ;; Hardware stack levels required when called:    3
 11208 ;; This function calls:
 11209 ;;		_PIN_MANAGER_IOC
 11210 ;;		_TMR2_ISR
 11211 ;; This function is called by:
 11212 ;;		Interrupt level 1
 11213 ;; This function uses a non-reentrant model
 11214 ;;
 11215                           
 11216  0004                     _INTERRUPT_InterruptManager:
 11217                           
 11218                           ;incstack = 0
 11219  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11220                           
 11221                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 11222  0005  3180               	pagesel	$
 11223                           
 11224                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
 11225  0006  198B               	btfsc	11,3	;volatile
 11226  0007  1C0B               	btfss	11,0	;volatile
 11227  0008  280D               	goto	i1l742
 11228                           
 11229                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 11230  0009  3188  20B7  3180   	fcall	_PIN_MANAGER_IOC
 11231                           
 11232                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 11233  000C  2817               	goto	i1l748
 11234  000D                     i1l742:	
 11235                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 11236                           
 11237  000D  1F0B               	btfss	11,6	;volatile
 11238  000E  2817               	goto	i1l748
 11239                           
 11240                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 11241  000F  0021               	movlb	1	; select bank1
 11242  0010  1C91               	btfss	17,1	;volatile
 11243  0011  2817               	goto	i1l748
 11244  0012  0020               	movlb	0	; select bank0
 11245  0013  1C91               	btfss	17,1	;volatile
 11246  0014  2817               	goto	i1l748
 11247                           
 11248                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
 11249  0015  3189  2122         	fcall	_TMR2_ISR
 11250  0017                     i1l748:	
 11251                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
 11252                           
 11253                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 11254                           
 11255  0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11256  0018  0009               	retfie
 11257  0019                     __end_of_INTERRUPT_InterruptManager:
 11258                           
 11259                           	psect	text78
 11260  0922                     __ptext78:	
 11261 ;; *************** function _TMR2_ISR *****************
 11262 ;; Defined at:
 11263 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 11264 ;; Parameters:    Size  Location     Type
 11265 ;;		None
 11266 ;; Auto vars:     Size  Location     Type
 11267 ;;		None
 11268 ;; Return value:  Size  Location     Type
 11269 ;;                  1    wreg      void 
 11270 ;; Registers used:
 11271 ;;		wreg, status,2, status,0, pclath, cstack
 11272 ;; Tracked objects:
 11273 ;;		On entry : 1F/0
 11274 ;;		On exit  : 0/0
 11275 ;;		Unchanged: 0/0
 11276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11281 ;;Total ram usage:        0 bytes
 11282 ;; Hardware stack levels used:    1
 11283 ;; Hardware stack levels required when called:    1
 11284 ;; This function calls:
 11285 ;;		Absolute function
 11286 ;;		_TMR2_DefaultInterruptHandler
 11287 ;; This function is called by:
 11288 ;;		_INTERRUPT_InterruptManager
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           
 11293                           ;psect for function _TMR2_ISR
 11294  0922                     _TMR2_ISR:
 11295                           
 11296                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
 11297                           
 11298                           ;incstack = 0
 11299                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 11300  0922  1091               	bcf	17,1	;volatile
 11301                           
 11302                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
 11303  0923  0021               	movlb	1	; select bank1
 11304  0924  0861               	movf	_TMR2_InterruptHandler^(0+128),w
 11305  0925  0462               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 11306  0926  1903               	btfsc	3,2
 11307  0927  0008               	return
 11308                           
 11309                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
 11310  0928  0862               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 11311  0929  008A               	movwf	10
 11312  092A  0861               	movf	_TMR2_InterruptHandler^(0+128),w
 11313  092B  000A               	callw
 11314  092C  3189               	pagesel	$
 11315  092D  0008               	return
 11316  092E                     __end_of_TMR2_ISR:
 11317                           
 11318                           	psect	text79
 11319  0896                     __ptext79:	
 11320 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 11321 ;; Defined at:
 11322 ;;		line 136 in file "mcc_generated_files/tmr2.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;		None
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;		None
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  1    wreg      void 
 11329 ;; Registers used:
 11330 ;;		None
 11331 ;; Tracked objects:
 11332 ;;		On entry : 1F/1
 11333 ;;		On exit  : 1F/1
 11334 ;;		Unchanged: 1F/0
 11335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;Total ram usage:        0 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; This function calls:
 11343 ;;		Nothing
 11344 ;; This function is called by:
 11345 ;;		_TMR2_Initialize
 11346 ;;		_TMR2_ISR
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           
 11351                           ;psect for function _TMR2_DefaultInterruptHandler
 11352  0896                     _TMR2_DefaultInterruptHandler:
 11353                           
 11354                           ;incstack = 0
 11355                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 11356  0896  0008               	return
 11357  0897                     __end_of_TMR2_DefaultInterruptHandler:
 11358                           
 11359                           	psect	text80
 11360  08B7                     __ptext80:	
 11361 ;; *************** function _PIN_MANAGER_IOC *****************
 11362 ;; Defined at:
 11363 ;;		line 115 in file "mcc_generated_files/pin_manager.c"
 11364 ;; Parameters:    Size  Location     Type
 11365 ;;		None
 11366 ;; Auto vars:     Size  Location     Type
 11367 ;;		None
 11368 ;; Return value:  Size  Location     Type
 11369 ;;                  1    wreg      void 
 11370 ;; Registers used:
 11371 ;;		wreg, status,2, status,0, pclath, cstack
 11372 ;; Tracked objects:
 11373 ;;		On entry : 0/0
 11374 ;;		On exit  : 1F/7
 11375 ;;		Unchanged: 0/0
 11376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11381 ;;Total ram usage:        0 bytes
 11382 ;; Hardware stack levels used:    1
 11383 ;; Hardware stack levels required when called:    2
 11384 ;; This function calls:
 11385 ;;		_IOCAF2_ISR
 11386 ;; This function is called by:
 11387 ;;		_INTERRUPT_InterruptManager
 11388 ;; This function uses a non-reentrant model
 11389 ;;
 11390                           
 11391                           
 11392                           ;psect for function _PIN_MANAGER_IOC
 11393  08B7                     _PIN_MANAGER_IOC:
 11394                           
 11395                           ;mcc_generated_files/pin_manager.c: 118:     if(IOCAFbits.IOCAF2 == 1)
 11396                           
 11397                           ;incstack = 0
 11398                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 11399  08B7  0027               	movlb	7	; select bank7
 11400  08B8  1D13               	btfss	19,2	;volatile
 11401  08B9  0008               	return
 11402                           
 11403                           ;mcc_generated_files/pin_manager.c: 119:     {;mcc_generated_files/pin_manager.c: 120:  
      +                                 IOCAF2_ISR();
 11404  08BA  3189  213A         	fcall	_IOCAF2_ISR
 11405  08BC  0008               	return
 11406  08BD                     __end_of_PIN_MANAGER_IOC:
 11407                           
 11408                           	psect	text81
 11409  093A                     __ptext81:	
 11410 ;; *************** function _IOCAF2_ISR *****************
 11411 ;; Defined at:
 11412 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
 11413 ;; Parameters:    Size  Location     Type
 11414 ;;		None
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;		None
 11417 ;; Return value:  Size  Location     Type
 11418 ;;                  1    wreg      void 
 11419 ;; Registers used:
 11420 ;;		wreg, status,2, status,0, pclath, cstack
 11421 ;; Tracked objects:
 11422 ;;		On entry : 1F/7
 11423 ;;		On exit  : 1F/7
 11424 ;;		Unchanged: 0/0
 11425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11430 ;;Total ram usage:        0 bytes
 11431 ;; Hardware stack levels used:    1
 11432 ;; Hardware stack levels required when called:    1
 11433 ;; This function calls:
 11434 ;;		Absolute function
 11435 ;;		_IOCAF2_DefaultInterruptHandler
 11436 ;; This function is called by:
 11437 ;;		_PIN_MANAGER_IOC
 11438 ;; This function uses a non-reentrant model
 11439 ;;
 11440                           
 11441                           
 11442                           ;psect for function _IOCAF2_ISR
 11443  093A                     _IOCAF2_ISR:
 11444                           
 11445                           ;mcc_generated_files/pin_manager.c: 132:     if(IOCAF2_InterruptHandler)
 11446                           
 11447                           ;incstack = 0
 11448                           ; Regs used in _IOCAF2_ISR: [wreg+status,2+status,0+pclath+cstack]
 11449  093A  0021               	movlb	1	; select bank1
 11450  093B  0869               	movf	_IOCAF2_InterruptHandler^(0+128),w
 11451  093C  046A               	iorwf	(_IOCAF2_InterruptHandler+1)^(0+128),w
 11452  093D  1903               	btfsc	3,2
 11453  093E  2944               	goto	i1l4079
 11454                           
 11455                           ;mcc_generated_files/pin_manager.c: 133:     {;mcc_generated_files/pin_manager.c: 134:  
      +                                 IOCAF2_InterruptHandler();
 11456  093F  086A               	movf	(_IOCAF2_InterruptHandler+1)^(0+128),w
 11457  0940  008A               	movwf	10
 11458  0941  0869               	movf	_IOCAF2_InterruptHandler^(0+128),w
 11459  0942  000A               	callw
 11460  0943  3189               	pagesel	$
 11461  0944                     i1l4079:
 11462                           
 11463                           ;mcc_generated_files/pin_manager.c: 136:     IOCAFbits.IOCAF2 = 0;
 11464  0944  0027               	movlb	7	; select bank7
 11465  0945  1113               	bcf	19,2	;volatile
 11466  0946  0008               	return
 11467  0947                     __end_of_IOCAF2_ISR:
 11468                           
 11469                           	psect	text82
 11470  0895                     __ptext82:	
 11471 ;; *************** function _IOCAF2_DefaultInterruptHandler *****************
 11472 ;; Defined at:
 11473 ;;		line 149 in file "mcc_generated_files/pin_manager.c"
 11474 ;; Parameters:    Size  Location     Type
 11475 ;;		None
 11476 ;; Auto vars:     Size  Location     Type
 11477 ;;		None
 11478 ;; Return value:  Size  Location     Type
 11479 ;;                  1    wreg      void 
 11480 ;; Registers used:
 11481 ;;		None
 11482 ;; Tracked objects:
 11483 ;;		On entry : 1F/1
 11484 ;;		On exit  : 1F/1
 11485 ;;		Unchanged: 1F/0
 11486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11491 ;;Total ram usage:        0 bytes
 11492 ;; Hardware stack levels used:    1
 11493 ;; This function calls:
 11494 ;;		Nothing
 11495 ;; This function is called by:
 11496 ;;		_PIN_MANAGER_Initialize
 11497 ;;		_IOCAF2_ISR
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           
 11502                           ;psect for function _IOCAF2_DefaultInterruptHandler
 11503  0895                     _IOCAF2_DefaultInterruptHandler:
 11504                           
 11505                           ;incstack = 0
 11506                           ; Regs used in _IOCAF2_DefaultInterruptHandler: []
 11507  0895  0008               	return
 11508  0896                     __end_of_IOCAF2_DefaultInterruptHandler:
 11509  007E                     btemp	set	126	;btemp
 11510  007E                     int$flags	set	126
 11511  007E                     wtemp0	set	126
 11512                           
 11513                           	psect	idloc
 11514                           
 11515                           ;Config register IDLOC0 @ 0x8000
 11516                           ;	unspecified, using default values
 11517  8000                     	org	32768
 11518  8000  3FFF               	dw	16383
 11519                           
 11520                           ;Config register IDLOC1 @ 0x8001
 11521                           ;	unspecified, using default values
 11522  8001                     	org	32769
 11523  8001  3FFF               	dw	16383
 11524                           
 11525                           ;Config register IDLOC2 @ 0x8002
 11526                           ;	unspecified, using default values
 11527  8002                     	org	32770
 11528  8002  3FFF               	dw	16383
 11529                           
 11530                           ;Config register IDLOC3 @ 0x8003
 11531                           ;	unspecified, using default values
 11532  8003                     	org	32771
 11533  8003  3FFF               	dw	16383
 11534                           
 11535                           	psect	config
 11536                           
 11537                           ;Config register CONFIG1 @ 0x8007
 11538                           ;	Oscillator Selection
 11539                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11540                           ;	Watchdog Timer Enable
 11541                           ;	WDTE = OFF, WDT disabled
 11542                           ;	Power-up Timer Enable
 11543                           ;	PWRTE = OFF, PWRT disabled
 11544                           ;	MCLR Pin Function Select
 11545                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11546                           ;	Flash Program Memory Code Protection
 11547                           ;	CP = OFF, Program memory code protection is disabled
 11548                           ;	Data Memory Code Protection
 11549                           ;	CPD = OFF, Data memory code protection is disabled
 11550                           ;	Brown-out Reset Enable
 11551                           ;	BOREN = NSLEEP, Brown-out Reset enabled while running and disabled in Sleep
 11552                           ;	Clock Out Enable
 11553                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11554                           ;	Internal/External Switchover
 11555                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11556                           ;	Fail-Safe Clock Monitor Enable
 11557                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11558  8007                     	org	32775
 11559  8007  3DE4               	dw	15844
 11560                           
 11561                           ;Config register CONFIG2 @ 0x8008
 11562                           ;	Flash Memory Self-Write Protection
 11563                           ;	WRT = OFF, Write protection off
 11564                           ;	PLL Enable
 11565                           ;	PLLEN = OFF, 4x PLL disabled
 11566                           ;	Stack Overflow/Underflow Reset Enable
 11567                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11568                           ;	Brown-out Reset Voltage Selection
 11569                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11570                           ;	Low-Voltage Programming Enable
 11571                           ;	LVP = ON, Low-voltage programming enabled
 11572  8008                     	org	32776
 11573  8008  3EFF               	dw	16127

Data Sizes:
    Strings     1
    Constant    56
    Data        34
    BSS         71
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      80
    BANK1            80      0      75
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Button_Service$2465$0	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Service$2465	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    Button_StateMachine$0	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    memcpy@d1	PTR void  size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    memcpy@s1	PTR const void  size(2) Largest target is 32
		 -> mtouch_button_init(CODE[32]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 32
		 -> mtouch_button_init(CODE[32]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    IOCAF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF2_DefaultInterruptHandler(), 

    IOCAF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF2_DefaultInterruptHandler(), 

    Button_Baseline_Update@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Baseline_Initialize@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Reading_Update_Helper@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Reading_Update@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Deviation_Update@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Tick_helper@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_State_Pressed@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_State_NotPressed@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_State_Initializing@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Service@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    sp__memcpy	PTR void  size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E2819,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E2819,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setInactive@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setActive@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_isEnabled@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_setScanFunction@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setScanFunction@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setScanFunction@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acquisition@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_Service@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    S50$scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    S50$scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_scanB	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_scanA	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    callback_sampled	PTR FTN(enum E2661,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 


Critical Paths under _main in COMMON

    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _Sensor_Acquisition->_Sensor_Acq_ExecutePacket
    _Sensor_Acq_ExecutePacket->_Sensor_Acq_ExecuteScan
    _Sensor_Acq_ExecuteScan->___bmul
    _Button_Service->_Button_State_Initializing
    _Button_Service->_Button_State_NotPressed
    _Button_Service->_Button_State_Pressed
    _MTOUCH_Sensor_wasSampled->___bmul
    _Button_State_Initializing->_Button_Baseline_Initialize
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_Button_Reading_Update_Helper
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___bmul
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF2_SetInterruptHandler
    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Enable
    _MTOUCH_Sensor_Enable->___bmul
    _MTOUCH_Button_InitializeAll->_memcpy
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CalcRequiredDelayForTrigTRIAC->___flmul
    ___fltol->___flmul
    ___flsub->___flmul
    ___flmul->__Umul8_16
    ___fldiv->___flmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _StopTouchDetection->_MTOUCH_Service_Mainloop
    _MTOUCH_Service_Mainloop->_MTOUCH_Button_ServiceAll
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_Deviation_Update
    _Init_Function->_CalcRequiredDelayForTrigTRIAC
    _CalcRequiredDelayForTrigTRIAC->___fltol
    ___fltol->___fldiv
    ___flsub->___fldiv
    ___fldiv->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   19213
                                             68 BANK0      4     4      0
                      _Init_Function
                  _SYSTEM_Initialize
                 _StartStop_AlarmLED
                 _StopTouchDetection
 ---------------------------------------------------------------------------------
 (1) _StopTouchDetection                                   0     0      0    8175
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
                 _StartStop_AlarmLED
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Service_Mainloop                              1     1      0    8109
                                             11 BANK0      1     1      0
           _MTOUCH_Button_ServiceAll
                  _MTOUCH_Initialize
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
                        _MTOUCH_Tick
                 _MTOUCH_needReburst
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_needReburst                                   1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Tick                                          0     0      0     189
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Tick                                   2     2      0     189
                                              3 COMMON     2     2      0
                 _Button_Tick_helper
 ---------------------------------------------------------------------------------
 (5) _Button_Tick_helper                                   3     3      0     121
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_SampleAll                              2     2      0    2105
                                              8 BANK0      2     2      0
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (4) _Sensor_Service                                       5     5      0    2037
                                              3 BANK0      5     5      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback
            _Sensor_RawSample_Update
                   _Sensor_isEnabled
                  _Sensor_setSampled
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) _Sensor_setSampled                                    1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_RawSample_Update                              1     1      0      77
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_DefaultCallback                               1     0      1      53
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _Sensor_Acquisition                                   3     3      0    1238
                                              0 BANK0      3     3      0
           _Sensor_Acq_ExecutePacket
                   _Sensor_isEnabled
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _Sensor_setInactive                                   1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Sensor_setActive                                     1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_isEnabled                                     1     1      0     110
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Sensor_Acq_ExecutePacket                             6     6      0     709
                                              8 COMMON     6     6      0
                       _MTOUCH_Delay
                      _MTOUCH_Random
      _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
             _Sensor_setScanFunction
 ---------------------------------------------------------------------------------
 (7) _Sensor_setScanFunction                               1     1      0      77
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Sensor_Acq_ExecuteScan                               4     4      0     394
                                              4 COMMON     4     4      0
                 _MTOUCH_CVD_ScanA_0 *
                 _MTOUCH_CVD_ScanA_1 *
                 _MTOUCH_CVD_ScanB_0 *
                 _MTOUCH_CVD_ScanB_1 *
                             ___bmul
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanB_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanB_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanA_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_CVD_ScanA_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Random                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Delay                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_ServiceAll                             2     2      0    4055
                                              9 BANK0      2     2      0
                     _Button_Service
 ---------------------------------------------------------------------------------
 (4) _Button_Service                                       4     4      0    3987
                                              5 BANK0      4     4      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_wasSampled                             2     2      0     370
                                              4 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _Button_State_Pressed                                 3     2      1     565
                                             13 COMMON     1     0      1
                                              0 BANK0      2     2      0
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (5) _Button_State_NotPressed                              3     2      1     904
                                             13 COMMON     1     0      1
                                              0 BANK0      2     2      0
             _Button_Baseline_Update
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (6) _Button_DefaultCallback                               1     0      1     159
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _Button_State_Initializing                            5     4      1     936
                                             13 COMMON     1     0      1
                                              0 BANK0      4     4      0
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (6) _Button_Baseline_Update                               7     7      0     260
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (6) _Button_Baseline_Initialize                           5     5      0     478
                                              8 COMMON     5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (5) _Button_Reading_Update                                1     1      0     667
                                             11 COMMON     1     1      0
       _Button_Reading_Update_Helper
 ---------------------------------------------------------------------------------
 (6) _Button_Reading_Update_Helper                         3     3      0     590
                                              8 COMMON     3     3      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Sensor_RawSample_Get                          4     2      2     370
                                              4 COMMON     4     2      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) _Button_Deviation_Update                             15    15      0     213
                                              0 COMMON    10    10      0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_isPressed                              2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2071
                     _ADC_Initialize
                  _EUSART_Initialize
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      98
         _IOCAF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF2_SetInterruptHandler                           2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Initialize                                    0     0      0    1581
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     156
                                              1 COMMON     2     2      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_InitializeAll                          2     2      0     896
                                              8 COMMON     2     2      0
           _MTOUCH_Sensor_Initialize
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Initialize                             2     2      0     828
                                              6 COMMON     2     2      0
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_Enable                                 2     2      0     370
                                              4 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     326
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_InitializeAll                          2     2      0     529
                                             10 COMMON     2     2      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              10     6      4     328
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Button_Initialize                             4     4      0     133
                                              0 COMMON     4     4      0
            _MTOUCH_Sensor_Calibrate
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_Calibrate                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Function                                        0     0      0    8944
                  _ADC_SelectChannel
      _CalcRequiredDelayForTrigTRIAC
                 _StartStop_AlarmLED
                   _StartStop_Buzzer
                      _StartStop_Fan
 ---------------------------------------------------------------------------------
 (2) _StartStop_Fan                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _StartStop_Buzzer                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _StartStop_AlarmLED                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CalcRequiredDelayForTrigTRIAC                       10     6      4    8856
                                             58 BANK0     10     6      4
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     368
                                             47 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3215
                                             47 BANK0      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2892
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3200
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1929
                                             21 BANK0     26    18      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0       0
                    _PIN_MANAGER_IOC
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF2_ISR
 ---------------------------------------------------------------------------------
 (11) _IOCAF2_ISR                                          0     0      0       0
                   Absolute function *
     _IOCAF2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _IOCAF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Function
     _ADC_SelectChannel
     _CalcRequiredDelayForTrigTRIAC
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
       ___flmul
         __Umul8_16
       ___flsub
         ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
         ___flmul (ARG)
           __Umul8_16
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
         ___flmul (ARG)
           __Umul8_16
     _StartStop_AlarmLED
     _StartStop_Buzzer
     _StartStop_Fan
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
           _MTOUCH_Sensor_Calibrate
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Enable
             ___bmul
           _Sensor_Sampled_Reset
           ___bmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF2_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _StartStop_AlarmLED
   _StopTouchDetection
     _MTOUCH_Button_isPressed
     _MTOUCH_Service_Mainloop
       _MTOUCH_Button_ServiceAll
         _Button_Service
           _Button_Deviation_Update
           _Button_Reading_Update
             _Button_Reading_Update_Helper
               _MTOUCH_Sensor_RawSample_Get
                 ___bmul
           _Button_State_Initializing *
             _Button_Baseline_Initialize
               _MTOUCH_Sensor_RawSample_Get
                 ___bmul
             _Button_Baseline_Update
           _Button_State_NotPressed *
             _Button_Baseline_Update
             _Button_DefaultCallback
             _MTOUCH_Button_Initialize
               _MTOUCH_Sensor_Calibrate
           _Button_State_Pressed *
             _Button_DefaultCallback
             _MTOUCH_Button_Initialize
               _MTOUCH_Sensor_Calibrate
           _MTOUCH_Button_Initialize *
             _MTOUCH_Sensor_Calibrate
           _MTOUCH_Sensor_isCalibrated *
           _MTOUCH_Sensor_wasSampled *
             ___bmul
       _MTOUCH_Initialize
         _MTOUCH_Button_InitializeAll
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
           _memcpy
         _MTOUCH_Sensor_InitializeAll
           _MTOUCH_Sensor_Initialize
             _MTOUCH_Sensor_Enable
               ___bmul
             _Sensor_Sampled_Reset
             ___bmul
         _MTOUCH_Sensor_Sampled_ResetAll
           _Sensor_Sampled_Reset
         _MTOUCH_Sensor_Scan_Initialize
       _MTOUCH_Sensor_SampleAll
         _Sensor_Service
           _Sensor_Acquisition
             _Sensor_Acq_ExecutePacket
               _MTOUCH_Delay
               _MTOUCH_Random
               _MTOUCH_Sensor_Scan_Initialize
               _Sensor_Acq_ExecuteScan
                 _MTOUCH_CVD_ScanA_0 *
                 _MTOUCH_CVD_ScanA_1 *
                 _MTOUCH_CVD_ScanB_0 *
                 _MTOUCH_CVD_ScanB_1 *
                 ___bmul *
               _Sensor_setScanFunction
             _Sensor_isEnabled
             _Sensor_setActive
             _Sensor_setInactive
             _abs
           _Sensor_DefaultCallback
           _Sensor_RawSample_Update
           _Sensor_isEnabled
           _Sensor_setSampled
           ___bmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Tick
         _MTOUCH_Button_Tick
           _Button_Tick_helper
       _MTOUCH_needReburst
     _StartStop_AlarmLED

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF2_ISR
       Absolute function(Fake) *
       _IOCAF2_DefaultInterruptHandler *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 21 12:34:26 2023

                  _required_delay_for_dim_ms_g 00DA               __end_of_TMR2_SetInterruptHandler 08B7  
                 ?_MTOUCH_Sensor_RawSample_Get 0074                                   ___fldiv@aexp 004E  
                                 ___fldiv@bexp 004D                                   ___fldiv@sign 0046  
                               ___bmul@product 0072                         _Sensor_setScanFunction 09EE  
              __size_of_Sensor_Acq_ExecuteScan 0059                     __end_of_Sensor_setInactive 08F7  
                          __Umul8_16@word_mpld 0076                                            LATC 010E  
                                          l140 0E80                                            l136 0E6E  
                                          l340 0637                                            l920 0915  
                                          l929 090C                                            l938 0904  
                                          _GIE 005F                                            _PR2 001B  
                                          _abs 0A7E                 ?_EUSART_SetFramingErrorHandler 0070  
                              _TMR2_Initialize 098B                                            wreg 0009  
           __end_of_IOCAF2_SetInterruptHandler 08CF                     _IOCAF2_SetInterruptHandler 08C9  
             ??_MTOUCH_Sensor_Sampled_ResetAll 0071                ?_MTOUCH_Sensor_Sampled_ResetAll 0070  
                                 ___flmul@aexp 0029                                   ___flmul@bexp 002E  
             __size_of_MTOUCH_Sensor_SampleAll 0014                                   ___flmul@sign 0028  
                                 ___flmul@temp 0033                                   ___flmul@prod 002F  
            __size_of_MTOUCH_Sensor_Initialize 0011                      ?_MTOUCH_Sensor_Initialize 0070  
                                         INDF0 0000                                           FSR0H 0005  
                                         FSR1H 0007                                           FSR0L 0004  
                                         FSR1L 0006                             _MTOUCH_CVD_ScanA_0 0B60  
                           _MTOUCH_CVD_ScanA_1 0B40                             _MTOUCH_CVD_ScanB_0 0BA0  
                           _MTOUCH_CVD_ScanB_1 0B80                                   ___fltol@exp1 0059  
                                         ?_abs 0070                                           l3001 0E9C  
                                         l1410 033A                                           l1306 0FE4  
                                         l3011 0ECF                                           l3003 0EAD  
                                         l1412 031C                                           l3013 0ED3  
                                         l1406 02A6                                           l1440 0420  
                                         l1521 0B11                                           l3009 0ECA  
                                         l1514 024D                                           l1427 03C0  
                                         l3131 06A4                                           l1462 048A  
                                         l3231 0768                                           l3039 0A7B  
                                         l1448 0439                                           l3209 0C81  
                                         l3225 0749                                           l3057 096C  
                                         l3153 0D14                                           l3305 0DBE  
                                         l4121 0A4D                                           l1483 0591  
                                         l3411 029E                                           l3227 0752  
                                         l3139 0D7F                                           l3219 095D  
                                         l3083 0E62                                           l4211 0DD0  
                                         l3307 0DDB                                           l1484 05A9  
                                         l3501 03B8                                           l3237 0F4F  
                                         l3253 05F9                                           l4213 0EA5  
                                         l3165 0D3D                                           l3149 0D12  
                                         l1486 05B6                                           l3407 029B  
                                         l3239 0F53                                           l3159 0D1B  
                                         l3417 02B0                                           l3337 0ABB  
                                         l4209 0DCB                                           l3531 03F1  
                                         l3523 03E6                                           l3259 062F  
                                         l3195 0A11                                           l3355 0E1B  
                                         l3603 097D                                           l3179 0AA4  
                                         l3363 0A52                                           l4147 09B7  
                                         l3517 03DF                                           l3509 03D2  
                                         l3525 03E8                                           l3269 0EFF  
                                         l3711 047F                                           l3535 03F3  
                                         l3455 0325                                           l3447 02EC  
                                         l3383 0273                                           l3287 096F  
                                         l3553 0430                                           l3481 035B  
                                         l3473 0348                                           l3457 0327  
                                         l3465 0336                                           l3641 0FAD  
                                         l3297 0DA6                                           l3811 05B2  
                                         l3731 04B5                                           l3715 0482  
                                         l3483 035D                                           l3491 036D  
                                         l3387 0276                                           l3725 04A9  
                                         l3557 0434                                           l3389 027E  
                                         l3637 0FA4                                           l3751 04FC  
                                         l3567 0B0B                                           l3831 005B  
                                         l3583 0A14                                           l3761 051A  
                                         l3921 01E3                                           l3913 01B5  
                                         l3833 005D                                           l3657 0FD2  
                                         l3691 045B                                           l3915 01CC  
                                         l3851 0080                                           l3835 0065  
                                         l3667 0FF1                                           l3659 0FE0  
                                         l2955 09BD                                           l2971 099F  
                                         l3757 0515                                           l3925 01E5  
                                         l3861 0096                                           l3853 0088  
                                         l3589 0A1D                                           l3783 054E  
                                         l3775 0520                                           l3759 04DE  
                                         l3695 045E                                           l3935 020E  
                                         l2959 09C3                                           l3777 0537  
                                         l3697 0466                                           l3945 023A  
                                         l3849 007E                                           l3787 0550  
                                         l3939 0223                                           l2995 0E8E  
                                         l3963 0BEB                                           l3797 0579  
                                         l2997 0E95                                           l3973 0BF5  
                                         TRISC 008E                                           l3999 0AE1  
                                         STR_1 1038                  ?_Button_Reading_Update_Helper 0070  
                                         u2200 0730                                           u2205 072C  
                                         u2045 0A87                                           _LATA 010C  
                                         _LATB 010D                                           u3015 0FE8  
                                         u2055 0CD4                                           _LATC 010E  
                                         u2065 0CC5                                           u3205 0523  
                                         u2085 066C                                           u3135 04E6  
                                         u2095 06B2                                           u2255 0F7C  
                                         u3305 0582                                           u3225 052C  
                                         u3145 04ED                                           u3315 059B  
                                         u2195 06F8                                           u2435 0A55  
                                         u3165 04F6                                           u2285 060F  
                                         u2550 030A                                           u3175 050A  
                                         u3415 0109                                           u2560 030B  
                                         u3425 0136                                           u2545 0300  
                                         u3435 0188                                           u2715 03D3  
                                         u2395 0DE1                                           u3620 0ADF  
                                         u3445 01A4                                           u3295 0567  
                                         u3455 01B8                                           u2815 040B  
                                         u3615 0AD0                                           u3545 01FC  
                                         u2673 0380                                           u2665 0362  
                                         u3555 0217                                           u3475 01C1  
                                         u2595 032C                                           u3565 022D  
                                         u3807 0B46                                           u2955 0FB6  
                                         u2895 0B12                                           u2985 0FD3  
                                         u3777 0BA6                                           u3787 0B86  
                                         u3797 0B66                     Button_State_Pressed@button 007D  
                                         _TMR2 001A                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
            __size_of_Sensor_Acq_ExecutePacket 0053                      ?_Sensor_Acq_ExecutePacket 0070  
                           _MTOUCH_needReburst 0002                                           abs@a 0070  
                                         _main 09AB           __size_of_MTOUCH_Button_InitializeAll 001A  
                                         fsr0h 0005                                           _tiny 1020  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006           __size_of_MTOUCH_Sensor_InitializeAll 000E  
                                         btemp 007E                            ?_MTOUCH_CVD_ScanA_0 0070  
                          ?_MTOUCH_CVD_ScanA_1 0070                            ?_MTOUCH_CVD_ScanB_0 0070  
                          ?_MTOUCH_CVD_ScanB_1 0070                                           start 0019  
                              ___fldiv@new_exp 0047                              ___bmul@multiplier 0073  
                          ?_MTOUCH_needReburst 0070                                          ADCON0 009D  
                              __end_of_R_const 1038                       ?_MTOUCH_Service_Mainloop 0070  
             __size_of_MTOUCH_Button_isPressed 001B                  __size_of_Button_State_Pressed 005F  
                                        ??_abs 0072                    ?_Button_Baseline_Initialize 0070  
                                _Init_Function 0C05                  ??_MTOUCH_Sensor_RawSample_Get 0076  
                Sensor_RawSample_Update@sensor 0070                      __size_of_Sensor_isEnabled 000D  
               __size_of_OSCILLATOR_Initialize 0006                            __size_of_IOCAF2_ISR 000D  
                __end_of_OSCILLATOR_Initialize 08C9                                  ___fltol@sign1 0058  
                              __end_of___fladd 0442                                          ?_main 0070  
                              __end_of___fldiv 05BB                                          _ADRES 009B  
                         ??_MTOUCH_CVD_ScanA_0 0070                           ??_MTOUCH_CVD_ScanA_1 0070  
                         ??_MTOUCH_CVD_ScanB_0 0070                           ??_MTOUCH_CVD_ScanB_1 0070  
                              __end_of___flmul 025A                                __end_of___flsub 0B01  
                              __end_of___fltol 1000                                          _T2CON 001C  
                      __size_of_Button_Service 0052                                          i1l742 000D  
                                        i1l748 0017                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TXSTA 019E  
              ??_CalcRequiredDelayForTrigTRIAC 007E                __size_of_Button_DefaultCallback 0001  
                         ??_MTOUCH_needReburst 0070                               __end_of_TMR2_ISR 092E  
              __size_of_Sensor_DefaultCallback 0001                        __end_of_PIN_MANAGER_IOC 08BD  
                      __size_of_Sensor_Service 004D          __end_of_MTOUCH_Sensor_Scan_Initialize 08B2  
       __size_of_MTOUCH_Sensor_Scan_Initialize 0005                  _MTOUCH_Sensor_Scan_Initialize 08AD  
                               _WDT_Initialize 089F                        Sensor_setSampled@sensor 0070  
                                        _errno 00D6                                ??_StartStop_Fan 0070  
                       _Sensor_Acq_ExecuteScan 0E82               __size_of_Button_State_NotPressed 009F  
                                        pclath 000A                           _Sensor_Sampled_Reset 08E2  
                                        status 0003                                          wtemp0 007E  
                    __size_of_Sensor_setActive 0007                         Sensor_isEnabled@sensor 0070  
                              __initialization 001B                                   __end_of_main 09BB  
                                 __end_of_tiny 1024                                 ?_Init_Function 0070  
                        __end_of_MTOUCH_Random 09AB                        __end_of_TMR2_Initialize 099B  
                  ?_INTERRUPT_InterruptManager 0070             CalcRequiredDelayForTrigTRIAC@delay 005E  
             __end_of_MTOUCH_Button_Initialize 0D06                       _TMR2_SetInterruptHandler 08B2  
                                       ??_main 007E                     __end_of_StartStop_AlarmLED 0918  
                      _MTOUCH_Sensor_Calibrate 0897                                     _V_cc_const 1028  
                      ??_Button_Reading_Update 007B           MTOUCH_Sensor_Sampled_ResetAll@sensor 0072  
                     ?_Button_Deviation_Update 0070                         __end_of_WDT_Initialize 08A3  
                                 ?_MTOUCH_Tick 0070                   Button_Baseline_Update@button 0076  
                    __size_of_StartStop_Buzzer 0008              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 00E5           __size_of_MTOUCH_Sensor_RawSample_Get 0017  
                  __size_of_StopTouchDetection 0015                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                         i1l4079 0944  
                        ?_Sensor_Sampled_Reset 0070                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097              MTOUCH_Button_InitializeAll@button 007B  
               ??_Button_Reading_Update_Helper 0078                                         _Buff_g 00C2  
                       _Button_DefaultCallback 0898                __end_of_MTOUCH_Service_Mainloop 0C05  
                       _Sensor_DefaultCallback 0899                                  _packet_sample 00DE  
                                       ___bmul 09BB                                      ??___fladd 0020  
                 Sensor_DefaultCallback@sensor 0070                                      ??___fldiv 003D  
                                    ??___flmul 0079                                      ??___flsub 007E  
                                    ??___fltol 0053                                         _memcpy 0C78  
             __end_of_MTOUCH_Button_ServiceAll 098B                        _MTOUCH_Sensor_SampleAll 0A13  
                           __size_of__Umul8_16 001F                   Button_DefaultCallback@button 0070  
                              ?_WDT_Initialize 0070                       ?_Sensor_RawSample_Update 0070  
                   __end_of_Sensor_Acquisition 0D43                        ?_Button_Baseline_Update 0070  
                            _TMR2_Period_const 1024       TMR2_SetInterruptHandler@InterruptHandler 0070  
   IOCAF2_SetInterruptHandler@InterruptHandler 0070                               ?_PIN_MANAGER_IOC 0070  
                                 ??_IOCAF2_ISR 0070          __end_of_CalcRequiredDelayForTrigTRIAC 07ED  
       __size_of_CalcRequiredDelayForTrigTRIAC 007A                  _CalcRequiredDelayForTrigTRIAC 0773  
             CalcRequiredDelayForTrigTRIAC@ret 0062                MTOUCH_Sensor_RawSample_Get@name 0077  
                            _SYSTEM_Initialize 0A27                   __end_of_Tolerance_Temp_const 1034  
                      __end_of__initialization 003E            __size_of_Button_Baseline_Initialize 002D  
               ?_MTOUCH_Sensor_Scan_Initialize 0070                             ?_SYSTEM_Initialize 0070  
                          _Button_StateMachine 00A0                                     ___fltol@f1 004F  
                   __end_of_Button_Tick_helper 0C50                  MTOUCH_Sensor_Calibrate@sensor 0070  
                          ___bmul@multiplicand 0070                        ?_Sensor_setScanFunction 0070  
                              ??_Init_Function 007E                                 __pcstackCOMMON 0070  
                      _MTOUCH_Button_isPressed 0AC8                                   __pidataBANK1 0BC0  
                          ??_SYSTEM_Initialize 007C                                      ?_TMR2_ISR 0070  
                   __end_of_MTOUCH_Button_Tick 0A67               __end_of_MTOUCH_Sensor_Initialize 09EE  
                    ??_MTOUCH_Sensor_Calibrate 0070                               _Sensor_isEnabled 0961  
                             ?_TMR2_Initialize 0070                __end_of_Button_Deviation_Update 0773  
                           __end_of_IOCAF2_ISR 0947                       Sensor_setInactive@sensor 0070  
                               _Button_Service 0DDD               __end_of_Sensor_Acq_ExecutePacket 0E82  
                   ?_Button_State_Initializing 007D                           Button_Service@button 0028  
                               _OPTION_REGbits 0095                      __end_of_TMR2_Period_const 1028  
               __end_of_Button_Baseline_Update 06E9                           Sensor_Service@sensor 0027  
                      StartStop_AlarmLED@OnOff 0070                    ?_IOCAF2_SetInterruptHandler 0070  
                     _MTOUCH_Button_Initialize 0CD0               ??_IOCAF2_DefaultInterruptHandler 0070  
              ?_IOCAF2_DefaultInterruptHandler 0070                ??_EUSART_SetOverrunErrorHandler 0072  
                               _Sensor_Service 0D90                        _Button_State_NotPressed 05BB  
                __size_of_MTOUCH_Sensor_Enable 0011                             _Sensor_setInactive 08F0  
                    __end_of_SYSTEM_Initialize 0A3C                              _lowpowerActivated 0066  
             MTOUCH_Sensor_isCalibrated@sensor 0070                         ??_Sensor_Sampled_Reset 0070  
                                   __pbssBANK0 0064                                     __pbssBANK1 00C2  
                                   __pbssBANK2 0120                            ?_Sensor_setInactive 0070  
                             _Sensor_setActive 08E9                             Sensor_Service@name 0025  
                   __end_of_mtouch_button_init 1020                 __end_of_Sensor_setScanFunction 09FF  
                          TMR2_Int_isr@counter 00D8                              __end_of__Umul8_16 0B20  
                                   __pmaintext 09AB                                  ?_MTOUCH_Delay 0070  
                                      ?___bmul 0070                                     ??_TMR2_ISR 0070  
               MTOUCH_Sensor_wasSampled@sensor 0075                                     __pintentry 0004  
                       __end_of_Button_Service 0E2F                                        ?_memcpy 0070  
                                      _BAUDCON 019F            __end_of_MTOUCH_Button_InitializeAll 0AC8  
                  _MTOUCH_Button_InitializeAll 0AAE                                        _APFCON0 011D  
                                      _APFCON1 011E            __end_of_MTOUCH_Sensor_InitializeAll 097C  
                  _MTOUCH_Sensor_InitializeAll 096E                      ??_MTOUCH_Sensor_SampleAll 0028  
                      __size_of_ADC_Initialize 0007                __end_of_Sensor_RawSample_Update 0AAE  
                         ??_Sensor_setInactive 0070              __size_of_MTOUCH_Sensor_wasSampled 0014  
                    ?_MTOUCH_Sensor_wasSampled 0070              __end_of_Button_State_Initializing 0F9B  
                       __end_of_Sensor_Service 0DDD                       _MTOUCH_Button_ServiceAll 097C  
                      ?_Sensor_Acq_ExecuteScan 0070                  MTOUCH_Sensor_SampleAll@sensor 0029  
                                      _OSCTUNE 0098               __size_of_MTOUCH_Service_Mainloop 0023  
                             _StartStop_Buzzer 08FE                   __end_of_Button_State_Pressed 0F3A  
                     ??_EUSART_SetErrorHandler 0072               Button_Baseline_Initialize@button 007C  
                         __size_of_MTOUCH_Tick 0003                 ?_CalcRequiredDelayForTrigTRIAC 005A  
                    ??_MTOUCH_Button_isPressed 0070                                        _R_const 1034  
                         _ADC_InterruptHandler 00DC                                 ??_MTOUCH_Delay 0070  
                               _packet_counter 0068                     ??_TMR2_SetInterruptHandler 0072  
                      Sensor_Acquisition@retry 0021                                __size_of___bmul 0011  
                                      ___fladd 025A                                        ___fldiv 0442  
                                      ___flmul 0042                                        ___flsub 0AE3  
                                      ___fltol 0F9B                 MTOUCH_Button_Initialize@button 0073  
                              ?_Button_Service 0070                                __size_of_memcpy 002B  
                                      __ptext1 0A3C                                        __ptext2 0BE2  
                                      __ptext3 0002                                        __ptext4 089C  
                                      __ptext5 0A51                                        __ptext6 0C29  
                                      __ptext7 0A13                                        __ptext8 0D90  
                                      __ptext9 08F7                    Button_Reading_Update@button 007B  
                         _Tolerance_Temp_const 1030                    __size_of_MTOUCH_CVD_ScanA_0 0020  
                  __size_of_MTOUCH_CVD_ScanA_1 0020                    __size_of_MTOUCH_CVD_ScanB_0 0020  
                  __size_of_MTOUCH_CVD_ScanB_1 0020                       _MTOUCH_Sensor_Initialize 09DD  
               __end_of_Sensor_Acq_ExecuteScan 0EDB                          _OSCILLATOR_Initialize 08C3  
                                 __size_of_abs 0017    CalcRequiredDelayForTrigTRIAC@dim_percentage 005A  
                    ??_Button_State_NotPressed 0020                                ?_Sensor_Service 0070  
                     ??_PIN_MANAGER_Initialize 0072                                      _IOCAFbits 0393  
                                    _IOCANbits 0392                 __size_of_Button_Reading_Update 000D  
                                    _IOCAPbits 0391                    __size_of_MTOUCH_needReburst 0002  
                __end_of_Button_Reading_Update 0961              MTOUCH_Sensor_InitializeAll@sensor 0079  
                     _Sensor_Acq_ExecutePacket 0E2F                               _callback_sampled 00AE  
                   __size_of_SYSTEM_Initialize 0015                                        clrloop0 08D0  
                             _callback_pressed 00A8                 MTOUCH_Sensor_Initialize@sensor 0077  
                         end_of_initialization 003E                        ?_Button_DefaultCallback 0070  
        __end_of_EUSART_SetOverrunErrorHandler 08AD         __size_of_EUSART_SetOverrunErrorHandler 0005  
                _EUSART_SetOverrunErrorHandler 08A8                             _StartStop_AlarmLED 090E  
                                      memcpy@d 0079                          __end_of_StartStop_Fan 090E  
                                      memcpy@n 0072                                        memcpy@s 0075  
                                      init_ram 08D5                                        initloop 08D6  
                      ?_Sensor_DefaultCallback 0070               __size_of_Button_Deviation_Update 008A  
                            _EUSART_Initialize 0B20                   ??_MTOUCH_Sensor_isCalibrated 0070  
                          ?_StartStop_AlarmLED 0070                             ?_EUSART_Initialize 0070  
          __end_of_MTOUCH_Sensor_RawSample_Get 0A7E                    _MTOUCH_Sensor_RawSample_Get 0A67  
                          _mtouch_request_init 0064                                  MTOUCH_Delay@i 0071  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                       Sensor_setActive@sensor 0070                                    ___fladd@grs 007B  
                         ??_StartStop_AlarmLED 0070                     __end_of_StopTouchDetection 0A51  
                Button_Deviation_Update@button 0020                     MTOUCH_Sensor_Enable@sensor 0075  
                                  ___fldiv@grs 0049                                    ___fldiv@rem 0042  
                          _callback_notPressed 00A6            __size_of_MTOUCH_Sensor_isCalibrated 0002  
               __end_of_Button_DefaultCallback 0899                __size_of_EUSART_SetErrorHandler 0005  
            __end_of_HalfCycleACDuration_const 1030                             _sensor_globalFlags 006A  
                       __size_of_MTOUCH_Random 0010                       __end_of_Sensor_isEnabled 096E  
               __end_of_Sensor_DefaultCallback 089A                                    ___flmul@grs 002A  
                    __end_of_EUSART_Initialize 0B40                   Sensor_Acq_ExecuteScan@result 0076  
                           StartStop_Fan@OnOff 0070               __size_of_Sensor_RawSample_Update 0019  
                           _Sensor_Acquisition 0D06           __end_of_TMR2_DefaultInterruptHandler 0897  
        __size_of_TMR2_DefaultInterruptHandler 0001                   _TMR2_DefaultInterruptHandler 0896  
                         _Button_State_Pressed 0EDB                                 __end_of___bmul 09CC  
                   _EUSART_DefaultErrorHandler 0000                            ?_Sensor_Acquisition 0070  
                   ??_MTOUCH_Button_Initialize 0070                ??_MTOUCH_Sensor_Scan_Initialize 0070  
                            __size_of_TMR2_ISR 000C                                 _ADC_Initialize 08DB  
                Sensor_Acq_ExecutePacket@error 007C                             _Button_Tick_helper 0C29  
                               __end_of_memcpy 0CA3                         ?_OSCILLATOR_Initialize 0070  
                          MTOUCH_Button_Tick@i 0074                       __end_of_Sensor_setActive 08F0  
                  ??_Button_State_Initializing 0020                            start_initialization 001B  
                      _MTOUCH_Service_Mainloop 0BE2                __size_of_PIN_MANAGER_Initialize 0028  
                         __end_of_MTOUCH_Delay 0922                             _MTOUCH_Button_Tick 0A51  
                          ?_Button_Tick_helper 0070                                    __end_of_abs 0A95  
                         ??_Sensor_Acquisition 0020                            ?_MTOUCH_Button_Tick 0070  
              Button_State_Initializing@button 007D                       __size_of_PIN_MANAGER_IOC 0006  
       __end_of_IOCAF2_DefaultInterruptHandler 0896        __size_of_IOCAF2_DefaultInterruptHandler 0001  
               _IOCAF2_DefaultInterruptHandler 0895                 ?_EUSART_SetOverrunErrorHandler 0070  
             __end_of_MTOUCH_Sensor_wasSampled 0A13                             __end_of_V_cc_const 102C  
                         ??_Button_Tick_helper 0070                   __end_of_MTOUCH_Sensor_Enable 09DD  
                   _EUSART_FramingErrorHandler 00E7                                       ??___bmul 0071  
                     __end_of_StartStop_Buzzer 0906                          ?_Button_State_Pressed 007D  
                       _EUSART_SetErrorHandler 08A3                          __end_of_Init_Function 0C29  
                       __end_of_ADC_Initialize 08E2                                      __Umul8_16 0B01  
                   ??_MTOUCH_Button_ServiceAll 0029                                    __pdataBANK1 00A0  
                                _MTOUCH_Random 099B                                       ??_memcpy 0074  
                 ??_Button_Baseline_Initialize 0078                  ?_TMR2_DefaultInterruptHandler 0070  
                         ??_MTOUCH_Button_Tick 0073                             _mtouch_button_init 1000  
                   Sensor_Sampled_Reset@sensor 0070                                      ___fladd@a 0074  
                                    ___fladd@b 0070                                      ___fldiv@a 0035  
                                    ___fldiv@b 0039                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___flsub@a 004F  
                                    ___flsub@b 0053                                      ___latbits 0002  
                                __pcstackBANK0 0020                       __size_of_TMR2_Initialize 0010  
               MTOUCH_Button_ServiceAll@button 002A                            Sensor_Service@error 0026  
                __size_of_Sensor_Sampled_Reset 0007                     __size_of_EUSART_Initialize 0020  
                      _Button_Deviation_Update 06E9                      _Button_State_Initializing 0F3A  
           __end_of_MTOUCH_Sensor_isCalibrated 089C                     _MTOUCH_Sensor_isCalibrated 089A  
                                    __pnvBANK1 00E1                              _Sensor_setSampled 08F7  
                       _PIN_MANAGER_Initialize 0C50                               ??_Button_Service 0025  
                     ?_MTOUCH_Sensor_Calibrate 0070                             ?_Sensor_setSampled 0070  
           Button_Reading_Update_Helper@button 007A                              _ADC_SelectChannel 0947  
                   ??_MTOUCH_Sensor_Initialize 0076                                       ?___fladd 0070  
                                     ?___fldiv 0035                                       ?___flmul 0020  
                                     ?___flsub 004F                                       ?___fltol 004F  
                               ?_MTOUCH_Random 0070                                     ?__Umul8_16 0070  
                              ?_ADC_Initialize 0070                             ?_ADC_SelectChannel 0070  
                             ??_Sensor_Service 0023                     ??_Sensor_Acq_ExecutePacket 0078  
                 ??_INTERRUPT_InterruptManager 0070                            ??_Sensor_setSampled 0070  
                    ??_MTOUCH_Service_Mainloop 002B                    __size_of_Sensor_setInactive 0007  
                          ??_ADC_SelectChannel 0070                 Sensor_Acq_ExecutePacket@sensor 007D  
                                ??_MTOUCH_Tick 0075                      __end_of_Sensor_setSampled 08FE  
       EUSART_SetErrorHandler@interruptHandler 0070                                       _LATCbits 010E  
                           _currentScannSensor 0069                        _Sensor_RawSample_Update 0A95  
                                    clear_ram0 08CF                                       _PIE1bits 0091  
                            _eusartRxLastError 00E0                      __end_of_ADC_SelectChannel 0954  
          __size_of_INTERRUPT_InterruptManager 0015                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                         ??_Button_State_Pressed 0020  
       __end_of_MTOUCH_Sensor_Sampled_ResetAll 0800        __size_of_MTOUCH_Sensor_Sampled_ResetAll 0013  
               _MTOUCH_Sensor_Sampled_ResetAll 07ED                       ?_MTOUCH_Sensor_SampleAll 0070  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR2_ISR 0922  
                            ??_PIN_MANAGER_IOC 0070                       _MTOUCH_Sensor_wasSampled 09FF  
                           _mtouch_time_toScan 0065                     __end_of_MTOUCH_CVD_ScanA_0 0B80  
                   __end_of_MTOUCH_CVD_ScanA_1 0B60                     __end_of_MTOUCH_CVD_ScanB_0 0BC0  
                   __end_of_MTOUCH_CVD_ScanB_1 0BA0                       ??_Button_Baseline_Update 0070  
                                   _ADCON0bits 009D                          __size_of_MTOUCH_Delay 000A  
                     ADC_SelectChannel@channel 0071                     __end_of_MTOUCH_needReburst 0004  
               ??_TMR2_DefaultInterruptHandler 0070              __size_of_TMR2_SetInterruptHandler 0005  
                    ?_TMR2_SetInterruptHandler 0070                           _MTOUCH_Sensor_Enable 09CC  
                     Button_Tick_helper@button 0072                      ??_Button_Deviation_Update 0070  
                        _Button_Reading_Update 0954                       ??_Sensor_setScanFunction 0070  
                     ?_MTOUCH_Button_isPressed 0070                              ?_Sensor_isEnabled 0070  
                            ??_TMR2_Initialize 0072                            __end_of_MTOUCH_Tick 089F  
                        StartStop_Buzzer@OnOff 0070                              _MTOUCH_Initialize 092E  
              __end_of_MTOUCH_Sensor_Calibrate 0898                             _StopTouchDetection 0A3C  
                           ??_Sensor_isEnabled 0070                             ?_MTOUCH_Initialize 0070  
                                    memcpy@tmp 0077                                ??_MTOUCH_Random 0070  
                                 _MTOUCH_Delay 0918                                   _sample_delay 0067  
                    _HalfCycleACDuration_const 102C                            ?_StopTouchDetection 0070  
                      ??_OSCILLATOR_Initialize 0070             __end_of_Button_Baseline_Initialize 0CD0  
                   _Button_Baseline_Initialize 0CA3                       Sensor_Acquisition@sensor 0022  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 00E3  
                             __size_of___fladd 01E8                            ??_MTOUCH_Initialize 007C  
                             __size_of___fldiv 0179                               __size_of___flmul 0218  
                             __size_of___flsub 001E                               __size_of___fltol 0065  
                     ?_Button_State_NotPressed 007D                         __size_of_StartStop_Fan 0008  
                           Button_Service@name 0027                              ?_Sensor_setActive 0070  
                      _IOCAF2_InterruptHandler 00E9                                   _Sensor_scanA 00AC  
                                 _Sensor_scanB 00AA                    __size_of_StartStop_AlarmLED 000A  
                           ??_Sensor_setActive 0070                          ?_MTOUCH_Sensor_Enable 0070  
                 ??_IOCAF2_SetInterruptHandler 0072                                       __ptext10 0A95  
                                     __ptext11 0899                                       __ptext20 0BA0  
                                     __ptext12 0D06                                       __ptext21 0B80  
                                     __ptext13 0A7E                                       __ptext30 05BB  
                                     __ptext22 0B60                                       __ptext14 08F0  
                                     __ptext31 0F3A                                       __ptext23 0B40  
                                     __ptext15 08E9                                       __ptext40 0AC8  
                                     __ptext32 0EDB                                       __ptext24 099B  
                                     __ptext16 0961                                       __ptext41 0A27  
                                     __ptext33 0898                                       __ptext25 0918  
                                     __ptext17 0E2F                                       __ptext50 07ED  
                                     __ptext42 089F                                       __ptext34 065A  
                                     __ptext26 097C                                       __ptext18 09EE  
                                     __ptext51 096E                                       __ptext43 098B  
                                     __ptext35 0CA3                                       __ptext27 0DDD  
                                     __ptext19 0E82                                       __ptext60 0B20  
                                     __ptext52 09DD                                       __ptext44 08B2  
                                     __ptext36 0954                                       __ptext28 09FF  
                                     __ptext61 08A8                                       __ptext53 08E2  
                                     __ptext45 0C50                                       __ptext37 0D43  
                                     __ptext29 089A                                       __ptext70 0F9B  
                                     __ptext62 08BD                                       __ptext54 09CC  
                                     __ptext46 08C9                                       __ptext38 0A67  
                                     __ptext71 0AE3                                       __ptext63 08A3  
                                     __ptext55 09BB                                       __ptext47 08C3  
                                     __ptext39 06E9                                       __ptext80 08B7  
                                     __ptext72 025A                                       __ptext64 08DB  
                                     __ptext56 0AAE                                       __ptext48 092E  
                                     __ptext81 093A                                       __ptext73 0042  
                                     __ptext65 0C05                                       __ptext57 0C78  
                                     __ptext49 08AD                                       __ptext82 0895  
                                     __ptext74 0B01                                       __ptext66 0906  
                                     __ptext58 0CD0                                       __ptext75 0442  
                                     __ptext67 08FE                                       __ptext59 0897  
                                     __ptext76 0947                                       __ptext68 090E  
                                     __ptext69 0773                                       __ptext78 0922  
                                     __ptext79 0896                           ??_StopTouchDetection 007E  
                                   _IOCAF2_ISR 093A                      __end_of_MTOUCH_Initialize 093A  
                    ??_Sensor_RawSample_Update 0070            Sensor_Acq_ExecutePacket@ADCON0_temp 0079  
          Sensor_Acq_ExecutePacket@ADCON1_temp 007A                     __size_of_Sensor_setSampled 0007  
                                __size_of_main 0010                __end_of_MTOUCH_Sensor_SampleAll 0A27  
                      ?_EUSART_SetErrorHandler 0070                     __size_of_ADC_SelectChannel 000D  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                   Sensor_setScanFunction@sensor 0070  
                                     int$flags 007E                              ?_StartStop_Buzzer 0070  
                     ??_Sensor_Acq_ExecuteScan 0074             __size_of_Button_State_Initializing 0061  
           __end_of_INTERRUPT_InterruptManager 0019                     _INTERRUPT_InterruptManager 0004  
            Sensor_Acq_ExecutePacket@GIE_state 007B          __end_of_EUSART_SetFramingErrorHandler 08C3  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 08BD  
                           ??_StartStop_Buzzer 0070            __size_of_IOCAF2_SetInterruptHandler 0006  
              __size_of_Button_Baseline_Update 008F                   ?_MTOUCH_Button_InitializeAll 0070  
                 ?_MTOUCH_Sensor_InitializeAll 0070                                  _mtouch_button 0120  
                                   _INTCONbits 000B                                  _mtouch_sensor 00B0  
                                     memcpy@d1 0078                                       memcpy@s1 0070  
              __end_of_MTOUCH_Button_isPressed 0AE3                                    _MTOUCH_Tick 089C  
                       ?_Button_Reading_Update 0070               Button_Deviation_Update@deviation 0021  
                      __size_of_WDT_Initialize 0004                   MTOUCH_Button_Initialize@name 0072  
            __size_of_MTOUCH_Button_Initialize 0036                                       intlevel1 0000  
                    ?_MTOUCH_Button_Initialize 0070                    __size_of_Sensor_Acquisition 003D  
              __size_of_Sensor_setScanFunction 0011                        ?_PIN_MANAGER_Initialize 0070  
                                _StartStop_Fan 0906                 __end_of_EUSART_SetErrorHandler 08A8  
                  ?_MTOUCH_Sensor_isCalibrated 0070                              MTOUCH_Random@seed 006B  
                             ??_ADC_Initialize 0070                    __size_of_Button_Tick_helper 0027  
              __end_of_Button_State_NotPressed 065A  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                 __end_of_Sensor_Sampled_Reset 08E9                    __size_of_MTOUCH_Button_Tick 0016  
                                __pstringtext1 1020                                  __pstringtext2 1024  
                                __pstringtext3 1028                                  __pstringtext4 1000  
                                __pstringtext5 102C                                  __pstringtext6 1030  
                                __pstringtext7 1034                                  __pstringtext8 1038  
                                __pstringtext9 0000                         __Umul8_16@multiplicand 0070  
                ??_MTOUCH_Button_InitializeAll 007A                       ??_Button_DefaultCallback 0071  
                ??_MTOUCH_Sensor_InitializeAll 0078               __size_of_MTOUCH_Sensor_Calibrate 0001  
                       ??_MTOUCH_Sensor_Enable 0074                       ??_Sensor_DefaultCallback 0071  
         __end_of_Button_Reading_Update_Helper 0D90          __size_of_Button_Reading_Update_Helper 004D  
                 _Button_Reading_Update_Helper 0D43                                  ___fladd@signs 0078  
            __size_of_MTOUCH_Button_ServiceAll 000F                      ?_MTOUCH_Button_ServiceAll 0070  
                Button_State_NotPressed@button 007D                                    ?_IOCAF2_ISR 0070  
                   __size_of_MTOUCH_Initialize 000C                         __size_of_Init_Function 0024  
               __end_of_PIN_MANAGER_Initialize 0C78                         _Button_Baseline_Update 065A  
                               ?_StartStop_Fan 0070                                   ___fladd@aexp 0079  
                                 ___fladd@bexp 007A                                _PIN_MANAGER_IOC 08B7  
                  MTOUCH_Button_isPressed@name 0071                           __Umul8_16@multiplier 0078  
                        _TMR2_InterruptHandler 00E1                     ??_MTOUCH_Sensor_wasSampled 0074  
                            __Umul8_16@product 0074  
