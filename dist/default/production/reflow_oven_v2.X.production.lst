

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 18 12:52:20 2023

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.40
    51                           ; Generated 17/11/2021 GMT
    52                           ; 
    53                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F1829 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  011A                     	;# 
   146  011B                     	;# 
   147  011D                     	;# 
   148  011E                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  018E                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0194                     	;# 
   159  0195                     	;# 
   160  0196                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  019D                     	;# 
   167  019E                     	;# 
   168  019F                     	;# 
   169  020C                     	;# 
   170  020D                     	;# 
   171  020E                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0212                     	;# 
   176  0213                     	;# 
   177  0213                     	;# 
   178  0214                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0216                     	;# 
   184  0216                     	;# 
   185  0217                     	;# 
   186  0217                     	;# 
   187  0219                     	;# 
   188  021A                     	;# 
   189  021B                     	;# 
   190  021C                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0294                     	;# 
   199  0295                     	;# 
   200  0295                     	;# 
   201  0296                     	;# 
   202  0298                     	;# 
   203  0298                     	;# 
   204  0299                     	;# 
   205  029A                     	;# 
   206  029B                     	;# 
   207  029C                     	;# 
   208  029D                     	;# 
   209  029E                     	;# 
   210  0311                     	;# 
   211  0311                     	;# 
   212  0312                     	;# 
   213  0313                     	;# 
   214  0318                     	;# 
   215  0318                     	;# 
   216  0319                     	;# 
   217  031A                     	;# 
   218  038C                     	;# 
   219  038D                     	;# 
   220  038E                     	;# 
   221  0391                     	;# 
   222  0392                     	;# 
   223  0393                     	;# 
   224  0394                     	;# 
   225  0395                     	;# 
   226  0396                     	;# 
   227  039A                     	;# 
   228  039C                     	;# 
   229  039D                     	;# 
   230  039E                     	;# 
   231  039F                     	;# 
   232  0415                     	;# 
   233  0416                     	;# 
   234  0417                     	;# 
   235  041C                     	;# 
   236  041D                     	;# 
   237  041E                     	;# 
   238  0FE4                     	;# 
   239  0FE5                     	;# 
   240  0FE6                     	;# 
   241  0FE7                     	;# 
   242  0FE8                     	;# 
   243  0FE9                     	;# 
   244  0FEA                     	;# 
   245  0FEB                     	;# 
   246  0FED                     	;# 
   247  0FEE                     	;# 
   248  0FEF                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  008E                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  0111                     	;# 
   301  0112                     	;# 
   302  0113                     	;# 
   303  0114                     	;# 
   304  0115                     	;# 
   305  0116                     	;# 
   306  0117                     	;# 
   307  0118                     	;# 
   308  0119                     	;# 
   309  011A                     	;# 
   310  011B                     	;# 
   311  011D                     	;# 
   312  011E                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  018E                     	;# 
   316  0191                     	;# 
   317  0191                     	;# 
   318  0192                     	;# 
   319  0193                     	;# 
   320  0193                     	;# 
   321  0193                     	;# 
   322  0194                     	;# 
   323  0195                     	;# 
   324  0196                     	;# 
   325  0199                     	;# 
   326  019A                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019C                     	;# 
   330  019D                     	;# 
   331  019E                     	;# 
   332  019F                     	;# 
   333  020C                     	;# 
   334  020D                     	;# 
   335  020E                     	;# 
   336  0211                     	;# 
   337  0211                     	;# 
   338  0212                     	;# 
   339  0212                     	;# 
   340  0213                     	;# 
   341  0213                     	;# 
   342  0214                     	;# 
   343  0214                     	;# 
   344  0215                     	;# 
   345  0215                     	;# 
   346  0215                     	;# 
   347  0216                     	;# 
   348  0216                     	;# 
   349  0217                     	;# 
   350  0217                     	;# 
   351  0219                     	;# 
   352  021A                     	;# 
   353  021B                     	;# 
   354  021C                     	;# 
   355  021D                     	;# 
   356  021E                     	;# 
   357  021F                     	;# 
   358  0291                     	;# 
   359  0291                     	;# 
   360  0292                     	;# 
   361  0293                     	;# 
   362  0294                     	;# 
   363  0295                     	;# 
   364  0295                     	;# 
   365  0296                     	;# 
   366  0298                     	;# 
   367  0298                     	;# 
   368  0299                     	;# 
   369  029A                     	;# 
   370  029B                     	;# 
   371  029C                     	;# 
   372  029D                     	;# 
   373  029E                     	;# 
   374  0311                     	;# 
   375  0311                     	;# 
   376  0312                     	;# 
   377  0313                     	;# 
   378  0318                     	;# 
   379  0318                     	;# 
   380  0319                     	;# 
   381  031A                     	;# 
   382  038C                     	;# 
   383  038D                     	;# 
   384  038E                     	;# 
   385  0391                     	;# 
   386  0392                     	;# 
   387  0393                     	;# 
   388  0394                     	;# 
   389  0395                     	;# 
   390  0396                     	;# 
   391  039A                     	;# 
   392  039C                     	;# 
   393  039D                     	;# 
   394  039E                     	;# 
   395  039F                     	;# 
   396  0415                     	;# 
   397  0416                     	;# 
   398  0417                     	;# 
   399  041C                     	;# 
   400  041D                     	;# 
   401  041E                     	;# 
   402  0FE4                     	;# 
   403  0FE5                     	;# 
   404  0FE6                     	;# 
   405  0FE7                     	;# 
   406  0FE8                     	;# 
   407  0FE9                     	;# 
   408  0FEA                     	;# 
   409  0FEB                     	;# 
   410  0FED                     	;# 
   411  0FEE                     	;# 
   412  0FEF                     	;# 
   413  0000                     	;# 
   414  0001                     	;# 
   415  0002                     	;# 
   416  0003                     	;# 
   417  0004                     	;# 
   418  0005                     	;# 
   419  0006                     	;# 
   420  0007                     	;# 
   421  0008                     	;# 
   422  0009                     	;# 
   423  000A                     	;# 
   424  000B                     	;# 
   425  000C                     	;# 
   426  000D                     	;# 
   427  000E                     	;# 
   428  0011                     	;# 
   429  0012                     	;# 
   430  0013                     	;# 
   431  0014                     	;# 
   432  0015                     	;# 
   433  0016                     	;# 
   434  0016                     	;# 
   435  0017                     	;# 
   436  0018                     	;# 
   437  0019                     	;# 
   438  001A                     	;# 
   439  001B                     	;# 
   440  001C                     	;# 
   441  001E                     	;# 
   442  001F                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  008E                     	;# 
   446  0091                     	;# 
   447  0092                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  010E                     	;# 
   464  0111                     	;# 
   465  0112                     	;# 
   466  0113                     	;# 
   467  0114                     	;# 
   468  0115                     	;# 
   469  0116                     	;# 
   470  0117                     	;# 
   471  0118                     	;# 
   472  0119                     	;# 
   473  011A                     	;# 
   474  011B                     	;# 
   475  011D                     	;# 
   476  011E                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  018E                     	;# 
   480  0191                     	;# 
   481  0191                     	;# 
   482  0192                     	;# 
   483  0193                     	;# 
   484  0193                     	;# 
   485  0193                     	;# 
   486  0194                     	;# 
   487  0195                     	;# 
   488  0196                     	;# 
   489  0199                     	;# 
   490  019A                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019C                     	;# 
   494  019D                     	;# 
   495  019E                     	;# 
   496  019F                     	;# 
   497  020C                     	;# 
   498  020D                     	;# 
   499  020E                     	;# 
   500  0211                     	;# 
   501  0211                     	;# 
   502  0212                     	;# 
   503  0212                     	;# 
   504  0213                     	;# 
   505  0213                     	;# 
   506  0214                     	;# 
   507  0214                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0216                     	;# 
   512  0216                     	;# 
   513  0217                     	;# 
   514  0217                     	;# 
   515  0219                     	;# 
   516  021A                     	;# 
   517  021B                     	;# 
   518  021C                     	;# 
   519  021D                     	;# 
   520  021E                     	;# 
   521  021F                     	;# 
   522  0291                     	;# 
   523  0291                     	;# 
   524  0292                     	;# 
   525  0293                     	;# 
   526  0294                     	;# 
   527  0295                     	;# 
   528  0295                     	;# 
   529  0296                     	;# 
   530  0298                     	;# 
   531  0298                     	;# 
   532  0299                     	;# 
   533  029A                     	;# 
   534  029B                     	;# 
   535  029C                     	;# 
   536  029D                     	;# 
   537  029E                     	;# 
   538  0311                     	;# 
   539  0311                     	;# 
   540  0312                     	;# 
   541  0313                     	;# 
   542  0318                     	;# 
   543  0318                     	;# 
   544  0319                     	;# 
   545  031A                     	;# 
   546  038C                     	;# 
   547  038D                     	;# 
   548  038E                     	;# 
   549  0391                     	;# 
   550  0392                     	;# 
   551  0393                     	;# 
   552  0394                     	;# 
   553  0395                     	;# 
   554  0396                     	;# 
   555  039A                     	;# 
   556  039C                     	;# 
   557  039D                     	;# 
   558  039E                     	;# 
   559  039F                     	;# 
   560  0415                     	;# 
   561  0416                     	;# 
   562  0417                     	;# 
   563  041C                     	;# 
   564  041D                     	;# 
   565  041E                     	;# 
   566  0FE4                     	;# 
   567  0FE5                     	;# 
   568  0FE6                     	;# 
   569  0FE7                     	;# 
   570  0FE8                     	;# 
   571  0FE9                     	;# 
   572  0FEA                     	;# 
   573  0FEB                     	;# 
   574  0FED                     	;# 
   575  0FEE                     	;# 
   576  0FEF                     	;# 
   577  0000                     	;# 
   578  0001                     	;# 
   579  0002                     	;# 
   580  0003                     	;# 
   581  0004                     	;# 
   582  0005                     	;# 
   583  0006                     	;# 
   584  0007                     	;# 
   585  0008                     	;# 
   586  0009                     	;# 
   587  000A                     	;# 
   588  000B                     	;# 
   589  000C                     	;# 
   590  000D                     	;# 
   591  000E                     	;# 
   592  0011                     	;# 
   593  0012                     	;# 
   594  0013                     	;# 
   595  0014                     	;# 
   596  0015                     	;# 
   597  0016                     	;# 
   598  0016                     	;# 
   599  0017                     	;# 
   600  0018                     	;# 
   601  0019                     	;# 
   602  001A                     	;# 
   603  001B                     	;# 
   604  001C                     	;# 
   605  001E                     	;# 
   606  001F                     	;# 
   607  008C                     	;# 
   608  008D                     	;# 
   609  008E                     	;# 
   610  0091                     	;# 
   611  0092                     	;# 
   612  0093                     	;# 
   613  0094                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0097                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009A                     	;# 
   620  009B                     	;# 
   621  009B                     	;# 
   622  009C                     	;# 
   623  009D                     	;# 
   624  009E                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010E                     	;# 
   628  0111                     	;# 
   629  0112                     	;# 
   630  0113                     	;# 
   631  0114                     	;# 
   632  0115                     	;# 
   633  0116                     	;# 
   634  0117                     	;# 
   635  0118                     	;# 
   636  0119                     	;# 
   637  011A                     	;# 
   638  011B                     	;# 
   639  011D                     	;# 
   640  011E                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  018E                     	;# 
   644  0191                     	;# 
   645  0191                     	;# 
   646  0192                     	;# 
   647  0193                     	;# 
   648  0193                     	;# 
   649  0193                     	;# 
   650  0194                     	;# 
   651  0195                     	;# 
   652  0196                     	;# 
   653  0199                     	;# 
   654  019A                     	;# 
   655  019B                     	;# 
   656  019B                     	;# 
   657  019C                     	;# 
   658  019D                     	;# 
   659  019E                     	;# 
   660  019F                     	;# 
   661  020C                     	;# 
   662  020D                     	;# 
   663  020E                     	;# 
   664  0211                     	;# 
   665  0211                     	;# 
   666  0212                     	;# 
   667  0212                     	;# 
   668  0213                     	;# 
   669  0213                     	;# 
   670  0214                     	;# 
   671  0214                     	;# 
   672  0215                     	;# 
   673  0215                     	;# 
   674  0215                     	;# 
   675  0216                     	;# 
   676  0216                     	;# 
   677  0217                     	;# 
   678  0217                     	;# 
   679  0219                     	;# 
   680  021A                     	;# 
   681  021B                     	;# 
   682  021C                     	;# 
   683  021D                     	;# 
   684  021E                     	;# 
   685  021F                     	;# 
   686  0291                     	;# 
   687  0291                     	;# 
   688  0292                     	;# 
   689  0293                     	;# 
   690  0294                     	;# 
   691  0295                     	;# 
   692  0295                     	;# 
   693  0296                     	;# 
   694  0298                     	;# 
   695  0298                     	;# 
   696  0299                     	;# 
   697  029A                     	;# 
   698  029B                     	;# 
   699  029C                     	;# 
   700  029D                     	;# 
   701  029E                     	;# 
   702  0311                     	;# 
   703  0311                     	;# 
   704  0312                     	;# 
   705  0313                     	;# 
   706  0318                     	;# 
   707  0318                     	;# 
   708  0319                     	;# 
   709  031A                     	;# 
   710  038C                     	;# 
   711  038D                     	;# 
   712  038E                     	;# 
   713  0391                     	;# 
   714  0392                     	;# 
   715  0393                     	;# 
   716  0394                     	;# 
   717  0395                     	;# 
   718  0396                     	;# 
   719  039A                     	;# 
   720  039C                     	;# 
   721  039D                     	;# 
   722  039E                     	;# 
   723  039F                     	;# 
   724  0415                     	;# 
   725  0416                     	;# 
   726  0417                     	;# 
   727  041C                     	;# 
   728  041D                     	;# 
   729  041E                     	;# 
   730  0FE4                     	;# 
   731  0FE5                     	;# 
   732  0FE6                     	;# 
   733  0FE7                     	;# 
   734  0FE8                     	;# 
   735  0FE9                     	;# 
   736  0FEA                     	;# 
   737  0FEB                     	;# 
   738  0FED                     	;# 
   739  0FEE                     	;# 
   740  0FEF                     	;# 
   741  0000                     	;# 
   742  0001                     	;# 
   743  0002                     	;# 
   744  0003                     	;# 
   745  0004                     	;# 
   746  0005                     	;# 
   747  0006                     	;# 
   748  0007                     	;# 
   749  0008                     	;# 
   750  0009                     	;# 
   751  000A                     	;# 
   752  000B                     	;# 
   753  000C                     	;# 
   754  000D                     	;# 
   755  000E                     	;# 
   756  0011                     	;# 
   757  0012                     	;# 
   758  0013                     	;# 
   759  0014                     	;# 
   760  0015                     	;# 
   761  0016                     	;# 
   762  0016                     	;# 
   763  0017                     	;# 
   764  0018                     	;# 
   765  0019                     	;# 
   766  001A                     	;# 
   767  001B                     	;# 
   768  001C                     	;# 
   769  001E                     	;# 
   770  001F                     	;# 
   771  008C                     	;# 
   772  008D                     	;# 
   773  008E                     	;# 
   774  0091                     	;# 
   775  0092                     	;# 
   776  0093                     	;# 
   777  0094                     	;# 
   778  0095                     	;# 
   779  0096                     	;# 
   780  0097                     	;# 
   781  0098                     	;# 
   782  0099                     	;# 
   783  009A                     	;# 
   784  009B                     	;# 
   785  009B                     	;# 
   786  009C                     	;# 
   787  009D                     	;# 
   788  009E                     	;# 
   789  010C                     	;# 
   790  010D                     	;# 
   791  010E                     	;# 
   792  0111                     	;# 
   793  0112                     	;# 
   794  0113                     	;# 
   795  0114                     	;# 
   796  0115                     	;# 
   797  0116                     	;# 
   798  0117                     	;# 
   799  0118                     	;# 
   800  0119                     	;# 
   801  011A                     	;# 
   802  011B                     	;# 
   803  011D                     	;# 
   804  011E                     	;# 
   805  018C                     	;# 
   806  018D                     	;# 
   807  018E                     	;# 
   808  0191                     	;# 
   809  0191                     	;# 
   810  0192                     	;# 
   811  0193                     	;# 
   812  0193                     	;# 
   813  0193                     	;# 
   814  0194                     	;# 
   815  0195                     	;# 
   816  0196                     	;# 
   817  0199                     	;# 
   818  019A                     	;# 
   819  019B                     	;# 
   820  019B                     	;# 
   821  019C                     	;# 
   822  019D                     	;# 
   823  019E                     	;# 
   824  019F                     	;# 
   825  020C                     	;# 
   826  020D                     	;# 
   827  020E                     	;# 
   828  0211                     	;# 
   829  0211                     	;# 
   830  0212                     	;# 
   831  0212                     	;# 
   832  0213                     	;# 
   833  0213                     	;# 
   834  0214                     	;# 
   835  0214                     	;# 
   836  0215                     	;# 
   837  0215                     	;# 
   838  0215                     	;# 
   839  0216                     	;# 
   840  0216                     	;# 
   841  0217                     	;# 
   842  0217                     	;# 
   843  0219                     	;# 
   844  021A                     	;# 
   845  021B                     	;# 
   846  021C                     	;# 
   847  021D                     	;# 
   848  021E                     	;# 
   849  021F                     	;# 
   850  0291                     	;# 
   851  0291                     	;# 
   852  0292                     	;# 
   853  0293                     	;# 
   854  0294                     	;# 
   855  0295                     	;# 
   856  0295                     	;# 
   857  0296                     	;# 
   858  0298                     	;# 
   859  0298                     	;# 
   860  0299                     	;# 
   861  029A                     	;# 
   862  029B                     	;# 
   863  029C                     	;# 
   864  029D                     	;# 
   865  029E                     	;# 
   866  0311                     	;# 
   867  0311                     	;# 
   868  0312                     	;# 
   869  0313                     	;# 
   870  0318                     	;# 
   871  0318                     	;# 
   872  0319                     	;# 
   873  031A                     	;# 
   874  038C                     	;# 
   875  038D                     	;# 
   876  038E                     	;# 
   877  0391                     	;# 
   878  0392                     	;# 
   879  0393                     	;# 
   880  0394                     	;# 
   881  0395                     	;# 
   882  0396                     	;# 
   883  039A                     	;# 
   884  039C                     	;# 
   885  039D                     	;# 
   886  039E                     	;# 
   887  039F                     	;# 
   888  0415                     	;# 
   889  0416                     	;# 
   890  0417                     	;# 
   891  041C                     	;# 
   892  041D                     	;# 
   893  041E                     	;# 
   894  0FE4                     	;# 
   895  0FE5                     	;# 
   896  0FE6                     	;# 
   897  0FE7                     	;# 
   898  0FE8                     	;# 
   899  0FE9                     	;# 
   900  0FEA                     	;# 
   901  0FEB                     	;# 
   902  0FED                     	;# 
   903  0FEE                     	;# 
   904  0FEF                     	;# 
   905  0000                     	;# 
   906  0001                     	;# 
   907  0002                     	;# 
   908  0003                     	;# 
   909  0004                     	;# 
   910  0005                     	;# 
   911  0006                     	;# 
   912  0007                     	;# 
   913  0008                     	;# 
   914  0009                     	;# 
   915  000A                     	;# 
   916  000B                     	;# 
   917  000C                     	;# 
   918  000D                     	;# 
   919  000E                     	;# 
   920  0011                     	;# 
   921  0012                     	;# 
   922  0013                     	;# 
   923  0014                     	;# 
   924  0015                     	;# 
   925  0016                     	;# 
   926  0016                     	;# 
   927  0017                     	;# 
   928  0018                     	;# 
   929  0019                     	;# 
   930  001A                     	;# 
   931  001B                     	;# 
   932  001C                     	;# 
   933  001E                     	;# 
   934  001F                     	;# 
   935  008C                     	;# 
   936  008D                     	;# 
   937  008E                     	;# 
   938  0091                     	;# 
   939  0092                     	;# 
   940  0093                     	;# 
   941  0094                     	;# 
   942  0095                     	;# 
   943  0096                     	;# 
   944  0097                     	;# 
   945  0098                     	;# 
   946  0099                     	;# 
   947  009A                     	;# 
   948  009B                     	;# 
   949  009B                     	;# 
   950  009C                     	;# 
   951  009D                     	;# 
   952  009E                     	;# 
   953  010C                     	;# 
   954  010D                     	;# 
   955  010E                     	;# 
   956  0111                     	;# 
   957  0112                     	;# 
   958  0113                     	;# 
   959  0114                     	;# 
   960  0115                     	;# 
   961  0116                     	;# 
   962  0117                     	;# 
   963  0118                     	;# 
   964  0119                     	;# 
   965  011A                     	;# 
   966  011B                     	;# 
   967  011D                     	;# 
   968  011E                     	;# 
   969  018C                     	;# 
   970  018D                     	;# 
   971  018E                     	;# 
   972  0191                     	;# 
   973  0191                     	;# 
   974  0192                     	;# 
   975  0193                     	;# 
   976  0193                     	;# 
   977  0193                     	;# 
   978  0194                     	;# 
   979  0195                     	;# 
   980  0196                     	;# 
   981  0199                     	;# 
   982  019A                     	;# 
   983  019B                     	;# 
   984  019B                     	;# 
   985  019C                     	;# 
   986  019D                     	;# 
   987  019E                     	;# 
   988  019F                     	;# 
   989  020C                     	;# 
   990  020D                     	;# 
   991  020E                     	;# 
   992  0211                     	;# 
   993  0211                     	;# 
   994  0212                     	;# 
   995  0212                     	;# 
   996  0213                     	;# 
   997  0213                     	;# 
   998  0214                     	;# 
   999  0214                     	;# 
  1000  0215                     	;# 
  1001  0215                     	;# 
  1002  0215                     	;# 
  1003  0216                     	;# 
  1004  0216                     	;# 
  1005  0217                     	;# 
  1006  0217                     	;# 
  1007  0219                     	;# 
  1008  021A                     	;# 
  1009  021B                     	;# 
  1010  021C                     	;# 
  1011  021D                     	;# 
  1012  021E                     	;# 
  1013  021F                     	;# 
  1014  0291                     	;# 
  1015  0291                     	;# 
  1016  0292                     	;# 
  1017  0293                     	;# 
  1018  0294                     	;# 
  1019  0295                     	;# 
  1020  0295                     	;# 
  1021  0296                     	;# 
  1022  0298                     	;# 
  1023  0298                     	;# 
  1024  0299                     	;# 
  1025  029A                     	;# 
  1026  029B                     	;# 
  1027  029C                     	;# 
  1028  029D                     	;# 
  1029  029E                     	;# 
  1030  0311                     	;# 
  1031  0311                     	;# 
  1032  0312                     	;# 
  1033  0313                     	;# 
  1034  0318                     	;# 
  1035  0318                     	;# 
  1036  0319                     	;# 
  1037  031A                     	;# 
  1038  038C                     	;# 
  1039  038D                     	;# 
  1040  038E                     	;# 
  1041  0391                     	;# 
  1042  0392                     	;# 
  1043  0393                     	;# 
  1044  0394                     	;# 
  1045  0395                     	;# 
  1046  0396                     	;# 
  1047  039A                     	;# 
  1048  039C                     	;# 
  1049  039D                     	;# 
  1050  039E                     	;# 
  1051  039F                     	;# 
  1052  0415                     	;# 
  1053  0416                     	;# 
  1054  0417                     	;# 
  1055  041C                     	;# 
  1056  041D                     	;# 
  1057  041E                     	;# 
  1058  0FE4                     	;# 
  1059  0FE5                     	;# 
  1060  0FE6                     	;# 
  1061  0FE7                     	;# 
  1062  0FE8                     	;# 
  1063  0FE9                     	;# 
  1064  0FEA                     	;# 
  1065  0FEB                     	;# 
  1066  0FED                     	;# 
  1067  0FEE                     	;# 
  1068  0FEF                     	;# 
  1069                           
  1070 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1071  0000                     
  1072 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1073  0000                     
  1074 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1075  0000                     
  1076                           	psect	stringtext1
  1077  0805                     __pstringtext1:
  1078  0805                     _tiny:
  1079  0805  3460               	retlw	96
  1080  0806  3442               	retlw	66
  1081  0807  34A2               	retlw	162
  1082  0808  340D               	retlw	13
  1083  0809                     __end_of_tiny:
  1084                           
  1085                           	psect	nvBANK1
  1086  00E8                     __pnvBANK1:
  1087  00E8                     _EUSART_ErrorHandler:
  1088  00E8                     	ds	2
  1089  00EA                     _EUSART_OverrunErrorHandler:
  1090  00EA                     	ds	2
  1091  00EC                     _EUSART_FramingErrorHandler:
  1092  00EC                     	ds	2
  1093  0011                     _PIR1bits	set	17
  1094  009D                     _ADCON0bits	set	157
  1095  009D                     _ADCON0	set	157
  1096  009C                     _ADRESH	set	156
  1097  009B                     _ADRESL	set	155
  1098  009E                     _ADCON1	set	158
  1099  0095                     _OPTION_REGbits	set	149
  1100  008E                     _TRISC	set	142
  1101  008D                     _TRISB	set	141
  1102  008C                     _TRISA	set	140
  1103  0097                     _WDTCON	set	151
  1104  0098                     _OSCTUNE	set	152
  1105  0099                     _OSCCON	set	153
  1106  010E                     _LATCbits	set	270
  1107  011E                     _APFCON1	set	286
  1108  011D                     _APFCON0	set	285
  1109  010E                     _LATC	set	270
  1110  010D                     _LATB	set	269
  1111  010C                     _LATA	set	268
  1112  0116                     _BORCON	set	278
  1113  019A                     _TXREG	set	410
  1114  0199                     _RCREG	set	409
  1115  019D                     _RCSTAbits	set	413
  1116  019E                     _TXSTAbits	set	414
  1117  019C                     _SPBRGH	set	412
  1118  019B                     _SPBRGL	set	411
  1119  019E                     _TXSTA	set	414
  1120  019D                     _RCSTA	set	413
  1121  019F                     _BAUDCON	set	415
  1122  018C                     _ANSELA	set	396
  1123  018D                     _ANSELB	set	397
  1124  018E                     _ANSELC	set	398
  1125  020E                     _WPUC	set	526
  1126  020C                     _WPUA	set	524
  1127  020D                     _WPUB	set	525
  1128                           
  1129                           	psect	stringtext2
  1130  0800                     __pstringtext2:
  1131  0800                     STR_1:
  1132  0800  3425               	retlw	37	;'%'
  1133  0801  3464               	retlw	100	;'d'
  1134  0802  3420               	retlw	32	;' '
  1135  0803  340A               	retlw	10
  1136  0804  3400               	retlw	0
  1137                           
  1138                           	psect	stringtext3
  1139  0000                     __pstringtext3:
  1140  0804                     
  1141                           	psect	cinit
  1142  07F2                     start_initialization:	
  1143                           ; #config settings
  1144                           
  1145  07F2                     __initialization:
  1146                           
  1147                           ; Clear objects allocated to BANK0
  1148  07F2  0020               	movlb	0	; select bank0
  1149  07F3  01EE               	clrf	__pbssBANK0& (0+127)
  1150  07F4  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  1151                           
  1152                           ; Clear objects allocated to BANK1
  1153  07F5  30A0               	movlw	low __pbssBANK1
  1154  07F6  0084               	movwf	4
  1155  07F7  3000               	movlw	high __pbssBANK1
  1156  07F8  0085               	movwf	5
  1157  07F9  303F               	movlw	63
  1158  07FA  3181  214F  3187   	fcall	clear_ram0
  1159  07FD                     end_of_initialization:	
  1160                           ;End of C runtime variable initialization code
  1161                           
  1162  07FD                     __end_of__initialization:
  1163  07FD  0020               	movlb	0
  1164  07FE  3182  2AE3         	ljmp	_main	;jump to C main() function
  1165                           
  1166                           	psect	bssBANK0
  1167  006E                     __pbssBANK0:
  1168  006E                     _flags:
  1169  006E                     	ds	2
  1170                           
  1171                           	psect	bssBANK1
  1172  00A0                     __pbssBANK1:
  1173  00A0                     _errno:
  1174  00A0                     	ds	2
  1175  00A2                     _nout:
  1176  00A2                     	ds	2
  1177  00A4                     _width:
  1178  00A4                     	ds	2
  1179  00A6                     _prec:
  1180  00A6                     	ds	2
  1181  00A8                     _ADC_InterruptHandler:
  1182  00A8                     	ds	2
  1183  00AA                     _eusartRxLastError:
  1184  00AA                     	ds	1
  1185  00AB                     _dbuf:
  1186  00AB                     	ds	32
  1187  00CB                     _Buff:
  1188  00CB                     	ds	20
  1189                           
  1190                           	psect	clrtext
  1191  014F                     clear_ram0:	
  1192                           ;	Called with FSR0 containing the base address, and
  1193                           ;	WREG with the size to clear
  1194                           
  1195  014F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1196  0150                     clrloop0:
  1197  0150  0180               	clrf	0	;clear RAM location pointed to by FSR
  1198  0151  3101               	addfsr 0,1
  1199  0152  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1200  0153  2950               	goto	clrloop0	;have we reached the end yet?
  1201  0154  3400               	retlw	0	;all done for this memory range, return
  1202                           
  1203                           	psect	cstackBANK1
  1204  00DF                     __pcstackBANK1:
  1205  00DF                     	ds	2
  1206  00E1                     sprintf@ap:
  1207                           
  1208                           ; 1 bytes @ 0x2
  1209  00E1                     	ds	1
  1210  00E2                     sprintf@s:
  1211                           
  1212                           ; 1 bytes @ 0x3
  1213  00E2                     	ds	1
  1214  00E3                     sprintf@f:
  1215                           
  1216                           ; 5 bytes @ 0x4
  1217  00E3                     	ds	5
  1218                           
  1219                           	psect	cstackCOMMON
  1220  0070                     __pcstackCOMMON:
  1221  0070                     ?_PIN_MANAGER_Initialize:
  1222  0070                     ??_PIN_MANAGER_Initialize:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0070                     ?_OSCILLATOR_Initialize:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0070                     ??_OSCILLATOR_Initialize:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0070                     ?_WDT_Initialize:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0070                     ??_WDT_Initialize:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0070                     ?_ADC_Initialize:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0070                     ??_ADC_Initialize:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0070                     ?_EUSART_Initialize:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ?_EUSART_SetFramingErrorHandler:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0070                     ?_EUSART_SetOverrunErrorHandler:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ?_EUSART_SetErrorHandler:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ?_TX_Whole_String:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ?_TX_Command:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ?_putch:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ??_putch:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0070                     ?_SYSTEM_Initialize:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0070                     ?_EUSART_is_tx_ready:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0070                     ??_EUSART_is_tx_ready:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0070                     ?_EUSART_Write:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0070                     ??_EUSART_Write:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     ?_ADC_SelectChannel:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0070                     ??_ADC_SelectChannel:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0070                     ?_ADC_StartConversion:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291  0070                     ??_ADC_StartConversion:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294  0070                     ?_ADC_IsConversionDone:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  0070                     ??_ADC_IsConversionDone:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  0070                     ?_main:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  0070                     ??___aodiv:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  0070                     ??___aomod:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0070                     ?_strlen:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0070                     ?_fputc:	
  1313                           ; 2 bytes @ 0x0
  1314                           
  1315  0070                     ?_ADC_GetConversionResult:	
  1316                           ; 2 bytes @ 0x0
  1317                           
  1318  0070                     _EUSART_is_tx_ready$250:	
  1319                           ; 2 bytes @ 0x0
  1320                           
  1321  0070                     EUSART_Write@txData:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324  0070                     putch@c:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1331                           ; 2 bytes @ 0x0
  1332                           
  1333  0070                     EUSART_SetErrorHandler@interruptHandler:	
  1334                           ; 2 bytes @ 0x0
  1335                           
  1336  0070                     fputc@c:	
  1337                           ; 2 bytes @ 0x0
  1338                           
  1339                           
  1340                           ; 2 bytes @ 0x0
  1341  0070                     	ds	1
  1342  0071                     ??_TX_Command:
  1343  0071                     ADC_SelectChannel@channel:	
  1344                           ; 1 bytes @ 0x1
  1345                           
  1346  0071                     TX_Command@txData:	
  1347                           ; 1 bytes @ 0x1
  1348                           
  1349  0071                     ___aodiv@counter:	
  1350                           ; 1 bytes @ 0x1
  1351                           
  1352  0071                     ___aomod@counter:	
  1353                           ; 1 bytes @ 0x1
  1354                           
  1355                           
  1356                           ; 1 bytes @ 0x1
  1357  0071                     	ds	1
  1358  0072                     ??_EUSART_Initialize:
  1359  0072                     ??_EUSART_SetFramingErrorHandler:	
  1360                           ; 1 bytes @ 0x2
  1361                           
  1362  0072                     ??_EUSART_SetOverrunErrorHandler:	
  1363                           ; 1 bytes @ 0x2
  1364                           
  1365  0072                     ??_EUSART_SetErrorHandler:	
  1366                           ; 1 bytes @ 0x2
  1367                           
  1368  0072                     ??_strlen:	
  1369                           ; 1 bytes @ 0x2
  1370                           
  1371  0072                     ??_SYSTEM_Initialize:	
  1372                           ; 1 bytes @ 0x2
  1373                           
  1374  0072                     ??_ADC_GetConversionResult:	
  1375                           ; 1 bytes @ 0x2
  1376                           
  1377  0072                     ?_ReadVoltage_ADC:	
  1378                           ; 1 bytes @ 0x2
  1379                           
  1380  0072                     ___aodiv@sign:	
  1381                           ; 2 bytes @ 0x2
  1382                           
  1383  0072                     ___aomod@sign:	
  1384                           ; 1 bytes @ 0x2
  1385                           
  1386  0072                     fputc@fp:	
  1387                           ; 1 bytes @ 0x2
  1388                           
  1389                           
  1390                           ; 1 bytes @ 0x2
  1391  0072                     	ds	1
  1392  0073                     ??_fputc:
  1393  0073                     ?_abs:	
  1394                           ; 1 bytes @ 0x3
  1395                           
  1396  0073                     strlen@a:	
  1397                           ; 2 bytes @ 0x3
  1398                           
  1399  0073                     abs@a:	
  1400                           ; 1 bytes @ 0x3
  1401                           
  1402  0073                     ___aodiv@quotient:	
  1403                           ; 2 bytes @ 0x3
  1404                           
  1405                           
  1406                           ; 8 bytes @ 0x3
  1407  0073                     	ds	1
  1408  0074                     ??_ReadVoltage_ADC:
  1409  0074                     strlen@s:	
  1410                           ; 1 bytes @ 0x4
  1411                           
  1412  0074                     ReadVoltage_ADC@convertedValue:	
  1413                           ; 1 bytes @ 0x4
  1414                           
  1415                           
  1416                           ; 2 bytes @ 0x4
  1417  0074                     	ds	1
  1418  0075                     ??_TX_Whole_String:
  1419  0075                     ??_abs:	
  1420                           ; 1 bytes @ 0x5
  1421                           
  1422                           
  1423                           ; 1 bytes @ 0x5
  1424  0075                     	ds	2
  1425  0077                     TX_Whole_String@size_of_string:
  1426                           
  1427                           ; 2 bytes @ 0x7
  1428  0077                     	ds	1
  1429  0078                     ?_fputs:
  1430  0078                     fputs@fp:	
  1431                           ; 2 bytes @ 0x8
  1432                           
  1433                           
  1434                           ; 1 bytes @ 0x8
  1435  0078                     	ds	1
  1436  0079                     ??_fputs:
  1437  0079                     TX_Whole_String@input_string:	
  1438                           ; 1 bytes @ 0x9
  1439                           
  1440                           
  1441                           ; 1 bytes @ 0x9
  1442  0079                     	ds	1
  1443  007A                     TX_Whole_String@i:
  1444                           
  1445                           ; 1 bytes @ 0xA
  1446  007A                     	ds	2
  1447  007C                     ??_pad:
  1448                           
  1449                           ; 1 bytes @ 0xC
  1450  007C                     	ds	1
  1451  007D                     ??_sprintf:
  1452                           
  1453                           ; 1 bytes @ 0xD
  1454  007D                     	ds	1
  1455                           
  1456                           	psect	cstackBANK0
  1457  0020                     __pcstackBANK0:
  1458  0020                     ?___aodiv:
  1459  0020                     ?___aomod:	
  1460                           ; 8 bytes @ 0x0
  1461                           
  1462  0020                     fputs@c:	
  1463                           ; 8 bytes @ 0x0
  1464                           
  1465  0020                     ___aodiv@divisor:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468  0020                     ___aomod@divisor:	
  1469                           ; 8 bytes @ 0x0
  1470                           
  1471                           
  1472                           ; 8 bytes @ 0x0
  1473  0020                     	ds	1
  1474  0021                     fputs@i:
  1475                           
  1476                           ; 2 bytes @ 0x1
  1477  0021                     	ds	2
  1478  0023                     fputs@s:
  1479                           
  1480                           ; 1 bytes @ 0x3
  1481  0023                     	ds	1
  1482  0024                     ?_pad:
  1483  0024                     pad@buf:	
  1484                           ; 2 bytes @ 0x4
  1485                           
  1486                           
  1487                           ; 1 bytes @ 0x4
  1488  0024                     	ds	1
  1489  0025                     pad@p:
  1490                           
  1491                           ; 2 bytes @ 0x5
  1492  0025                     	ds	2
  1493  0027                     pad@i:
  1494                           
  1495                           ; 2 bytes @ 0x7
  1496  0027                     	ds	1
  1497  0028                     ___aodiv@dividend:
  1498  0028                     ___aomod@dividend:	
  1499                           ; 8 bytes @ 0x8
  1500                           
  1501                           
  1502                           ; 8 bytes @ 0x8
  1503  0028                     	ds	1
  1504  0029                     pad@w:
  1505                           
  1506                           ; 2 bytes @ 0x9
  1507  0029                     	ds	2
  1508  002B                     pad@fp:
  1509                           
  1510                           ; 1 bytes @ 0xB
  1511  002B                     	ds	5
  1512  0030                     ?_dtoa:
  1513  0030                     dtoa@d:	
  1514                           ; 2 bytes @ 0x10
  1515                           
  1516                           
  1517                           ; 8 bytes @ 0x10
  1518  0030                     	ds	8
  1519  0038                     ??_dtoa:
  1520                           
  1521                           ; 1 bytes @ 0x18
  1522  0038                     	ds	3
  1523  003B                     _dtoa$986:
  1524                           
  1525                           ; 2 bytes @ 0x1B
  1526  003B                     	ds	2
  1527  003D                     dtoa@fp:
  1528                           
  1529                           ; 1 bytes @ 0x1D
  1530  003D                     	ds	1
  1531  003E                     dtoa@p:
  1532                           
  1533                           ; 2 bytes @ 0x1E
  1534  003E                     	ds	2
  1535  0040                     dtoa@w:
  1536                           
  1537                           ; 2 bytes @ 0x20
  1538  0040                     	ds	2
  1539  0042                     dtoa@s:
  1540                           
  1541                           ; 2 bytes @ 0x22
  1542  0042                     	ds	2
  1543  0044                     dtoa@n:
  1544                           
  1545                           ; 8 bytes @ 0x24
  1546  0044                     	ds	8
  1547  004C                     dtoa@i:
  1548                           
  1549                           ; 2 bytes @ 0x2C
  1550  004C                     	ds	2
  1551  004E                     ?_vfpfcnvrt:
  1552  004E                     vfpfcnvrt@fmt:	
  1553                           ; 2 bytes @ 0x2E
  1554                           
  1555                           
  1556                           ; 1 bytes @ 0x2E
  1557  004E                     	ds	1
  1558  004F                     vfpfcnvrt@ap:
  1559                           
  1560                           ; 1 bytes @ 0x2F
  1561  004F                     	ds	1
  1562  0050                     ??_vfpfcnvrt:
  1563                           
  1564                           ; 1 bytes @ 0x30
  1565  0050                     	ds	5
  1566  0055                     vfpfcnvrt@ll:
  1567                           
  1568                           ; 8 bytes @ 0x35
  1569  0055                     	ds	8
  1570  005D                     vfpfcnvrt@fp:
  1571                           
  1572                           ; 1 bytes @ 0x3D
  1573  005D                     	ds	1
  1574  005E                     ?_vfprintf:
  1575  005E                     vfprintf@fmt:	
  1576                           ; 2 bytes @ 0x3E
  1577                           
  1578                           
  1579                           ; 2 bytes @ 0x3E
  1580  005E                     	ds	2
  1581  0060                     vfprintf@ap:
  1582                           
  1583                           ; 1 bytes @ 0x40
  1584  0060                     	ds	1
  1585  0061                     ??_vfprintf:
  1586                           
  1587                           ; 1 bytes @ 0x41
  1588  0061                     	ds	2
  1589  0063                     vfprintf@fp:
  1590                           
  1591                           ; 1 bytes @ 0x43
  1592  0063                     	ds	1
  1593  0064                     vfprintf@cfmt:
  1594                           
  1595                           ; 2 bytes @ 0x44
  1596  0064                     	ds	2
  1597  0066                     ?_sprintf:
  1598  0066                     sprintf@fmt:	
  1599                           ; 2 bytes @ 0x46
  1600                           
  1601                           
  1602                           ; 2 bytes @ 0x46
  1603  0066                     	ds	4
  1604  006A                     ??_main:
  1605                           
  1606                           ; 1 bytes @ 0x4A
  1607  006A                     	ds	2
  1608  006C                     main@V_ADC:
  1609                           
  1610                           ; 2 bytes @ 0x4C
  1611  006C                     	ds	2
  1612                           
  1613                           	psect	maintext
  1614  02E3                     __pmaintext:	
  1615 ;;
  1616 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1617 ;;
  1618 ;; *************** function _main *****************
  1619 ;; Defined at:
  1620 ;;		line 74 in file "main.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  V_ADC           2   76[BANK0 ] unsigned short 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : B1F/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1635 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1636 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1637 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1638 ;;Total ram usage:        4 bytes
  1639 ;; Hardware stack levels required when called:    8
  1640 ;; This function calls:
  1641 ;;		_ADC_SelectChannel
  1642 ;;		_ADC_StartConversion
  1643 ;;		_ReadVoltage_ADC
  1644 ;;		_SYSTEM_Initialize
  1645 ;;		_TX_Whole_String
  1646 ;;		_sprintf
  1647 ;; This function is called by:
  1648 ;;		Startup code after reset
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function _main
  1654  02E3                     _main:
  1655  02E3                     l1802:	
  1656                           ;incstack = 0
  1657                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1658                           
  1659                           
  1660                           ;main.c: 76:     SYSTEM_Initialize();
  1661  02E3  3181  219F  3182   	fcall	_SYSTEM_Initialize
  1662  02E6                     l1804:
  1663  02E6  0022               	movlb	2	; select bank2
  1664  02E7  150E               	bsf	14,2	;volatile
  1665  02E8                     l1806:
  1666  02E8                     l1808:
  1667                           
  1668                           ;main.c: 81:     ADC_SelectChannel(channel_AN10);
  1669  02E8  300A               	movlw	10
  1670  02E9  3181  2175  3182   	fcall	_ADC_SelectChannel
  1671  02EC                     l1810:
  1672                           
  1673                           ;main.c: 85:         ADC_StartConversion();
  1674  02EC  3181  2130  3182   	fcall	_ADC_StartConversion
  1675  02EF                     l1812:
  1676                           
  1677                           ;main.c: 86:         V_ADC = V_ADC = ReadVoltage_ADC();
  1678  02EF  3181  21AF  3182   	fcall	_ReadVoltage_ADC
  1679  02F2  0873               	movf	?_ReadVoltage_ADC+1,w
  1680  02F3  0020               	movlb	0	; select bank0
  1681  02F4  00ED               	movwf	main@V_ADC+1
  1682  02F5  0872               	movf	?_ReadVoltage_ADC,w
  1683  02F6  00EC               	movwf	main@V_ADC
  1684  02F7  086D               	movf	main@V_ADC+1,w
  1685  02F8  00ED               	movwf	main@V_ADC+1
  1686  02F9  086C               	movf	main@V_ADC,w
  1687  02FA  00EC               	movwf	main@V_ADC
  1688  02FB                     l1814:
  1689                           
  1690                           ;main.c: 87:         sprintf(Buff, "%d \n", V_ADC);
  1691  02FB  3000               	movlw	low (STR_1| (0+32768))
  1692  02FC  00E6               	movwf	sprintf@fmt
  1693  02FD  3088               	movlw	high (STR_1| (0+32768))
  1694  02FE  00E7               	movwf	sprintf@fmt+1
  1695  02FF  086D               	movf	main@V_ADC+1,w
  1696  0300  00E9               	movwf	?_sprintf+3
  1697  0301  086C               	movf	main@V_ADC,w
  1698  0302  00E8               	movwf	?_sprintf+2
  1699  0303  30CB               	movlw	(low (_Buff| 0))& (0+255)
  1700  0304  3182  2234  3182   	fcall	_sprintf
  1701  0307                     l1816:
  1702                           
  1703                           ;main.c: 88:         TX_Whole_String(Buff);
  1704  0307  30CB               	movlw	(low (_Buff| 0))& (0+255)
  1705  0308  3182  22B1  3182   	fcall	_TX_Whole_String
  1706  030B                     l1818:
  1707                           
  1708                           ;main.c: 89:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1709  030B  3006               	movlw	6
  1710  030C  0020               	movlb	0	; select bank0
  1711  030D  00EB               	movwf	??_main+1
  1712  030E  3013               	movlw	19
  1713  030F  00EA               	movwf	??_main
  1714  0310  30AD               	movlw	173
  1715  0311                     u1247:
  1716  0311  0B89               	decfsz	9,f
  1717  0312  2B11               	goto	u1247
  1718  0313  0BEA               	decfsz	??_main,f
  1719  0314  2B11               	goto	u1247
  1720  0315  0BEB               	decfsz	??_main+1,f
  1721  0316  2B11               	goto	u1247
  1722  0317  3200               	nop2
  1723  0318  2AEC               	goto	l1810
  1724  0319  3180  2802         	ljmp	start
  1725  031B                     __end_of_main:
  1726                           
  1727                           	psect	text1
  1728  0234                     __ptext1:	
  1729 ;; *************** function _sprintf *****************
  1730 ;; Defined at:
  1731 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_sprintf.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  s               1    wreg     PTR unsigned char 
  1734 ;;		 -> Buff(20), 
  1735 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1736 ;;		 -> STR_1(5), 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  s               1    3[BANK1 ] PTR unsigned char 
  1739 ;;		 -> Buff(20), 
  1740 ;;  f               5    4[BANK1 ] struct _IO_FILE
  1741 ;;  ret             2    0        int 
  1742 ;;  ap              1    2[BANK1 ] PTR void [1]
  1743 ;;		 -> ?_sprintf(2), 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  2   70[BANK0 ] int 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1753 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1754 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  1755 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1756 ;;      Totals:         1       4       9       0       0       0       0       0       0       0       0       0       
      +0       0
  1757 ;;Total ram usage:       14 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    7
  1760 ;; This function calls:
  1761 ;;		_vfprintf
  1762 ;; This function is called by:
  1763 ;;		_main
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           
  1768                           ;psect for function _sprintf
  1769  0234                     _sprintf:
  1770                           
  1771                           ;incstack = 0
  1772                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1773                           ;sprintf@s stored from wreg
  1774  0234  0021               	movlb	1	; select bank1
  1775  0235  00E2               	movwf	sprintf@s^(0+128)
  1776  0236                     l1764:
  1777  0236  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1778  0237  00FD               	movwf	??_sprintf
  1779  0238  087D               	movf	??_sprintf,w
  1780  0239  00E1               	movwf	sprintf@ap^(0+128)
  1781  023A  0862               	movf	sprintf@s^(0+128),w
  1782  023B  00FD               	movwf	??_sprintf
  1783  023C  087D               	movf	??_sprintf,w
  1784  023D  00E3               	movwf	sprintf@f^(0+128)
  1785  023E                     l1766:
  1786  023E  01E4               	clrf	(sprintf@f^(0+128)+1)
  1787  023F  01E5               	clrf	((sprintf@f+1)^(0+128)+1)
  1788  0240                     l1768:
  1789  0240  01E6               	clrf	(sprintf@f^(0+128)+3)
  1790  0241  01E7               	clrf	((sprintf@f+1)^(0+128)+3)
  1791  0242                     l1770:
  1792  0242  0020               	movlb	0	; select bank0
  1793  0243  0867               	movf	sprintf@fmt+1,w
  1794  0244  00DF               	movwf	vfprintf@fmt+1
  1795  0245  0866               	movf	sprintf@fmt,w
  1796  0246  00DE               	movwf	vfprintf@fmt
  1797  0247  30E1               	movlw	(low (sprintf@ap| 0))& (0+255)
  1798  0248  00FD               	movwf	??_sprintf
  1799  0249  087D               	movf	??_sprintf,w
  1800  024A  00E0               	movwf	vfprintf@ap
  1801  024B  30E3               	movlw	(low (sprintf@f| 0))& (0+255)
  1802  024C  3182  2280  3182   	fcall	_vfprintf
  1803  024F                     l1772:
  1804  024F  0021               	movlb	1	; select bank1
  1805  0250  0864               	movf	(sprintf@f^(0+128)+1),w
  1806  0251  0762               	addwf	sprintf@s^(0+128),w
  1807  0252  00FD               	movwf	??_sprintf
  1808  0253  087D               	movf	??_sprintf,w
  1809  0254  0086               	movwf	6
  1810  0255  0187               	clrf	7
  1811  0256  0181               	clrf	1
  1812  0257                     l863:
  1813  0257  0008               	return
  1814  0258                     __end_of_sprintf:
  1815                           
  1816                           	psect	text2
  1817  0280                     __ptext2:	
  1818 ;; *************** function _vfprintf *****************
  1819 ;; Defined at:
  1820 ;;		line 1390 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  fp              1    wreg     PTR struct _IO_FILE
  1823 ;;		 -> sprintf@f(5), 
  1824 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1825 ;;		 -> STR_1(5), 
  1826 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1827 ;;		 -> sprintf@ap(1), 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  1830 ;;		 -> sprintf@f(5), 
  1831 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1832 ;;		 -> STR_1(5), 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  2   62[BANK0 ] int 
  1835 ;; Registers used:
  1836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1842 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1844 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1845 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1846 ;;Total ram usage:        8 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    6
  1849 ;; This function calls:
  1850 ;;		_vfpfcnvrt
  1851 ;; This function is called by:
  1852 ;;		_sprintf
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function _vfprintf
  1858  0280                     _vfprintf:
  1859                           
  1860                           ;incstack = 0
  1861                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1862                           ;vfprintf@fp stored from wreg
  1863  0280  0020               	movlb	0	; select bank0
  1864  0281  00E3               	movwf	vfprintf@fp
  1865  0282                     l1734:
  1866                           
  1867                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  1868  0282  085F               	movf	vfprintf@fmt+1,w
  1869  0283  00E5               	movwf	vfprintf@cfmt+1
  1870  0284  085E               	movf	vfprintf@fmt,w
  1871  0285  00E4               	movwf	vfprintf@cfmt
  1872  0286                     l1736:
  1873                           
  1874                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  1875  0286  0021               	movlb	1	; select bank1
  1876  0287  01A2               	clrf	_nout^(0+128)
  1877  0288  01A3               	clrf	(_nout+1)^(0+128)
  1878                           
  1879                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  1880  0289  2A9E               	goto	l1740
  1881  028A                     l1738:
  1882                           
  1883                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1884  028A  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1885  028B  00E1               	movwf	??_vfprintf
  1886  028C  0861               	movf	??_vfprintf,w
  1887  028D  00CE               	movwf	vfpfcnvrt@fmt
  1888  028E  0860               	movf	vfprintf@ap,w
  1889  028F  00E2               	movwf	??_vfprintf+1
  1890  0290  0862               	movf	??_vfprintf+1,w
  1891  0291  00CF               	movwf	vfpfcnvrt@ap
  1892  0292  0863               	movf	vfprintf@fp,w
  1893  0293  3183  23C0  3182   	fcall	_vfpfcnvrt
  1894  0296  0020               	movlb	0	; select bank0
  1895  0297  084E               	movf	?_vfpfcnvrt,w
  1896  0298  0021               	movlb	1	; select bank1
  1897  0299  07A2               	addwf	_nout^(0+128),f
  1898  029A  0020               	movlb	0	; select bank0
  1899  029B  084F               	movf	?_vfpfcnvrt+1,w
  1900  029C  0021               	movlb	1	; select bank1
  1901  029D  3DA3               	addwfc	(_nout+1)^(0+128),f
  1902  029E                     l1740:
  1903                           
  1904                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  1905  029E  0020               	movlb	0	; select bank0
  1906  029F  0864               	movf	vfprintf@cfmt,w
  1907  02A0  0084               	movwf	4
  1908  02A1  0865               	movf	vfprintf@cfmt+1,w
  1909  02A2  0085               	movwf	5
  1910  02A3  0012               	moviw fsr0++
  1911  02A4  1D03               	btfss	3,2
  1912  02A5  2AA7               	goto	u1191
  1913  02A6  2AA8               	goto	u1190
  1914  02A7                     u1191:
  1915  02A7  2A8A               	goto	l1738
  1916  02A8                     u1190:
  1917  02A8                     l1742:
  1918                           
  1919                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  1920  02A8  0021               	movlb	1	; select bank1
  1921  02A9  0823               	movf	(_nout+1)^(0+128),w
  1922  02AA  0020               	movlb	0	; select bank0
  1923  02AB  00DF               	movwf	?_vfprintf+1
  1924  02AC  0021               	movlb	1	; select bank1
  1925  02AD  0822               	movf	_nout^(0+128),w
  1926  02AE  0020               	movlb	0	; select bank0
  1927  02AF  00DE               	movwf	?_vfprintf
  1928  02B0                     l935:
  1929  02B0  0008               	return
  1930  02B1                     __end_of_vfprintf:
  1931                           
  1932                           	psect	text3
  1933  03C0                     __ptext3:	
  1934 ;; *************** function _vfpfcnvrt *****************
  1935 ;; Defined at:
  1936 ;;		line 692 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  fp              1    wreg     PTR struct _IO_FILE
  1939 ;;		 -> sprintf@f(5), 
  1940 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1941 ;;		 -> vfprintf@cfmt(2), 
  1942 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1943 ;;		 -> sprintf@ap(1), 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  1946 ;;		 -> sprintf@f(5), 
  1947 ;;  ll              8   53[BANK0 ] long long 
  1948 ;;  llu             8    0        unsigned long long 
  1949 ;;  f               4    0        unsigned long long 
  1950 ;;  ct              3    0        unsigned char [3]
  1951 ;;  vp              2    0        PTR void 
  1952 ;;  i               2    0        int 
  1953 ;;  done            2    0        int 
  1954 ;;  cp              2    0        PTR unsigned char 
  1955 ;;  c               1    0        unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  2   46[BANK0 ] int 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1965 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1966 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1967 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1968 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1969 ;;Total ram usage:       16 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    5
  1972 ;; This function calls:
  1973 ;;		_dtoa
  1974 ;;		_fputc
  1975 ;; This function is called by:
  1976 ;;		_vfprintf
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           
  1981                           ;psect for function _vfpfcnvrt
  1982  03C0                     _vfpfcnvrt:
  1983                           
  1984                           ;incstack = 0
  1985                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1986                           ;vfpfcnvrt@fp stored from wreg
  1987  03C0  0020               	movlb	0	; select bank0
  1988  03C1  00DD               	movwf	vfpfcnvrt@fp
  1989  03C2                     l1636:
  1990                           
  1991                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  1992  03C2  084E               	movf	vfpfcnvrt@fmt,w
  1993  03C3  0086               	movwf	6
  1994  03C4  0187               	clrf	7
  1995  03C5  3F40               	moviw [0]fsr1
  1996  03C6  00D0               	movwf	??_vfpfcnvrt
  1997  03C7  3F41               	moviw [1]fsr1
  1998  03C8  00D1               	movwf	??_vfpfcnvrt+1
  1999  03C9  0850               	movf	??_vfpfcnvrt,w
  2000  03CA  0084               	movwf	4
  2001  03CB  0851               	movf	??_vfpfcnvrt+1,w
  2002  03CC  0085               	movwf	5
  2003  03CD  0012               	moviw fsr0++
  2004  03CE  3A25               	xorlw	37
  2005  03CF  1D03               	btfss	3,2
  2006  03D0  2BD2               	goto	u1141
  2007  03D1  2BD3               	goto	u1140
  2008  03D2                     u1141:
  2009  03D2  2C79               	goto	l1672
  2010  03D3                     u1140:
  2011  03D3                     l1638:
  2012                           
  2013                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  2014  03D3  084E               	movf	vfpfcnvrt@fmt,w
  2015  03D4  0086               	movwf	6
  2016  03D5  0187               	clrf	7
  2017  03D6  3001               	movlw	1
  2018  03D7  0781               	addwf	1,f
  2019  03D8  3141               	addfsr 1,1
  2020  03D9  1803               	skipnc
  2021  03DA  0A81               	incf	1,f
  2022  03DB                     l1640:
  2023                           
  2024                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  2025  03DB  0021               	movlb	1	; select bank1
  2026  03DC  01A4               	clrf	_width^(0+128)
  2027  03DD  01A5               	clrf	(_width+1)^(0+128)
  2028  03DE  0020               	movlb	0	; select bank0
  2029  03DF  01EE               	clrf	_flags
  2030  03E0  01EF               	clrf	_flags+1
  2031  03E1                     l1642:
  2032                           
  2033                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  2034  03E1  30FF               	movlw	255
  2035  03E2  0021               	movlb	1	; select bank1
  2036  03E3  00A6               	movwf	_prec^(0+128)
  2037  03E4  30FF               	movlw	255
  2038  03E5  00A7               	movwf	(_prec^(0+128)+1)
  2039  03E6                     l1644:
  2040                           
  2041                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2042  03E6  0020               	movlb	0	; select bank0
  2043  03E7  084E               	movf	vfpfcnvrt@fmt,w
  2044  03E8  0086               	movwf	6
  2045  03E9  0187               	clrf	7
  2046  03EA  3F40               	moviw [0]fsr1
  2047  03EB  00D0               	movwf	??_vfpfcnvrt
  2048  03EC  3F41               	moviw [1]fsr1
  2049  03ED  00D1               	movwf	??_vfpfcnvrt+1
  2050  03EE  0850               	movf	??_vfpfcnvrt,w
  2051  03EF  0084               	movwf	4
  2052  03F0  0851               	movf	??_vfpfcnvrt+1,w
  2053  03F1  0085               	movwf	5
  2054  03F2  0012               	moviw fsr0++
  2055  03F3  3A64               	xorlw	100
  2056  03F4  1903               	btfsc	3,2
  2057  03F5  2BF7               	goto	u1151
  2058  03F6  2BF8               	goto	u1150
  2059  03F7                     u1151:
  2060  03F7  2C09               	goto	l1648
  2061  03F8                     u1150:
  2062  03F8                     l1646:
  2063  03F8  084E               	movf	vfpfcnvrt@fmt,w
  2064  03F9  0086               	movwf	6
  2065  03FA  0187               	clrf	7
  2066  03FB  3F40               	moviw [0]fsr1
  2067  03FC  00D0               	movwf	??_vfpfcnvrt
  2068  03FD  3F41               	moviw [1]fsr1
  2069  03FE  00D1               	movwf	??_vfpfcnvrt+1
  2070  03FF  0850               	movf	??_vfpfcnvrt,w
  2071  0400  0084               	movwf	4
  2072  0401  0851               	movf	??_vfpfcnvrt+1,w
  2073  0402  0085               	movwf	5
  2074  0403  0012               	moviw fsr0++
  2075  0404  3A69               	xorlw	105
  2076  0405  1D03               	btfss	3,2
  2077  0406  2C08               	goto	u1161
  2078  0407  2C09               	goto	u1160
  2079  0408                     u1161:
  2080  0408  2C44               	goto	l1656
  2081  0409                     u1160:
  2082  0409                     l1648:
  2083                           
  2084                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
  2085  0409  084E               	movf	vfpfcnvrt@fmt,w
  2086  040A  0086               	movwf	6
  2087  040B  0187               	clrf	7
  2088  040C  3001               	movlw	1
  2089  040D  0781               	addwf	1,f
  2090  040E  3141               	addfsr 1,1
  2091  040F  1803               	skipnc
  2092  0410  0A81               	incf	1,f
  2093  0411                     l1650:
  2094                           
  2095                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2096  0411  084F               	movf	vfpfcnvrt@ap,w
  2097  0412  0086               	movwf	6
  2098  0413  0187               	clrf	7
  2099  0414  0801               	movf	1,w
  2100  0415  0084               	movwf	4
  2101  0416  0185               	clrf	5
  2102  0417  3002               	movlw	2
  2103  0418  0781               	addwf	1,f
  2104  0419  3F00               	moviw [0]fsr0
  2105  041A  00D0               	movwf	??_vfpfcnvrt
  2106  041B  3F01               	moviw [1]fsr0
  2107  041C  00D1               	movwf	??_vfpfcnvrt+1
  2108  041D  0850               	movf	??_vfpfcnvrt,w
  2109  041E  00D5               	movwf	vfpfcnvrt@ll
  2110  041F  0851               	movf	??_vfpfcnvrt+1,w
  2111  0420  00D6               	movwf	vfpfcnvrt@ll+1
  2112  0421  0D89               	rlf	9,f
  2113  0422  3B89               	subwfb	9,f
  2114  0423  0989               	comf	9,f
  2115  0424  00D7               	movwf	vfpfcnvrt@ll+2
  2116  0425  00D8               	movwf	vfpfcnvrt@ll+3
  2117  0426  00D9               	movwf	vfpfcnvrt@ll+4
  2118  0427  00DA               	movwf	vfpfcnvrt@ll+5
  2119  0428  00DB               	movwf	vfpfcnvrt@ll+6
  2120  0429  00DC               	movwf	vfpfcnvrt@ll+7
  2121  042A                     l1652:
  2122                           
  2123                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
  2124  042A  0855               	movf	vfpfcnvrt@ll,w
  2125  042B  00B0               	movwf	dtoa@d
  2126  042C  0856               	movf	vfpfcnvrt@ll+1,w
  2127  042D  00B1               	movwf	dtoa@d+1
  2128  042E  0857               	movf	vfpfcnvrt@ll+2,w
  2129  042F  00B2               	movwf	dtoa@d+2
  2130  0430  0858               	movf	vfpfcnvrt@ll+3,w
  2131  0431  00B3               	movwf	dtoa@d+3
  2132  0432  0859               	movf	vfpfcnvrt@ll+4,w
  2133  0433  00B4               	movwf	dtoa@d+4
  2134  0434  085A               	movf	vfpfcnvrt@ll+5,w
  2135  0435  00B5               	movwf	dtoa@d+5
  2136  0436  085B               	movf	vfpfcnvrt@ll+6,w
  2137  0437  00B6               	movwf	dtoa@d+6
  2138  0438  085C               	movf	vfpfcnvrt@ll+7,w
  2139  0439  00B7               	movwf	dtoa@d+7
  2140  043A  085D               	movf	vfpfcnvrt@fp,w
  2141  043B  3186  2688  3183   	fcall	_dtoa
  2142  043E  0020               	movlb	0	; select bank0
  2143  043F  0831               	movf	?_dtoa+1,w
  2144  0440  00CF               	movwf	?_vfpfcnvrt+1
  2145  0441  0830               	movf	?_dtoa,w
  2146  0442  00CE               	movwf	?_vfpfcnvrt
  2147  0443  2C9C               	goto	l928
  2148  0444                     l1656:
  2149                           
  2150                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  2151  0444  084E               	movf	vfpfcnvrt@fmt,w
  2152  0445  0086               	movwf	6
  2153  0446  0187               	clrf	7
  2154  0447  3F40               	moviw [0]fsr1
  2155  0448  00D0               	movwf	??_vfpfcnvrt
  2156  0449  3F41               	moviw [1]fsr1
  2157  044A  00D1               	movwf	??_vfpfcnvrt+1
  2158  044B  0850               	movf	??_vfpfcnvrt,w
  2159  044C  0084               	movwf	4
  2160  044D  0851               	movf	??_vfpfcnvrt+1,w
  2161  044E  0085               	movwf	5
  2162  044F  0012               	moviw fsr0++
  2163  0450  3A25               	xorlw	37
  2164  0451  1D03               	btfss	3,2
  2165  0452  2C54               	goto	u1171
  2166  0453  2C55               	goto	u1170
  2167  0454                     u1171:
  2168  0454  2C6E               	goto	l1666
  2169  0455                     u1170:
  2170  0455                     l1658:
  2171                           
  2172                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  2173  0455  084E               	movf	vfpfcnvrt@fmt,w
  2174  0456  0086               	movwf	6
  2175  0457  0187               	clrf	7
  2176  0458  3001               	movlw	1
  2177  0459  0781               	addwf	1,f
  2178  045A  3141               	addfsr 1,1
  2179  045B  1803               	skipnc
  2180  045C  0A81               	incf	1,f
  2181  045D                     l1660:
  2182                           
  2183                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  2184  045D  3025               	movlw	37
  2185  045E  00F0               	movwf	fputc@c
  2186  045F  3000               	movlw	0
  2187  0460  00F1               	movwf	fputc@c+1
  2188  0461  085D               	movf	vfpfcnvrt@fp,w
  2189  0462  00D0               	movwf	??_vfpfcnvrt
  2190  0463  0850               	movf	??_vfpfcnvrt,w
  2191  0464  00F2               	movwf	fputc@fp
  2192  0465  3183  231B  3183   	fcall	_fputc
  2193  0468                     l1662:
  2194                           
  2195                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  2196  0468  3001               	movlw	1
  2197  0469  0020               	movlb	0	; select bank0
  2198  046A  00CE               	movwf	?_vfpfcnvrt
  2199  046B  3000               	movlw	0
  2200  046C  00CF               	movwf	?_vfpfcnvrt+1
  2201  046D  2C9C               	goto	l928
  2202  046E                     l1666:
  2203                           
  2204                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  2205  046E  084E               	movf	vfpfcnvrt@fmt,w
  2206  046F  0086               	movwf	6
  2207  0470  0187               	clrf	7
  2208  0471  3001               	movlw	1
  2209  0472  0781               	addwf	1,f
  2210  0473  3141               	addfsr 1,1
  2211  0474  1803               	skipnc
  2212  0475  0A81               	incf	1,f
  2213  0476                     l1668:
  2214                           
  2215                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  2216  0476  01CE               	clrf	?_vfpfcnvrt
  2217  0477  01CF               	clrf	?_vfpfcnvrt+1
  2218  0478  2C9C               	goto	l928
  2219  0479                     l1672:
  2220                           
  2221                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  2222  0479  084E               	movf	vfpfcnvrt@fmt,w
  2223  047A  0086               	movwf	6
  2224  047B  0187               	clrf	7
  2225  047C  3F40               	moviw [0]fsr1
  2226  047D  00D0               	movwf	??_vfpfcnvrt
  2227  047E  3F41               	moviw [1]fsr1
  2228  047F  00D1               	movwf	??_vfpfcnvrt+1
  2229  0480  0850               	movf	??_vfpfcnvrt,w
  2230  0481  0084               	movwf	4
  2231  0482  0851               	movf	??_vfpfcnvrt+1,w
  2232  0483  0085               	movwf	5
  2233  0484  0800               	movf	0,w	;code access
  2234  0485  00D2               	movwf	??_vfpfcnvrt+2
  2235  0486  01D3               	clrf	??_vfpfcnvrt+3
  2236  0487  0852               	movf	??_vfpfcnvrt+2,w
  2237  0488  00F0               	movwf	fputc@c
  2238  0489  0853               	movf	??_vfpfcnvrt+3,w
  2239  048A  00F1               	movwf	fputc@c+1
  2240  048B  085D               	movf	vfpfcnvrt@fp,w
  2241  048C  00D4               	movwf	??_vfpfcnvrt+4
  2242  048D  0854               	movf	??_vfpfcnvrt+4,w
  2243  048E  00F2               	movwf	fputc@fp
  2244  048F  3183  231B  3183   	fcall	_fputc
  2245  0492                     l1674:
  2246                           
  2247                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  2248  0492  0020               	movlb	0	; select bank0
  2249  0493  084E               	movf	vfpfcnvrt@fmt,w
  2250  0494  0086               	movwf	6
  2251  0495  0187               	clrf	7
  2252  0496  3001               	movlw	1
  2253  0497  0781               	addwf	1,f
  2254  0498  3141               	addfsr 1,1
  2255  0499  1803               	skipnc
  2256  049A  0A81               	incf	1,f
  2257  049B  2C68               	goto	l1662
  2258  049C                     l928:
  2259  049C  0008               	return
  2260  049D                     __end_of_vfpfcnvrt:
  2261                           
  2262                           	psect	text4
  2263  0688                     __ptext4:	
  2264 ;; *************** function _dtoa *****************
  2265 ;; Defined at:
  2266 ;;		line 287 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  fp              1    wreg     PTR struct _IO_FILE
  2269 ;;		 -> sprintf@f(5), 
  2270 ;;  d               8   16[BANK0 ] long long 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  2273 ;;		 -> sprintf@f(5), 
  2274 ;;  n               8   36[BANK0 ] long long 
  2275 ;;  i               2   44[BANK0 ] int 
  2276 ;;  s               2   34[BANK0 ] int 
  2277 ;;  w               2   32[BANK0 ] int 
  2278 ;;  p               2   30[BANK0 ] int 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  2   16[BANK0 ] int 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2288 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2289 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2290 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2291 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2292 ;;Total ram usage:       30 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    4
  2295 ;; This function calls:
  2296 ;;		___aodiv
  2297 ;;		___aomod
  2298 ;;		_abs
  2299 ;;		_pad
  2300 ;; This function is called by:
  2301 ;;		_vfpfcnvrt
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           
  2306                           ;psect for function _dtoa
  2307  0688                     _dtoa:
  2308                           
  2309                           ;incstack = 0
  2310                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2311                           ;dtoa@fp stored from wreg
  2312  0688  0020               	movlb	0	; select bank0
  2313  0689  00BD               	movwf	dtoa@fp
  2314  068A                     l1556:
  2315                           
  2316                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.31/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .31/pic/sources/c99/common/doprnt.c: 293:     n = d;
  2317  068A  0830               	movf	dtoa@d,w
  2318  068B  00C4               	movwf	dtoa@n
  2319  068C  0831               	movf	dtoa@d+1,w
  2320  068D  00C5               	movwf	dtoa@n+1
  2321  068E  0832               	movf	dtoa@d+2,w
  2322  068F  00C6               	movwf	dtoa@n+2
  2323  0690  0833               	movf	dtoa@d+3,w
  2324  0691  00C7               	movwf	dtoa@n+3
  2325  0692  0834               	movf	dtoa@d+4,w
  2326  0693  00C8               	movwf	dtoa@n+4
  2327  0694  0835               	movf	dtoa@d+5,w
  2328  0695  00C9               	movwf	dtoa@n+5
  2329  0696  0836               	movf	dtoa@d+6,w
  2330  0697  00CA               	movwf	dtoa@n+6
  2331  0698  0837               	movf	dtoa@d+7,w
  2332  0699  00CB               	movwf	dtoa@n+7
  2333  069A                     l1558:
  2334                           
  2335                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
  2336  069A  3044               	movlw	low dtoa@n
  2337  069B  0086               	movwf	6
  2338  069C  3000               	movlw	high dtoa@n
  2339  069D  0087               	movwf	7
  2340  069E  3F47               	moviw [7]fsr1
  2341  069F  00B8               	movwf	??_dtoa
  2342  06A0  1BB8               	btfsc	??_dtoa,7
  2343  06A1  2EA3               	goto	u951
  2344  06A2  2EA5               	goto	u950
  2345  06A3                     u951:
  2346  06A3  3001               	movlw	1
  2347  06A4  2EA6               	goto	u960
  2348  06A5                     u950:
  2349  06A5  3000               	movlw	0
  2350  06A6                     u960:
  2351  06A6  0020               	movlb	0	; select bank0
  2352  06A7  00B9               	movwf	??_dtoa+1
  2353  06A8  01BA               	clrf	??_dtoa+2
  2354  06A9  0839               	movf	??_dtoa+1,w
  2355  06AA  00C2               	movwf	dtoa@s
  2356  06AB  083A               	movf	??_dtoa+2,w
  2357  06AC  00C3               	movwf	dtoa@s+1
  2358  06AD                     l1560:
  2359                           
  2360                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  2361  06AD  0842               	movf	dtoa@s,w
  2362  06AE  0443               	iorwf	dtoa@s+1,w
  2363  06AF  1903               	btfsc	3,2
  2364  06B0  2EB2               	goto	u971
  2365  06B1  2EB3               	goto	u970
  2366  06B2                     u971:
  2367  06B2  2ED1               	goto	l898
  2368  06B3                     u970:
  2369  06B3                     l1562:
  2370                           
  2371                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  2372  06B3  09C4               	comf	dtoa@n,f
  2373  06B4  09C5               	comf	dtoa@n+1,f
  2374  06B5  09C6               	comf	dtoa@n+2,f
  2375  06B6  09C7               	comf	dtoa@n+3,f
  2376  06B7  09C8               	comf	dtoa@n+4,f
  2377  06B8  09C9               	comf	dtoa@n+5,f
  2378  06B9  09CA               	comf	dtoa@n+6,f
  2379  06BA  09CB               	comf	dtoa@n+7,f
  2380  06BB  0AC4               	incf	dtoa@n,f
  2381  06BC  1D03               	skipz
  2382  06BD  2ED1               	goto	u98lld
  2383  06BE  0AC5               	incf	dtoa@n+1,f
  2384  06BF  1D03               	skipz
  2385  06C0  2ED1               	goto	u98lld
  2386  06C1  0AC6               	incf	dtoa@n+2,f
  2387  06C2  1D03               	skipz
  2388  06C3  2ED1               	goto	u98lld
  2389  06C4  0AC7               	incf	dtoa@n+3,f
  2390  06C5  1D03               	skipz
  2391  06C6  2ED1               	goto	u98lld
  2392  06C7  0AC8               	incf	dtoa@n+4,f
  2393  06C8  1D03               	skipz
  2394  06C9  2ED1               	goto	u98lld
  2395  06CA  0AC9               	incf	dtoa@n+5,f
  2396  06CB  1D03               	skipz
  2397  06CC  2ED1               	goto	u98lld
  2398  06CD  0ACA               	incf	dtoa@n+6,f
  2399  06CE  1D03               	skipz
  2400  06CF  2ED1               	goto	u98lld
  2401  06D0  0ACB               	incf	dtoa@n+7,f
  2402  06D1                     u98lld:
  2403  06D1                     l898:	
  2404                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 297:     }
  2405                           
  2406                           
  2407                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  2408  06D1  0021               	movlb	1	; select bank1
  2409  06D2  1BA7               	btfsc	(_prec+1)^(0+128),7
  2410  06D3  2ED5               	goto	u991
  2411  06D4  2ED6               	goto	u990
  2412  06D5                     u991:
  2413  06D5  2EDB               	goto	l899
  2414  06D6                     u990:
  2415  06D6                     l1564:
  2416                           
  2417                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  2418  06D6  30FD               	movlw	253
  2419  06D7  0020               	movlb	0	; select bank0
  2420  06D8  05EE               	andwf	_flags,f
  2421  06D9  30FF               	movlw	255
  2422  06DA  05EF               	andwf	_flags+1,f
  2423  06DB                     l899:	
  2424                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 302:     }
  2425                           
  2426                           
  2427                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  2428  06DB  0021               	movlb	1	; select bank1
  2429  06DC  0827               	movf	(_prec+1)^(0+128),w
  2430  06DD  3A80               	xorlw	128
  2431  06DE  0020               	movlb	0	; select bank0
  2432  06DF  00B8               	movwf	??_dtoa
  2433  06E0  3080               	movlw	128
  2434  06E1  0238               	subwf	??_dtoa,w
  2435  06E2  1D03               	skipz
  2436  06E3  2EE7               	goto	u1005
  2437  06E4  3001               	movlw	1
  2438  06E5  0021               	movlb	1	; select bank1
  2439  06E6  0226               	subwf	_prec^(0+128),w
  2440  06E7                     u1005:
  2441  06E7  1803               	skipnc
  2442  06E8  2EEA               	goto	u1001
  2443  06E9  2EEB               	goto	u1000
  2444  06EA                     u1001:
  2445  06EA  2EF1               	goto	l1568
  2446  06EB                     u1000:
  2447  06EB                     l1566:
  2448  06EB  3001               	movlw	1
  2449  06EC  0020               	movlb	0	; select bank0
  2450  06ED  00BE               	movwf	dtoa@p
  2451  06EE  3000               	movlw	0
  2452  06EF  00BF               	movwf	dtoa@p+1
  2453  06F0  2EF9               	goto	l903
  2454  06F1                     l1568:
  2455  06F1  0021               	movlb	1	; select bank1
  2456  06F2  0827               	movf	(_prec+1)^(0+128),w
  2457  06F3  0020               	movlb	0	; select bank0
  2458  06F4  00BF               	movwf	dtoa@p+1
  2459  06F5  0021               	movlb	1	; select bank1
  2460  06F6  0826               	movf	_prec^(0+128),w
  2461  06F7  0020               	movlb	0	; select bank0
  2462  06F8  00BE               	movwf	dtoa@p
  2463  06F9                     l903:
  2464                           
  2465                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 304:     w = width;
  2466  06F9  0021               	movlb	1	; select bank1
  2467  06FA  0825               	movf	(_width+1)^(0+128),w
  2468  06FB  0020               	movlb	0	; select bank0
  2469  06FC  00C1               	movwf	dtoa@w+1
  2470  06FD  0021               	movlb	1	; select bank1
  2471  06FE  0824               	movf	_width^(0+128),w
  2472  06FF  0020               	movlb	0	; select bank0
  2473  0700  00C0               	movwf	dtoa@w
  2474  0701                     l1570:
  2475                           
  2476                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  2477  0701  0842               	movf	dtoa@s,w
  2478  0702  0443               	iorwf	dtoa@s+1,w
  2479  0703  1D03               	btfss	3,2
  2480  0704  2F06               	goto	u1011
  2481  0705  2F07               	goto	u1010
  2482  0706                     u1011:
  2483  0706  2F0B               	goto	l1574
  2484  0707                     u1010:
  2485  0707                     l1572:
  2486  0707  1D6E               	btfss	_flags,2
  2487  0708  2F0A               	goto	u1021
  2488  0709  2F0B               	goto	u1020
  2489  070A                     u1021:
  2490  070A  2F0F               	goto	l904
  2491  070B                     u1020:
  2492  070B                     l1574:
  2493                           
  2494                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 306:         --w;
  2495  070B  30FF               	movlw	255
  2496  070C  07C0               	addwf	dtoa@w,f
  2497  070D  30FF               	movlw	255
  2498  070E  3DC1               	addwfc	dtoa@w+1,f
  2499  070F                     l904:	
  2500                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 307:     }
  2501                           
  2502                           
  2503                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  2504  070F  301F               	movlw	31
  2505  0710  00CC               	movwf	dtoa@i
  2506  0711  3000               	movlw	0
  2507  0712  00CD               	movwf	dtoa@i+1
  2508  0713                     l1576:
  2509                           
  2510                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  2511  0713  0021               	movlb	1	; select bank1
  2512  0714  01CA               	clrf	(_dbuf^(0+128)+31)
  2513                           
  2514                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2515  0715  2F7E               	goto	l907
  2516  0716                     l1578:
  2517                           
  2518                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 313:         --i;
  2519  0716  30FF               	movlw	255
  2520  0717  0020               	movlb	0	; select bank0
  2521  0718  07CC               	addwf	dtoa@i,f
  2522  0719  30FF               	movlw	255
  2523  071A  3DCD               	addwfc	dtoa@i+1,f
  2524  071B                     l1580:
  2525                           
  2526                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  2527  071B  300A               	movlw	10
  2528  071C  00A0               	movwf	___aomod@divisor
  2529  071D  01A1               	clrf	___aomod@divisor+1
  2530  071E  01A2               	clrf	___aomod@divisor+2
  2531  071F  01A3               	clrf	___aomod@divisor+3
  2532  0720  01A4               	clrf	___aomod@divisor+4
  2533  0721  01A5               	clrf	___aomod@divisor+5
  2534  0722  01A6               	clrf	___aomod@divisor+6
  2535  0723  01A7               	clrf	___aomod@divisor+7
  2536  0724  0844               	movf	dtoa@n,w
  2537  0725  00A8               	movwf	___aomod@dividend
  2538  0726  0845               	movf	dtoa@n+1,w
  2539  0727  00A9               	movwf	___aomod@dividend+1
  2540  0728  0846               	movf	dtoa@n+2,w
  2541  0729  00AA               	movwf	___aomod@dividend+2
  2542  072A  0847               	movf	dtoa@n+3,w
  2543  072B  00AB               	movwf	___aomod@dividend+3
  2544  072C  0848               	movf	dtoa@n+4,w
  2545  072D  00AC               	movwf	___aomod@dividend+4
  2546  072E  0849               	movf	dtoa@n+5,w
  2547  072F  00AD               	movwf	___aomod@dividend+5
  2548  0730  084A               	movf	dtoa@n+6,w
  2549  0731  00AE               	movwf	___aomod@dividend+6
  2550  0732  084B               	movf	dtoa@n+7,w
  2551  0733  00AF               	movwf	___aomod@dividend+7
  2552  0734  3184  249D  3186   	fcall	___aomod
  2553  0737  0020               	movlb	0	; select bank0
  2554  0738  0821               	movf	?___aomod+1,w
  2555  0739  00F4               	movwf	abs@a+1
  2556  073A  0820               	movf	?___aomod,w
  2557  073B  00F3               	movwf	abs@a
  2558  073C  3181  21DC  3186   	fcall	_abs
  2559  073F  0873               	movf	?_abs,w
  2560  0740  3E30               	addlw	48
  2561  0741  0020               	movlb	0	; select bank0
  2562  0742  00B8               	movwf	??_dtoa
  2563  0743  084C               	movf	dtoa@i,w
  2564  0744  3EAB               	addlw	(low (_dbuf| 0))& (0+255)
  2565  0745  0086               	movwf	6
  2566  0746  0187               	clrf	7
  2567  0747  0838               	movf	??_dtoa,w
  2568  0748  0081               	movwf	1
  2569  0749                     l1582:
  2570                           
  2571                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 315:         --p;
  2572  0749  30FF               	movlw	255
  2573  074A  07BE               	addwf	dtoa@p,f
  2574  074B  30FF               	movlw	255
  2575  074C  3DBF               	addwfc	dtoa@p+1,f
  2576  074D                     l1584:
  2577                           
  2578                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 316:         --w;
  2579  074D  30FF               	movlw	255
  2580  074E  07C0               	addwf	dtoa@w,f
  2581  074F  30FF               	movlw	255
  2582  0750  3DC1               	addwfc	dtoa@w+1,f
  2583  0751                     l1586:
  2584                           
  2585                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  2586  0751  300A               	movlw	10
  2587  0752  00A0               	movwf	___aodiv@divisor
  2588  0753  01A1               	clrf	___aodiv@divisor+1
  2589  0754  01A2               	clrf	___aodiv@divisor+2
  2590  0755  01A3               	clrf	___aodiv@divisor+3
  2591  0756  01A4               	clrf	___aodiv@divisor+4
  2592  0757  01A5               	clrf	___aodiv@divisor+5
  2593  0758  01A6               	clrf	___aodiv@divisor+6
  2594  0759  01A7               	clrf	___aodiv@divisor+7
  2595  075A  0844               	movf	dtoa@n,w
  2596  075B  00A8               	movwf	___aodiv@dividend
  2597  075C  0845               	movf	dtoa@n+1,w
  2598  075D  00A9               	movwf	___aodiv@dividend+1
  2599  075E  0846               	movf	dtoa@n+2,w
  2600  075F  00AA               	movwf	___aodiv@dividend+2
  2601  0760  0847               	movf	dtoa@n+3,w
  2602  0761  00AB               	movwf	___aodiv@dividend+3
  2603  0762  0848               	movf	dtoa@n+4,w
  2604  0763  00AC               	movwf	___aodiv@dividend+4
  2605  0764  0849               	movf	dtoa@n+5,w
  2606  0765  00AD               	movwf	___aodiv@dividend+5
  2607  0766  084A               	movf	dtoa@n+6,w
  2608  0767  00AE               	movwf	___aodiv@dividend+6
  2609  0768  084B               	movf	dtoa@n+7,w
  2610  0769  00AF               	movwf	___aodiv@dividend+7
  2611  076A  3185  2587  3186   	fcall	___aodiv
  2612  076D  0020               	movlb	0	; select bank0
  2613  076E  0820               	movf	?___aodiv,w
  2614  076F  00C4               	movwf	dtoa@n
  2615  0770  0821               	movf	?___aodiv+1,w
  2616  0771  00C5               	movwf	dtoa@n+1
  2617  0772  0822               	movf	?___aodiv+2,w
  2618  0773  00C6               	movwf	dtoa@n+2
  2619  0774  0823               	movf	?___aodiv+3,w
  2620  0775  00C7               	movwf	dtoa@n+3
  2621  0776  0824               	movf	?___aodiv+4,w
  2622  0777  00C8               	movwf	dtoa@n+4
  2623  0778  0825               	movf	?___aodiv+5,w
  2624  0779  00C9               	movwf	dtoa@n+5
  2625  077A  0826               	movf	?___aodiv+6,w
  2626  077B  00CA               	movwf	dtoa@n+6
  2627  077C  0827               	movf	?___aodiv+7,w
  2628  077D  00CB               	movwf	dtoa@n+7
  2629  077E                     l907:	
  2630                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 318:     }
  2631                           
  2632                           
  2633                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2634  077E  0020               	movlb	0	; select bank0
  2635  077F  084D               	movf	dtoa@i+1,w
  2636  0780  3A80               	xorlw	128
  2637  0781  00B8               	movwf	??_dtoa
  2638  0782  3080               	movlw	128
  2639  0783  0238               	subwf	??_dtoa,w
  2640  0784  1D03               	skipz
  2641  0785  2F88               	goto	u1035
  2642  0786  3001               	movlw	1
  2643  0787  024C               	subwf	dtoa@i,w
  2644  0788                     u1035:
  2645  0788  1C03               	skipc
  2646  0789  2F8B               	goto	u1031
  2647  078A  2F8C               	goto	u1030
  2648  078B                     u1031:
  2649  078B  2FB9               	goto	l1596
  2650  078C                     u1030:
  2651  078C                     l1588:
  2652  078C  0020               	movlb	0	; select bank0
  2653  078D  0844               	movf	dtoa@n,w
  2654  078E  0445               	iorwf	dtoa@n+1,w
  2655  078F  0446               	iorwf	dtoa@n+2,w
  2656  0790  0447               	iorwf	dtoa@n+3,w
  2657  0791  0448               	iorwf	dtoa@n+4,w
  2658  0792  0449               	iorwf	dtoa@n+5,w
  2659  0793  044A               	iorwf	dtoa@n+6,w
  2660  0794  044B               	iorwf	dtoa@n+7,w
  2661  0795  1D03               	skipz
  2662  0796  2F98               	goto	u1041
  2663  0797  2F99               	goto	u1040
  2664  0798                     u1041:
  2665  0798  2F16               	goto	l1578
  2666  0799                     u1040:
  2667  0799                     l1590:
  2668  0799  083F               	movf	dtoa@p+1,w
  2669  079A  3A80               	xorlw	128
  2670  079B  00B8               	movwf	??_dtoa
  2671  079C  3080               	movlw	128
  2672  079D  0238               	subwf	??_dtoa,w
  2673  079E  1D03               	skipz
  2674  079F  2FA2               	goto	u1055
  2675  07A0  3001               	movlw	1
  2676  07A1  023E               	subwf	dtoa@p,w
  2677  07A2                     u1055:
  2678  07A2  1803               	skipnc
  2679  07A3  2FA5               	goto	u1051
  2680  07A4  2FA6               	goto	u1050
  2681  07A5                     u1051:
  2682  07A5  2F16               	goto	l1578
  2683  07A6                     u1050:
  2684  07A6                     l1592:
  2685  07A6  0020               	movlb	0	; select bank0
  2686  07A7  0841               	movf	dtoa@w+1,w
  2687  07A8  3A80               	xorlw	128
  2688  07A9  00B8               	movwf	??_dtoa
  2689  07AA  3080               	movlw	128
  2690  07AB  0238               	subwf	??_dtoa,w
  2691  07AC  1D03               	skipz
  2692  07AD  2FB0               	goto	u1065
  2693  07AE  3001               	movlw	1
  2694  07AF  0240               	subwf	dtoa@w,w
  2695  07B0                     u1065:
  2696  07B0  1C03               	skipc
  2697  07B1  2FB3               	goto	u1061
  2698  07B2  2FB4               	goto	u1060
  2699  07B3                     u1061:
  2700  07B3  2FB9               	goto	l1596
  2701  07B4                     u1060:
  2702  07B4                     l1594:
  2703  07B4  0020               	movlb	0	; select bank0
  2704  07B5  18EE               	btfsc	_flags,1
  2705  07B6  2FB8               	goto	u1071
  2706  07B7  2FB9               	goto	u1070
  2707  07B8                     u1071:
  2708  07B8  2F16               	goto	l1578
  2709  07B9                     u1070:
  2710  07B9                     l1596:
  2711                           
  2712                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  2713  07B9  0020               	movlb	0	; select bank0
  2714  07BA  0842               	movf	dtoa@s,w
  2715  07BB  0443               	iorwf	dtoa@s+1,w
  2716  07BC  1D03               	btfss	3,2
  2717  07BD  2FBF               	goto	u1081
  2718  07BE  2FC0               	goto	u1080
  2719  07BF                     u1081:
  2720  07BF  2FC4               	goto	l1600
  2721  07C0                     u1080:
  2722  07C0                     l1598:
  2723  07C0  1D6E               	btfss	_flags,2
  2724  07C1  2FC3               	goto	u1091
  2725  07C2  2FC4               	goto	u1090
  2726  07C3                     u1091:
  2727  07C3  2FDF               	goto	l1610
  2728  07C4                     u1090:
  2729  07C4                     l1600:
  2730                           
  2731                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 322:         --i;
  2732  07C4  30FF               	movlw	255
  2733  07C5  07CC               	addwf	dtoa@i,f
  2734  07C6  30FF               	movlw	255
  2735  07C7  3DCD               	addwfc	dtoa@i+1,f
  2736  07C8                     l1602:
  2737                           
  2738                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  2739  07C8  0842               	movf	dtoa@s,w
  2740  07C9  0443               	iorwf	dtoa@s+1,w
  2741  07CA  1D03               	btfss	3,2
  2742  07CB  2FCD               	goto	u1101
  2743  07CC  2FCE               	goto	u1100
  2744  07CD                     u1101:
  2745  07CD  2FD3               	goto	l1606
  2746  07CE                     u1100:
  2747  07CE                     l1604:
  2748  07CE  302B               	movlw	43
  2749  07CF  00BB               	movwf	_dtoa$986
  2750  07D0  3000               	movlw	0
  2751  07D1  00BC               	movwf	_dtoa$986+1
  2752  07D2  2FD7               	goto	l1608
  2753  07D3                     l1606:
  2754  07D3  302D               	movlw	45
  2755  07D4  00BB               	movwf	_dtoa$986
  2756  07D5  3000               	movlw	0
  2757  07D6  00BC               	movwf	_dtoa$986+1
  2758  07D7                     l1608:
  2759  07D7  083B               	movf	_dtoa$986,w
  2760  07D8  00B8               	movwf	??_dtoa
  2761  07D9  084C               	movf	dtoa@i,w
  2762  07DA  3EAB               	addlw	(low (_dbuf| 0))& (0+255)
  2763  07DB  0086               	movwf	6
  2764  07DC  0187               	clrf	7
  2765  07DD  0838               	movf	??_dtoa,w
  2766  07DE  0081               	movwf	1
  2767  07DF                     l1610:
  2768                           
  2769                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  2770  07DF  084C               	movf	dtoa@i,w
  2771  07E0  3EAB               	addlw	(low (_dbuf| 0))& (0+255)
  2772  07E1  00B8               	movwf	??_dtoa
  2773  07E2  0838               	movf	??_dtoa,w
  2774  07E3  00A4               	movwf	pad@buf
  2775  07E4  0841               	movf	dtoa@w+1,w
  2776  07E5  00A6               	movwf	pad@p+1
  2777  07E6  0840               	movf	dtoa@w,w
  2778  07E7  00A5               	movwf	pad@p
  2779  07E8  083D               	movf	dtoa@fp,w
  2780  07E9  3183  236A  3186   	fcall	_pad
  2781  07EC  0020               	movlb	0	; select bank0
  2782  07ED  0825               	movf	?_pad+1,w
  2783  07EE  00B1               	movwf	?_dtoa+1
  2784  07EF  0824               	movf	?_pad,w
  2785  07F0  00B0               	movwf	?_dtoa
  2786  07F1                     l921:
  2787  07F1  0008               	return
  2788  07F2                     __end_of_dtoa:
  2789                           
  2790                           	psect	text5
  2791  036A                     __ptext5:	
  2792 ;; *************** function _pad *****************
  2793 ;; Defined at:
  2794 ;;		line 72 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  fp              1    wreg     PTR struct _IO_FILE
  2797 ;;		 -> sprintf@f(5), 
  2798 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2799 ;;		 -> dbuf(32), 
  2800 ;;  p               2    5[BANK0 ] int 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  2803 ;;		 -> sprintf@f(5), 
  2804 ;;  w               2    9[BANK0 ] int 
  2805 ;;  i               2    7[BANK0 ] int 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  2    4[BANK0 ] int 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2815 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2816 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2818 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2819 ;;Total ram usage:        9 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    3
  2822 ;; This function calls:
  2823 ;;		_fputc
  2824 ;;		_fputs
  2825 ;;		_strlen
  2826 ;; This function is called by:
  2827 ;;		_dtoa
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function _pad
  2833  036A                     _pad:
  2834                           
  2835                           ;incstack = 0
  2836                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2837                           ;pad@fp stored from wreg
  2838  036A  0020               	movlb	0	; select bank0
  2839  036B  00AB               	movwf	pad@fp
  2840  036C                     l1530:
  2841                           
  2842                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.31/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  2843  036C  1C6E               	btfss	_flags,0
  2844  036D  2B6F               	goto	u901
  2845  036E  2B70               	goto	u900
  2846  036F                     u901:
  2847  036F  2B78               	goto	l1534
  2848  0370                     u900:
  2849  0370                     l1532:
  2850                           
  2851                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  2852  0370  082B               	movf	pad@fp,w
  2853  0371  00FC               	movwf	??_pad
  2854  0372  087C               	movf	??_pad,w
  2855  0373  00F8               	movwf	fputs@fp
  2856  0374  0824               	movf	pad@buf,w
  2857  0375  3182  2258  3183   	fcall	_fputs
  2858  0378                     l1534:
  2859                           
  2860                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  2861  0378  0020               	movlb	0	; select bank0
  2862  0379  1BA6               	btfsc	pad@p+1,7
  2863  037A  2B7C               	goto	u911
  2864  037B  2B7D               	goto	u910
  2865  037C                     u911:
  2866  037C  2B82               	goto	l1538
  2867  037D                     u910:
  2868  037D                     l1536:
  2869  037D  0826               	movf	pad@p+1,w
  2870  037E  00AA               	movwf	pad@w+1
  2871  037F  0825               	movf	pad@p,w
  2872  0380  00A9               	movwf	pad@w
  2873  0381  2B84               	goto	l890
  2874  0382                     l1538:
  2875  0382  01A9               	clrf	pad@w
  2876  0383  01AA               	clrf	pad@w+1
  2877  0384                     l890:
  2878                           
  2879                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  2880  0384  01A7               	clrf	pad@i
  2881  0385  01A8               	clrf	pad@i+1
  2882                           
  2883                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  2884  0386  2B98               	goto	l1544
  2885  0387                     l1540:
  2886                           
  2887                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  2888  0387  3020               	movlw	32
  2889  0388  00F0               	movwf	fputc@c
  2890  0389  3000               	movlw	0
  2891  038A  00F1               	movwf	fputc@c+1
  2892  038B  0020               	movlb	0	; select bank0
  2893  038C  082B               	movf	pad@fp,w
  2894  038D  00FC               	movwf	??_pad
  2895  038E  087C               	movf	??_pad,w
  2896  038F  00F2               	movwf	fputc@fp
  2897  0390  3183  231B  3183   	fcall	_fputc
  2898  0393                     l1542:
  2899                           
  2900                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 86:         ++i;
  2901  0393  3001               	movlw	1
  2902  0394  0020               	movlb	0	; select bank0
  2903  0395  07A7               	addwf	pad@i,f
  2904  0396  3000               	movlw	0
  2905  0397  3DA8               	addwfc	pad@i+1,f
  2906  0398                     l1544:
  2907                           
  2908                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  2909  0398  0828               	movf	pad@i+1,w
  2910  0399  3A80               	xorlw	128
  2911  039A  00FC               	movwf	??_pad
  2912  039B  082A               	movf	pad@w+1,w
  2913  039C  3A80               	xorlw	128
  2914  039D  027C               	subwf	??_pad,w
  2915  039E  1D03               	skipz
  2916  039F  2BA2               	goto	u925
  2917  03A0  0829               	movf	pad@w,w
  2918  03A1  0227               	subwf	pad@i,w
  2919  03A2                     u925:
  2920  03A2  1C03               	skipc
  2921  03A3  2BA5               	goto	u921
  2922  03A4  2BA6               	goto	u920
  2923  03A5                     u921:
  2924  03A5  2B87               	goto	l1540
  2925  03A6                     u920:
  2926  03A6                     l893:
  2927                           
  2928                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  2929  03A6  0020               	movlb	0	; select bank0
  2930  03A7  186E               	btfsc	_flags,0
  2931  03A8  2BAA               	goto	u931
  2932  03A9  2BAB               	goto	u930
  2933  03AA                     u931:
  2934  03AA  2BB3               	goto	l1548
  2935  03AB                     u930:
  2936  03AB                     l1546:
  2937                           
  2938                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  2939  03AB  082B               	movf	pad@fp,w
  2940  03AC  00FC               	movwf	??_pad
  2941  03AD  087C               	movf	??_pad,w
  2942  03AE  00F8               	movwf	fputs@fp
  2943  03AF  0824               	movf	pad@buf,w
  2944  03B0  3182  2258  3183   	fcall	_fputs
  2945  03B3                     l1548:
  2946                           
  2947                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  2948  03B3  0020               	movlb	0	; select bank0
  2949  03B4  0824               	movf	pad@buf,w
  2950  03B5  3181  21C3  3183   	fcall	_strlen
  2951  03B8  0020               	movlb	0	; select bank0
  2952  03B9  0829               	movf	pad@w,w
  2953  03BA  0770               	addwf	?_strlen,w
  2954  03BB  00A4               	movwf	?_pad
  2955  03BC  082A               	movf	pad@w+1,w
  2956  03BD  3D71               	addwfc	?_strlen+1,w
  2957  03BE  00A5               	movwf	?_pad+1
  2958  03BF                     l895:
  2959  03BF  0008               	return
  2960  03C0                     __end_of_pad:
  2961                           
  2962                           	psect	text6
  2963  0258                     __ptext6:	
  2964 ;; *************** function _fputs *****************
  2965 ;; Defined at:
  2966 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputs.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  s               1    wreg     PTR const unsigned char 
  2969 ;;		 -> dbuf(32), 
  2970 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  2971 ;;		 -> sprintf@f(5), 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2974 ;;		 -> dbuf(32), 
  2975 ;;  i               2    1[BANK0 ] int 
  2976 ;;  c               1    0[BANK0 ] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  2    8[COMMON] int 
  2979 ;; Registers used:
  2980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2986 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2987 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;Total ram usage:        8 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    2
  2993 ;; This function calls:
  2994 ;;		_fputc
  2995 ;; This function is called by:
  2996 ;;		_pad
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           
  3001                           ;psect for function _fputs
  3002  0258                     _fputs:
  3003                           
  3004                           ;incstack = 0
  3005                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3006                           ;fputs@s stored from wreg
  3007  0258  0020               	movlb	0	; select bank0
  3008  0259  00A3               	movwf	fputs@s
  3009  025A                     l1454:
  3010  025A  01A1               	clrf	fputs@i
  3011  025B  01A2               	clrf	fputs@i+1
  3012  025C  2A70               	goto	l1460
  3013  025D                     l1456:
  3014  025D  0820               	movf	fputs@c,w
  3015  025E  00F9               	movwf	??_fputs
  3016  025F  01FA               	clrf	??_fputs+1
  3017  0260  0879               	movf	??_fputs,w
  3018  0261  00F0               	movwf	fputc@c
  3019  0262  087A               	movf	??_fputs+1,w
  3020  0263  00F1               	movwf	fputc@c+1
  3021  0264  0878               	movf	fputs@fp,w
  3022  0265  00FB               	movwf	??_fputs+2
  3023  0266  087B               	movf	??_fputs+2,w
  3024  0267  00F2               	movwf	fputc@fp
  3025  0268  3183  231B  3182   	fcall	_fputc
  3026  026B                     l1458:
  3027  026B  3001               	movlw	1
  3028  026C  0020               	movlb	0	; select bank0
  3029  026D  07A1               	addwf	fputs@i,f
  3030  026E  3000               	movlw	0
  3031  026F  3DA2               	addwfc	fputs@i+1,f
  3032  0270                     l1460:
  3033  0270  0821               	movf	fputs@i,w
  3034  0271  0723               	addwf	fputs@s,w
  3035  0272  00F9               	movwf	??_fputs
  3036  0273  0879               	movf	??_fputs,w
  3037  0274  0086               	movwf	6
  3038  0275  0187               	clrf	7
  3039  0276  0801               	movf	1,w
  3040  0277  00FA               	movwf	??_fputs+1
  3041  0278  087A               	movf	??_fputs+1,w
  3042  0279  00A0               	movwf	fputs@c
  3043  027A  0820               	movf	fputs@c,w
  3044  027B  1D03               	btfss	3,2
  3045  027C  2A7E               	goto	u681
  3046  027D  2A7F               	goto	u680
  3047  027E                     u681:
  3048  027E  2A5D               	goto	l1456
  3049  027F                     u680:
  3050  027F                     l962:
  3051  027F  0008               	return
  3052  0280                     __end_of_fputs:
  3053                           
  3054                           	psect	text7
  3055  031B                     __ptext7:	
  3056 ;; *************** function _fputc *****************
  3057 ;; Defined at:
  3058 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputc.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  c               2    0[COMMON] int 
  3061 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  3062 ;;		 -> sprintf@f(5), 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  2    0[COMMON] int 
  3067 ;; Registers used:
  3068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3074 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3076 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3078 ;;Total ram usage:        8 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    1
  3081 ;; This function calls:
  3082 ;;		_putch
  3083 ;; This function is called by:
  3084 ;;		_pad
  3085 ;;		_vfpfcnvrt
  3086 ;;		_fputs
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           
  3091                           ;psect for function _fputc
  3092  031B                     _fputc:
  3093  031B                     l1428:	
  3094                           ;incstack = 0
  3095                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3096                           
  3097  031B  0872               	movf	fputc@fp,w
  3098  031C  1903               	btfsc	3,2
  3099  031D  2B1F               	goto	u631
  3100  031E  2B20               	goto	u630
  3101  031F                     u631:
  3102  031F  2B25               	goto	l1432
  3103  0320                     u630:
  3104  0320                     l1430:
  3105  0320  0872               	movf	fputc@fp,w
  3106  0321  1D03               	btfss	3,2
  3107  0322  2B24               	goto	u641
  3108  0323  2B25               	goto	u640
  3109  0324                     u641:
  3110  0324  2B2A               	goto	l1434
  3111  0325                     u640:
  3112  0325                     l1432:
  3113  0325  0870               	movf	fputc@c,w
  3114  0326  3181  212F  3183   	fcall	_putch
  3115  0329  2B69               	goto	l954
  3116  032A                     l1434:
  3117  032A  0872               	movf	fputc@fp,w
  3118  032B  3E03               	addlw	3
  3119  032C  0086               	movwf	6
  3120  032D  0187               	clrf	7
  3121  032E  0016               	moviw fsr1++
  3122  032F  0401               	iorwf	1,w
  3123  0330  1903               	btfsc	3,2
  3124  0331  2B33               	goto	u651
  3125  0332  2B34               	goto	u650
  3126  0333                     u651:
  3127  0333  2B51               	goto	l1438
  3128  0334                     u650:
  3129  0334                     l1436:
  3130  0334  0872               	movf	fputc@fp,w
  3131  0335  3E03               	addlw	3
  3132  0336  0086               	movwf	6
  3133  0337  0187               	clrf	7
  3134  0338  3F40               	moviw [0]fsr1
  3135  0339  00F3               	movwf	??_fputc
  3136  033A  3F41               	moviw [1]fsr1
  3137  033B  00F4               	movwf	??_fputc+1
  3138  033C  0A72               	incf	fputc@fp,w
  3139  033D  0086               	movwf	6
  3140  033E  0187               	clrf	7
  3141  033F  3F40               	moviw [0]fsr1
  3142  0340  00F5               	movwf	??_fputc+2
  3143  0341  3F41               	moviw [1]fsr1
  3144  0342  00F6               	movwf	??_fputc+3
  3145  0343  0876               	movf	??_fputc+3,w
  3146  0344  3A80               	xorlw	128
  3147  0345  00F7               	movwf	??_fputc+4
  3148  0346  0874               	movf	??_fputc+1,w
  3149  0347  3A80               	xorlw	128
  3150  0348  0277               	subwf	??_fputc+4,w
  3151  0349  1D03               	skipz
  3152  034A  2B4D               	goto	u665
  3153  034B  0873               	movf	??_fputc,w
  3154  034C  0275               	subwf	??_fputc+2,w
  3155  034D                     u665:
  3156  034D  1803               	skipnc
  3157  034E  2B50               	goto	u661
  3158  034F  2B51               	goto	u660
  3159  0350                     u661:
  3160  0350  2B69               	goto	l954
  3161  0351                     u660:
  3162  0351                     l1438:
  3163  0351  0870               	movf	fputc@c,w
  3164  0352  00F3               	movwf	??_fputc
  3165  0353  0872               	movf	fputc@fp,w
  3166  0354  0086               	movwf	6
  3167  0355  0187               	clrf	7
  3168  0356  0A72               	incf	fputc@fp,w
  3169  0357  0084               	movwf	4
  3170  0358  0185               	clrf	5
  3171  0359  0800               	movf	0,w
  3172  035A  0701               	addwf	1,w
  3173  035B  00F4               	movwf	??_fputc+1
  3174  035C  0874               	movf	??_fputc+1,w
  3175  035D  0086               	movwf	6
  3176  035E  0187               	clrf	7
  3177  035F  0873               	movf	??_fputc,w
  3178  0360  0081               	movwf	1
  3179  0361                     l1440:
  3180  0361  0A72               	incf	fputc@fp,w
  3181  0362  0086               	movwf	6
  3182  0363  0187               	clrf	7
  3183  0364  3001               	movlw	1
  3184  0365  0781               	addwf	1,f
  3185  0366  3141               	addfsr 1,1
  3186  0367  1803               	skipnc
  3187  0368  0A81               	incf	1,f
  3188  0369                     l954:
  3189  0369  0008               	return
  3190  036A                     __end_of_fputc:
  3191                           
  3192                           	psect	text8
  3193  012F                     __ptext8:	
  3194 ;; *************** function _putch *****************
  3195 ;; Defined at:
  3196 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/putch.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  c               1    wreg     unsigned char 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  c               1    0[COMMON] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		wreg
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3214 ;;Total ram usage:        0 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_fputc
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           
  3224                           ;psect for function _putch
  3225  012F                     _putch:
  3226  012F                     l965:	
  3227                           ;incstack = 0
  3228                           ; Regs used in _putch: [wreg]
  3229                           
  3230  012F  0008               	return
  3231  0130                     __end_of_putch:
  3232                           
  3233                           	psect	text9
  3234  01DC                     __ptext9:	
  3235 ;; *************** function _abs *****************
  3236 ;; Defined at:
  3237 ;;		line 1 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/abs.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  a               2    3[COMMON] int 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  2    3[COMMON] int 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3253 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3254 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3255 ;;Total ram usage:        4 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_dtoa
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           
  3265                           ;psect for function _abs
  3266  01DC                     _abs:
  3267  01DC                     l1552:	
  3268                           ;incstack = 0
  3269                           ; Regs used in _abs: [wreg+status,2+status,0]
  3270                           
  3271  01DC  0874               	movf	abs@a+1,w
  3272  01DD  3A80               	xorlw	128
  3273  01DE  00F5               	movwf	??_abs
  3274  01DF  3080               	movlw	128
  3275  01E0  0275               	subwf	??_abs,w
  3276  01E1  1D03               	skipz
  3277  01E2  29E5               	goto	u945
  3278  01E3  3001               	movlw	1
  3279  01E4  0273               	subwf	abs@a,w
  3280  01E5                     u945:
  3281  01E5  1803               	skipnc
  3282  01E6  29E8               	goto	u941
  3283  01E7  29E9               	goto	u940
  3284  01E8                     u941:
  3285  01E8  29F5               	goto	l939
  3286  01E9                     u940:
  3287  01E9                     l1554:
  3288  01E9  0973               	comf	abs@a,w
  3289  01EA  00F5               	movwf	??_abs
  3290  01EB  0974               	comf	abs@a+1,w
  3291  01EC  00F6               	movwf	??_abs+1
  3292  01ED  0AF5               	incf	??_abs,f
  3293  01EE  1903               	skipnz
  3294  01EF  0AF6               	incf	??_abs+1,f
  3295  01F0  0875               	movf	??_abs,w
  3296  01F1  00F3               	movwf	?_abs
  3297  01F2  0876               	movf	??_abs+1,w
  3298  01F3  00F4               	movwf	?_abs+1
  3299  01F4  29F5               	goto	l942
  3300  01F5                     l939:
  3301  01F5                     l942:
  3302  01F5  0008               	return
  3303  01F6                     __end_of_abs:
  3304                           
  3305                           	psect	text10
  3306  049D                     __ptext10:	
  3307 ;; *************** function ___aomod *****************
  3308 ;; Defined at:
  3309 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aomod.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  divisor         8    0[BANK0 ] long long 
  3312 ;;  dividend        8    8[BANK0 ] long long 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  sign            1    2[COMMON] unsigned char 
  3315 ;;  counter         1    1[COMMON] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  8    0[BANK0 ] long long 
  3318 ;; Registers used:
  3319 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3325 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3329 ;;Total ram usage:       19 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_dtoa
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           
  3339                           ;psect for function ___aomod
  3340  049D                     ___aomod:
  3341  049D                     l1500:	
  3342                           ;incstack = 0
  3343                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3344                           
  3345  049D  01F2               	clrf	___aomod@sign
  3346  049E                     l1502:
  3347  049E  3028               	movlw	low ___aomod@dividend
  3348  049F  0086               	movwf	6
  3349  04A0  3000               	movlw	high ___aomod@dividend
  3350  04A1  0087               	movwf	7
  3351  04A2  3F47               	moviw [7]fsr1
  3352  04A3  00F0               	movwf	??___aomod
  3353  04A4  1FF0               	btfss	??___aomod,7
  3354  04A5  2CA7               	goto	u801
  3355  04A6  2CA8               	goto	u800
  3356  04A7                     u801:
  3357  04A7  2CC9               	goto	l1506
  3358  04A8                     u800:
  3359  04A8                     l1504:
  3360  04A8  0020               	movlb	0	; select bank0
  3361  04A9  09A8               	comf	___aomod@dividend,f
  3362  04AA  09A9               	comf	___aomod@dividend+1,f
  3363  04AB  09AA               	comf	___aomod@dividend+2,f
  3364  04AC  09AB               	comf	___aomod@dividend+3,f
  3365  04AD  09AC               	comf	___aomod@dividend+4,f
  3366  04AE  09AD               	comf	___aomod@dividend+5,f
  3367  04AF  09AE               	comf	___aomod@dividend+6,f
  3368  04B0  09AF               	comf	___aomod@dividend+7,f
  3369  04B1  0AA8               	incf	___aomod@dividend,f
  3370  04B2  1D03               	skipz
  3371  04B3  2CC7               	goto	u81lld
  3372  04B4  0AA9               	incf	___aomod@dividend+1,f
  3373  04B5  1D03               	skipz
  3374  04B6  2CC7               	goto	u81lld
  3375  04B7  0AAA               	incf	___aomod@dividend+2,f
  3376  04B8  1D03               	skipz
  3377  04B9  2CC7               	goto	u81lld
  3378  04BA  0AAB               	incf	___aomod@dividend+3,f
  3379  04BB  1D03               	skipz
  3380  04BC  2CC7               	goto	u81lld
  3381  04BD  0AAC               	incf	___aomod@dividend+4,f
  3382  04BE  1D03               	skipz
  3383  04BF  2CC7               	goto	u81lld
  3384  04C0  0AAD               	incf	___aomod@dividend+5,f
  3385  04C1  1D03               	skipz
  3386  04C2  2CC7               	goto	u81lld
  3387  04C3  0AAE               	incf	___aomod@dividend+6,f
  3388  04C4  1D03               	skipz
  3389  04C5  2CC7               	goto	u81lld
  3390  04C6  0AAF               	incf	___aomod@dividend+7,f
  3391  04C7                     u81lld:
  3392  04C7  01F2               	clrf	___aomod@sign
  3393  04C8  0AF2               	incf	___aomod@sign,f
  3394  04C9                     l1506:
  3395  04C9  3020               	movlw	low ___aomod@divisor
  3396  04CA  0086               	movwf	6
  3397  04CB  3000               	movlw	high ___aomod@divisor
  3398  04CC  0087               	movwf	7
  3399  04CD  3F47               	moviw [7]fsr1
  3400  04CE  00F0               	movwf	??___aomod
  3401  04CF  1FF0               	btfss	??___aomod,7
  3402  04D0  2CD2               	goto	u821
  3403  04D1  2CD3               	goto	u820
  3404  04D2                     u821:
  3405  04D2  2CF2               	goto	l1510
  3406  04D3                     u820:
  3407  04D3                     l1508:
  3408  04D3  0020               	movlb	0	; select bank0
  3409  04D4  09A0               	comf	___aomod@divisor,f
  3410  04D5  09A1               	comf	___aomod@divisor+1,f
  3411  04D6  09A2               	comf	___aomod@divisor+2,f
  3412  04D7  09A3               	comf	___aomod@divisor+3,f
  3413  04D8  09A4               	comf	___aomod@divisor+4,f
  3414  04D9  09A5               	comf	___aomod@divisor+5,f
  3415  04DA  09A6               	comf	___aomod@divisor+6,f
  3416  04DB  09A7               	comf	___aomod@divisor+7,f
  3417  04DC  0AA0               	incf	___aomod@divisor,f
  3418  04DD  1D03               	skipz
  3419  04DE  2CF2               	goto	u83lld
  3420  04DF  0AA1               	incf	___aomod@divisor+1,f
  3421  04E0  1D03               	skipz
  3422  04E1  2CF2               	goto	u83lld
  3423  04E2  0AA2               	incf	___aomod@divisor+2,f
  3424  04E3  1D03               	skipz
  3425  04E4  2CF2               	goto	u83lld
  3426  04E5  0AA3               	incf	___aomod@divisor+3,f
  3427  04E6  1D03               	skipz
  3428  04E7  2CF2               	goto	u83lld
  3429  04E8  0AA4               	incf	___aomod@divisor+4,f
  3430  04E9  1D03               	skipz
  3431  04EA  2CF2               	goto	u83lld
  3432  04EB  0AA5               	incf	___aomod@divisor+5,f
  3433  04EC  1D03               	skipz
  3434  04ED  2CF2               	goto	u83lld
  3435  04EE  0AA6               	incf	___aomod@divisor+6,f
  3436  04EF  1D03               	skipz
  3437  04F0  2CF2               	goto	u83lld
  3438  04F1  0AA7               	incf	___aomod@divisor+7,f
  3439  04F2                     u83lld:
  3440  04F2                     l1510:
  3441  04F2  0020               	movlb	0	; select bank0
  3442  04F3  0820               	movf	___aomod@divisor,w
  3443  04F4  0421               	iorwf	___aomod@divisor+1,w
  3444  04F5  0422               	iorwf	___aomod@divisor+2,w
  3445  04F6  0423               	iorwf	___aomod@divisor+3,w
  3446  04F7  0424               	iorwf	___aomod@divisor+4,w
  3447  04F8  0425               	iorwf	___aomod@divisor+5,w
  3448  04F9  0426               	iorwf	___aomod@divisor+6,w
  3449  04FA  0427               	iorwf	___aomod@divisor+7,w
  3450  04FB  1903               	skipnz
  3451  04FC  2CFE               	goto	u841
  3452  04FD  2CFF               	goto	u840
  3453  04FE                     u841:
  3454  04FE  2D52               	goto	l1526
  3455  04FF                     u840:
  3456  04FF                     l1512:
  3457  04FF  01F1               	clrf	___aomod@counter
  3458  0500  0AF1               	incf	___aomod@counter,f
  3459  0501  2D0E               	goto	l1518
  3460  0502                     l1514:
  3461  0502  35A0               	lslf	___aomod@divisor,f
  3462  0503  0DA1               	rlf	___aomod@divisor+1,f
  3463  0504  0DA2               	rlf	___aomod@divisor+2,f
  3464  0505  0DA3               	rlf	___aomod@divisor+3,f
  3465  0506  0DA4               	rlf	___aomod@divisor+4,f
  3466  0507  0DA5               	rlf	___aomod@divisor+5,f
  3467  0508  0DA6               	rlf	___aomod@divisor+6,f
  3468  0509  0DA7               	rlf	___aomod@divisor+7,f
  3469  050A                     l1516:
  3470  050A  3001               	movlw	1
  3471  050B  00F0               	movwf	??___aomod
  3472  050C  0870               	movf	??___aomod,w
  3473  050D  07F1               	addwf	___aomod@counter,f
  3474  050E                     l1518:
  3475  050E  1FA7               	btfss	___aomod@divisor+7,7
  3476  050F  2D11               	goto	u851
  3477  0510  2D12               	goto	u850
  3478  0511                     u851:
  3479  0511  2D02               	goto	l1514
  3480  0512                     u850:
  3481  0512                     l1520:
  3482  0512  0827               	movf	___aomod@divisor+7,w
  3483  0513  022F               	subwf	___aomod@dividend+7,w
  3484  0514  1D03               	skipz
  3485  0515  2D30               	goto	u865
  3486  0516  0826               	movf	___aomod@divisor+6,w
  3487  0517  022E               	subwf	___aomod@dividend+6,w
  3488  0518  1D03               	skipz
  3489  0519  2D30               	goto	u865
  3490  051A  0825               	movf	___aomod@divisor+5,w
  3491  051B  022D               	subwf	___aomod@dividend+5,w
  3492  051C  1D03               	skipz
  3493  051D  2D30               	goto	u865
  3494  051E  0824               	movf	___aomod@divisor+4,w
  3495  051F  022C               	subwf	___aomod@dividend+4,w
  3496  0520  1D03               	skipz
  3497  0521  2D30               	goto	u865
  3498  0522  0823               	movf	___aomod@divisor+3,w
  3499  0523  022B               	subwf	___aomod@dividend+3,w
  3500  0524  1D03               	skipz
  3501  0525  2D30               	goto	u865
  3502  0526  0822               	movf	___aomod@divisor+2,w
  3503  0527  022A               	subwf	___aomod@dividend+2,w
  3504  0528  1D03               	skipz
  3505  0529  2D30               	goto	u865
  3506  052A  0821               	movf	___aomod@divisor+1,w
  3507  052B  0229               	subwf	___aomod@dividend+1,w
  3508  052C  1D03               	skipz
  3509  052D  2D30               	goto	u865
  3510  052E  0820               	movf	___aomod@divisor,w
  3511  052F  0228               	subwf	___aomod@dividend,w
  3512  0530                     u865:
  3513  0530  1C03               	skipc
  3514  0531  2D33               	goto	u861
  3515  0532  2D34               	goto	u860
  3516  0533                     u861:
  3517  0533  2D44               	goto	l1524
  3518  0534                     u860:
  3519  0534                     l1522:
  3520  0534  0820               	movf	___aomod@divisor,w
  3521  0535  02A8               	subwf	___aomod@dividend,f
  3522  0536  0821               	movf	___aomod@divisor+1,w
  3523  0537  3BA9               	subwfb	___aomod@dividend+1,f
  3524  0538  0822               	movf	___aomod@divisor+2,w
  3525  0539  3BAA               	subwfb	___aomod@dividend+2,f
  3526  053A  0823               	movf	___aomod@divisor+3,w
  3527  053B  3BAB               	subwfb	___aomod@dividend+3,f
  3528  053C  0824               	movf	___aomod@divisor+4,w
  3529  053D  3BAC               	subwfb	___aomod@dividend+4,f
  3530  053E  0825               	movf	___aomod@divisor+5,w
  3531  053F  3BAD               	subwfb	___aomod@dividend+5,f
  3532  0540  0826               	movf	___aomod@divisor+6,w
  3533  0541  3BAE               	subwfb	___aomod@dividend+6,f
  3534  0542  0827               	movf	___aomod@divisor+7,w
  3535  0543  3BAF               	subwfb	___aomod@dividend+7,f
  3536  0544                     l1524:
  3537  0544  36A7               	lsrf	___aomod@divisor+7,f
  3538  0545  0CA6               	rrf	___aomod@divisor+6,f
  3539  0546  0CA5               	rrf	___aomod@divisor+5,f
  3540  0547  0CA4               	rrf	___aomod@divisor+4,f
  3541  0548  0CA3               	rrf	___aomod@divisor+3,f
  3542  0549  0CA2               	rrf	___aomod@divisor+2,f
  3543  054A  0CA1               	rrf	___aomod@divisor+1,f
  3544  054B  0CA0               	rrf	___aomod@divisor,f
  3545  054C  3001               	movlw	1
  3546  054D  02F1               	subwf	___aomod@counter,f
  3547  054E  1D03               	btfss	3,2
  3548  054F  2D51               	goto	u871
  3549  0550  2D52               	goto	u870
  3550  0551                     u871:
  3551  0551  2D12               	goto	l1520
  3552  0552                     u870:
  3553  0552                     l1526:
  3554  0552  0872               	movf	___aomod@sign,w
  3555  0553  1903               	btfsc	3,2
  3556  0554  2D56               	goto	u881
  3557  0555  2D57               	goto	u880
  3558  0556                     u881:
  3559  0556  2D75               	goto	l513
  3560  0557                     u880:
  3561  0557                     l1528:
  3562  0557  09A8               	comf	___aomod@dividend,f
  3563  0558  09A9               	comf	___aomod@dividend+1,f
  3564  0559  09AA               	comf	___aomod@dividend+2,f
  3565  055A  09AB               	comf	___aomod@dividend+3,f
  3566  055B  09AC               	comf	___aomod@dividend+4,f
  3567  055C  09AD               	comf	___aomod@dividend+5,f
  3568  055D  09AE               	comf	___aomod@dividend+6,f
  3569  055E  09AF               	comf	___aomod@dividend+7,f
  3570  055F  0AA8               	incf	___aomod@dividend,f
  3571  0560  1D03               	skipz
  3572  0561  2D75               	goto	u89lld
  3573  0562  0AA9               	incf	___aomod@dividend+1,f
  3574  0563  1D03               	skipz
  3575  0564  2D75               	goto	u89lld
  3576  0565  0AAA               	incf	___aomod@dividend+2,f
  3577  0566  1D03               	skipz
  3578  0567  2D75               	goto	u89lld
  3579  0568  0AAB               	incf	___aomod@dividend+3,f
  3580  0569  1D03               	skipz
  3581  056A  2D75               	goto	u89lld
  3582  056B  0AAC               	incf	___aomod@dividend+4,f
  3583  056C  1D03               	skipz
  3584  056D  2D75               	goto	u89lld
  3585  056E  0AAD               	incf	___aomod@dividend+5,f
  3586  056F  1D03               	skipz
  3587  0570  2D75               	goto	u89lld
  3588  0571  0AAE               	incf	___aomod@dividend+6,f
  3589  0572  1D03               	skipz
  3590  0573  2D75               	goto	u89lld
  3591  0574  0AAF               	incf	___aomod@dividend+7,f
  3592  0575                     u89lld:
  3593  0575                     l513:
  3594  0575  0020               	movlb	0	; select bank0
  3595  0576  0828               	movf	___aomod@dividend,w
  3596  0577  00A0               	movwf	?___aomod
  3597  0578  0829               	movf	___aomod@dividend+1,w
  3598  0579  00A1               	movwf	?___aomod+1
  3599  057A  082A               	movf	___aomod@dividend+2,w
  3600  057B  00A2               	movwf	?___aomod+2
  3601  057C  082B               	movf	___aomod@dividend+3,w
  3602  057D  00A3               	movwf	?___aomod+3
  3603  057E  082C               	movf	___aomod@dividend+4,w
  3604  057F  00A4               	movwf	?___aomod+4
  3605  0580  082D               	movf	___aomod@dividend+5,w
  3606  0581  00A5               	movwf	?___aomod+5
  3607  0582  082E               	movf	___aomod@dividend+6,w
  3608  0583  00A6               	movwf	?___aomod+6
  3609  0584  082F               	movf	___aomod@dividend+7,w
  3610  0585  00A7               	movwf	?___aomod+7
  3611  0586                     l514:
  3612  0586  0008               	return
  3613  0587                     __end_of___aomod:
  3614                           
  3615                           	psect	text11
  3616  0587                     __ptext11:	
  3617 ;; *************** function ___aodiv *****************
  3618 ;; Defined at:
  3619 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aodiv.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  divisor         8    0[BANK0 ] long long 
  3622 ;;  dividend        8    8[BANK0 ] long long 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  quotient        8    3[COMMON] long long 
  3625 ;;  sign            1    2[COMMON] unsigned char 
  3626 ;;  counter         1    1[COMMON] unsigned char 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  8    0[BANK0 ] long long 
  3629 ;; Registers used:
  3630 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3636 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3637 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3639 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3640 ;;Total ram usage:       27 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_dtoa
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           
  3650                           ;psect for function ___aodiv
  3651  0587                     ___aodiv:
  3652  0587                     l1462:	
  3653                           ;incstack = 0
  3654                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3655                           
  3656  0587  01F2               	clrf	___aodiv@sign
  3657  0588                     l1464:
  3658  0588  3020               	movlw	low ___aodiv@divisor
  3659  0589  0086               	movwf	6
  3660  058A  3000               	movlw	high ___aodiv@divisor
  3661  058B  0087               	movwf	7
  3662  058C  3F47               	moviw [7]fsr1
  3663  058D  00F0               	movwf	??___aodiv
  3664  058E  1FF0               	btfss	??___aodiv,7
  3665  058F  2D91               	goto	u691
  3666  0590  2D92               	goto	u690
  3667  0591                     u691:
  3668  0591  2DB3               	goto	l1468
  3669  0592                     u690:
  3670  0592                     l1466:
  3671  0592  0020               	movlb	0	; select bank0
  3672  0593  09A0               	comf	___aodiv@divisor,f
  3673  0594  09A1               	comf	___aodiv@divisor+1,f
  3674  0595  09A2               	comf	___aodiv@divisor+2,f
  3675  0596  09A3               	comf	___aodiv@divisor+3,f
  3676  0597  09A4               	comf	___aodiv@divisor+4,f
  3677  0598  09A5               	comf	___aodiv@divisor+5,f
  3678  0599  09A6               	comf	___aodiv@divisor+6,f
  3679  059A  09A7               	comf	___aodiv@divisor+7,f
  3680  059B  0AA0               	incf	___aodiv@divisor,f
  3681  059C  1D03               	skipz
  3682  059D  2DB1               	goto	u70lld
  3683  059E  0AA1               	incf	___aodiv@divisor+1,f
  3684  059F  1D03               	skipz
  3685  05A0  2DB1               	goto	u70lld
  3686  05A1  0AA2               	incf	___aodiv@divisor+2,f
  3687  05A2  1D03               	skipz
  3688  05A3  2DB1               	goto	u70lld
  3689  05A4  0AA3               	incf	___aodiv@divisor+3,f
  3690  05A5  1D03               	skipz
  3691  05A6  2DB1               	goto	u70lld
  3692  05A7  0AA4               	incf	___aodiv@divisor+4,f
  3693  05A8  1D03               	skipz
  3694  05A9  2DB1               	goto	u70lld
  3695  05AA  0AA5               	incf	___aodiv@divisor+5,f
  3696  05AB  1D03               	skipz
  3697  05AC  2DB1               	goto	u70lld
  3698  05AD  0AA6               	incf	___aodiv@divisor+6,f
  3699  05AE  1D03               	skipz
  3700  05AF  2DB1               	goto	u70lld
  3701  05B0  0AA7               	incf	___aodiv@divisor+7,f
  3702  05B1                     u70lld:
  3703  05B1  01F2               	clrf	___aodiv@sign
  3704  05B2  0AF2               	incf	___aodiv@sign,f
  3705  05B3                     l1468:
  3706  05B3  3028               	movlw	low ___aodiv@dividend
  3707  05B4  0086               	movwf	6
  3708  05B5  3000               	movlw	high ___aodiv@dividend
  3709  05B6  0087               	movwf	7
  3710  05B7  3F47               	moviw [7]fsr1
  3711  05B8  00F0               	movwf	??___aodiv
  3712  05B9  1FF0               	btfss	??___aodiv,7
  3713  05BA  2DBC               	goto	u711
  3714  05BB  2DBD               	goto	u710
  3715  05BC                     u711:
  3716  05BC  2DE0               	goto	l1474
  3717  05BD                     u710:
  3718  05BD                     l1470:
  3719  05BD  0020               	movlb	0	; select bank0
  3720  05BE  09A8               	comf	___aodiv@dividend,f
  3721  05BF  09A9               	comf	___aodiv@dividend+1,f
  3722  05C0  09AA               	comf	___aodiv@dividend+2,f
  3723  05C1  09AB               	comf	___aodiv@dividend+3,f
  3724  05C2  09AC               	comf	___aodiv@dividend+4,f
  3725  05C3  09AD               	comf	___aodiv@dividend+5,f
  3726  05C4  09AE               	comf	___aodiv@dividend+6,f
  3727  05C5  09AF               	comf	___aodiv@dividend+7,f
  3728  05C6  0AA8               	incf	___aodiv@dividend,f
  3729  05C7  1D03               	skipz
  3730  05C8  2DDC               	goto	u72lld
  3731  05C9  0AA9               	incf	___aodiv@dividend+1,f
  3732  05CA  1D03               	skipz
  3733  05CB  2DDC               	goto	u72lld
  3734  05CC  0AAA               	incf	___aodiv@dividend+2,f
  3735  05CD  1D03               	skipz
  3736  05CE  2DDC               	goto	u72lld
  3737  05CF  0AAB               	incf	___aodiv@dividend+3,f
  3738  05D0  1D03               	skipz
  3739  05D1  2DDC               	goto	u72lld
  3740  05D2  0AAC               	incf	___aodiv@dividend+4,f
  3741  05D3  1D03               	skipz
  3742  05D4  2DDC               	goto	u72lld
  3743  05D5  0AAD               	incf	___aodiv@dividend+5,f
  3744  05D6  1D03               	skipz
  3745  05D7  2DDC               	goto	u72lld
  3746  05D8  0AAE               	incf	___aodiv@dividend+6,f
  3747  05D9  1D03               	skipz
  3748  05DA  2DDC               	goto	u72lld
  3749  05DB  0AAF               	incf	___aodiv@dividend+7,f
  3750  05DC                     u72lld:
  3751  05DC                     l1472:
  3752  05DC  3001               	movlw	1
  3753  05DD  00F0               	movwf	??___aodiv
  3754  05DE  0870               	movf	??___aodiv,w
  3755  05DF  06F2               	xorwf	___aodiv@sign,f
  3756  05E0                     l1474:
  3757  05E0  3073               	movlw	low ___aodiv@quotient
  3758  05E1  0086               	movwf	6
  3759  05E2  3000               	movlw	high ___aodiv@quotient
  3760  05E3  0087               	movwf	7
  3761  05E4  3008               	movlw	8
  3762  05E5  00F0               	movwf	??___aodiv
  3763  05E6  3000               	movlw	0
  3764  05E7                     u730:
  3765  05E7  001E               	movwi fsr1++
  3766  05E8  0BF0               	decfsz	??___aodiv,f
  3767  05E9  2DE7               	goto	u730
  3768  05EA                     l1476:
  3769  05EA  0020               	movlb	0	; select bank0
  3770  05EB  0820               	movf	___aodiv@divisor,w
  3771  05EC  0421               	iorwf	___aodiv@divisor+1,w
  3772  05ED  0422               	iorwf	___aodiv@divisor+2,w
  3773  05EE  0423               	iorwf	___aodiv@divisor+3,w
  3774  05EF  0424               	iorwf	___aodiv@divisor+4,w
  3775  05F0  0425               	iorwf	___aodiv@divisor+5,w
  3776  05F1  0426               	iorwf	___aodiv@divisor+6,w
  3777  05F2  0427               	iorwf	___aodiv@divisor+7,w
  3778  05F3  1903               	skipnz
  3779  05F4  2DF6               	goto	u741
  3780  05F5  2DF7               	goto	u740
  3781  05F6                     u741:
  3782  05F6  2E53               	goto	l1496
  3783  05F7                     u740:
  3784  05F7                     l1478:
  3785  05F7  01F1               	clrf	___aodiv@counter
  3786  05F8  0AF1               	incf	___aodiv@counter,f
  3787  05F9  2E06               	goto	l1484
  3788  05FA                     l1480:
  3789  05FA  35A0               	lslf	___aodiv@divisor,f
  3790  05FB  0DA1               	rlf	___aodiv@divisor+1,f
  3791  05FC  0DA2               	rlf	___aodiv@divisor+2,f
  3792  05FD  0DA3               	rlf	___aodiv@divisor+3,f
  3793  05FE  0DA4               	rlf	___aodiv@divisor+4,f
  3794  05FF  0DA5               	rlf	___aodiv@divisor+5,f
  3795  0600  0DA6               	rlf	___aodiv@divisor+6,f
  3796  0601  0DA7               	rlf	___aodiv@divisor+7,f
  3797  0602                     l1482:
  3798  0602  3001               	movlw	1
  3799  0603  00F0               	movwf	??___aodiv
  3800  0604  0870               	movf	??___aodiv,w
  3801  0605  07F1               	addwf	___aodiv@counter,f
  3802  0606                     l1484:
  3803  0606  1FA7               	btfss	___aodiv@divisor+7,7
  3804  0607  2E09               	goto	u751
  3805  0608  2E0A               	goto	u750
  3806  0609                     u751:
  3807  0609  2DFA               	goto	l1480
  3808  060A                     u750:
  3809  060A                     l1486:
  3810  060A  35F3               	lslf	___aodiv@quotient,f
  3811  060B  0DF4               	rlf	___aodiv@quotient+1,f
  3812  060C  0DF5               	rlf	___aodiv@quotient+2,f
  3813  060D  0DF6               	rlf	___aodiv@quotient+3,f
  3814  060E  0DF7               	rlf	___aodiv@quotient+4,f
  3815  060F  0DF8               	rlf	___aodiv@quotient+5,f
  3816  0610  0DF9               	rlf	___aodiv@quotient+6,f
  3817  0611  0DFA               	rlf	___aodiv@quotient+7,f
  3818  0612                     l1488:
  3819  0612  0827               	movf	___aodiv@divisor+7,w
  3820  0613  022F               	subwf	___aodiv@dividend+7,w
  3821  0614  1D03               	skipz
  3822  0615  2E30               	goto	u765
  3823  0616  0826               	movf	___aodiv@divisor+6,w
  3824  0617  022E               	subwf	___aodiv@dividend+6,w
  3825  0618  1D03               	skipz
  3826  0619  2E30               	goto	u765
  3827  061A  0825               	movf	___aodiv@divisor+5,w
  3828  061B  022D               	subwf	___aodiv@dividend+5,w
  3829  061C  1D03               	skipz
  3830  061D  2E30               	goto	u765
  3831  061E  0824               	movf	___aodiv@divisor+4,w
  3832  061F  022C               	subwf	___aodiv@dividend+4,w
  3833  0620  1D03               	skipz
  3834  0621  2E30               	goto	u765
  3835  0622  0823               	movf	___aodiv@divisor+3,w
  3836  0623  022B               	subwf	___aodiv@dividend+3,w
  3837  0624  1D03               	skipz
  3838  0625  2E30               	goto	u765
  3839  0626  0822               	movf	___aodiv@divisor+2,w
  3840  0627  022A               	subwf	___aodiv@dividend+2,w
  3841  0628  1D03               	skipz
  3842  0629  2E30               	goto	u765
  3843  062A  0821               	movf	___aodiv@divisor+1,w
  3844  062B  0229               	subwf	___aodiv@dividend+1,w
  3845  062C  1D03               	skipz
  3846  062D  2E30               	goto	u765
  3847  062E  0820               	movf	___aodiv@divisor,w
  3848  062F  0228               	subwf	___aodiv@dividend,w
  3849  0630                     u765:
  3850  0630  1C03               	skipc
  3851  0631  2E33               	goto	u761
  3852  0632  2E34               	goto	u760
  3853  0633                     u761:
  3854  0633  2E45               	goto	l1494
  3855  0634                     u760:
  3856  0634                     l1490:
  3857  0634  0820               	movf	___aodiv@divisor,w
  3858  0635  02A8               	subwf	___aodiv@dividend,f
  3859  0636  0821               	movf	___aodiv@divisor+1,w
  3860  0637  3BA9               	subwfb	___aodiv@dividend+1,f
  3861  0638  0822               	movf	___aodiv@divisor+2,w
  3862  0639  3BAA               	subwfb	___aodiv@dividend+2,f
  3863  063A  0823               	movf	___aodiv@divisor+3,w
  3864  063B  3BAB               	subwfb	___aodiv@dividend+3,f
  3865  063C  0824               	movf	___aodiv@divisor+4,w
  3866  063D  3BAC               	subwfb	___aodiv@dividend+4,f
  3867  063E  0825               	movf	___aodiv@divisor+5,w
  3868  063F  3BAD               	subwfb	___aodiv@dividend+5,f
  3869  0640  0826               	movf	___aodiv@divisor+6,w
  3870  0641  3BAE               	subwfb	___aodiv@dividend+6,f
  3871  0642  0827               	movf	___aodiv@divisor+7,w
  3872  0643  3BAF               	subwfb	___aodiv@dividend+7,f
  3873  0644                     l1492:
  3874  0644  1473               	bsf	___aodiv@quotient,0
  3875  0645                     l1494:
  3876  0645  36A7               	lsrf	___aodiv@divisor+7,f
  3877  0646  0CA6               	rrf	___aodiv@divisor+6,f
  3878  0647  0CA5               	rrf	___aodiv@divisor+5,f
  3879  0648  0CA4               	rrf	___aodiv@divisor+4,f
  3880  0649  0CA3               	rrf	___aodiv@divisor+3,f
  3881  064A  0CA2               	rrf	___aodiv@divisor+2,f
  3882  064B  0CA1               	rrf	___aodiv@divisor+1,f
  3883  064C  0CA0               	rrf	___aodiv@divisor,f
  3884  064D  3001               	movlw	1
  3885  064E  02F1               	subwf	___aodiv@counter,f
  3886  064F  1D03               	btfss	3,2
  3887  0650  2E52               	goto	u771
  3888  0651  2E53               	goto	u770
  3889  0652                     u771:
  3890  0652  2E0A               	goto	l1486
  3891  0653                     u770:
  3892  0653                     l1496:
  3893  0653  0872               	movf	___aodiv@sign,w
  3894  0654  1903               	btfsc	3,2
  3895  0655  2E57               	goto	u781
  3896  0656  2E58               	goto	u780
  3897  0657                     u781:
  3898  0657  2E76               	goto	l500
  3899  0658                     u780:
  3900  0658                     l1498:
  3901  0658  09F3               	comf	___aodiv@quotient,f
  3902  0659  09F4               	comf	___aodiv@quotient+1,f
  3903  065A  09F5               	comf	___aodiv@quotient+2,f
  3904  065B  09F6               	comf	___aodiv@quotient+3,f
  3905  065C  09F7               	comf	___aodiv@quotient+4,f
  3906  065D  09F8               	comf	___aodiv@quotient+5,f
  3907  065E  09F9               	comf	___aodiv@quotient+6,f
  3908  065F  09FA               	comf	___aodiv@quotient+7,f
  3909  0660  0AF3               	incf	___aodiv@quotient,f
  3910  0661  1D03               	skipz
  3911  0662  2E76               	goto	u79lld
  3912  0663  0AF4               	incf	___aodiv@quotient+1,f
  3913  0664  1D03               	skipz
  3914  0665  2E76               	goto	u79lld
  3915  0666  0AF5               	incf	___aodiv@quotient+2,f
  3916  0667  1D03               	skipz
  3917  0668  2E76               	goto	u79lld
  3918  0669  0AF6               	incf	___aodiv@quotient+3,f
  3919  066A  1D03               	skipz
  3920  066B  2E76               	goto	u79lld
  3921  066C  0AF7               	incf	___aodiv@quotient+4,f
  3922  066D  1D03               	skipz
  3923  066E  2E76               	goto	u79lld
  3924  066F  0AF8               	incf	___aodiv@quotient+5,f
  3925  0670  1D03               	skipz
  3926  0671  2E76               	goto	u79lld
  3927  0672  0AF9               	incf	___aodiv@quotient+6,f
  3928  0673  1D03               	skipz
  3929  0674  2E76               	goto	u79lld
  3930  0675  0AFA               	incf	___aodiv@quotient+7,f
  3931  0676                     u79lld:
  3932  0676                     l500:
  3933  0676  0873               	movf	___aodiv@quotient,w
  3934  0677  0020               	movlb	0	; select bank0
  3935  0678  00A0               	movwf	?___aodiv
  3936  0679  0874               	movf	___aodiv@quotient+1,w
  3937  067A  00A1               	movwf	?___aodiv+1
  3938  067B  0875               	movf	___aodiv@quotient+2,w
  3939  067C  00A2               	movwf	?___aodiv+2
  3940  067D  0876               	movf	___aodiv@quotient+3,w
  3941  067E  00A3               	movwf	?___aodiv+3
  3942  067F  0877               	movf	___aodiv@quotient+4,w
  3943  0680  00A4               	movwf	?___aodiv+4
  3944  0681  0878               	movf	___aodiv@quotient+5,w
  3945  0682  00A5               	movwf	?___aodiv+5
  3946  0683  0879               	movf	___aodiv@quotient+6,w
  3947  0684  00A6               	movwf	?___aodiv+6
  3948  0685  087A               	movf	___aodiv@quotient+7,w
  3949  0686  00A7               	movwf	?___aodiv+7
  3950  0687                     l501:
  3951  0687  0008               	return
  3952  0688                     __end_of___aodiv:
  3953                           
  3954                           	psect	text12
  3955  02B1                     __ptext12:	
  3956 ;; *************** function _TX_Whole_String *****************
  3957 ;; Defined at:
  3958 ;;		line 102 in file "main.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  input_string    1    wreg     PTR unsigned char 
  3961 ;;		 -> Buff(20), 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  input_string    1    9[COMMON] PTR unsigned char 
  3964 ;;		 -> Buff(20), 
  3965 ;;  i               1   10[COMMON] unsigned char 
  3966 ;;  size_of_stri    2    7[COMMON] unsigned short 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3977 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3979 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3980 ;;Total ram usage:        6 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    2
  3983 ;; This function calls:
  3984 ;;		_TX_Command
  3985 ;;		_strlen
  3986 ;; This function is called by:
  3987 ;;		_main
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function _TX_Whole_String
  3993  02B1                     _TX_Whole_String:
  3994                           
  3995                           ;incstack = 0
  3996                           ; Regs used in _TX_Whole_String: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3997                           ;TX_Whole_String@input_string stored from wreg
  3998  02B1  00F9               	movwf	TX_Whole_String@input_string
  3999  02B2                     l1776:
  4000                           
  4001                           ;main.c: 104:     uint16_t size_of_string = strlen(input_string);
  4002  02B2  0879               	movf	TX_Whole_String@input_string,w
  4003  02B3  3181  21C3  3182   	fcall	_strlen
  4004  02B6  0871               	movf	?_strlen+1,w
  4005  02B7  00F8               	movwf	TX_Whole_String@size_of_string+1
  4006  02B8  0870               	movf	?_strlen,w
  4007  02B9  00F7               	movwf	TX_Whole_String@size_of_string
  4008  02BA                     l1778:
  4009                           
  4010                           ;main.c: 106:     for (uint8_t i = 0; i < size_of_string; i++){
  4011  02BA  01FA               	clrf	TX_Whole_String@i
  4012  02BB  2AD1               	goto	l1786
  4013  02BC                     l1780:
  4014                           
  4015                           ;main.c: 108:         TX_Command(input_string[i]);
  4016  02BC  087A               	movf	TX_Whole_String@i,w
  4017  02BD  0779               	addwf	TX_Whole_String@input_string,w
  4018  02BE  00F5               	movwf	??_TX_Whole_String
  4019  02BF  0875               	movf	??_TX_Whole_String,w
  4020  02C0  0086               	movwf	6
  4021  02C1  0187               	clrf	7
  4022  02C2  0801               	movf	1,w
  4023  02C3  3181  2182  3182   	fcall	_TX_Command
  4024  02C6                     l1782:
  4025                           
  4026                           ;main.c: 109:         _delay((unsigned long)((5)*(8000000/4000.0)));
  4027  02C6  300D               	movlw	13
  4028  02C7  00F5               	movwf	??_TX_Whole_String
  4029  02C8  30FC               	movlw	252
  4030  02C9                     u1257:
  4031  02C9  0B89               	decfsz	9,f
  4032  02CA  2AC9               	goto	u1257
  4033  02CB  0BF5               	decfsz	??_TX_Whole_String,f
  4034  02CC  2AC9               	goto	u1257
  4035  02CD                     l1784:
  4036                           
  4037                           ;main.c: 111:     }
  4038  02CD  3001               	movlw	1
  4039  02CE  00F5               	movwf	??_TX_Whole_String
  4040  02CF  0875               	movf	??_TX_Whole_String,w
  4041  02D0  07FA               	addwf	TX_Whole_String@i,f
  4042  02D1                     l1786:
  4043  02D1  087A               	movf	TX_Whole_String@i,w
  4044  02D2  00F5               	movwf	??_TX_Whole_String
  4045  02D3  01F6               	clrf	??_TX_Whole_String+1
  4046  02D4  0878               	movf	TX_Whole_String@size_of_string+1,w
  4047  02D5  0276               	subwf	??_TX_Whole_String+1,w
  4048  02D6  1D03               	skipz
  4049  02D7  2ADA               	goto	u1215
  4050  02D8  0877               	movf	TX_Whole_String@size_of_string,w
  4051  02D9  0275               	subwf	??_TX_Whole_String,w
  4052  02DA                     u1215:
  4053  02DA  1C03               	skipc
  4054  02DB  2ADD               	goto	u1211
  4055  02DC  2ADE               	goto	u1210
  4056  02DD                     u1211:
  4057  02DD  2ABC               	goto	l1780
  4058  02DE                     u1210:
  4059  02DE                     l1788:
  4060                           
  4061                           ;main.c: 113:     TX_Command(10);
  4062  02DE  300A               	movlw	10
  4063  02DF  3181  2182  3182   	fcall	_TX_Command
  4064  02E2                     l237:
  4065  02E2  0008               	return
  4066  02E3                     __end_of_TX_Whole_String:
  4067                           
  4068                           	psect	text13
  4069  01C3                     __ptext13:	
  4070 ;; *************** function _strlen *****************
  4071 ;; Defined at:
  4072 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strlen.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  s               1    wreg     PTR const unsigned char 
  4075 ;;		 -> dbuf(32), Buff(20), 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  s               1    4[COMMON] PTR const unsigned char 
  4078 ;;		 -> dbuf(32), Buff(20), 
  4079 ;;  a               1    3[COMMON] PTR const unsigned char 
  4080 ;;		 -> dbuf(32), Buff(20), 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  2    0[COMMON] unsigned int 
  4083 ;; Registers used:
  4084 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4093 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4094 ;;Total ram usage:        5 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_TX_Whole_String
  4100 ;;		_pad
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           
  4105                           ;psect for function _strlen
  4106  01C3                     _strlen:
  4107                           
  4108                           ;incstack = 0
  4109                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4110                           ;strlen@s stored from wreg
  4111  01C3  00F4               	movwf	strlen@s
  4112  01C4                     l1444:
  4113  01C4  0874               	movf	strlen@s,w
  4114  01C5  00F2               	movwf	??_strlen
  4115  01C6  0872               	movf	??_strlen,w
  4116  01C7  00F3               	movwf	strlen@a
  4117  01C8  29CD               	goto	l1448
  4118  01C9                     l1446:
  4119  01C9  3001               	movlw	1
  4120  01CA  00F2               	movwf	??_strlen
  4121  01CB  0872               	movf	??_strlen,w
  4122  01CC  07F4               	addwf	strlen@s,f
  4123  01CD                     l1448:
  4124  01CD  0874               	movf	strlen@s,w
  4125  01CE  0086               	movwf	6
  4126  01CF  0187               	clrf	7
  4127  01D0  0801               	movf	1,w
  4128  01D1  1D03               	btfss	3,2
  4129  01D2  29D4               	goto	u671
  4130  01D3  29D5               	goto	u670
  4131  01D4                     u671:
  4132  01D4  29C9               	goto	l1446
  4133  01D5                     u670:
  4134  01D5                     l1450:
  4135  01D5  0873               	movf	strlen@a,w
  4136  01D6  0274               	subwf	strlen@s,w
  4137  01D7  00F0               	movwf	?_strlen
  4138  01D8  01F1               	clrf	?_strlen+1
  4139  01D9  1BF0               	btfsc	?_strlen,7
  4140  01DA  03F1               	decf	?_strlen+1,f
  4141  01DB                     l1006:
  4142  01DB  0008               	return
  4143  01DC                     __end_of_strlen:
  4144                           
  4145                           	psect	text14
  4146  0182                     __ptext14:	
  4147 ;; *************** function _TX_Command *****************
  4148 ;; Defined at:
  4149 ;;		line 118 in file "main.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  txData          1    wreg     unsigned char 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;  txData          1    1[COMMON] unsigned char 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0, pclath, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4166 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4167 ;;Total ram usage:        1 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    1
  4170 ;; This function calls:
  4171 ;;		_EUSART_Write
  4172 ;;		_EUSART_is_tx_ready
  4173 ;; This function is called by:
  4174 ;;		_TX_Whole_String
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           
  4179                           ;psect for function _TX_Command
  4180  0182                     _TX_Command:
  4181                           
  4182                           ;incstack = 0
  4183                           ; Regs used in _TX_Command: [wreg+status,2+status,0+pclath+cstack]
  4184                           ;TX_Command@txData stored from wreg
  4185  0182  00F1               	movwf	TX_Command@txData
  4186  0183                     l1730:
  4187                           
  4188                           ;main.c: 120:     if (EUSART_is_tx_ready()) {
  4189  0183  3181  2190  3181   	fcall	_EUSART_is_tx_ready
  4190  0186  3A00               	xorlw	0
  4191  0187  1903               	skipnz
  4192  0188  298A               	goto	u1181
  4193  0189  298B               	goto	u1180
  4194  018A                     u1181:
  4195  018A  298F               	goto	l241
  4196  018B                     u1180:
  4197  018B                     l1732:
  4198                           
  4199                           ;main.c: 122:         EUSART_Write(txData);
  4200  018B  0871               	movf	TX_Command@txData,w
  4201  018C  3181  216B  3181   	fcall	_EUSART_Write
  4202  018F                     l241:
  4203  018F  0008               	return
  4204  0190                     __end_of_TX_Command:
  4205                           
  4206                           	psect	text15
  4207  0190                     __ptext15:	
  4208 ;; *************** function _EUSART_is_tx_ready *****************
  4209 ;; Defined at:
  4210 ;;		line 94 in file "mcc_generated_files/eusart.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      _Bool 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4228 ;;Total ram usage:        1 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_TX_Command
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           
  4238                           ;psect for function _EUSART_is_tx_ready
  4239  0190                     _EUSART_is_tx_ready:
  4240  0190                     l1620:	
  4241                           ;incstack = 0
  4242                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  4243                           
  4244                           
  4245                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
  4246  0190  01F0               	clrf	_EUSART_is_tx_ready$250
  4247  0191                     l1622:
  4248  0191  0020               	movlb	0	; select bank0
  4249  0192  1E11               	btfss	17,4	;volatile
  4250  0193  2995               	goto	u1111
  4251  0194  2996               	goto	u1110
  4252  0195                     u1111:
  4253  0195  299D               	goto	l1628
  4254  0196                     u1110:
  4255  0196                     l1624:
  4256  0196  0023               	movlb	3	; select bank3
  4257  0197  1E9E               	btfss	30,5	;volatile
  4258  0198  299A               	goto	u1121
  4259  0199  299B               	goto	u1120
  4260  019A                     u1121:
  4261  019A  299D               	goto	l1628
  4262  019B                     u1120:
  4263  019B                     l1626:
  4264  019B  01F0               	clrf	_EUSART_is_tx_ready$250
  4265  019C  0AF0               	incf	_EUSART_is_tx_ready$250,f
  4266  019D                     l1628:
  4267  019D  0870               	movf	_EUSART_is_tx_ready$250,w
  4268  019E                     l111:
  4269  019E  0008               	return
  4270  019F                     __end_of_EUSART_is_tx_ready:
  4271                           
  4272                           	psect	text16
  4273  016B                     __ptext16:	
  4274 ;; *************** function _EUSART_Write *****************
  4275 ;; Defined at:
  4276 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  txData          1    wreg     unsigned char 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  txData          1    0[COMMON] unsigned char 
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  1    wreg      void 
  4283 ;; Registers used:
  4284 ;;		wreg
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4294 ;;Total ram usage:        1 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_TX_Command
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _EUSART_Write
  4305  016B                     _EUSART_Write:
  4306                           
  4307                           ;incstack = 0
  4308                           ; Regs used in _EUSART_Write: [wreg]
  4309                           ;EUSART_Write@txData stored from wreg
  4310  016B  00F0               	movwf	EUSART_Write@txData
  4311  016C                     l1632:
  4312  016C                     l130:	
  4313                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4314                           
  4315                           
  4316                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4317  016C  0020               	movlb	0	; select bank0
  4318  016D  1E11               	btfss	17,4	;volatile
  4319  016E  2970               	goto	u1131
  4320  016F  2971               	goto	u1130
  4321  0170                     u1131:
  4322  0170  296C               	goto	l130
  4323  0171                     u1130:
  4324  0171                     l1634:
  4325                           
  4326                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4327  0171  0870               	movf	EUSART_Write@txData,w
  4328  0172  0023               	movlb	3	; select bank3
  4329  0173  009A               	movwf	26	;volatile
  4330  0174                     l133:
  4331  0174  0008               	return
  4332  0175                     __end_of_EUSART_Write:
  4333                           
  4334                           	psect	text17
  4335  019F                     __ptext17:	
  4336 ;; *************** function _SYSTEM_Initialize *****************
  4337 ;; Defined at:
  4338 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;		None
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;		None
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      void 
  4345 ;; Registers used:
  4346 ;;		wreg, status,2, status,0, pclath, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4356 ;;Total ram usage:        0 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    2
  4359 ;; This function calls:
  4360 ;;		_ADC_Initialize
  4361 ;;		_EUSART_Initialize
  4362 ;;		_OSCILLATOR_Initialize
  4363 ;;		_PIN_MANAGER_Initialize
  4364 ;;		_WDT_Initialize
  4365 ;; This function is called by:
  4366 ;;		_main
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           
  4371                           ;psect for function _SYSTEM_Initialize
  4372  019F                     _SYSTEM_Initialize:
  4373  019F                     l1746:	
  4374                           ;incstack = 0
  4375                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4376                           
  4377                           
  4378                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4379  019F  3181  21F6  3181   	fcall	_PIN_MANAGER_Initialize
  4380                           
  4381                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4382  01A2  3181  215C  3181   	fcall	_OSCILLATOR_Initialize
  4383                           
  4384                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4385  01A5  3181  2133  3181   	fcall	_WDT_Initialize
  4386                           
  4387                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  4388  01A8  3181  2163  3181   	fcall	_ADC_Initialize
  4389                           
  4390                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  4391  01AB  3182  2212  3181   	fcall	_EUSART_Initialize
  4392  01AE                     l21:
  4393  01AE  0008               	return
  4394  01AF                     __end_of_SYSTEM_Initialize:
  4395                           
  4396                           	psect	text18
  4397  0133                     __ptext18:	
  4398 ;; *************** function _WDT_Initialize *****************
  4399 ;; Defined at:
  4400 ;;		line 70 in file "mcc_generated_files/mcc.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;		None
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;Total ram usage:        0 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_SYSTEM_Initialize
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           
  4428                           ;psect for function _WDT_Initialize
  4429  0133                     _WDT_Initialize:
  4430  0133                     l1702:	
  4431                           ;incstack = 0
  4432                           ; Regs used in _WDT_Initialize: [wreg]
  4433                           
  4434                           
  4435                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  4436  0133  3016               	movlw	22
  4437  0134  0021               	movlb	1	; select bank1
  4438  0135  0097               	movwf	23	;volatile
  4439  0136                     l27:
  4440  0136  0008               	return
  4441  0137                     __end_of_WDT_Initialize:
  4442                           
  4443                           	psect	text19
  4444  01F6                     __ptext19:	
  4445 ;; *************** function _PIN_MANAGER_Initialize *****************
  4446 ;; Defined at:
  4447 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;Total ram usage:        0 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_SYSTEM_Initialize
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           
  4475                           ;psect for function _PIN_MANAGER_Initialize
  4476  01F6                     _PIN_MANAGER_Initialize:
  4477  01F6                     l1680:	
  4478                           ;incstack = 0
  4479                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4480                           
  4481                           
  4482                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4483  01F6  0022               	movlb	2	; select bank2
  4484  01F7  018C               	clrf	12	;volatile
  4485                           
  4486                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4487  01F8  018D               	clrf	13	;volatile
  4488                           
  4489                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4490  01F9  018E               	clrf	14	;volatile
  4491  01FA                     l1682:
  4492                           
  4493                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x2F;
  4494  01FA  302F               	movlw	47
  4495  01FB  0021               	movlb	1	; select bank1
  4496  01FC  008C               	movwf	12	;volatile
  4497  01FD                     l1684:
  4498                           
  4499                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  4500  01FD  3070               	movlw	112
  4501  01FE  008D               	movwf	13	;volatile
  4502  01FF                     l1686:
  4503                           
  4504                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xE3;
  4505  01FF  30E3               	movlw	227
  4506  0200  008E               	movwf	14	;volatile
  4507  0201                     l1688:
  4508                           
  4509                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xC3;
  4510  0201  30C3               	movlw	195
  4511  0202  0023               	movlb	3	; select bank3
  4512  0203  008E               	movwf	14	;volatile
  4513  0204                     l1690:
  4514                           
  4515                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x10;
  4516  0204  3010               	movlw	16
  4517  0205  008D               	movwf	13	;volatile
  4518  0206                     l1692:
  4519                           
  4520                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  4521  0206  3007               	movlw	7
  4522  0207  008C               	movwf	12	;volatile
  4523                           
  4524                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4525  0208  0024               	movlb	4	; select bank4
  4526  0209  018D               	clrf	13	;volatile
  4527                           
  4528                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  4529  020A  018C               	clrf	12	;volatile
  4530                           
  4531                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  4532  020B  018E               	clrf	14	;volatile
  4533  020C                     l1694:
  4534                           
  4535                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  4536  020C  0021               	movlb	1	; select bank1
  4537  020D  1795               	bsf	21,7	;volatile
  4538                           
  4539                           ;mcc_generated_files/pin_manager.c: 90:     APFCON0 = 0x00;
  4540  020E  0022               	movlb	2	; select bank2
  4541  020F  019D               	clrf	29	;volatile
  4542                           
  4543                           ;mcc_generated_files/pin_manager.c: 91:     APFCON1 = 0x00;
  4544  0210  019E               	clrf	30	;volatile
  4545  0211                     l60:
  4546  0211  0008               	return
  4547  0212                     __end_of_PIN_MANAGER_Initialize:
  4548                           
  4549                           	psect	text20
  4550  015C                     __ptext20:	
  4551 ;; *************** function _OSCILLATOR_Initialize *****************
  4552 ;; Defined at:
  4553 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;		None
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;		None
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      void 
  4560 ;; Registers used:
  4561 ;;		wreg, status,2
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;Total ram usage:        0 bytes
  4572 ;; Hardware stack levels used:    1
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_SYSTEM_Initialize
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           
  4581                           ;psect for function _OSCILLATOR_Initialize
  4582  015C                     _OSCILLATOR_Initialize:
  4583  015C                     l1696:	
  4584                           ;incstack = 0
  4585                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4586                           
  4587                           
  4588                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  4589  015C  3070               	movlw	112
  4590  015D  0021               	movlb	1	; select bank1
  4591  015E  0099               	movwf	25	;volatile
  4592  015F                     l1698:
  4593                           
  4594                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  4595  015F  0198               	clrf	24	;volatile
  4596  0160                     l1700:
  4597                           
  4598                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  4599  0160  0022               	movlb	2	; select bank2
  4600  0161  0196               	clrf	22	;volatile
  4601  0162                     l24:
  4602  0162  0008               	return
  4603  0163                     __end_of_OSCILLATOR_Initialize:
  4604                           
  4605                           	psect	text21
  4606  0212                     __ptext21:	
  4607 ;; *************** function _EUSART_Initialize *****************
  4608 ;; Defined at:
  4609 ;;		line 66 in file "mcc_generated_files/eusart.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      void 
  4616 ;; Registers used:
  4617 ;;		wreg, status,2, status,0, pclath, cstack
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;Total ram usage:        0 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:    1
  4630 ;; This function calls:
  4631 ;;		_EUSART_SetErrorHandler
  4632 ;;		_EUSART_SetFramingErrorHandler
  4633 ;;		_EUSART_SetOverrunErrorHandler
  4634 ;; This function is called by:
  4635 ;;		_SYSTEM_Initialize
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           
  4640                           ;psect for function _EUSART_Initialize
  4641  0212                     _EUSART_Initialize:
  4642  0212                     l1710:	
  4643                           ;incstack = 0
  4644                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4645                           
  4646                           
  4647                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  4648  0212  3008               	movlw	8
  4649  0213  0023               	movlb	3	; select bank3
  4650  0214  009F               	movwf	31	;volatile
  4651                           
  4652                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  4653  0215  3090               	movlw	144
  4654  0216  009D               	movwf	29	;volatile
  4655                           
  4656                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  4657  0217  3024               	movlw	36
  4658  0218  009E               	movwf	30	;volatile
  4659                           
  4660                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xCF;
  4661  0219  30CF               	movlw	207
  4662  021A  009B               	movwf	27	;volatile
  4663  021B                     l1712:
  4664                           
  4665                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  4666  021B  019C               	clrf	28	;volatile
  4667  021C                     l1714:
  4668                           
  4669                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  4670  021C  3000               	movlw	0
  4671  021D  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4672  021E  3000               	movlw	0
  4673  021F  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4674  0220  3181  2143  3182   	fcall	_EUSART_SetFramingErrorHandler
  4675  0223                     l1716:
  4676                           
  4677                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  4678  0223  3000               	movlw	0
  4679  0224  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4680  0225  3000               	movlw	0
  4681  0226  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4682  0227  3181  2149  3182   	fcall	_EUSART_SetOverrunErrorHandler
  4683  022A                     l1718:
  4684                           
  4685                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  4686  022A  3000               	movlw	0
  4687  022B  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  4688  022C  3000               	movlw	0
  4689  022D  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4690  022E  3181  213D  3182   	fcall	_EUSART_SetErrorHandler
  4691  0231                     l1720:
  4692                           
  4693                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  4694  0231  0021               	movlb	1	; select bank1
  4695  0232  01AA               	clrf	_eusartRxLastError^(0+128)	;volatile
  4696  0233                     l106:
  4697  0233  0008               	return
  4698  0234                     __end_of_EUSART_Initialize:
  4699                           
  4700                           	psect	text22
  4701  0149                     __ptext22:	
  4702 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4703 ;; Defined at:
  4704 ;;		line 161 in file "mcc_generated_files/eusart.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4707 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		wreg
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4723 ;;Total ram usage:        2 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_EUSART_Initialize
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           
  4733                           ;psect for function _EUSART_SetOverrunErrorHandler
  4734  0149                     _EUSART_SetOverrunErrorHandler:
  4735  0149                     l1616:	
  4736                           ;incstack = 0
  4737                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4738                           
  4739                           
  4740                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  4741  0149  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4742  014A  0021               	movlb	1	; select bank1
  4743  014B  00EB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  4744  014C  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4745  014D  00EA               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  4746  014E                     l148:
  4747  014E  0008               	return
  4748  014F                     __end_of_EUSART_SetOverrunErrorHandler:
  4749                           
  4750                           	psect	text23
  4751  0143                     __ptext23:	
  4752 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4753 ;; Defined at:
  4754 ;;		line 157 in file "mcc_generated_files/eusart.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4757 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  1    wreg      void 
  4762 ;; Registers used:
  4763 ;;		wreg
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4773 ;;Total ram usage:        2 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; This function calls:
  4776 ;;		Nothing
  4777 ;; This function is called by:
  4778 ;;		_EUSART_Initialize
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           
  4783                           ;psect for function _EUSART_SetFramingErrorHandler
  4784  0143                     _EUSART_SetFramingErrorHandler:
  4785  0143                     l1614:	
  4786                           ;incstack = 0
  4787                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4788                           
  4789                           
  4790                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  4791  0143  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4792  0144  0021               	movlb	1	; select bank1
  4793  0145  00ED               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  4794  0146  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4795  0147  00EC               	movwf	_EUSART_FramingErrorHandler^(0+128)
  4796  0148                     l145:
  4797  0148  0008               	return
  4798  0149                     __end_of_EUSART_SetFramingErrorHandler:
  4799                           
  4800                           	psect	text24
  4801  013D                     __ptext24:	
  4802 ;; *************** function _EUSART_SetErrorHandler *****************
  4803 ;; Defined at:
  4804 ;;		line 165 in file "mcc_generated_files/eusart.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4807 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;		None
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4823 ;;Total ram usage:        2 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_EUSART_Initialize
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           
  4833                           ;psect for function _EUSART_SetErrorHandler
  4834  013D                     _EUSART_SetErrorHandler:
  4835  013D                     l1618:	
  4836                           ;incstack = 0
  4837                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4838                           
  4839                           
  4840                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  4841  013D  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4842  013E  0021               	movlb	1	; select bank1
  4843  013F  00E9               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  4844  0140  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4845  0141  00E8               	movwf	_EUSART_ErrorHandler^(0+128)
  4846  0142                     l151:
  4847  0142  0008               	return
  4848  0143                     __end_of_EUSART_SetErrorHandler:
  4849                           
  4850                           	psect	text25
  4851  0163                     __ptext25:	
  4852 ;; *************** function _ADC_Initialize *****************
  4853 ;; Defined at:
  4854 ;;		line 67 in file "mcc_generated_files/adc.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4872 ;;Total ram usage:        0 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_SYSTEM_Initialize
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           
  4882                           ;psect for function _ADC_Initialize
  4883  0163                     _ADC_Initialize:
  4884  0163                     l1704:	
  4885                           ;incstack = 0
  4886                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4887                           
  4888                           
  4889                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xA0;
  4890  0163  30A0               	movlw	160
  4891  0164  0021               	movlb	1	; select bank1
  4892  0165  009E               	movwf	30	;volatile
  4893  0166                     l1706:
  4894                           
  4895                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  4896  0166  019B               	clrf	27	;volatile
  4897  0167                     l1708:
  4898                           
  4899                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  4900  0167  019C               	clrf	28	;volatile
  4901                           
  4902                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  4903  0168  3001               	movlw	1
  4904  0169  009D               	movwf	29	;volatile
  4905  016A                     l168:
  4906  016A  0008               	return
  4907  016B                     __end_of_ADC_Initialize:
  4908                           
  4909                           	psect	text26
  4910  01AF                     __ptext26:	
  4911 ;; *************** function _ReadVoltage_ADC *****************
  4912 ;; Defined at:
  4913 ;;		line 136 in file "main.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  convertedVal    2    4[COMMON] unsigned short 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  2    2[COMMON] unsigned short 
  4920 ;; Registers used:
  4921 ;;		wreg, status,0, pclath, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;Total ram usage:        4 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    1
  4934 ;; This function calls:
  4935 ;;		_ADC_GetConversionResult
  4936 ;;		_ADC_IsConversionDone
  4937 ;; This function is called by:
  4938 ;;		_main
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           
  4943                           ;psect for function _ReadVoltage_ADC
  4944  01AF                     _ReadVoltage_ADC:
  4945  01AF                     l1754:	
  4946                           ;incstack = 0
  4947                           ; Regs used in _ReadVoltage_ADC: [wreg+status,0+pclath+cstack]
  4948                           
  4949  01AF                     l1756:	
  4950                           ;main.c: 138:     uint16_t convertedValue;;main.c: 140:     while(!ADC_IsConversionDone(
      +                          ));
  4951                           
  4952  01AF  3181  2155  3181   	fcall	_ADC_IsConversionDone
  4953  01B2  3A00               	xorlw	0
  4954  01B3  1903               	skipnz
  4955  01B4  29B6               	goto	u1201
  4956  01B5  29B7               	goto	u1200
  4957  01B6                     u1201:
  4958  01B6  29AF               	goto	l1756
  4959  01B7                     u1200:
  4960  01B7                     l1758:
  4961                           
  4962                           ;main.c: 141:     convertedValue = ADC_GetConversionResult();
  4963  01B7  3181  2137  3181   	fcall	_ADC_GetConversionResult
  4964  01BA  0871               	movf	?_ADC_GetConversionResult+1,w
  4965  01BB  00F5               	movwf	ReadVoltage_ADC@convertedValue+1
  4966  01BC  0870               	movf	?_ADC_GetConversionResult,w
  4967  01BD  00F4               	movwf	ReadVoltage_ADC@convertedValue
  4968  01BE                     l1760:
  4969                           
  4970                           ;main.c: 143:     return convertedValue;
  4971  01BE  0875               	movf	ReadVoltage_ADC@convertedValue+1,w
  4972  01BF  00F3               	movwf	?_ReadVoltage_ADC+1
  4973  01C0  0874               	movf	ReadVoltage_ADC@convertedValue,w
  4974  01C1  00F2               	movwf	?_ReadVoltage_ADC
  4975  01C2                     l250:
  4976  01C2  0008               	return
  4977  01C3                     __end_of_ReadVoltage_ADC:
  4978                           
  4979                           	psect	text27
  4980  0155                     __ptext27:	
  4981 ;; *************** function _ADC_IsConversionDone *****************
  4982 ;; Defined at:
  4983 ;;		line 100 in file "mcc_generated_files/adc.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;		None
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;		None
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      _Bool 
  4990 ;; Registers used:
  4991 ;;		wreg, status,0
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;Total ram usage:        0 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_ReadVoltage_ADC
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           
  5011                           ;psect for function _ADC_IsConversionDone
  5012  0155                     _ADC_IsConversionDone:
  5013  0155                     l1722:	
  5014                           ;incstack = 0
  5015                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  5016                           
  5017                           
  5018                           ;mcc_generated_files/adc.c: 103:    return ((_Bool)(!ADCON0bits.GO_nDONE));
  5019  0155  1003               	clrc
  5020  0156  0021               	movlb	1	; select bank1
  5021  0157  1C9D               	btfss	29,1	;volatile
  5022  0158  1403               	setc
  5023  0159  3000               	movlw	0
  5024  015A  3D09               	addwfc	9,w
  5025  015B                     l177:
  5026  015B  0008               	return
  5027  015C                     __end_of_ADC_IsConversionDone:
  5028                           
  5029                           	psect	text28
  5030  0137                     __ptext28:	
  5031 ;; *************** function _ADC_GetConversionResult *****************
  5032 ;; Defined at:
  5033 ;;		line 106 in file "mcc_generated_files/adc.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;		None
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;		None
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  2    0[COMMON] unsigned short 
  5040 ;; Registers used:
  5041 ;;		wreg
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5051 ;;Total ram usage:        2 bytes
  5052 ;; Hardware stack levels used:    1
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_ReadVoltage_ADC
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           
  5061                           ;psect for function _ADC_GetConversionResult
  5062  0137                     _ADC_GetConversionResult:
  5063  0137                     l1726:	
  5064                           ;incstack = 0
  5065                           ; Regs used in _ADC_GetConversionResult: [wreg]
  5066                           
  5067                           
  5068                           ;mcc_generated_files/adc.c: 109:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5069  0137  0021               	movlb	1	; select bank1
  5070  0138  081C               	movf	28,w	;volatile
  5071  0139  00F1               	movwf	?_ADC_GetConversionResult+1
  5072  013A  081B               	movf	27,w	;volatile
  5073  013B  00F0               	movwf	?_ADC_GetConversionResult
  5074  013C                     l180:
  5075  013C  0008               	return
  5076  013D                     __end_of_ADC_GetConversionResult:
  5077                           
  5078                           	psect	text29
  5079  0130                     __ptext29:	
  5080 ;; *************** function _ADC_StartConversion *****************
  5081 ;; Defined at:
  5082 ;;		line 93 in file "mcc_generated_files/adc.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		None
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;Total ram usage:        0 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_main
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           
  5110                           ;psect for function _ADC_StartConversion
  5111  0130                     _ADC_StartConversion:
  5112  0130                     l1752:	
  5113                           ;incstack = 0
  5114                           ; Regs used in _ADC_StartConversion: []
  5115                           
  5116                           
  5117                           ;mcc_generated_files/adc.c: 96:     ADCON0bits.GO_nDONE = 1;
  5118  0130  0021               	movlb	1	; select bank1
  5119  0131  149D               	bsf	29,1	;volatile
  5120  0132                     l174:
  5121  0132  0008               	return
  5122  0133                     __end_of_ADC_StartConversion:
  5123                           
  5124                           	psect	text30
  5125  0175                     __ptext30:	
  5126 ;; *************** function _ADC_SelectChannel *****************
  5127 ;; Defined at:
  5128 ;;		line 85 in file "mcc_generated_files/adc.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  channel         1    wreg     enum E2603
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;  channel         1    1[COMMON] enum E2603
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  1    wreg      void 
  5135 ;; Registers used:
  5136 ;;		wreg, status,2, status,0
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5143 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;Total ram usage:        2 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_main
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           
  5156                           ;psect for function _ADC_SelectChannel
  5157  0175                     _ADC_SelectChannel:
  5158                           
  5159                           ;incstack = 0
  5160                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  5161                           ;ADC_SelectChannel@channel stored from wreg
  5162  0175  00F1               	movwf	ADC_SelectChannel@channel
  5163  0176                     l1748:
  5164                           
  5165                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
  5166  0176  0871               	movf	ADC_SelectChannel@channel,w
  5167  0177  00F0               	movwf	??_ADC_SelectChannel
  5168  0178  0DF0               	rlf	??_ADC_SelectChannel,f
  5169  0179  0DF0               	rlf	??_ADC_SelectChannel,f
  5170  017A  0021               	movlb	1	; select bank1
  5171  017B  081D               	movf	29,w	;volatile
  5172  017C  0670               	xorwf	??_ADC_SelectChannel,w
  5173  017D  3983               	andlw	-125
  5174  017E  0670               	xorwf	??_ADC_SelectChannel,w
  5175  017F  009D               	movwf	29	;volatile
  5176  0180                     l1750:
  5177                           
  5178                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
  5179  0180  141D               	bsf	29,0	;volatile
  5180  0181                     l171:
  5181  0181  0008               	return
  5182  0182                     __end_of_ADC_SelectChannel:
  5183  007E                     btemp	set	126	;btemp
  5184  007E                     wtemp0	set	126
  5185                           
  5186                           	psect	idloc
  5187                           
  5188                           ;Config register IDLOC0 @ 0x8000
  5189                           ;	unspecified, using default values
  5190  8000                     	org	32768
  5191  8000  3FFF               	dw	16383
  5192                           
  5193                           ;Config register IDLOC1 @ 0x8001
  5194                           ;	unspecified, using default values
  5195  8001                     	org	32769
  5196  8001  3FFF               	dw	16383
  5197                           
  5198                           ;Config register IDLOC2 @ 0x8002
  5199                           ;	unspecified, using default values
  5200  8002                     	org	32770
  5201  8002  3FFF               	dw	16383
  5202                           
  5203                           ;Config register IDLOC3 @ 0x8003
  5204                           ;	unspecified, using default values
  5205  8003                     	org	32771
  5206  8003  3FFF               	dw	16383
  5207                           
  5208                           	psect	config
  5209                           
  5210                           ;Config register CONFIG1 @ 0x8007
  5211                           ;	Oscillator Selection
  5212                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5213                           ;	Watchdog Timer Enable
  5214                           ;	WDTE = OFF, WDT disabled
  5215                           ;	Power-up Timer Enable
  5216                           ;	PWRTE = OFF, PWRT disabled
  5217                           ;	MCLR Pin Function Select
  5218                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5219                           ;	Flash Program Memory Code Protection
  5220                           ;	CP = OFF, Program memory code protection is disabled
  5221                           ;	Data Memory Code Protection
  5222                           ;	CPD = OFF, Data memory code protection is disabled
  5223                           ;	Brown-out Reset Enable
  5224                           ;	BOREN = ON, Brown-out Reset enabled
  5225                           ;	Clock Out Enable
  5226                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5227                           ;	Internal/External Switchover
  5228                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5229                           ;	Fail-Safe Clock Monitor Enable
  5230                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5231  8007                     	org	32775
  5232  8007  3FE4               	dw	16356
  5233                           
  5234                           ;Config register CONFIG2 @ 0x8008
  5235                           ;	Flash Memory Self-Write Protection
  5236                           ;	WRT = OFF, Write protection off
  5237                           ;	PLL Enable
  5238                           ;	PLLEN = OFF, 4x PLL disabled
  5239                           ;	Stack Overflow/Underflow Reset Enable
  5240                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5241                           ;	Brown-out Reset Voltage Selection
  5242                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5243                           ;	Low-Voltage Programming Enable
  5244                           ;	LVP = ON, Low-voltage programming enabled
  5245  8008                     	org	32776
  5246  8008  3EFF               	dw	16127

Data Sizes:
    Strings     5
    Constant    4
    Data        0
    BSS         65
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80      9      78
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), Buff(BANK1[20]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), Buff(BANK1[20]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> Buff(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> Buff(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S917_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> Buff(BANK1[20]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> Buff(BANK1[20]), 

    TX_Whole_String@input_string	PTR unsigned char  size(1) Largest target is 20
		 -> Buff(BANK1[20]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _TX_Whole_String->_strlen
    _TX_Command->_EUSART_Write
    _TX_Command->_EUSART_is_tx_ready
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _ReadVoltage_ADC->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6879
                                             74 BANK0      4     4      0
                  _ADC_SelectChannel
                _ADC_StartConversion
                    _ReadVoltage_ADC
                  _SYSTEM_Initialize
                    _TX_Whole_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    6145
                                             13 COMMON     1     1      0
                                             70 BANK0      4     0      4
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5837
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5526
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4176
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2570
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _TX_Whole_String                                      6     6      0     370
                                              5 COMMON     6     6      0
                         _TX_Command
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     156
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _TX_Command                                           1     1      0      68
                                              1 COMMON     1     1      0
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadVoltage_ADC                                      4     2      2      23
                                              2 COMMON     4     2      2
            _ADC_GetConversionResult
               _ADC_IsConversionDone
 ---------------------------------------------------------------------------------
 (2) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_SelectChannel
   _ADC_StartConversion
   _ReadVoltage_ADC
     _ADC_GetConversionResult
     _ADC_IsConversionDone
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _TX_Whole_String
     _TX_Command
       _EUSART_Write
       _EUSART_is_tx_ready
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      9      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 18 12:52:20 2023

                                           l21 01AE                                             l24 0162  
                                           l27 0136                                             l60 0211  
                                          l111 019E                                            l106 0233  
                                          l130 016C                                            l133 0174  
                                          l151 0142                                            l145 0148  
                                          l241 018F                                            l250 01C2  
                                          l171 0181                                            l180 013C  
                                          l148 014E                                            l500 0676  
                                          l237 02E2                                            l501 0687  
                                          l174 0132                                            l168 016A  
                                          l177 015B                                            l513 0575  
                                          l514 0586                                            l903 06F9  
                                          l904 070F                                            l921 07F1  
                                          l907 077E                                            l942 01F5  
                                          l935 02B0                                            l863 0257  
                                          l928 049C                                            l954 0369  
                                          l962 027F                                            l890 0384  
                                          l939 01F5                                            l965 012F  
                                          l893 03A6                                            l895 03BF  
                                          l898 06D1                                            l899 06DB  
                                          u710 05BD                                            u630 0320  
                                          u711 05BC                                            u631 031F  
                                          u800 04A8                                            u640 0325  
                                          u801 04A7                                            u641 0324  
                                          u730 05E7                                            u650 0334  
                                          u651 0333                                            u740 05F7  
                                          u820 04D3                                            u660 0351  
                                          u900 0370                                            u741 05F6  
                                          u821 04D2                                            u661 0350  
                                          u901 036F                                            u670 01D5  
                                          u750 060A                                            u910 037D  
                                          u671 01D4                                            u751 0609  
                                          u911 037C                                            u760 0634  
                                          u840 04FF                                            u680 027F  
                                          u920 03A6                                            u761 0633  
                                          u841 04FE                                            u665 034D  
                                          u681 027E                                            u921 03A5  
                                          u770 0653                                            u690 0592  
                                          u850 0512                                            u930 03AB  
                                          u771 0652                                            u691 0591  
                                          u851 0511                                            u931 03AA  
                                          u780 0658                                            u860 0534  
                                          u940 01E9                                            u781 0657  
                                          u765 0630                                            u861 0533  
                                          u941 01E8                                            u925 03A2  
                                          u870 0552                                            u950 06A5  
                                          u871 0551                                            u951 06A3  
                                          u880 0557                                            u960 06A6  
                                          u881 0556                                            u865 0530  
                                          u945 01E5                                            u970 06B3  
                                          u971 06B2                                            u990 06D6  
                                          u991 06D5                                            _abs 01DC  
                                          _pad 036A                 ?_EUSART_SetFramingErrorHandler 0070  
                                          wreg 0009                                           l1006 01DB  
                                         ?_abs 0073                                           l1500 049D  
                                         l1510 04F2                                           l1502 049E  
                                         l1430 0320                                           l1520 0512  
                                         l1512 04FF                                           l1504 04A8  
                                         l1440 0361                                           l1432 0325  
                                         l1600 07C4                                           l1450 01D5  
                                         l1522 0534                                           l1514 0502  
                                         l1506 04C9                                           l1434 032A  
                                         l1530 036C                                           l1602 07C8  
                                         l1610 07DF                                           l1700 0160  
                                         l1620 0190                                           l1444 01C4  
                                         l1524 0544                                           l1516 050A  
                                         l1508 04D3                                           l1436 0334  
                                         l1428 031B                                           l1460 0270  
                                         l1540 0387                                           l1532 0370  
                                         l1604 07CE                                           l1614 0143  
                                         l1710 0212                                           l1702 0133  
                                         l1622 0191                                           l1446 01C9  
                                         l1470 05BD                                           l1462 0587  
                                         l1518 050E                                           l1526 0552  
                                         l1438 0351                                           l1454 025A  
                                         l1542 0393                                           l1534 0378  
                                         l1606 07D3                                           l1704 0163  
                                         l1616 0149                                           l1720 0231  
                                         l1712 021B                                           l1632 016C  
                                         l1624 0196                                           l1448 01CD  
                                         l1480 05FA                                           l1472 05DC  
                                         l1464 0588                                           l1528 0557  
                                         l1552 01DC                                           l1456 025D  
                                         l1544 0398                                           l1536 037D  
                                         l1608 07D7                                           l1560 06AD  
                                         l1640 03DB                                           l1722 0155  
                                         l1706 0166                                           l1618 013D  
                                         l1714 021C                                           l1634 0171  
                                         l1626 019B                                           l1730 0183  
                                         l1490 0634                                           l1482 0602  
                                         l1474 05E0                                           l1466 0592  
                                         l1554 01E9                                           l1458 026B  
                                         l1546 03AB                                           l1538 0382  
                                         l1570 0701                                           l1562 06B3  
                                         l1650 0411                                           l1642 03E1  
                                         l1810 02EC                                           l1802 02E3  
                                         l1708 0167                                           l1716 0223  
                                         l1628 019D                                           l1732 018B  
                                         l1492 0644                                           l1484 0606  
                                         l1476 05EA                                           l1468 05B3  
                                         l1548 03B3                                           l1580 071B  
                                         l1572 0707                                           l1564 06D6  
                                         l1556 068A                                           l1660 045D  
                                         l1652 042A                                           l1644 03E6  
                                         l1636 03C2                                           l1740 029E  
                                         l1812 02EF                                           l1804 02E6  
                                         l1750 0180                                           l1726 0137  
                                         l1718 022A                                           l1494 0645  
                                         l1486 060A                                           l1478 05F7  
                                         l1590 0799                                           l1582 0749  
                                         l1574 070B                                           l1566 06EB  
                                         l1558 069A                                           l1662 0468  
                                         l1646 03F8                                           l1638 03D3  
                                         l1742 02A8                                           l1734 0282  
                                         l1814 02FB                                           l1806 02E8  
                                         l1752 0130                                           l1760 01BE  
                                         l1680 01F6                                           l1488 0612  
                                         l1496 0653                                           l1592 07A6  
                                         l1584 074D                                           l1576 0713  
                                         l1568 06F1                                           l1656 0444  
                                         l1648 0409                                           l1672 0479  
                                         l1736 0286                                           l1816 0307  
                                         l1808 02E8                                           l1754 01AF  
                                         l1690 0204                                           l1682 01FA  
                                         l1746 019F                                           l1498 0658  
                                         l1594 07B4                                           l1586 0751  
                                         l1578 0716                                           l1674 0492  
                                         l1658 0455                                           l1666 046E  
                                         l1738 028A                                           l1770 0242  
                                         l1818 030B                                           l1748 0176  
                                         l1756 01AF                                           l1692 0206  
                                         l1684 01FD                                           l1780 02BC  
                                         l1588 078C                                           l1596 07B9  
                                         l1668 0476                                           l1772 024F  
                                         l1764 0236                                           l1758 01B7  
                                         l1694 020C                                           l1686 01FF  
                                         l1782 02C6                                           l1598 07C0  
                                         l1766 023E                                           l1696 015C  
                                         l1688 0201                                           l1784 02CD  
                                         l1776 02B2                                           l1768 0240  
                                         l1698 015F                                           l1786 02D1  
                                         l1778 02BA                                           l1788 02DE  
                                         ?_pad 0024                                           STR_1 0800  
                                         u1000 06EB                                           u1001 06EA  
                                         u1010 0707                                           u1011 0706  
                                         u1100 07CE                                           u1020 070B  
                                         u1101 07CD                                           u1021 070A  
                                         u1005 06E7                                           u1110 0196  
                                         u1030 078C                                           u1111 0195  
                                         u1031 078B                                           u1200 01B7  
                                         u1120 019B                                           u1040 0799  
                                         u1201 01B6                                           u1121 019A  
                                         u1041 0798                                           u1130 0171  
                                         u1210 02DE                                           u1050 07A6  
                                         u1131 0170                                           u1211 02DD  
                                         u1051 07A5                                           u1035 0788  
                                         u1060 07B4                                           u1140 03D3  
                                         u1061 07B3                                           u1141 03D2  
                                         u1070 07B9                                           u1150 03F8  
                                         u1215 02DA                                           u1071 07B8  
                                         u1055 07A2                                           u1151 03F7  
                                         u1080 07C0                                           u1160 0409  
                                         u1081 07BF                                           u1065 07B0  
                                         u1161 0408                                           u1090 07C4  
                                         u1170 0455                                           u1091 07C3  
                                         u1171 0454                                           u1180 018B  
                                         u1181 018A                                           _LATA 010C  
                                         u1190 02A8                                           _LATB 010D  
                                         u1191 02A7                                           u1247 0311  
                                         _LATC 010E                                           u1257 02C9  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                           _Buff 00CB  
                                         abs@a 0073                                           _dbuf 00AB  
                                         _main 02E3                                           _dtoa 0688  
                                         _prec 00A6                                           _nout 00A2  
                                         pad@i 0027                                           pad@p 0025  
                                         fsr0h 0005                                           _tiny 0805  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 0029  
                TX_Whole_String@size_of_string 0077                                           btemp 007E  
                                         start 0002                                          ??_abs 0075  
                                        ??_pad 007C                                     _TX_Command 0182  
                              _TX_Whole_String 02B1                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 0163  
                              __end_of___aodiv 0688                                          ?_main 0070  
                                        ?_dtoa 0030                                __end_of___aomod 0587  
                                        _RCREG 0199                                          _RCSTA 019D  
                                 vfpfcnvrt@fmt 004E                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TXREG 019A                                          _TXSTA 019E  
             __size_of_ADC_GetConversionResult 0006                                          u70lld 05B1  
                                        u72lld 05DC                                          u81lld 04C7  
                                        u83lld 04F2                                          u79lld 0676  
                                        u89lld 0575                                          u98lld 06D1  
                                        _flags 006E                                 _WDT_Initialize 0133  
                                        _errno 00A0                                          _fputc 031B  
                                        _fputs 0258                                          pad@fp 002B  
                                        _width 00A4                                          _putch 012F  
                                        dtoa@d 0030                                          dtoa@i 004C  
                                        dtoa@n 0044                                          dtoa@p 003E  
                                        dtoa@s 0042                                          dtoa@w 0040  
                                        status 0003                                          wtemp0 007E  
                              __end_of_sprintf 0258                                __initialization 07F2  
                  TX_Whole_String@input_string 0079                                   __end_of_main 031B  
                                 __end_of_dtoa 07F2                                   __end_of_tiny 0809  
                               ??_EUSART_Write 0070                                         ??_main 006A  
                                       ??_dtoa 0038                         __end_of_WDT_Initialize 0137  
                __size_of_ADC_IsConversionDone 0007              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 00EA                                         ?_fputc 0070  
                                       ?_fputs 0078                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _BORCON 0116  
                   __end_of_EUSART_is_tx_ready 019F                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                        __end_of_TX_Whole_String 02E3  
                                 vfprintf@cfmt 0064                                      ??___aodiv 0070  
                                    ??___aomod 0070                               TX_Command@txData 0071  
                     __size_of_ReadVoltage_ADC 0014                                    ?_TX_Command 0070  
                                       pad@buf 0024                                         dtoa@fp 003D  
                                       _strlen 01C3                                         fputc@c 0070  
                                       fputs@c 0020                                         fputs@i 0021  
                                       fputs@s 0023                                ?_WDT_Initialize 0070  
                                       putch@c 0070                               __end_of_vfprintf 02B1  
                                    ??_sprintf 007D                              _SYSTEM_Initialize 019F  
                      __end_of__initialization 07FD                             ?_SYSTEM_Initialize 0070  
                 __size_of_ADC_StartConversion 0003                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0072                                  __end_of_fputc 036A  
                                __end_of_fputs 0280                                  __end_of_putch 0130  
                      _ADC_GetConversionResult 0137                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0072                                        ??_fputc 0073  
                    __end_of_SYSTEM_Initialize 01AF                                        ??_fputs 0079  
                                      ??_putch 0070                                     __pbssBANK0 006E  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0175  
                          __size_of_TX_Command 000E                               ?_TX_Whole_String 0070  
                                   __pmaintext 02E3                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                      __size_of_ADC_Initialize 0008                                        ?_strlen 0070  
                            ??_ReadVoltage_ADC 0074                             __size_of_vfpfcnvrt 00DD  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0072  
                         _ADC_InterruptHandler 00A8                                        ___aodiv 0587  
                                      ___aomod 049D                                      ?_vfprintf 005E  
                    ??_ADC_GetConversionResult 0072                                        __ptext1 0234  
                                      __ptext2 0280                                        __ptext3 03C0  
                                      __ptext4 0688                                        __ptext5 036A  
                                      __ptext6 0258                                        __ptext7 031B  
                                      __ptext8 012F                                        __ptext9 01DC  
                              __size_of_strlen 0019                          _OSCILLATOR_Initialize 015C  
                                 __size_of_abs 001A                                   __size_of_pad 0056  
                     ??_PIN_MANAGER_Initialize 0070                     __size_of_SYSTEM_Initialize 0010  
                                      _sprintf 0234                                        clrloop0 0150  
                         end_of_initialization 07FD          __end_of_EUSART_SetOverrunErrorHandler 014F  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0149  
                                      fputc@fp 0072                                        fputs@fp 0078  
                            _EUSART_Initialize 0212                   __end_of_ADC_IsConversionDone 015C  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 049D  
                                    _RCSTAbits 019D                             _EUSART_is_tx_ready 0190  
                                   ??_vfprintf 0061                                   ??_TX_Command 0071  
                             TX_Whole_String@i 007A                                        strlen@a 0073  
                                      strlen@s 0074                            ??_EUSART_Initialize 0072  
                             ??_WDT_Initialize 0070                            ?_EUSART_is_tx_ready 0070  
                        __size_of_EUSART_Write 000A                            _ADC_StartConversion 0130  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 0234  
                           __end_of_TX_Command 0190                           ??_EUSART_is_tx_ready 0070  
                                    _TXSTAbits 019E                           ?_ADC_StartConversion 0070  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 004F  
                                  vfpfcnvrt@fp 005D                                    vfpfcnvrt@ll 0055  
                                 _EUSART_Write 016B                                 _ADC_Initialize 0163  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_strlen 01DC  
                          start_initialization 07F2                __size_of_PIN_MANAGER_Initialize 001C  
                                  __end_of_abs 01F6                                    __end_of_pad 03C0  
                       _EUSART_is_tx_ready$250 0070                 ?_EUSART_SetOverrunErrorHandler 0070  
                        ??_ADC_StartConversion 0070                                    vfprintf@fmt 005E  
                   _EUSART_FramingErrorHandler 00EC                                _ReadVoltage_ADC 01AF  
                       _EUSART_SetErrorHandler 013D                         __end_of_ADC_Initialize 016B  
                                     ??_strlen 0072                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00DF  
                             ___aodiv@dividend 0028                           _ADC_IsConversionDone 0155  
                   __size_of_EUSART_Initialize 0022                                      __pnvBANK1 00E8  
                       _PIN_MANAGER_Initialize 01F6                              _ADC_SelectChannel 0175  
                                     ?___aodiv 0020                                       ?___aomod 0020  
                             ___aodiv@quotient 0073                                ?_ADC_Initialize 0070  
                           ?_ADC_SelectChannel 0070                       __size_of_TX_Whole_String 0032  
                            __size_of_vfprintf 0031                            ??_ADC_SelectChannel 0070  
                        ?_ADC_IsConversionDone 0070                                       ?_sprintf 0066  
                               __size_of_fputc 004F                                 __size_of_fputs 0028  
                               __size_of_putch 0001                        __end_of_ReadVoltage_ADC 01C3  
       EUSART_SetErrorHandler@interruptHandler 0070                                       _LATCbits 010E  
                                    clear_ram0 014F                              _eusartRxLastError 00AA  
                    __end_of_ADC_SelectChannel 0182                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072              _EUSART_DefaultOverrunErrorHandler 0000  
                                    _vfpfcnvrt 03C0                                      main@V_ADC 006C  
                                   _ADCON0bits 009D                       ADC_SelectChannel@channel 0071  
                                   vfprintf@ap 0060                                     vfprintf@fp 0063  
                     ?_ADC_GetConversionResult 0070                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 00E8                               __size_of___aodiv 0101  
                             __size_of___aomod 00EA                                     ?_vfpfcnvrt 004E  
                              ___aodiv@divisor 0020                                ___aodiv@counter 0071  
                       ??_ADC_IsConversionDone 0070                                     sprintf@fmt 0066  
                                     _dtoa$986 003B                              ??_TX_Whole_String 0075  
                                     __ptext10 049D                                       __ptext11 0587  
                                     __ptext20 015C                                       __ptext12 02B1  
                                     __ptext21 0212                                       __ptext13 01C3  
                                     __ptext30 0175                                       __ptext22 0149  
                                     __ptext14 0182                                       __ptext23 0143  
                                     __ptext15 0190                                       __ptext24 013D  
                                     __ptext16 016B                                       __ptext25 0163  
                                     __ptext17 019F                                       __ptext26 01AF  
                                     __ptext18 0133                                       __ptext27 0155  
                                     __ptext19 01F6                                       __ptext28 0137  
                                     __ptext29 0130                               __size_of_sprintf 0024  
                                __size_of_main 0038                                  __size_of_dtoa 016A  
                             ?_ReadVoltage_ADC 0072                    __size_of_EUSART_is_tx_ready 000F  
                      ?_EUSART_SetErrorHandler 0070                     __size_of_ADC_SelectChannel 000D  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                       _vfprintf 0280  
        __end_of_EUSART_SetFramingErrorHandler 0149         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0143                               ___aomod@dividend 0028  
                      __size_of_WDT_Initialize 0004                                      sprintf@ap 00E1  
                  __end_of_ADC_StartConversion 0133                        ?_PIN_MANAGER_Initialize 0070  
              __end_of_ADC_GetConversionResult 013D                 __end_of_EUSART_SetErrorHandler 0143  
                             ??_ADC_Initialize 0070  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                              ___aomod@divisor 0020                                    ??_vfpfcnvrt 0050  
                              ___aomod@counter 0071                                  __pstringtext1 0805  
                                __pstringtext2 0800                                  __pstringtext3 0000  
                                     sprintf@f 00E3                                       sprintf@s 00E2  
                ReadVoltage_ADC@convertedValue 0074                             EUSART_Write@txData 0070  
                                 ___aodiv@sign 0072                 __end_of_PIN_MANAGER_Initialize 0212  
                                 ___aomod@sign 0072  
