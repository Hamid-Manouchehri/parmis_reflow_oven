

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jul 23 22:04:09 2023

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,delta=2,group=1
    95                           	psect	text77,local,class=CODE,merge=1,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text79,local,class=CODE,merge=1,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,delta=2
    99                           	psect	intentry,global,class=CODE,delta=2
   100                           	psect	text82,local,class=CODE,merge=1,delta=2
   101                           	psect	text83,local,class=CODE,merge=1,delta=2
   102                           	psect	text84,local,class=CODE,merge=1,delta=2
   103                           	psect	text85,local,class=CODE,merge=1,delta=2
   104                           	psect	text86,local,class=CODE,merge=1,delta=2
   105                           	psect	text87,local,class=CODE,merge=1,delta=2
   106                           	psect	text88,local,class=CODE,merge=1,delta=2
   107                           	psect	text89,local,class=CODE,merge=1,delta=2
   108                           	psect	text90,local,class=CODE,merge=1,delta=2
   109                           	psect	text91,local,class=CODE,merge=1,delta=2
   110                           	psect	text92,local,class=CODE,merge=1,delta=2
   111                           	psect	text93,local,class=CODE,merge=1,delta=2
   112                           	psect	text94,local,class=CODE,merge=1,delta=2
   113                           	psect	text95,local,class=CODE,merge=1,delta=2
   114                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   115                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   116                           	dabs	1,0x7E,2
   117  0000                     
   118                           ; Version 2.40
   119                           ; Generated 17/11/2021 GMT
   120                           ; 
   121                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   122                           ; All rights reserved.
   123                           ; 
   124                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   125                           ; 
   126                           ; Redistribution and use in source and binary forms, with or without modification, are
   127                           ; permitted provided that the following conditions are met:
   128                           ; 
   129                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   130                           ;        conditions and the following disclaimer.
   131                           ; 
   132                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   133                           ;        of conditions and the following disclaimer in the documentation and/or other
   134                           ;        materials provided with the distribution. Publication is not required when
   135                           ;        this file is used in an embedded application.
   136                           ; 
   137                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   138                           ;        software without specific prior written permission.
   139                           ; 
   140                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   141                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   142                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   143                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   144                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   145                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   146                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   147                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   148                           ; 
   149                           ; 
   150                           ; Code-generator required, PIC16F1829 Definitions
   151                           ; 
   152                           ; SFR Addresses
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  0111                     	;# 
   205  0112                     	;# 
   206  0113                     	;# 
   207  0114                     	;# 
   208  0115                     	;# 
   209  0116                     	;# 
   210  0117                     	;# 
   211  0118                     	;# 
   212  0119                     	;# 
   213  011A                     	;# 
   214  011B                     	;# 
   215  011D                     	;# 
   216  011E                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  018E                     	;# 
   220  0191                     	;# 
   221  0191                     	;# 
   222  0192                     	;# 
   223  0193                     	;# 
   224  0193                     	;# 
   225  0193                     	;# 
   226  0194                     	;# 
   227  0195                     	;# 
   228  0196                     	;# 
   229  0199                     	;# 
   230  019A                     	;# 
   231  019B                     	;# 
   232  019B                     	;# 
   233  019C                     	;# 
   234  019D                     	;# 
   235  019E                     	;# 
   236  019F                     	;# 
   237  020C                     	;# 
   238  020D                     	;# 
   239  020E                     	;# 
   240  0211                     	;# 
   241  0211                     	;# 
   242  0212                     	;# 
   243  0212                     	;# 
   244  0213                     	;# 
   245  0213                     	;# 
   246  0214                     	;# 
   247  0214                     	;# 
   248  0215                     	;# 
   249  0215                     	;# 
   250  0215                     	;# 
   251  0216                     	;# 
   252  0216                     	;# 
   253  0217                     	;# 
   254  0217                     	;# 
   255  0219                     	;# 
   256  021A                     	;# 
   257  021B                     	;# 
   258  021C                     	;# 
   259  021D                     	;# 
   260  021E                     	;# 
   261  021F                     	;# 
   262  0291                     	;# 
   263  0291                     	;# 
   264  0292                     	;# 
   265  0293                     	;# 
   266  0294                     	;# 
   267  0295                     	;# 
   268  0295                     	;# 
   269  0296                     	;# 
   270  0298                     	;# 
   271  0298                     	;# 
   272  0299                     	;# 
   273  029A                     	;# 
   274  029B                     	;# 
   275  029C                     	;# 
   276  029D                     	;# 
   277  029E                     	;# 
   278  0311                     	;# 
   279  0311                     	;# 
   280  0312                     	;# 
   281  0313                     	;# 
   282  0318                     	;# 
   283  0318                     	;# 
   284  0319                     	;# 
   285  031A                     	;# 
   286  038C                     	;# 
   287  038D                     	;# 
   288  038E                     	;# 
   289  0391                     	;# 
   290  0392                     	;# 
   291  0393                     	;# 
   292  0394                     	;# 
   293  0395                     	;# 
   294  0396                     	;# 
   295  039A                     	;# 
   296  039C                     	;# 
   297  039D                     	;# 
   298  039E                     	;# 
   299  039F                     	;# 
   300  0415                     	;# 
   301  0416                     	;# 
   302  0417                     	;# 
   303  041C                     	;# 
   304  041D                     	;# 
   305  041E                     	;# 
   306  0FE4                     	;# 
   307  0FE5                     	;# 
   308  0FE6                     	;# 
   309  0FE7                     	;# 
   310  0FE8                     	;# 
   311  0FE9                     	;# 
   312  0FEA                     	;# 
   313  0FEB                     	;# 
   314  0FED                     	;# 
   315  0FEE                     	;# 
   316  0FEF                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  0008                     	;# 
   326  0009                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000D                     	;# 
   331  000E                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  0111                     	;# 
   369  0112                     	;# 
   370  0113                     	;# 
   371  0114                     	;# 
   372  0115                     	;# 
   373  0116                     	;# 
   374  0117                     	;# 
   375  0118                     	;# 
   376  0119                     	;# 
   377  011A                     	;# 
   378  011B                     	;# 
   379  011D                     	;# 
   380  011E                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  018E                     	;# 
   384  0191                     	;# 
   385  0191                     	;# 
   386  0192                     	;# 
   387  0193                     	;# 
   388  0193                     	;# 
   389  0193                     	;# 
   390  0194                     	;# 
   391  0195                     	;# 
   392  0196                     	;# 
   393  0199                     	;# 
   394  019A                     	;# 
   395  019B                     	;# 
   396  019B                     	;# 
   397  019C                     	;# 
   398  019D                     	;# 
   399  019E                     	;# 
   400  019F                     	;# 
   401  020C                     	;# 
   402  020D                     	;# 
   403  020E                     	;# 
   404  0211                     	;# 
   405  0211                     	;# 
   406  0212                     	;# 
   407  0212                     	;# 
   408  0213                     	;# 
   409  0213                     	;# 
   410  0214                     	;# 
   411  0214                     	;# 
   412  0215                     	;# 
   413  0215                     	;# 
   414  0215                     	;# 
   415  0216                     	;# 
   416  0216                     	;# 
   417  0217                     	;# 
   418  0217                     	;# 
   419  0219                     	;# 
   420  021A                     	;# 
   421  021B                     	;# 
   422  021C                     	;# 
   423  021D                     	;# 
   424  021E                     	;# 
   425  021F                     	;# 
   426  0291                     	;# 
   427  0291                     	;# 
   428  0292                     	;# 
   429  0293                     	;# 
   430  0294                     	;# 
   431  0295                     	;# 
   432  0295                     	;# 
   433  0296                     	;# 
   434  0298                     	;# 
   435  0298                     	;# 
   436  0299                     	;# 
   437  029A                     	;# 
   438  029B                     	;# 
   439  029C                     	;# 
   440  029D                     	;# 
   441  029E                     	;# 
   442  0311                     	;# 
   443  0311                     	;# 
   444  0312                     	;# 
   445  0313                     	;# 
   446  0318                     	;# 
   447  0318                     	;# 
   448  0319                     	;# 
   449  031A                     	;# 
   450  038C                     	;# 
   451  038D                     	;# 
   452  038E                     	;# 
   453  0391                     	;# 
   454  0392                     	;# 
   455  0393                     	;# 
   456  0394                     	;# 
   457  0395                     	;# 
   458  0396                     	;# 
   459  039A                     	;# 
   460  039C                     	;# 
   461  039D                     	;# 
   462  039E                     	;# 
   463  039F                     	;# 
   464  0415                     	;# 
   465  0416                     	;# 
   466  0417                     	;# 
   467  041C                     	;# 
   468  041D                     	;# 
   469  041E                     	;# 
   470  0FE4                     	;# 
   471  0FE5                     	;# 
   472  0FE6                     	;# 
   473  0FE7                     	;# 
   474  0FE8                     	;# 
   475  0FE9                     	;# 
   476  0FEA                     	;# 
   477  0FEB                     	;# 
   478  0FED                     	;# 
   479  0FEE                     	;# 
   480  0FEF                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  0011                     	;# 
   497  0012                     	;# 
   498  0013                     	;# 
   499  0014                     	;# 
   500  0015                     	;# 
   501  0016                     	;# 
   502  0016                     	;# 
   503  0017                     	;# 
   504  0018                     	;# 
   505  0019                     	;# 
   506  001A                     	;# 
   507  001B                     	;# 
   508  001C                     	;# 
   509  001E                     	;# 
   510  001F                     	;# 
   511  008C                     	;# 
   512  008D                     	;# 
   513  008E                     	;# 
   514  0091                     	;# 
   515  0092                     	;# 
   516  0093                     	;# 
   517  0094                     	;# 
   518  0095                     	;# 
   519  0096                     	;# 
   520  0097                     	;# 
   521  0098                     	;# 
   522  0099                     	;# 
   523  009A                     	;# 
   524  009B                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  010C                     	;# 
   530  010D                     	;# 
   531  010E                     	;# 
   532  0111                     	;# 
   533  0112                     	;# 
   534  0113                     	;# 
   535  0114                     	;# 
   536  0115                     	;# 
   537  0116                     	;# 
   538  0117                     	;# 
   539  0118                     	;# 
   540  0119                     	;# 
   541  011A                     	;# 
   542  011B                     	;# 
   543  011D                     	;# 
   544  011E                     	;# 
   545  018C                     	;# 
   546  018D                     	;# 
   547  018E                     	;# 
   548  0191                     	;# 
   549  0191                     	;# 
   550  0192                     	;# 
   551  0193                     	;# 
   552  0193                     	;# 
   553  0193                     	;# 
   554  0194                     	;# 
   555  0195                     	;# 
   556  0196                     	;# 
   557  0199                     	;# 
   558  019A                     	;# 
   559  019B                     	;# 
   560  019B                     	;# 
   561  019C                     	;# 
   562  019D                     	;# 
   563  019E                     	;# 
   564  019F                     	;# 
   565  020C                     	;# 
   566  020D                     	;# 
   567  020E                     	;# 
   568  0211                     	;# 
   569  0211                     	;# 
   570  0212                     	;# 
   571  0212                     	;# 
   572  0213                     	;# 
   573  0213                     	;# 
   574  0214                     	;# 
   575  0214                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0215                     	;# 
   579  0216                     	;# 
   580  0216                     	;# 
   581  0217                     	;# 
   582  0217                     	;# 
   583  0219                     	;# 
   584  021A                     	;# 
   585  021B                     	;# 
   586  021C                     	;# 
   587  021D                     	;# 
   588  021E                     	;# 
   589  021F                     	;# 
   590  0291                     	;# 
   591  0291                     	;# 
   592  0292                     	;# 
   593  0293                     	;# 
   594  0294                     	;# 
   595  0295                     	;# 
   596  0295                     	;# 
   597  0296                     	;# 
   598  0298                     	;# 
   599  0298                     	;# 
   600  0299                     	;# 
   601  029A                     	;# 
   602  029B                     	;# 
   603  029C                     	;# 
   604  029D                     	;# 
   605  029E                     	;# 
   606  0311                     	;# 
   607  0311                     	;# 
   608  0312                     	;# 
   609  0313                     	;# 
   610  0318                     	;# 
   611  0318                     	;# 
   612  0319                     	;# 
   613  031A                     	;# 
   614  038C                     	;# 
   615  038D                     	;# 
   616  038E                     	;# 
   617  0391                     	;# 
   618  0392                     	;# 
   619  0393                     	;# 
   620  0394                     	;# 
   621  0395                     	;# 
   622  0396                     	;# 
   623  039A                     	;# 
   624  039C                     	;# 
   625  039D                     	;# 
   626  039E                     	;# 
   627  039F                     	;# 
   628  0415                     	;# 
   629  0416                     	;# 
   630  0417                     	;# 
   631  041C                     	;# 
   632  041D                     	;# 
   633  041E                     	;# 
   634  0FE4                     	;# 
   635  0FE5                     	;# 
   636  0FE6                     	;# 
   637  0FE7                     	;# 
   638  0FE8                     	;# 
   639  0FE9                     	;# 
   640  0FEA                     	;# 
   641  0FEB                     	;# 
   642  0FED                     	;# 
   643  0FEE                     	;# 
   644  0FEF                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0008                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001E                     	;# 
   674  001F                     	;# 
   675  008C                     	;# 
   676  008D                     	;# 
   677  008E                     	;# 
   678  0091                     	;# 
   679  0092                     	;# 
   680  0093                     	;# 
   681  0094                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0097                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009A                     	;# 
   688  009B                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  010C                     	;# 
   694  010D                     	;# 
   695  010E                     	;# 
   696  0111                     	;# 
   697  0112                     	;# 
   698  0113                     	;# 
   699  0114                     	;# 
   700  0115                     	;# 
   701  0116                     	;# 
   702  0117                     	;# 
   703  0118                     	;# 
   704  0119                     	;# 
   705  011A                     	;# 
   706  011B                     	;# 
   707  011D                     	;# 
   708  011E                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  018E                     	;# 
   712  0191                     	;# 
   713  0191                     	;# 
   714  0192                     	;# 
   715  0193                     	;# 
   716  0193                     	;# 
   717  0193                     	;# 
   718  0194                     	;# 
   719  0195                     	;# 
   720  0196                     	;# 
   721  0199                     	;# 
   722  019A                     	;# 
   723  019B                     	;# 
   724  019B                     	;# 
   725  019C                     	;# 
   726  019D                     	;# 
   727  019E                     	;# 
   728  019F                     	;# 
   729  020C                     	;# 
   730  020D                     	;# 
   731  020E                     	;# 
   732  0211                     	;# 
   733  0211                     	;# 
   734  0212                     	;# 
   735  0212                     	;# 
   736  0213                     	;# 
   737  0213                     	;# 
   738  0214                     	;# 
   739  0214                     	;# 
   740  0215                     	;# 
   741  0215                     	;# 
   742  0215                     	;# 
   743  0216                     	;# 
   744  0216                     	;# 
   745  0217                     	;# 
   746  0217                     	;# 
   747  0219                     	;# 
   748  021A                     	;# 
   749  021B                     	;# 
   750  021C                     	;# 
   751  021D                     	;# 
   752  021E                     	;# 
   753  021F                     	;# 
   754  0291                     	;# 
   755  0291                     	;# 
   756  0292                     	;# 
   757  0293                     	;# 
   758  0294                     	;# 
   759  0295                     	;# 
   760  0295                     	;# 
   761  0296                     	;# 
   762  0298                     	;# 
   763  0298                     	;# 
   764  0299                     	;# 
   765  029A                     	;# 
   766  029B                     	;# 
   767  029C                     	;# 
   768  029D                     	;# 
   769  029E                     	;# 
   770  0311                     	;# 
   771  0311                     	;# 
   772  0312                     	;# 
   773  0313                     	;# 
   774  0318                     	;# 
   775  0318                     	;# 
   776  0319                     	;# 
   777  031A                     	;# 
   778  038C                     	;# 
   779  038D                     	;# 
   780  038E                     	;# 
   781  0391                     	;# 
   782  0392                     	;# 
   783  0393                     	;# 
   784  0394                     	;# 
   785  0395                     	;# 
   786  0396                     	;# 
   787  039A                     	;# 
   788  039C                     	;# 
   789  039D                     	;# 
   790  039E                     	;# 
   791  039F                     	;# 
   792  0415                     	;# 
   793  0416                     	;# 
   794  0417                     	;# 
   795  041C                     	;# 
   796  041D                     	;# 
   797  041E                     	;# 
   798  0FE4                     	;# 
   799  0FE5                     	;# 
   800  0FE6                     	;# 
   801  0FE7                     	;# 
   802  0FE8                     	;# 
   803  0FE9                     	;# 
   804  0FEA                     	;# 
   805  0FEB                     	;# 
   806  0FED                     	;# 
   807  0FEE                     	;# 
   808  0FEF                     	;# 
   809  0000                     	;# 
   810  0001                     	;# 
   811  0002                     	;# 
   812  0003                     	;# 
   813  0004                     	;# 
   814  0005                     	;# 
   815  0006                     	;# 
   816  0007                     	;# 
   817  0008                     	;# 
   818  0009                     	;# 
   819  000A                     	;# 
   820  000B                     	;# 
   821  000C                     	;# 
   822  000D                     	;# 
   823  000E                     	;# 
   824  0011                     	;# 
   825  0012                     	;# 
   826  0013                     	;# 
   827  0014                     	;# 
   828  0015                     	;# 
   829  0016                     	;# 
   830  0016                     	;# 
   831  0017                     	;# 
   832  0018                     	;# 
   833  0019                     	;# 
   834  001A                     	;# 
   835  001B                     	;# 
   836  001C                     	;# 
   837  001E                     	;# 
   838  001F                     	;# 
   839  008C                     	;# 
   840  008D                     	;# 
   841  008E                     	;# 
   842  0091                     	;# 
   843  0092                     	;# 
   844  0093                     	;# 
   845  0094                     	;# 
   846  0095                     	;# 
   847  0096                     	;# 
   848  0097                     	;# 
   849  0098                     	;# 
   850  0099                     	;# 
   851  009A                     	;# 
   852  009B                     	;# 
   853  009B                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  010C                     	;# 
   858  010D                     	;# 
   859  010E                     	;# 
   860  0111                     	;# 
   861  0112                     	;# 
   862  0113                     	;# 
   863  0114                     	;# 
   864  0115                     	;# 
   865  0116                     	;# 
   866  0117                     	;# 
   867  0118                     	;# 
   868  0119                     	;# 
   869  011A                     	;# 
   870  011B                     	;# 
   871  011D                     	;# 
   872  011E                     	;# 
   873  018C                     	;# 
   874  018D                     	;# 
   875  018E                     	;# 
   876  0191                     	;# 
   877  0191                     	;# 
   878  0192                     	;# 
   879  0193                     	;# 
   880  0193                     	;# 
   881  0193                     	;# 
   882  0194                     	;# 
   883  0195                     	;# 
   884  0196                     	;# 
   885  0199                     	;# 
   886  019A                     	;# 
   887  019B                     	;# 
   888  019B                     	;# 
   889  019C                     	;# 
   890  019D                     	;# 
   891  019E                     	;# 
   892  019F                     	;# 
   893  020C                     	;# 
   894  020D                     	;# 
   895  020E                     	;# 
   896  0211                     	;# 
   897  0211                     	;# 
   898  0212                     	;# 
   899  0212                     	;# 
   900  0213                     	;# 
   901  0213                     	;# 
   902  0214                     	;# 
   903  0214                     	;# 
   904  0215                     	;# 
   905  0215                     	;# 
   906  0215                     	;# 
   907  0216                     	;# 
   908  0216                     	;# 
   909  0217                     	;# 
   910  0217                     	;# 
   911  0219                     	;# 
   912  021A                     	;# 
   913  021B                     	;# 
   914  021C                     	;# 
   915  021D                     	;# 
   916  021E                     	;# 
   917  021F                     	;# 
   918  0291                     	;# 
   919  0291                     	;# 
   920  0292                     	;# 
   921  0293                     	;# 
   922  0294                     	;# 
   923  0295                     	;# 
   924  0295                     	;# 
   925  0296                     	;# 
   926  0298                     	;# 
   927  0298                     	;# 
   928  0299                     	;# 
   929  029A                     	;# 
   930  029B                     	;# 
   931  029C                     	;# 
   932  029D                     	;# 
   933  029E                     	;# 
   934  0311                     	;# 
   935  0311                     	;# 
   936  0312                     	;# 
   937  0313                     	;# 
   938  0318                     	;# 
   939  0318                     	;# 
   940  0319                     	;# 
   941  031A                     	;# 
   942  038C                     	;# 
   943  038D                     	;# 
   944  038E                     	;# 
   945  0391                     	;# 
   946  0392                     	;# 
   947  0393                     	;# 
   948  0394                     	;# 
   949  0395                     	;# 
   950  0396                     	;# 
   951  039A                     	;# 
   952  039C                     	;# 
   953  039D                     	;# 
   954  039E                     	;# 
   955  039F                     	;# 
   956  0415                     	;# 
   957  0416                     	;# 
   958  0417                     	;# 
   959  041C                     	;# 
   960  041D                     	;# 
   961  041E                     	;# 
   962  0FE4                     	;# 
   963  0FE5                     	;# 
   964  0FE6                     	;# 
   965  0FE7                     	;# 
   966  0FE8                     	;# 
   967  0FE9                     	;# 
   968  0FEA                     	;# 
   969  0FEB                     	;# 
   970  0FED                     	;# 
   971  0FEE                     	;# 
   972  0FEF                     	;# 
   973  0000                     	;# 
   974  0001                     	;# 
   975  0002                     	;# 
   976  0003                     	;# 
   977  0004                     	;# 
   978  0005                     	;# 
   979  0006                     	;# 
   980  0007                     	;# 
   981  0008                     	;# 
   982  0009                     	;# 
   983  000A                     	;# 
   984  000B                     	;# 
   985  000C                     	;# 
   986  000D                     	;# 
   987  000E                     	;# 
   988  0011                     	;# 
   989  0012                     	;# 
   990  0013                     	;# 
   991  0014                     	;# 
   992  0015                     	;# 
   993  0016                     	;# 
   994  0016                     	;# 
   995  0017                     	;# 
   996  0018                     	;# 
   997  0019                     	;# 
   998  001A                     	;# 
   999  001B                     	;# 
  1000  001C                     	;# 
  1001  001E                     	;# 
  1002  001F                     	;# 
  1003  008C                     	;# 
  1004  008D                     	;# 
  1005  008E                     	;# 
  1006  0091                     	;# 
  1007  0092                     	;# 
  1008  0093                     	;# 
  1009  0094                     	;# 
  1010  0095                     	;# 
  1011  0096                     	;# 
  1012  0097                     	;# 
  1013  0098                     	;# 
  1014  0099                     	;# 
  1015  009A                     	;# 
  1016  009B                     	;# 
  1017  009B                     	;# 
  1018  009C                     	;# 
  1019  009D                     	;# 
  1020  009E                     	;# 
  1021  010C                     	;# 
  1022  010D                     	;# 
  1023  010E                     	;# 
  1024  0111                     	;# 
  1025  0112                     	;# 
  1026  0113                     	;# 
  1027  0114                     	;# 
  1028  0115                     	;# 
  1029  0116                     	;# 
  1030  0117                     	;# 
  1031  0118                     	;# 
  1032  0119                     	;# 
  1033  011A                     	;# 
  1034  011B                     	;# 
  1035  011D                     	;# 
  1036  011E                     	;# 
  1037  018C                     	;# 
  1038  018D                     	;# 
  1039  018E                     	;# 
  1040  0191                     	;# 
  1041  0191                     	;# 
  1042  0192                     	;# 
  1043  0193                     	;# 
  1044  0193                     	;# 
  1045  0193                     	;# 
  1046  0194                     	;# 
  1047  0195                     	;# 
  1048  0196                     	;# 
  1049  0199                     	;# 
  1050  019A                     	;# 
  1051  019B                     	;# 
  1052  019B                     	;# 
  1053  019C                     	;# 
  1054  019D                     	;# 
  1055  019E                     	;# 
  1056  019F                     	;# 
  1057  020C                     	;# 
  1058  020D                     	;# 
  1059  020E                     	;# 
  1060  0211                     	;# 
  1061  0211                     	;# 
  1062  0212                     	;# 
  1063  0212                     	;# 
  1064  0213                     	;# 
  1065  0213                     	;# 
  1066  0214                     	;# 
  1067  0214                     	;# 
  1068  0215                     	;# 
  1069  0215                     	;# 
  1070  0215                     	;# 
  1071  0216                     	;# 
  1072  0216                     	;# 
  1073  0217                     	;# 
  1074  0217                     	;# 
  1075  0219                     	;# 
  1076  021A                     	;# 
  1077  021B                     	;# 
  1078  021C                     	;# 
  1079  021D                     	;# 
  1080  021E                     	;# 
  1081  021F                     	;# 
  1082  0291                     	;# 
  1083  0291                     	;# 
  1084  0292                     	;# 
  1085  0293                     	;# 
  1086  0294                     	;# 
  1087  0295                     	;# 
  1088  0295                     	;# 
  1089  0296                     	;# 
  1090  0298                     	;# 
  1091  0298                     	;# 
  1092  0299                     	;# 
  1093  029A                     	;# 
  1094  029B                     	;# 
  1095  029C                     	;# 
  1096  029D                     	;# 
  1097  029E                     	;# 
  1098  0311                     	;# 
  1099  0311                     	;# 
  1100  0312                     	;# 
  1101  0313                     	;# 
  1102  0318                     	;# 
  1103  0318                     	;# 
  1104  0319                     	;# 
  1105  031A                     	;# 
  1106  038C                     	;# 
  1107  038D                     	;# 
  1108  038E                     	;# 
  1109  0391                     	;# 
  1110  0392                     	;# 
  1111  0393                     	;# 
  1112  0394                     	;# 
  1113  0395                     	;# 
  1114  0396                     	;# 
  1115  039A                     	;# 
  1116  039C                     	;# 
  1117  039D                     	;# 
  1118  039E                     	;# 
  1119  039F                     	;# 
  1120  0415                     	;# 
  1121  0416                     	;# 
  1122  0417                     	;# 
  1123  041C                     	;# 
  1124  041D                     	;# 
  1125  041E                     	;# 
  1126  0FE4                     	;# 
  1127  0FE5                     	;# 
  1128  0FE6                     	;# 
  1129  0FE7                     	;# 
  1130  0FE8                     	;# 
  1131  0FE9                     	;# 
  1132  0FEA                     	;# 
  1133  0FEB                     	;# 
  1134  0FED                     	;# 
  1135  0FEE                     	;# 
  1136  0FEF                     	;# 
  1137  0000                     	;# 
  1138  0001                     	;# 
  1139  0002                     	;# 
  1140  0003                     	;# 
  1141  0004                     	;# 
  1142  0005                     	;# 
  1143  0006                     	;# 
  1144  0007                     	;# 
  1145  0008                     	;# 
  1146  0009                     	;# 
  1147  000A                     	;# 
  1148  000B                     	;# 
  1149  000C                     	;# 
  1150  000D                     	;# 
  1151  000E                     	;# 
  1152  0011                     	;# 
  1153  0012                     	;# 
  1154  0013                     	;# 
  1155  0014                     	;# 
  1156  0015                     	;# 
  1157  0016                     	;# 
  1158  0016                     	;# 
  1159  0017                     	;# 
  1160  0018                     	;# 
  1161  0019                     	;# 
  1162  001A                     	;# 
  1163  001B                     	;# 
  1164  001C                     	;# 
  1165  001E                     	;# 
  1166  001F                     	;# 
  1167  008C                     	;# 
  1168  008D                     	;# 
  1169  008E                     	;# 
  1170  0091                     	;# 
  1171  0092                     	;# 
  1172  0093                     	;# 
  1173  0094                     	;# 
  1174  0095                     	;# 
  1175  0096                     	;# 
  1176  0097                     	;# 
  1177  0098                     	;# 
  1178  0099                     	;# 
  1179  009A                     	;# 
  1180  009B                     	;# 
  1181  009B                     	;# 
  1182  009C                     	;# 
  1183  009D                     	;# 
  1184  009E                     	;# 
  1185  010C                     	;# 
  1186  010D                     	;# 
  1187  010E                     	;# 
  1188  0111                     	;# 
  1189  0112                     	;# 
  1190  0113                     	;# 
  1191  0114                     	;# 
  1192  0115                     	;# 
  1193  0116                     	;# 
  1194  0117                     	;# 
  1195  0118                     	;# 
  1196  0119                     	;# 
  1197  011A                     	;# 
  1198  011B                     	;# 
  1199  011D                     	;# 
  1200  011E                     	;# 
  1201  018C                     	;# 
  1202  018D                     	;# 
  1203  018E                     	;# 
  1204  0191                     	;# 
  1205  0191                     	;# 
  1206  0192                     	;# 
  1207  0193                     	;# 
  1208  0193                     	;# 
  1209  0193                     	;# 
  1210  0194                     	;# 
  1211  0195                     	;# 
  1212  0196                     	;# 
  1213  0199                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019C                     	;# 
  1218  019D                     	;# 
  1219  019E                     	;# 
  1220  019F                     	;# 
  1221  020C                     	;# 
  1222  020D                     	;# 
  1223  020E                     	;# 
  1224  0211                     	;# 
  1225  0211                     	;# 
  1226  0212                     	;# 
  1227  0212                     	;# 
  1228  0213                     	;# 
  1229  0213                     	;# 
  1230  0214                     	;# 
  1231  0214                     	;# 
  1232  0215                     	;# 
  1233  0215                     	;# 
  1234  0215                     	;# 
  1235  0216                     	;# 
  1236  0216                     	;# 
  1237  0217                     	;# 
  1238  0217                     	;# 
  1239  0219                     	;# 
  1240  021A                     	;# 
  1241  021B                     	;# 
  1242  021C                     	;# 
  1243  021D                     	;# 
  1244  021E                     	;# 
  1245  021F                     	;# 
  1246  0291                     	;# 
  1247  0291                     	;# 
  1248  0292                     	;# 
  1249  0293                     	;# 
  1250  0294                     	;# 
  1251  0295                     	;# 
  1252  0295                     	;# 
  1253  0296                     	;# 
  1254  0298                     	;# 
  1255  0298                     	;# 
  1256  0299                     	;# 
  1257  029A                     	;# 
  1258  029B                     	;# 
  1259  029C                     	;# 
  1260  029D                     	;# 
  1261  029E                     	;# 
  1262  0311                     	;# 
  1263  0311                     	;# 
  1264  0312                     	;# 
  1265  0313                     	;# 
  1266  0318                     	;# 
  1267  0318                     	;# 
  1268  0319                     	;# 
  1269  031A                     	;# 
  1270  038C                     	;# 
  1271  038D                     	;# 
  1272  038E                     	;# 
  1273  0391                     	;# 
  1274  0392                     	;# 
  1275  0393                     	;# 
  1276  0394                     	;# 
  1277  0395                     	;# 
  1278  0396                     	;# 
  1279  039A                     	;# 
  1280  039C                     	;# 
  1281  039D                     	;# 
  1282  039E                     	;# 
  1283  039F                     	;# 
  1284  0415                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  041C                     	;# 
  1288  041D                     	;# 
  1289  041E                     	;# 
  1290  0FE4                     	;# 
  1291  0FE5                     	;# 
  1292  0FE6                     	;# 
  1293  0FE7                     	;# 
  1294  0FE8                     	;# 
  1295  0FE9                     	;# 
  1296  0FEA                     	;# 
  1297  0FEB                     	;# 
  1298  0FED                     	;# 
  1299  0FEE                     	;# 
  1300  0FEF                     	;# 
  1301  0000                     	;# 
  1302  0001                     	;# 
  1303  0002                     	;# 
  1304  0003                     	;# 
  1305  0004                     	;# 
  1306  0005                     	;# 
  1307  0006                     	;# 
  1308  0007                     	;# 
  1309  0008                     	;# 
  1310  0009                     	;# 
  1311  000A                     	;# 
  1312  000B                     	;# 
  1313  000C                     	;# 
  1314  000D                     	;# 
  1315  000E                     	;# 
  1316  0011                     	;# 
  1317  0012                     	;# 
  1318  0013                     	;# 
  1319  0014                     	;# 
  1320  0015                     	;# 
  1321  0016                     	;# 
  1322  0016                     	;# 
  1323  0017                     	;# 
  1324  0018                     	;# 
  1325  0019                     	;# 
  1326  001A                     	;# 
  1327  001B                     	;# 
  1328  001C                     	;# 
  1329  001E                     	;# 
  1330  001F                     	;# 
  1331  008C                     	;# 
  1332  008D                     	;# 
  1333  008E                     	;# 
  1334  0091                     	;# 
  1335  0092                     	;# 
  1336  0093                     	;# 
  1337  0094                     	;# 
  1338  0095                     	;# 
  1339  0096                     	;# 
  1340  0097                     	;# 
  1341  0098                     	;# 
  1342  0099                     	;# 
  1343  009A                     	;# 
  1344  009B                     	;# 
  1345  009B                     	;# 
  1346  009C                     	;# 
  1347  009D                     	;# 
  1348  009E                     	;# 
  1349  010C                     	;# 
  1350  010D                     	;# 
  1351  010E                     	;# 
  1352  0111                     	;# 
  1353  0112                     	;# 
  1354  0113                     	;# 
  1355  0114                     	;# 
  1356  0115                     	;# 
  1357  0116                     	;# 
  1358  0117                     	;# 
  1359  0118                     	;# 
  1360  0119                     	;# 
  1361  011A                     	;# 
  1362  011B                     	;# 
  1363  011D                     	;# 
  1364  011E                     	;# 
  1365  018C                     	;# 
  1366  018D                     	;# 
  1367  018E                     	;# 
  1368  0191                     	;# 
  1369  0191                     	;# 
  1370  0192                     	;# 
  1371  0193                     	;# 
  1372  0193                     	;# 
  1373  0193                     	;# 
  1374  0194                     	;# 
  1375  0195                     	;# 
  1376  0196                     	;# 
  1377  0199                     	;# 
  1378  019A                     	;# 
  1379  019B                     	;# 
  1380  019B                     	;# 
  1381  019C                     	;# 
  1382  019D                     	;# 
  1383  019E                     	;# 
  1384  019F                     	;# 
  1385  020C                     	;# 
  1386  020D                     	;# 
  1387  020E                     	;# 
  1388  0211                     	;# 
  1389  0211                     	;# 
  1390  0212                     	;# 
  1391  0212                     	;# 
  1392  0213                     	;# 
  1393  0213                     	;# 
  1394  0214                     	;# 
  1395  0214                     	;# 
  1396  0215                     	;# 
  1397  0215                     	;# 
  1398  0215                     	;# 
  1399  0216                     	;# 
  1400  0216                     	;# 
  1401  0217                     	;# 
  1402  0217                     	;# 
  1403  0219                     	;# 
  1404  021A                     	;# 
  1405  021B                     	;# 
  1406  021C                     	;# 
  1407  021D                     	;# 
  1408  021E                     	;# 
  1409  021F                     	;# 
  1410  0291                     	;# 
  1411  0291                     	;# 
  1412  0292                     	;# 
  1413  0293                     	;# 
  1414  0294                     	;# 
  1415  0295                     	;# 
  1416  0295                     	;# 
  1417  0296                     	;# 
  1418  0298                     	;# 
  1419  0298                     	;# 
  1420  0299                     	;# 
  1421  029A                     	;# 
  1422  029B                     	;# 
  1423  029C                     	;# 
  1424  029D                     	;# 
  1425  029E                     	;# 
  1426  0311                     	;# 
  1427  0311                     	;# 
  1428  0312                     	;# 
  1429  0313                     	;# 
  1430  0318                     	;# 
  1431  0318                     	;# 
  1432  0319                     	;# 
  1433  031A                     	;# 
  1434  038C                     	;# 
  1435  038D                     	;# 
  1436  038E                     	;# 
  1437  0391                     	;# 
  1438  0392                     	;# 
  1439  0393                     	;# 
  1440  0394                     	;# 
  1441  0395                     	;# 
  1442  0396                     	;# 
  1443  039A                     	;# 
  1444  039C                     	;# 
  1445  039D                     	;# 
  1446  039E                     	;# 
  1447  039F                     	;# 
  1448  0415                     	;# 
  1449  0416                     	;# 
  1450  0417                     	;# 
  1451  041C                     	;# 
  1452  041D                     	;# 
  1453  041E                     	;# 
  1454  0FE4                     	;# 
  1455  0FE5                     	;# 
  1456  0FE6                     	;# 
  1457  0FE7                     	;# 
  1458  0FE8                     	;# 
  1459  0FE9                     	;# 
  1460  0FEA                     	;# 
  1461  0FEB                     	;# 
  1462  0FED                     	;# 
  1463  0FEE                     	;# 
  1464  0FEF                     	;# 
  1465  0000                     	;# 
  1466  0001                     	;# 
  1467  0002                     	;# 
  1468  0003                     	;# 
  1469  0004                     	;# 
  1470  0005                     	;# 
  1471  0006                     	;# 
  1472  0007                     	;# 
  1473  0008                     	;# 
  1474  0009                     	;# 
  1475  000A                     	;# 
  1476  000B                     	;# 
  1477  000C                     	;# 
  1478  000D                     	;# 
  1479  000E                     	;# 
  1480  0011                     	;# 
  1481  0012                     	;# 
  1482  0013                     	;# 
  1483  0014                     	;# 
  1484  0015                     	;# 
  1485  0016                     	;# 
  1486  0016                     	;# 
  1487  0017                     	;# 
  1488  0018                     	;# 
  1489  0019                     	;# 
  1490  001A                     	;# 
  1491  001B                     	;# 
  1492  001C                     	;# 
  1493  001E                     	;# 
  1494  001F                     	;# 
  1495  008C                     	;# 
  1496  008D                     	;# 
  1497  008E                     	;# 
  1498  0091                     	;# 
  1499  0092                     	;# 
  1500  0093                     	;# 
  1501  0094                     	;# 
  1502  0095                     	;# 
  1503  0096                     	;# 
  1504  0097                     	;# 
  1505  0098                     	;# 
  1506  0099                     	;# 
  1507  009A                     	;# 
  1508  009B                     	;# 
  1509  009B                     	;# 
  1510  009C                     	;# 
  1511  009D                     	;# 
  1512  009E                     	;# 
  1513  010C                     	;# 
  1514  010D                     	;# 
  1515  010E                     	;# 
  1516  0111                     	;# 
  1517  0112                     	;# 
  1518  0113                     	;# 
  1519  0114                     	;# 
  1520  0115                     	;# 
  1521  0116                     	;# 
  1522  0117                     	;# 
  1523  0118                     	;# 
  1524  0119                     	;# 
  1525  011A                     	;# 
  1526  011B                     	;# 
  1527  011D                     	;# 
  1528  011E                     	;# 
  1529  018C                     	;# 
  1530  018D                     	;# 
  1531  018E                     	;# 
  1532  0191                     	;# 
  1533  0191                     	;# 
  1534  0192                     	;# 
  1535  0193                     	;# 
  1536  0193                     	;# 
  1537  0193                     	;# 
  1538  0194                     	;# 
  1539  0195                     	;# 
  1540  0196                     	;# 
  1541  0199                     	;# 
  1542  019A                     	;# 
  1543  019B                     	;# 
  1544  019B                     	;# 
  1545  019C                     	;# 
  1546  019D                     	;# 
  1547  019E                     	;# 
  1548  019F                     	;# 
  1549  020C                     	;# 
  1550  020D                     	;# 
  1551  020E                     	;# 
  1552  0211                     	;# 
  1553  0211                     	;# 
  1554  0212                     	;# 
  1555  0212                     	;# 
  1556  0213                     	;# 
  1557  0213                     	;# 
  1558  0214                     	;# 
  1559  0214                     	;# 
  1560  0215                     	;# 
  1561  0215                     	;# 
  1562  0215                     	;# 
  1563  0216                     	;# 
  1564  0216                     	;# 
  1565  0217                     	;# 
  1566  0217                     	;# 
  1567  0219                     	;# 
  1568  021A                     	;# 
  1569  021B                     	;# 
  1570  021C                     	;# 
  1571  021D                     	;# 
  1572  021E                     	;# 
  1573  021F                     	;# 
  1574  0291                     	;# 
  1575  0291                     	;# 
  1576  0292                     	;# 
  1577  0293                     	;# 
  1578  0294                     	;# 
  1579  0295                     	;# 
  1580  0295                     	;# 
  1581  0296                     	;# 
  1582  0298                     	;# 
  1583  0298                     	;# 
  1584  0299                     	;# 
  1585  029A                     	;# 
  1586  029B                     	;# 
  1587  029C                     	;# 
  1588  029D                     	;# 
  1589  029E                     	;# 
  1590  0311                     	;# 
  1591  0311                     	;# 
  1592  0312                     	;# 
  1593  0313                     	;# 
  1594  0318                     	;# 
  1595  0318                     	;# 
  1596  0319                     	;# 
  1597  031A                     	;# 
  1598  038C                     	;# 
  1599  038D                     	;# 
  1600  038E                     	;# 
  1601  0391                     	;# 
  1602  0392                     	;# 
  1603  0393                     	;# 
  1604  0394                     	;# 
  1605  0395                     	;# 
  1606  0396                     	;# 
  1607  039A                     	;# 
  1608  039C                     	;# 
  1609  039D                     	;# 
  1610  039E                     	;# 
  1611  039F                     	;# 
  1612  0415                     	;# 
  1613  0416                     	;# 
  1614  0417                     	;# 
  1615  041C                     	;# 
  1616  041D                     	;# 
  1617  041E                     	;# 
  1618  0FE4                     	;# 
  1619  0FE5                     	;# 
  1620  0FE6                     	;# 
  1621  0FE7                     	;# 
  1622  0FE8                     	;# 
  1623  0FE9                     	;# 
  1624  0FEA                     	;# 
  1625  0FEB                     	;# 
  1626  0FED                     	;# 
  1627  0FEE                     	;# 
  1628  0FEF                     	;# 
  1629  0000                     	;# 
  1630  0001                     	;# 
  1631  0002                     	;# 
  1632  0003                     	;# 
  1633  0004                     	;# 
  1634  0005                     	;# 
  1635  0006                     	;# 
  1636  0007                     	;# 
  1637  0008                     	;# 
  1638  0009                     	;# 
  1639  000A                     	;# 
  1640  000B                     	;# 
  1641  000C                     	;# 
  1642  000D                     	;# 
  1643  000E                     	;# 
  1644  0011                     	;# 
  1645  0012                     	;# 
  1646  0013                     	;# 
  1647  0014                     	;# 
  1648  0015                     	;# 
  1649  0016                     	;# 
  1650  0016                     	;# 
  1651  0017                     	;# 
  1652  0018                     	;# 
  1653  0019                     	;# 
  1654  001A                     	;# 
  1655  001B                     	;# 
  1656  001C                     	;# 
  1657  001E                     	;# 
  1658  001F                     	;# 
  1659  008C                     	;# 
  1660  008D                     	;# 
  1661  008E                     	;# 
  1662  0091                     	;# 
  1663  0092                     	;# 
  1664  0093                     	;# 
  1665  0094                     	;# 
  1666  0095                     	;# 
  1667  0096                     	;# 
  1668  0097                     	;# 
  1669  0098                     	;# 
  1670  0099                     	;# 
  1671  009A                     	;# 
  1672  009B                     	;# 
  1673  009B                     	;# 
  1674  009C                     	;# 
  1675  009D                     	;# 
  1676  009E                     	;# 
  1677  010C                     	;# 
  1678  010D                     	;# 
  1679  010E                     	;# 
  1680  0111                     	;# 
  1681  0112                     	;# 
  1682  0113                     	;# 
  1683  0114                     	;# 
  1684  0115                     	;# 
  1685  0116                     	;# 
  1686  0117                     	;# 
  1687  0118                     	;# 
  1688  0119                     	;# 
  1689  011A                     	;# 
  1690  011B                     	;# 
  1691  011D                     	;# 
  1692  011E                     	;# 
  1693  018C                     	;# 
  1694  018D                     	;# 
  1695  018E                     	;# 
  1696  0191                     	;# 
  1697  0191                     	;# 
  1698  0192                     	;# 
  1699  0193                     	;# 
  1700  0193                     	;# 
  1701  0193                     	;# 
  1702  0194                     	;# 
  1703  0195                     	;# 
  1704  0196                     	;# 
  1705  0199                     	;# 
  1706  019A                     	;# 
  1707  019B                     	;# 
  1708  019B                     	;# 
  1709  019C                     	;# 
  1710  019D                     	;# 
  1711  019E                     	;# 
  1712  019F                     	;# 
  1713  020C                     	;# 
  1714  020D                     	;# 
  1715  020E                     	;# 
  1716  0211                     	;# 
  1717  0211                     	;# 
  1718  0212                     	;# 
  1719  0212                     	;# 
  1720  0213                     	;# 
  1721  0213                     	;# 
  1722  0214                     	;# 
  1723  0214                     	;# 
  1724  0215                     	;# 
  1725  0215                     	;# 
  1726  0215                     	;# 
  1727  0216                     	;# 
  1728  0216                     	;# 
  1729  0217                     	;# 
  1730  0217                     	;# 
  1731  0219                     	;# 
  1732  021A                     	;# 
  1733  021B                     	;# 
  1734  021C                     	;# 
  1735  021D                     	;# 
  1736  021E                     	;# 
  1737  021F                     	;# 
  1738  0291                     	;# 
  1739  0291                     	;# 
  1740  0292                     	;# 
  1741  0293                     	;# 
  1742  0294                     	;# 
  1743  0295                     	;# 
  1744  0295                     	;# 
  1745  0296                     	;# 
  1746  0298                     	;# 
  1747  0298                     	;# 
  1748  0299                     	;# 
  1749  029A                     	;# 
  1750  029B                     	;# 
  1751  029C                     	;# 
  1752  029D                     	;# 
  1753  029E                     	;# 
  1754  0311                     	;# 
  1755  0311                     	;# 
  1756  0312                     	;# 
  1757  0313                     	;# 
  1758  0318                     	;# 
  1759  0318                     	;# 
  1760  0319                     	;# 
  1761  031A                     	;# 
  1762  038C                     	;# 
  1763  038D                     	;# 
  1764  038E                     	;# 
  1765  0391                     	;# 
  1766  0392                     	;# 
  1767  0393                     	;# 
  1768  0394                     	;# 
  1769  0395                     	;# 
  1770  0396                     	;# 
  1771  039A                     	;# 
  1772  039C                     	;# 
  1773  039D                     	;# 
  1774  039E                     	;# 
  1775  039F                     	;# 
  1776  0415                     	;# 
  1777  0416                     	;# 
  1778  0417                     	;# 
  1779  041C                     	;# 
  1780  041D                     	;# 
  1781  041E                     	;# 
  1782  0FE4                     	;# 
  1783  0FE5                     	;# 
  1784  0FE6                     	;# 
  1785  0FE7                     	;# 
  1786  0FE8                     	;# 
  1787  0FE9                     	;# 
  1788  0FEA                     	;# 
  1789  0FEB                     	;# 
  1790  0FED                     	;# 
  1791  0FEE                     	;# 
  1792  0FEF                     	;# 
  1793  0000                     	;# 
  1794  0001                     	;# 
  1795  0002                     	;# 
  1796  0003                     	;# 
  1797  0004                     	;# 
  1798  0005                     	;# 
  1799  0006                     	;# 
  1800  0007                     	;# 
  1801  0008                     	;# 
  1802  0009                     	;# 
  1803  000A                     	;# 
  1804  000B                     	;# 
  1805  000C                     	;# 
  1806  000D                     	;# 
  1807  000E                     	;# 
  1808  0011                     	;# 
  1809  0012                     	;# 
  1810  0013                     	;# 
  1811  0014                     	;# 
  1812  0015                     	;# 
  1813  0016                     	;# 
  1814  0016                     	;# 
  1815  0017                     	;# 
  1816  0018                     	;# 
  1817  0019                     	;# 
  1818  001A                     	;# 
  1819  001B                     	;# 
  1820  001C                     	;# 
  1821  001E                     	;# 
  1822  001F                     	;# 
  1823  008C                     	;# 
  1824  008D                     	;# 
  1825  008E                     	;# 
  1826  0091                     	;# 
  1827  0092                     	;# 
  1828  0093                     	;# 
  1829  0094                     	;# 
  1830  0095                     	;# 
  1831  0096                     	;# 
  1832  0097                     	;# 
  1833  0098                     	;# 
  1834  0099                     	;# 
  1835  009A                     	;# 
  1836  009B                     	;# 
  1837  009B                     	;# 
  1838  009C                     	;# 
  1839  009D                     	;# 
  1840  009E                     	;# 
  1841  010C                     	;# 
  1842  010D                     	;# 
  1843  010E                     	;# 
  1844  0111                     	;# 
  1845  0112                     	;# 
  1846  0113                     	;# 
  1847  0114                     	;# 
  1848  0115                     	;# 
  1849  0116                     	;# 
  1850  0117                     	;# 
  1851  0118                     	;# 
  1852  0119                     	;# 
  1853  011A                     	;# 
  1854  011B                     	;# 
  1855  011D                     	;# 
  1856  011E                     	;# 
  1857  018C                     	;# 
  1858  018D                     	;# 
  1859  018E                     	;# 
  1860  0191                     	;# 
  1861  0191                     	;# 
  1862  0192                     	;# 
  1863  0193                     	;# 
  1864  0193                     	;# 
  1865  0193                     	;# 
  1866  0194                     	;# 
  1867  0195                     	;# 
  1868  0196                     	;# 
  1869  0199                     	;# 
  1870  019A                     	;# 
  1871  019B                     	;# 
  1872  019B                     	;# 
  1873  019C                     	;# 
  1874  019D                     	;# 
  1875  019E                     	;# 
  1876  019F                     	;# 
  1877  020C                     	;# 
  1878  020D                     	;# 
  1879  020E                     	;# 
  1880  0211                     	;# 
  1881  0211                     	;# 
  1882  0212                     	;# 
  1883  0212                     	;# 
  1884  0213                     	;# 
  1885  0213                     	;# 
  1886  0214                     	;# 
  1887  0214                     	;# 
  1888  0215                     	;# 
  1889  0215                     	;# 
  1890  0215                     	;# 
  1891  0216                     	;# 
  1892  0216                     	;# 
  1893  0217                     	;# 
  1894  0217                     	;# 
  1895  0219                     	;# 
  1896  021A                     	;# 
  1897  021B                     	;# 
  1898  021C                     	;# 
  1899  021D                     	;# 
  1900  021E                     	;# 
  1901  021F                     	;# 
  1902  0291                     	;# 
  1903  0291                     	;# 
  1904  0292                     	;# 
  1905  0293                     	;# 
  1906  0294                     	;# 
  1907  0295                     	;# 
  1908  0295                     	;# 
  1909  0296                     	;# 
  1910  0298                     	;# 
  1911  0298                     	;# 
  1912  0299                     	;# 
  1913  029A                     	;# 
  1914  029B                     	;# 
  1915  029C                     	;# 
  1916  029D                     	;# 
  1917  029E                     	;# 
  1918  0311                     	;# 
  1919  0311                     	;# 
  1920  0312                     	;# 
  1921  0313                     	;# 
  1922  0318                     	;# 
  1923  0318                     	;# 
  1924  0319                     	;# 
  1925  031A                     	;# 
  1926  038C                     	;# 
  1927  038D                     	;# 
  1928  038E                     	;# 
  1929  0391                     	;# 
  1930  0392                     	;# 
  1931  0393                     	;# 
  1932  0394                     	;# 
  1933  0395                     	;# 
  1934  0396                     	;# 
  1935  039A                     	;# 
  1936  039C                     	;# 
  1937  039D                     	;# 
  1938  039E                     	;# 
  1939  039F                     	;# 
  1940  0415                     	;# 
  1941  0416                     	;# 
  1942  0417                     	;# 
  1943  041C                     	;# 
  1944  041D                     	;# 
  1945  041E                     	;# 
  1946  0FE4                     	;# 
  1947  0FE5                     	;# 
  1948  0FE6                     	;# 
  1949  0FE7                     	;# 
  1950  0FE8                     	;# 
  1951  0FE9                     	;# 
  1952  0FEA                     	;# 
  1953  0FEB                     	;# 
  1954  0FED                     	;# 
  1955  0FEE                     	;# 
  1956  0FEF                     	;# 
  1957  0000                     	;# 
  1958  0001                     	;# 
  1959  0002                     	;# 
  1960  0003                     	;# 
  1961  0004                     	;# 
  1962  0005                     	;# 
  1963  0006                     	;# 
  1964  0007                     	;# 
  1965  0008                     	;# 
  1966  0009                     	;# 
  1967  000A                     	;# 
  1968  000B                     	;# 
  1969  000C                     	;# 
  1970  000D                     	;# 
  1971  000E                     	;# 
  1972  0011                     	;# 
  1973  0012                     	;# 
  1974  0013                     	;# 
  1975  0014                     	;# 
  1976  0015                     	;# 
  1977  0016                     	;# 
  1978  0016                     	;# 
  1979  0017                     	;# 
  1980  0018                     	;# 
  1981  0019                     	;# 
  1982  001A                     	;# 
  1983  001B                     	;# 
  1984  001C                     	;# 
  1985  001E                     	;# 
  1986  001F                     	;# 
  1987  008C                     	;# 
  1988  008D                     	;# 
  1989  008E                     	;# 
  1990  0091                     	;# 
  1991  0092                     	;# 
  1992  0093                     	;# 
  1993  0094                     	;# 
  1994  0095                     	;# 
  1995  0096                     	;# 
  1996  0097                     	;# 
  1997  0098                     	;# 
  1998  0099                     	;# 
  1999  009A                     	;# 
  2000  009B                     	;# 
  2001  009B                     	;# 
  2002  009C                     	;# 
  2003  009D                     	;# 
  2004  009E                     	;# 
  2005  010C                     	;# 
  2006  010D                     	;# 
  2007  010E                     	;# 
  2008  0111                     	;# 
  2009  0112                     	;# 
  2010  0113                     	;# 
  2011  0114                     	;# 
  2012  0115                     	;# 
  2013  0116                     	;# 
  2014  0117                     	;# 
  2015  0118                     	;# 
  2016  0119                     	;# 
  2017  011A                     	;# 
  2018  011B                     	;# 
  2019  011D                     	;# 
  2020  011E                     	;# 
  2021  018C                     	;# 
  2022  018D                     	;# 
  2023  018E                     	;# 
  2024  0191                     	;# 
  2025  0191                     	;# 
  2026  0192                     	;# 
  2027  0193                     	;# 
  2028  0193                     	;# 
  2029  0193                     	;# 
  2030  0194                     	;# 
  2031  0195                     	;# 
  2032  0196                     	;# 
  2033  0199                     	;# 
  2034  019A                     	;# 
  2035  019B                     	;# 
  2036  019B                     	;# 
  2037  019C                     	;# 
  2038  019D                     	;# 
  2039  019E                     	;# 
  2040  019F                     	;# 
  2041  020C                     	;# 
  2042  020D                     	;# 
  2043  020E                     	;# 
  2044  0211                     	;# 
  2045  0211                     	;# 
  2046  0212                     	;# 
  2047  0212                     	;# 
  2048  0213                     	;# 
  2049  0213                     	;# 
  2050  0214                     	;# 
  2051  0214                     	;# 
  2052  0215                     	;# 
  2053  0215                     	;# 
  2054  0215                     	;# 
  2055  0216                     	;# 
  2056  0216                     	;# 
  2057  0217                     	;# 
  2058  0217                     	;# 
  2059  0219                     	;# 
  2060  021A                     	;# 
  2061  021B                     	;# 
  2062  021C                     	;# 
  2063  021D                     	;# 
  2064  021E                     	;# 
  2065  021F                     	;# 
  2066  0291                     	;# 
  2067  0291                     	;# 
  2068  0292                     	;# 
  2069  0293                     	;# 
  2070  0294                     	;# 
  2071  0295                     	;# 
  2072  0295                     	;# 
  2073  0296                     	;# 
  2074  0298                     	;# 
  2075  0298                     	;# 
  2076  0299                     	;# 
  2077  029A                     	;# 
  2078  029B                     	;# 
  2079  029C                     	;# 
  2080  029D                     	;# 
  2081  029E                     	;# 
  2082  0311                     	;# 
  2083  0311                     	;# 
  2084  0312                     	;# 
  2085  0313                     	;# 
  2086  0318                     	;# 
  2087  0318                     	;# 
  2088  0319                     	;# 
  2089  031A                     	;# 
  2090  038C                     	;# 
  2091  038D                     	;# 
  2092  038E                     	;# 
  2093  0391                     	;# 
  2094  0392                     	;# 
  2095  0393                     	;# 
  2096  0394                     	;# 
  2097  0395                     	;# 
  2098  0396                     	;# 
  2099  039A                     	;# 
  2100  039C                     	;# 
  2101  039D                     	;# 
  2102  039E                     	;# 
  2103  039F                     	;# 
  2104  0415                     	;# 
  2105  0416                     	;# 
  2106  0417                     	;# 
  2107  041C                     	;# 
  2108  041D                     	;# 
  2109  041E                     	;# 
  2110  0FE4                     	;# 
  2111  0FE5                     	;# 
  2112  0FE6                     	;# 
  2113  0FE7                     	;# 
  2114  0FE8                     	;# 
  2115  0FE9                     	;# 
  2116  0FEA                     	;# 
  2117  0FEB                     	;# 
  2118  0FED                     	;# 
  2119  0FEE                     	;# 
  2120  0FEF                     	;# 
  2121  0000                     	;# 
  2122  0001                     	;# 
  2123  0002                     	;# 
  2124  0003                     	;# 
  2125  0004                     	;# 
  2126  0005                     	;# 
  2127  0006                     	;# 
  2128  0007                     	;# 
  2129  0008                     	;# 
  2130  0009                     	;# 
  2131  000A                     	;# 
  2132  000B                     	;# 
  2133  000C                     	;# 
  2134  000D                     	;# 
  2135  000E                     	;# 
  2136  0011                     	;# 
  2137  0012                     	;# 
  2138  0013                     	;# 
  2139  0014                     	;# 
  2140  0015                     	;# 
  2141  0016                     	;# 
  2142  0016                     	;# 
  2143  0017                     	;# 
  2144  0018                     	;# 
  2145  0019                     	;# 
  2146  001A                     	;# 
  2147  001B                     	;# 
  2148  001C                     	;# 
  2149  001E                     	;# 
  2150  001F                     	;# 
  2151  008C                     	;# 
  2152  008D                     	;# 
  2153  008E                     	;# 
  2154  0091                     	;# 
  2155  0092                     	;# 
  2156  0093                     	;# 
  2157  0094                     	;# 
  2158  0095                     	;# 
  2159  0096                     	;# 
  2160  0097                     	;# 
  2161  0098                     	;# 
  2162  0099                     	;# 
  2163  009A                     	;# 
  2164  009B                     	;# 
  2165  009B                     	;# 
  2166  009C                     	;# 
  2167  009D                     	;# 
  2168  009E                     	;# 
  2169  010C                     	;# 
  2170  010D                     	;# 
  2171  010E                     	;# 
  2172  0111                     	;# 
  2173  0112                     	;# 
  2174  0113                     	;# 
  2175  0114                     	;# 
  2176  0115                     	;# 
  2177  0116                     	;# 
  2178  0117                     	;# 
  2179  0118                     	;# 
  2180  0119                     	;# 
  2181  011A                     	;# 
  2182  011B                     	;# 
  2183  011D                     	;# 
  2184  011E                     	;# 
  2185  018C                     	;# 
  2186  018D                     	;# 
  2187  018E                     	;# 
  2188  0191                     	;# 
  2189  0191                     	;# 
  2190  0192                     	;# 
  2191  0193                     	;# 
  2192  0193                     	;# 
  2193  0193                     	;# 
  2194  0194                     	;# 
  2195  0195                     	;# 
  2196  0196                     	;# 
  2197  0199                     	;# 
  2198  019A                     	;# 
  2199  019B                     	;# 
  2200  019B                     	;# 
  2201  019C                     	;# 
  2202  019D                     	;# 
  2203  019E                     	;# 
  2204  019F                     	;# 
  2205  020C                     	;# 
  2206  020D                     	;# 
  2207  020E                     	;# 
  2208  0211                     	;# 
  2209  0211                     	;# 
  2210  0212                     	;# 
  2211  0212                     	;# 
  2212  0213                     	;# 
  2213  0213                     	;# 
  2214  0214                     	;# 
  2215  0214                     	;# 
  2216  0215                     	;# 
  2217  0215                     	;# 
  2218  0215                     	;# 
  2219  0216                     	;# 
  2220  0216                     	;# 
  2221  0217                     	;# 
  2222  0217                     	;# 
  2223  0219                     	;# 
  2224  021A                     	;# 
  2225  021B                     	;# 
  2226  021C                     	;# 
  2227  021D                     	;# 
  2228  021E                     	;# 
  2229  021F                     	;# 
  2230  0291                     	;# 
  2231  0291                     	;# 
  2232  0292                     	;# 
  2233  0293                     	;# 
  2234  0294                     	;# 
  2235  0295                     	;# 
  2236  0295                     	;# 
  2237  0296                     	;# 
  2238  0298                     	;# 
  2239  0298                     	;# 
  2240  0299                     	;# 
  2241  029A                     	;# 
  2242  029B                     	;# 
  2243  029C                     	;# 
  2244  029D                     	;# 
  2245  029E                     	;# 
  2246  0311                     	;# 
  2247  0311                     	;# 
  2248  0312                     	;# 
  2249  0313                     	;# 
  2250  0318                     	;# 
  2251  0318                     	;# 
  2252  0319                     	;# 
  2253  031A                     	;# 
  2254  038C                     	;# 
  2255  038D                     	;# 
  2256  038E                     	;# 
  2257  0391                     	;# 
  2258  0392                     	;# 
  2259  0393                     	;# 
  2260  0394                     	;# 
  2261  0395                     	;# 
  2262  0396                     	;# 
  2263  039A                     	;# 
  2264  039C                     	;# 
  2265  039D                     	;# 
  2266  039E                     	;# 
  2267  039F                     	;# 
  2268  0415                     	;# 
  2269  0416                     	;# 
  2270  0417                     	;# 
  2271  041C                     	;# 
  2272  041D                     	;# 
  2273  041E                     	;# 
  2274  0FE4                     	;# 
  2275  0FE5                     	;# 
  2276  0FE6                     	;# 
  2277  0FE7                     	;# 
  2278  0FE8                     	;# 
  2279  0FE9                     	;# 
  2280  0FEA                     	;# 
  2281  0FEB                     	;# 
  2282  0FED                     	;# 
  2283  0FEE                     	;# 
  2284  0FEF                     	;# 
  2285                           
  2286                           	psect	idataBANK1
  2287  0801                     __pidataBANK1:
  2288                           
  2289                           ;initializer for _Button_StateMachine
  2290  0801  3478               	retlw	low _Button_State_Initializing
  2291  0802  3409               	retlw	high _Button_State_Initializing
  2292  0803  34D0               	retlw	low _Button_State_NotPressed
  2293  0804  340B               	retlw	high _Button_State_NotPressed
  2294  0805  3419               	retlw	low _Button_State_Pressed
  2295  0806  3409               	retlw	high _Button_State_Pressed
  2296                           
  2297                           ;initializer for _callback_notPressed
  2298  0807  346E               	retlw	low _Button_DefaultCallback
  2299  0808  3412               	retlw	high _Button_DefaultCallback
  2300                           
  2301                           ;initializer for _callback_pressed
  2302  0809  346E               	retlw	low _Button_DefaultCallback
  2303  080A  3412               	retlw	high _Button_DefaultCallback
  2304                           
  2305                           ;initializer for _Sensor_scanB
  2306  080B  34E8               	retlw	low _MTOUCH_CVD_ScanB_0
  2307  080C  3415               	retlw	high _MTOUCH_CVD_ScanB_0
  2308                           
  2309                           ;initializer for _Sensor_scanA
  2310  080D  34A8               	retlw	low _MTOUCH_CVD_ScanA_0
  2311  080E  3415               	retlw	high _MTOUCH_CVD_ScanA_0
  2312                           
  2313                           ;initializer for _callback_sampled
  2314  080F  3400               	retlw	low _Sensor_DefaultCallback
  2315  0810  3408               	retlw	high _Sensor_DefaultCallback
  2316                           
  2317                           ;initializer for _mtouch_sensor
  2318  0811  3400               	retlw	0
  2319  0812  34A8               	retlw	low _MTOUCH_CVD_ScanA_0
  2320  0813  3415               	retlw	high _MTOUCH_CVD_ScanA_0
  2321  0814  34E8               	retlw	low _MTOUCH_CVD_ScanB_0
  2322  0815  3415               	retlw	high _MTOUCH_CVD_ScanB_0
  2323  0816  3420               	retlw	32
  2324  0817  3400               	retlw	0
  2325  0818  3400               	retlw	0
  2326  0819  3400               	retlw	0
  2327  081A  3401               	retlw	1
  2328  081B  3488               	retlw	low _MTOUCH_CVD_ScanA_1
  2329  081C  3415               	retlw	high _MTOUCH_CVD_ScanA_1
  2330  081D  34C8               	retlw	low _MTOUCH_CVD_ScanB_1
  2331  081E  3415               	retlw	high _MTOUCH_CVD_ScanB_1
  2332  081F  3420               	retlw	32
  2333  0820  3400               	retlw	0
  2334  0821  3400               	retlw	0
  2335  0822  3400               	retlw	0
  2336                           
  2337                           	psect	stringtext1
  2338  1820                     __pstringtext1:
  2339  1820                     _TMR2_Timer_Period_const:
  2340  1820  3400               	retlw	0
  2341  1821  3400               	retlw	0
  2342  1822  34C8               	retlw	200
  2343  1823  3442               	retlw	66
  2344  1824                     __end_of_TMR2_Timer_Period_const:
  2345                           
  2346                           	psect	stringtext2
  2347  1800                     __pstringtext2:
  2348  1800                     _mtouch_button_init:
  2349  1800  3400               	retlw	0
  2350  1801  3400               	retlw	0
  2351  1802  3400               	retlw	0
  2352  1803  3400               	retlw	0
  2353  1804  3400               	retlw	0
  2354  1805  3400               	retlw	0
  2355  1806  3400               	retlw	0
  2356  1807  3400               	retlw	0
  2357  1808  3400               	retlw	0
  2358  1809  3400               	retlw	0
  2359  180A  3400               	retlw	0
  2360  180B  3400               	retlw	0
  2361  180C  3400               	retlw	0
  2362  180D  3400               	retlw	0
  2363  180E  3464               	retlw	100
  2364  180F  3401               	retlw	1
  2365  1810  3401               	retlw	1
  2366  1811  3401               	retlw	1
  2367  1812  3400               	retlw	0
  2368  1813  3400               	retlw	0
  2369  1814  3400               	retlw	0
  2370  1815  3400               	retlw	0
  2371  1816  3400               	retlw	0
  2372  1817  3400               	retlw	0
  2373  1818  3400               	retlw	0
  2374  1819  3400               	retlw	0
  2375  181A  3400               	retlw	0
  2376  181B  3400               	retlw	0
  2377  181C  3400               	retlw	0
  2378  181D  3400               	retlw	0
  2379  181E  3464               	retlw	100
  2380  181F  3401               	retlw	1
  2381  1820                     __end_of_mtouch_button_init:
  2382                           
  2383                           	psect	stringtext3
  2384  1824                     __pstringtext3:
  2385  1824                     _HalfCycleACDuration_const:
  2386  1824  3400               	retlw	0
  2387  1825  3400               	retlw	0
  2388  1826  3420               	retlw	32
  2389  1827  3441               	retlw	65
  2390  1828                     __end_of_HalfCycleACDuration_const:
  2391                           
  2392                           	psect	nvBANK1
  2393  00C2                     __pnvBANK1:
  2394  00C2                     _TMR6_InterruptHandler:
  2395  00C2                     	ds	2
  2396  00C4                     _TMR4_InterruptHandler:
  2397  00C4                     	ds	2
  2398  00C6                     _TMR2_InterruptHandler:
  2399  00C6                     	ds	2
  2400  00C8                     _IOCAF2_InterruptHandler:
  2401  00C8                     	ds	2
  2402  000E                     _PORTCbits	set	14
  2403  001C                     _T2CONbits	set	28
  2404  001C                     _T2CON	set	28
  2405  001A                     _TMR2	set	26
  2406  001B                     _PR2	set	27
  2407  0011                     _PIR1bits	set	17
  2408  0013                     _PIR3bits	set	19
  2409  000B                     _INTCONbits	set	11
  2410  005F                     _GIE	set	95
  2411  009B                     _ADRES	set	155
  2412  0091                     _PIE1bits	set	145
  2413  0093                     _PIE3bits	set	147
  2414  0095                     _OPTION_REGbits	set	149
  2415  008E                     _TRISC	set	142
  2416  008D                     _TRISB	set	141
  2417  008C                     _TRISA	set	140
  2418  0097                     _WDTCON	set	151
  2419  0098                     _OSCTUNE	set	152
  2420  0099                     _OSCCON	set	153
  2421  009D                     _ADCON0bits	set	157
  2422  009E                     _ADCON1	set	158
  2423  009D                     _ADCON0	set	157
  2424  010E                     _LATCbits	set	270
  2425  011E                     _APFCON1	set	286
  2426  011D                     _APFCON0	set	285
  2427  010E                     _LATC	set	270
  2428  010D                     _LATB	set	269
  2429  010C                     _LATA	set	268
  2430  0116                     _BORCON	set	278
  2431  018C                     _ANSELA	set	396
  2432  018D                     _ANSELB	set	397
  2433  018E                     _ANSELC	set	398
  2434  020E                     _WPUC	set	526
  2435  020C                     _WPUA	set	524
  2436  020D                     _WPUB	set	525
  2437  0391                     _IOCAPbits	set	913
  2438  0392                     _IOCANbits	set	914
  2439  0393                     _IOCAFbits	set	915
  2440  041E                     _T6CON	set	1054
  2441  041C                     _TMR6	set	1052
  2442  041D                     _PR6	set	1053
  2443  0417                     _T4CONbits	set	1047
  2444  0417                     _T4CON	set	1047
  2445  0415                     _TMR4	set	1045
  2446  0416                     _PR4	set	1046
  2447                           
  2448                           	psect	cinit
  2449  002F                     start_initialization:	
  2450                           ; #config settings
  2451                           
  2452  002F                     __initialization:
  2453                           
  2454                           ; Initialize objects allocated to BANK1
  2455  002F  3001               	movlw	low __pidataBANK1
  2456  0030  0084               	movwf	4
  2457  0031  3088               	movlw	(high __pidataBANK1)| (0+128)
  2458  0032  0085               	movwf	5
  2459  0033  30A0               	movlw	low __pdataBANK1
  2460  0034  0086               	movwf	6
  2461  0035  3000               	movlw	high __pdataBANK1
  2462  0036  0087               	movwf	7
  2463  0037  3022               	movlw	34
  2464  0038  3192  22AF  3180   	fcall	init_ram
  2465                           
  2466                           ; Clear objects allocated to BANK0
  2467  003B  3066               	movlw	low __pbssBANK0
  2468  003C  0084               	movwf	4
  2469  003D  3000               	movlw	high __pbssBANK0
  2470  003E  0085               	movwf	5
  2471  003F  300A               	movlw	10
  2472  0040  3192  22A9  3180   	fcall	clear_ram0
  2473                           
  2474                           ; Clear objects allocated to BANK1
  2475  0043  30CA               	movlw	low __pbssBANK1
  2476  0044  0084               	movwf	4
  2477  0045  3000               	movlw	high __pbssBANK1
  2478  0046  0085               	movwf	5
  2479  0047  3008               	movlw	8
  2480  0048  3192  22A9  3180   	fcall	clear_ram0
  2481                           
  2482                           ; Clear objects allocated to BANK2
  2483  004B  3020               	movlw	low __pbssBANK2
  2484  004C  0084               	movwf	4
  2485  004D  3001               	movlw	high __pbssBANK2
  2486  004E  0085               	movwf	5
  2487  004F  3020               	movlw	32
  2488  0050  3192  22A9         	fcall	clear_ram0
  2489  0052                     end_of_initialization:	
  2490                           ;End of C runtime variable initialization code
  2491                           
  2492  0052                     __end_of__initialization:
  2493  0052  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2494  0053  0020               	movlb	0
  2495  0054  3196  2E08         	ljmp	_main	;jump to C main() function
  2496                           
  2497                           	psect	bssBANK0
  2498  0066                     __pbssBANK0:
  2499  0066                     _packet_sample:
  2500  0066                     	ds	2
  2501  0068                     _DimmerStatusFlag_g:
  2502  0068                     	ds	1
  2503  0069                     _mtouch_request_init:
  2504  0069                     	ds	1
  2505  006A                     _mtouch_time_toScan:
  2506  006A                     	ds	1
  2507  006B                     _sample_delay:
  2508  006B                     	ds	1
  2509  006C                     _packet_counter:
  2510  006C                     	ds	1
  2511  006D                     _currentScannSensor:
  2512  006D                     	ds	1
  2513  006E                     _sensor_globalFlags:
  2514  006E                     	ds	1
  2515  006F                     MTOUCH_Random@seed:
  2516  006F                     	ds	1
  2517                           
  2518                           	psect	bssBANK1
  2519  00CA                     __pbssBANK1:
  2520  00CA                     TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4:
  2521  00CA                     	ds	2
  2522  00CC                     TMR2_Drive_TRIAC_isr@counter_tmr2:
  2523  00CC                     	ds	2
  2524  00CE                     _tmr2_required_counter_steps_g:
  2525  00CE                     	ds	2
  2526  00D0                     _kirFlag:
  2527  00D0                     	ds	1
  2528  00D1                     _lowpowerActivated:
  2529  00D1                     	ds	1
  2530                           
  2531                           	psect	dataBANK1
  2532  00A0                     __pdataBANK1:
  2533  00A0                     _Button_StateMachine:
  2534  00A0                     	ds	6
  2535  00A6                     _callback_notPressed:
  2536  00A6                     	ds	2
  2537  00A8                     _callback_pressed:
  2538  00A8                     	ds	2
  2539  00AA                     _Sensor_scanB:
  2540  00AA                     	ds	2
  2541  00AC                     _Sensor_scanA:
  2542  00AC                     	ds	2
  2543  00AE                     _callback_sampled:
  2544  00AE                     	ds	2
  2545  00B0                     _mtouch_sensor:
  2546  00B0                     	ds	18
  2547                           
  2548                           	psect	bssBANK2
  2549  0120                     __pbssBANK2:
  2550  0120                     _mtouch_button:
  2551  0120                     	ds	32
  2552                           
  2553                           	psect	inittext
  2554  12AF                     init_ram:
  2555  12AF  00FE               	movwf	126
  2556  12B0                     initloop:
  2557  12B0  0012               	moviw fsr0++
  2558  12B1  001E               	movwi fsr1++
  2559  12B2  0BFE               	decfsz	126,f
  2560  12B3  2AB0               	goto	initloop
  2561  12B4  3400               	retlw	0
  2562                           
  2563                           	psect	clrtext
  2564  12A9                     clear_ram0:	
  2565                           ;	Called with FSR0 containing the base address, and
  2566                           ;	WREG with the size to clear
  2567                           
  2568  12A9  0064               	clrwdt	;clear the watchdog before getting into this loop
  2569  12AA                     clrloop0:
  2570  12AA  0180               	clrf	0	;clear RAM location pointed to by FSR
  2571  12AB  3101               	addfsr 0,1
  2572  12AC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2573  12AD  2AAA               	goto	clrloop0	;have we reached the end yet?
  2574  12AE  3400               	retlw	0	;all done for this memory range, return
  2575                           
  2576                           	psect	cstackCOMMON
  2577  0070                     __pcstackCOMMON:
  2578  0070                     ?_Sensor_DefaultCallback:
  2579  0070                     ?_MTOUCH_CVD_ScanA_0:	
  2580                           ; 1 bytes @ 0x0
  2581                           
  2582  0070                     ??_MTOUCH_CVD_ScanA_0:	
  2583                           ; 1 bytes @ 0x0
  2584                           
  2585  0070                     ?_MTOUCH_CVD_ScanB_0:	
  2586                           ; 1 bytes @ 0x0
  2587                           
  2588  0070                     ??_MTOUCH_CVD_ScanB_0:	
  2589                           ; 1 bytes @ 0x0
  2590                           
  2591  0070                     ?_MTOUCH_CVD_ScanA_1:	
  2592                           ; 1 bytes @ 0x0
  2593                           
  2594  0070                     ??_MTOUCH_CVD_ScanA_1:	
  2595                           ; 1 bytes @ 0x0
  2596                           
  2597  0070                     ?_MTOUCH_CVD_ScanB_1:	
  2598                           ; 1 bytes @ 0x0
  2599                           
  2600  0070                     ??_MTOUCH_CVD_ScanB_1:	
  2601                           ; 1 bytes @ 0x0
  2602                           
  2603  0070                     ?_MTOUCH_Sensor_Enable:	
  2604                           ; 1 bytes @ 0x0
  2605                           
  2606  0070                     ?_Sensor_Sampled_Reset:	
  2607                           ; 1 bytes @ 0x0
  2608                           
  2609  0070                     ??_Sensor_Sampled_Reset:	
  2610                           ; 1 bytes @ 0x0
  2611                           
  2612  0070                     ?_Sensor_Service:	
  2613                           ; 1 bytes @ 0x0
  2614                           
  2615  0070                     ?_Sensor_Acquisition:	
  2616                           ; 1 bytes @ 0x0
  2617                           
  2618  0070                     ?_Sensor_isEnabled:	
  2619                           ; 1 bytes @ 0x0
  2620                           
  2621  0070                     ??_Sensor_isEnabled:	
  2622                           ; 1 bytes @ 0x0
  2623                           
  2624  0070                     ?_Sensor_RawSample_Update:	
  2625                           ; 1 bytes @ 0x0
  2626                           
  2627  0070                     ??_Sensor_RawSample_Update:	
  2628                           ; 1 bytes @ 0x0
  2629                           
  2630  0070                     ?_Sensor_setSampled:	
  2631                           ; 1 bytes @ 0x0
  2632                           
  2633  0070                     ??_Sensor_setSampled:	
  2634                           ; 1 bytes @ 0x0
  2635                           
  2636  0070                     ?_Sensor_Acq_ExecutePacket:	
  2637                           ; 1 bytes @ 0x0
  2638                           
  2639  0070                     ?_Sensor_setActive:	
  2640                           ; 1 bytes @ 0x0
  2641                           
  2642  0070                     ??_Sensor_setActive:	
  2643                           ; 1 bytes @ 0x0
  2644                           
  2645  0070                     ?_Sensor_setInactive:	
  2646                           ; 1 bytes @ 0x0
  2647                           
  2648  0070                     ??_Sensor_setInactive:	
  2649                           ; 1 bytes @ 0x0
  2650                           
  2651  0070                     ?_Sensor_setScanFunction:	
  2652                           ; 1 bytes @ 0x0
  2653                           
  2654  0070                     ??_Sensor_setScanFunction:	
  2655                           ; 1 bytes @ 0x0
  2656                           
  2657  0070                     ?_Sensor_Acq_ExecuteScan:	
  2658                           ; 1 bytes @ 0x0
  2659                           
  2660  0070                     ?_MTOUCH_Delay:	
  2661                           ; 1 bytes @ 0x0
  2662                           
  2663  0070                     ??_MTOUCH_Delay:	
  2664                           ; 1 bytes @ 0x0
  2665                           
  2666  0070                     ?_MTOUCH_Service_Mainloop:	
  2667                           ; 1 bytes @ 0x0
  2668                           
  2669  0070                     ?_MTOUCH_Button_isPressed:	
  2670                           ; 1 bytes @ 0x0
  2671                           
  2672  0070                     ??_MTOUCH_Button_isPressed:	
  2673                           ; 1 bytes @ 0x0
  2674                           
  2675  0070                     ?_Button_DefaultCallback:	
  2676                           ; 1 bytes @ 0x0
  2677                           
  2678  0070                     ?_memcpy:	
  2679                           ; 1 bytes @ 0x0
  2680                           
  2681  0070                     ?_Button_Service:	
  2682                           ; 1 bytes @ 0x0
  2683                           
  2684  0070                     ?_Button_Reading_Update:	
  2685                           ; 1 bytes @ 0x0
  2686                           
  2687  0070                     ?_Button_Deviation_Update:	
  2688                           ; 1 bytes @ 0x0
  2689                           
  2690  0070                     ??_Button_Deviation_Update:	
  2691                           ; 1 bytes @ 0x0
  2692                           
  2693  0070                     ?_Button_Baseline_Initialize:	
  2694                           ; 1 bytes @ 0x0
  2695                           
  2696  0070                     ?_Button_Baseline_Update:	
  2697                           ; 1 bytes @ 0x0
  2698                           
  2699  0070                     ??_Button_Baseline_Update:	
  2700                           ; 1 bytes @ 0x0
  2701                           
  2702  0070                     ?_Button_Tick_helper:	
  2703                           ; 1 bytes @ 0x0
  2704                           
  2705  0070                     ??_Button_Tick_helper:	
  2706                           ; 1 bytes @ 0x0
  2707                           
  2708  0070                     ?_Button_Reading_Update_Helper:	
  2709                           ; 1 bytes @ 0x0
  2710                           
  2711  0070                     ?_MTOUCH_needReburst:	
  2712                           ; 1 bytes @ 0x0
  2713                           
  2714  0070                     ??_MTOUCH_needReburst:	
  2715                           ; 1 bytes @ 0x0
  2716                           
  2717  0070                     ?_MTOUCH_Tick:	
  2718                           ; 1 bytes @ 0x0
  2719                           
  2720  0070                     ?_PIN_MANAGER_Initialize:	
  2721                           ; 1 bytes @ 0x0
  2722                           
  2723  0070                     ?_OSCILLATOR_Initialize:	
  2724                           ; 1 bytes @ 0x0
  2725                           
  2726  0070                     ??_OSCILLATOR_Initialize:	
  2727                           ; 1 bytes @ 0x0
  2728                           
  2729  0070                     ?_WDT_Initialize:	
  2730                           ; 1 bytes @ 0x0
  2731                           
  2732  0070                     ??_WDT_Initialize:	
  2733                           ; 1 bytes @ 0x0
  2734                           
  2735  0070                     ?_TMR6_Initialize:	
  2736                           ; 1 bytes @ 0x0
  2737                           
  2738  0070                     ?_TMR4_Initialize:	
  2739                           ; 1 bytes @ 0x0
  2740                           
  2741  0070                     ?_TMR2_Initialize:	
  2742                           ; 1 bytes @ 0x0
  2743                           
  2744  0070                     ?_IOCAF2_SetInterruptHandler:	
  2745                           ; 1 bytes @ 0x0
  2746                           
  2747  0070                     ?_IOCAF2_DefaultInterruptHandler:	
  2748                           ; 1 bytes @ 0x0
  2749                           
  2750  0070                     ??_IOCAF2_DefaultInterruptHandler:	
  2751                           ; 1 bytes @ 0x0
  2752                           
  2753  0070                     ?_IOCAF2_ISR:	
  2754                           ; 1 bytes @ 0x0
  2755                           
  2756  0070                     ??_IOCAF2_ISR:	
  2757                           ; 1 bytes @ 0x0
  2758                           
  2759  0070                     ?_TMR6_ISR:	
  2760                           ; 1 bytes @ 0x0
  2761                           
  2762  0070                     ??_TMR6_ISR:	
  2763                           ; 1 bytes @ 0x0
  2764                           
  2765  0070                     ?_TMR4_ISR:	
  2766                           ; 1 bytes @ 0x0
  2767                           
  2768  0070                     ??_TMR4_ISR:	
  2769                           ; 1 bytes @ 0x0
  2770                           
  2771  0070                     ?_TMR2_ISR:	
  2772                           ; 1 bytes @ 0x0
  2773                           
  2774  0070                     ??_TMR2_ISR:	
  2775                           ; 1 bytes @ 0x0
  2776                           
  2777  0070                     ?_TMR2_SetInterruptHandler:	
  2778                           ; 1 bytes @ 0x0
  2779                           
  2780  0070                     ?_TMR2_DefaultInterruptHandler:	
  2781                           ; 1 bytes @ 0x0
  2782                           
  2783  0070                     ??_TMR2_DefaultInterruptHandler:	
  2784                           ; 1 bytes @ 0x0
  2785                           
  2786  0070                     ?_TMR4_SetInterruptHandler:	
  2787                           ; 1 bytes @ 0x0
  2788                           
  2789  0070                     ?_TMR4_DefaultInterruptHandler:	
  2790                           ; 1 bytes @ 0x0
  2791                           
  2792  0070                     ??_TMR4_DefaultInterruptHandler:	
  2793                           ; 1 bytes @ 0x0
  2794                           
  2795  0070                     ?_Init_Function:	
  2796                           ; 1 bytes @ 0x0
  2797                           
  2798  0070                     ?_Zero_Detection_isr:	
  2799                           ; 1 bytes @ 0x0
  2800                           
  2801  0070                     ??_Zero_Detection_isr:	
  2802                           ; 1 bytes @ 0x0
  2803                           
  2804  0070                     ?_TMR2_Drive_TRIAC_isr:	
  2805                           ; 1 bytes @ 0x0
  2806                           
  2807  0070                     ??_TMR2_Drive_TRIAC_isr:	
  2808                           ; 1 bytes @ 0x0
  2809                           
  2810  0070                     ?_TMR4_Wroking_Blink_AlarmLED_isr:	
  2811                           ; 1 bytes @ 0x0
  2812                           
  2813  0070                     ??_TMR4_Wroking_Blink_AlarmLED_isr:	
  2814                           ; 1 bytes @ 0x0
  2815                           
  2816  0070                     ?_StartTouchDetection:	
  2817                           ; 1 bytes @ 0x0
  2818                           
  2819  0070                     ?_StartStop_AlarmLED:	
  2820                           ; 1 bytes @ 0x0
  2821                           
  2822  0070                     ??_StartStop_AlarmLED:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825  0070                     ?_StartStop_AlarmLED_Blink:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828  0070                     ??_StartStop_AlarmLED_Blink:	
  2829                           ; 1 bytes @ 0x0
  2830                           
  2831  0070                     ?_StartStop_Fan:	
  2832                           ; 1 bytes @ 0x0
  2833                           
  2834  0070                     ??_StartStop_Fan:	
  2835                           ; 1 bytes @ 0x0
  2836                           
  2837  0070                     ?_StartStop_Buzzer:	
  2838                           ; 1 bytes @ 0x0
  2839                           
  2840  0070                     ??_StartStop_Buzzer:	
  2841                           ; 1 bytes @ 0x0
  2842                           
  2843  0070                     ?_StartStop_Dimmer:	
  2844                           ; 1 bytes @ 0x0
  2845                           
  2846  0070                     ?_StopTouchDetection:	
  2847                           ; 1 bytes @ 0x0
  2848                           
  2849  0070                     ?_StartHeater:	
  2850                           ; 1 bytes @ 0x0
  2851                           
  2852  0070                     ?_TMR6_SetInterruptHandler:	
  2853                           ; 1 bytes @ 0x0
  2854                           
  2855  0070                     ?_TMR6_DefaultInterruptHandler:	
  2856                           ; 1 bytes @ 0x0
  2857                           
  2858  0070                     ??_TMR6_DefaultInterruptHandler:	
  2859                           ; 1 bytes @ 0x0
  2860                           
  2861  0070                     ?_MTOUCH_Random:	
  2862                           ; 1 bytes @ 0x0
  2863                           
  2864  0070                     ??_MTOUCH_Random:	
  2865                           ; 1 bytes @ 0x0
  2866                           
  2867  0070                     ?_MTOUCH_Sensor_Initialize:	
  2868                           ; 1 bytes @ 0x0
  2869                           
  2870  0070                     ?_MTOUCH_Sensor_InitializeAll:	
  2871                           ; 1 bytes @ 0x0
  2872                           
  2873  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	
  2874                           ; 1 bytes @ 0x0
  2875                           
  2876  0070                     ??_MTOUCH_Sensor_Scan_Initialize:	
  2877                           ; 1 bytes @ 0x0
  2878                           
  2879  0070                     ?_MTOUCH_Sensor_SampleAll:	
  2880                           ; 1 bytes @ 0x0
  2881                           
  2882  0070                     ?_MTOUCH_Sensor_isCalibrated:	
  2883                           ; 1 bytes @ 0x0
  2884                           
  2885  0070                     ??_MTOUCH_Sensor_isCalibrated:	
  2886                           ; 1 bytes @ 0x0
  2887                           
  2888  0070                     ?_MTOUCH_Sensor_Calibrate:	
  2889                           ; 1 bytes @ 0x0
  2890                           
  2891  0070                     ??_MTOUCH_Sensor_Calibrate:	
  2892                           ; 1 bytes @ 0x0
  2893                           
  2894  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	
  2895                           ; 1 bytes @ 0x0
  2896                           
  2897  0070                     ?_MTOUCH_Sensor_wasSampled:	
  2898                           ; 1 bytes @ 0x0
  2899                           
  2900  0070                     ?_MTOUCH_Button_Initialize:	
  2901                           ; 1 bytes @ 0x0
  2902                           
  2903  0070                     ??_MTOUCH_Button_Initialize:	
  2904                           ; 1 bytes @ 0x0
  2905                           
  2906  0070                     ?_MTOUCH_Button_InitializeAll:	
  2907                           ; 1 bytes @ 0x0
  2908                           
  2909  0070                     ?_MTOUCH_Button_ServiceAll:	
  2910                           ; 1 bytes @ 0x0
  2911                           
  2912  0070                     ?_MTOUCH_Button_Tick:	
  2913                           ; 1 bytes @ 0x0
  2914                           
  2915  0070                     ?_MTOUCH_Initialize:	
  2916                           ; 1 bytes @ 0x0
  2917                           
  2918  0070                     ?_SYSTEM_Initialize:	
  2919                           ; 1 bytes @ 0x0
  2920                           
  2921  0070                     ?_PIN_MANAGER_IOC:	
  2922                           ; 1 bytes @ 0x0
  2923                           
  2924  0070                     ??_PIN_MANAGER_IOC:	
  2925                           ; 1 bytes @ 0x0
  2926                           
  2927  0070                     ?_INTERRUPT_InterruptManager:	
  2928                           ; 1 bytes @ 0x0
  2929                           
  2930  0070                     ??_INTERRUPT_InterruptManager:	
  2931                           ; 1 bytes @ 0x0
  2932                           
  2933  0070                     ?_TMR2_StartTimer:	
  2934                           ; 1 bytes @ 0x0
  2935                           
  2936  0070                     ??_TMR2_StartTimer:	
  2937                           ; 1 bytes @ 0x0
  2938                           
  2939  0070                     ?_TMR2_StopTimer:	
  2940                           ; 1 bytes @ 0x0
  2941                           
  2942  0070                     ??_TMR2_StopTimer:	
  2943                           ; 1 bytes @ 0x0
  2944                           
  2945  0070                     ?_TMR4_StartTimer:	
  2946                           ; 1 bytes @ 0x0
  2947                           
  2948  0070                     ??_TMR4_StartTimer:	
  2949                           ; 1 bytes @ 0x0
  2950                           
  2951  0070                     ?_TMR4_StopTimer:	
  2952                           ; 1 bytes @ 0x0
  2953                           
  2954  0070                     ??_TMR4_StopTimer:	
  2955                           ; 1 bytes @ 0x0
  2956                           
  2957  0070                     ?_main:	
  2958                           ; 1 bytes @ 0x0
  2959                           
  2960  0070                     ?___bmul:	
  2961                           ; 1 bytes @ 0x0
  2962                           
  2963  0070                     ?_abs:	
  2964                           ; 1 bytes @ 0x0
  2965                           
  2966  0070                     ?__Umul8_16:	
  2967                           ; 2 bytes @ 0x0
  2968                           
  2969  0070                     ?___fladd:	
  2970                           ; 2 bytes @ 0x0
  2971                           
  2972  0070                     Sensor_RawSample_Update@sensor:	
  2973                           ; 4 bytes @ 0x0
  2974                           
  2975  0070                     Sensor_DefaultCallback@sensor:	
  2976                           ; 1 bytes @ 0x0
  2977                           
  2978  0070                     Sensor_setScanFunction@sensor:	
  2979                           ; 1 bytes @ 0x0
  2980                           
  2981  0070                     Sensor_isEnabled@sensor:	
  2982                           ; 1 bytes @ 0x0
  2983                           
  2984  0070                     Sensor_setActive@sensor:	
  2985                           ; 1 bytes @ 0x0
  2986                           
  2987  0070                     Sensor_setInactive@sensor:	
  2988                           ; 1 bytes @ 0x0
  2989                           
  2990  0070                     MTOUCH_Sensor_isCalibrated@sensor:	
  2991                           ; 1 bytes @ 0x0
  2992                           
  2993  0070                     MTOUCH_Sensor_Calibrate@sensor:	
  2994                           ; 1 bytes @ 0x0
  2995                           
  2996  0070                     Sensor_Sampled_Reset@sensor:	
  2997                           ; 1 bytes @ 0x0
  2998                           
  2999  0070                     Sensor_setSampled@sensor:	
  3000                           ; 1 bytes @ 0x0
  3001                           
  3002  0070                     Button_DefaultCallback@button:	
  3003                           ; 1 bytes @ 0x0
  3004                           
  3005  0070                     StartStop_AlarmLED@OnOff:	
  3006                           ; 1 bytes @ 0x0
  3007                           
  3008  0070                     StartStop_AlarmLED_Blink@OnOff:	
  3009                           ; 1 bytes @ 0x0
  3010                           
  3011  0070                     StartStop_Fan@OnOff:	
  3012                           ; 1 bytes @ 0x0
  3013                           
  3014  0070                     StartStop_Buzzer@OnOff:	
  3015                           ; 1 bytes @ 0x0
  3016                           
  3017  0070                     ___bmul@multiplicand:	
  3018                           ; 1 bytes @ 0x0
  3019                           
  3020  0070                     __Umul8_16@multiplicand:	
  3021                           ; 1 bytes @ 0x0
  3022                           
  3023  0070                     IOCAF2_SetInterruptHandler@InterruptHandler:	
  3024                           ; 1 bytes @ 0x0
  3025                           
  3026  0070                     TMR2_SetInterruptHandler@InterruptHandler:	
  3027                           ; 2 bytes @ 0x0
  3028                           
  3029  0070                     TMR4_SetInterruptHandler@InterruptHandler:	
  3030                           ; 2 bytes @ 0x0
  3031                           
  3032  0070                     TMR6_SetInterruptHandler@InterruptHandler:	
  3033                           ; 2 bytes @ 0x0
  3034                           
  3035  0070                     abs@a:	
  3036                           ; 2 bytes @ 0x0
  3037                           
  3038  0070                     memcpy@s1:	
  3039                           ; 2 bytes @ 0x0
  3040                           
  3041  0070                     ___fladd@b:	
  3042                           ; 2 bytes @ 0x0
  3043                           
  3044                           
  3045                           ; 4 bytes @ 0x0
  3046  0070                     	ds	1
  3047  0071                     ??_Sensor_DefaultCallback:
  3048  0071                     ??_Button_DefaultCallback:	
  3049                           ; 1 bytes @ 0x1
  3050                           
  3051  0071                     ??_MTOUCH_Sensor_Sampled_ResetAll:	
  3052                           ; 1 bytes @ 0x1
  3053                           
  3054  0071                     ??___bmul:	
  3055                           ; 1 bytes @ 0x1
  3056                           
  3057  0071                     MTOUCH_Delay@i:	
  3058                           ; 1 bytes @ 0x1
  3059                           
  3060  0071                     MTOUCH_Button_isPressed@name:	
  3061                           ; 1 bytes @ 0x1
  3062                           
  3063                           
  3064                           ; 1 bytes @ 0x1
  3065  0071                     	ds	1
  3066  0072                     ??_abs:
  3067  0072                     ??_PIN_MANAGER_Initialize:	
  3068                           ; 1 bytes @ 0x2
  3069                           
  3070  0072                     ??_TMR6_Initialize:	
  3071                           ; 1 bytes @ 0x2
  3072                           
  3073  0072                     ??_TMR4_Initialize:	
  3074                           ; 1 bytes @ 0x2
  3075                           
  3076  0072                     ??_TMR2_Initialize:	
  3077                           ; 1 bytes @ 0x2
  3078                           
  3079  0072                     ??_IOCAF2_SetInterruptHandler:	
  3080                           ; 1 bytes @ 0x2
  3081                           
  3082  0072                     ??_TMR2_SetInterruptHandler:	
  3083                           ; 1 bytes @ 0x2
  3084                           
  3085  0072                     ??_TMR4_SetInterruptHandler:	
  3086                           ; 1 bytes @ 0x2
  3087                           
  3088  0072                     ??_TMR6_SetInterruptHandler:	
  3089                           ; 1 bytes @ 0x2
  3090                           
  3091  0072                     ??__Umul8_16:	
  3092                           ; 1 bytes @ 0x2
  3093                           
  3094  0072                     MTOUCH_Sensor_Sampled_ResetAll@sensor:	
  3095                           ; 1 bytes @ 0x2
  3096                           
  3097  0072                     MTOUCH_Button_Initialize@name:	
  3098                           ; 1 bytes @ 0x2
  3099                           
  3100  0072                     Button_Tick_helper@button:	
  3101                           ; 1 bytes @ 0x2
  3102                           
  3103  0072                     ___bmul@product:	
  3104                           ; 1 bytes @ 0x2
  3105                           
  3106  0072                     memcpy@n:	
  3107                           ; 1 bytes @ 0x2
  3108                           
  3109                           
  3110                           ; 2 bytes @ 0x2
  3111  0072                     	ds	1
  3112  0073                     ??_MTOUCH_Button_Tick:
  3113  0073                     MTOUCH_Button_Initialize@button:	
  3114                           ; 1 bytes @ 0x3
  3115                           
  3116  0073                     ___bmul@multiplier:	
  3117                           ; 1 bytes @ 0x3
  3118                           
  3119                           
  3120                           ; 1 bytes @ 0x3
  3121  0073                     	ds	1
  3122  0074                     ??_MTOUCH_Sensor_Enable:
  3123  0074                     ??_Sensor_Acq_ExecuteScan:	
  3124                           ; 1 bytes @ 0x4
  3125                           
  3126  0074                     ??_memcpy:	
  3127                           ; 1 bytes @ 0x4
  3128                           
  3129  0074                     ??_MTOUCH_Sensor_wasSampled:	
  3130                           ; 1 bytes @ 0x4
  3131                           
  3132  0074                     ?_MTOUCH_Sensor_RawSample_Get:	
  3133                           ; 1 bytes @ 0x4
  3134                           
  3135  0074                     MTOUCH_Button_Tick@i:	
  3136                           ; 2 bytes @ 0x4
  3137                           
  3138  0074                     __Umul8_16@product:	
  3139                           ; 1 bytes @ 0x4
  3140                           
  3141  0074                     ___fladd@a:	
  3142                           ; 2 bytes @ 0x4
  3143                           
  3144                           
  3145                           ; 4 bytes @ 0x4
  3146  0074                     	ds	1
  3147  0075                     ??_MTOUCH_Tick:
  3148  0075                     MTOUCH_Sensor_Enable@sensor:	
  3149                           ; 1 bytes @ 0x5
  3150                           
  3151  0075                     MTOUCH_Sensor_wasSampled@sensor:	
  3152                           ; 1 bytes @ 0x5
  3153                           
  3154  0075                     memcpy@s:	
  3155                           ; 1 bytes @ 0x5
  3156                           
  3157                           
  3158                           ; 2 bytes @ 0x5
  3159  0075                     	ds	1
  3160  0076                     ??_MTOUCH_Sensor_Initialize:
  3161  0076                     ??_MTOUCH_Sensor_RawSample_Get:	
  3162                           ; 1 bytes @ 0x6
  3163                           
  3164  0076                     Button_Baseline_Update@button:	
  3165                           ; 1 bytes @ 0x6
  3166                           
  3167  0076                     Sensor_Acq_ExecuteScan@result:	
  3168                           ; 1 bytes @ 0x6
  3169                           
  3170  0076                     __Umul8_16@word_mpld:	
  3171                           ; 2 bytes @ 0x6
  3172                           
  3173                           
  3174                           ; 2 bytes @ 0x6
  3175  0076                     	ds	1
  3176  0077                     MTOUCH_Sensor_Initialize@sensor:
  3177  0077                     MTOUCH_Sensor_RawSample_Get@name:	
  3178                           ; 1 bytes @ 0x7
  3179                           
  3180  0077                     memcpy@tmp:	
  3181                           ; 1 bytes @ 0x7
  3182                           
  3183                           
  3184                           ; 1 bytes @ 0x7
  3185  0077                     	ds	1
  3186  0078                     ??_Sensor_Acq_ExecutePacket:
  3187  0078                     ??_Button_Baseline_Initialize:	
  3188                           ; 1 bytes @ 0x8
  3189                           
  3190  0078                     ??_Button_Reading_Update_Helper:	
  3191                           ; 1 bytes @ 0x8
  3192                           
  3193  0078                     ??_MTOUCH_Sensor_InitializeAll:	
  3194                           ; 1 bytes @ 0x8
  3195                           
  3196  0078                     ___fladd@signs:	
  3197                           ; 1 bytes @ 0x8
  3198                           
  3199  0078                     __Umul8_16@multiplier:	
  3200                           ; 1 bytes @ 0x8
  3201                           
  3202  0078                     memcpy@d1:	
  3203                           ; 1 bytes @ 0x8
  3204                           
  3205                           
  3206                           ; 1 bytes @ 0x8
  3207  0078                     	ds	1
  3208  0079                     ??___flmul:
  3209  0079                     MTOUCH_Sensor_InitializeAll@sensor:	
  3210                           ; 1 bytes @ 0x9
  3211                           
  3212  0079                     Sensor_Acq_ExecutePacket@ADCON0_temp:	
  3213                           ; 1 bytes @ 0x9
  3214                           
  3215  0079                     ___fladd@aexp:	
  3216                           ; 1 bytes @ 0x9
  3217                           
  3218  0079                     memcpy@d:	
  3219                           ; 1 bytes @ 0x9
  3220                           
  3221                           
  3222                           ; 1 bytes @ 0x9
  3223  0079                     	ds	1
  3224  007A                     ??_MTOUCH_Button_InitializeAll:
  3225  007A                     Sensor_Acq_ExecutePacket@ADCON1_temp:	
  3226                           ; 1 bytes @ 0xA
  3227                           
  3228  007A                     Button_Reading_Update_Helper@button:	
  3229                           ; 1 bytes @ 0xA
  3230                           
  3231  007A                     ___fladd@bexp:	
  3232                           ; 1 bytes @ 0xA
  3233                           
  3234                           
  3235                           ; 1 bytes @ 0xA
  3236  007A                     	ds	1
  3237  007B                     ??_Button_Reading_Update:
  3238  007B                     Sensor_Acq_ExecutePacket@GIE_state:	
  3239                           ; 1 bytes @ 0xB
  3240                           
  3241  007B                     MTOUCH_Button_InitializeAll@button:	
  3242                           ; 1 bytes @ 0xB
  3243                           
  3244  007B                     Button_Reading_Update@button:	
  3245                           ; 1 bytes @ 0xB
  3246                           
  3247  007B                     ___fladd@grs:	
  3248                           ; 1 bytes @ 0xB
  3249                           
  3250                           
  3251                           ; 1 bytes @ 0xB
  3252  007B                     	ds	1
  3253  007C                     ??_MTOUCH_Initialize:
  3254  007C                     ??_SYSTEM_Initialize:	
  3255                           ; 1 bytes @ 0xC
  3256                           
  3257  007C                     Sensor_Acq_ExecutePacket@error:	
  3258                           ; 1 bytes @ 0xC
  3259                           
  3260  007C                     Button_Baseline_Initialize@button:	
  3261                           ; 1 bytes @ 0xC
  3262                           
  3263                           
  3264                           ; 1 bytes @ 0xC
  3265  007C                     	ds	1
  3266  007D                     ?_Button_State_Initializing:
  3267  007D                     ?_Button_State_NotPressed:	
  3268                           ; 1 bytes @ 0xD
  3269                           
  3270  007D                     ?_Button_State_Pressed:	
  3271                           ; 1 bytes @ 0xD
  3272                           
  3273  007D                     Sensor_Acq_ExecutePacket@sensor:	
  3274                           ; 1 bytes @ 0xD
  3275                           
  3276  007D                     Button_State_Initializing@button:	
  3277                           ; 1 bytes @ 0xD
  3278                           
  3279  007D                     Button_State_NotPressed@button:	
  3280                           ; 1 bytes @ 0xD
  3281                           
  3282  007D                     Button_State_Pressed@button:	
  3283                           ; 1 bytes @ 0xD
  3284                           
  3285                           
  3286                           ; 1 bytes @ 0xD
  3287  007D                     	ds	1
  3288  007E                     ??_Init_Function:
  3289  007E                     ??_StartTouchDetection:	
  3290                           ; 1 bytes @ 0xE
  3291                           
  3292  007E                     ??_StartStop_Dimmer:	
  3293                           ; 1 bytes @ 0xE
  3294                           
  3295  007E                     ??_StopTouchDetection:	
  3296                           ; 1 bytes @ 0xE
  3297                           
  3298  007E                     ??_SetDimmer:	
  3299                           ; 1 bytes @ 0xE
  3300                           
  3301  007E                     ??_main:	
  3302                           ; 1 bytes @ 0xE
  3303                           
  3304  007E                     ??___flsub:	
  3305                           ; 1 bytes @ 0xE
  3306                           
  3307                           
  3308                           	psect	cstackBANK0
  3309  0020                     __pcstackBANK0:	
  3310                           ; 1 bytes @ 0xE
  3311                           
  3312  0020                     ??_Sensor_Acquisition:
  3313  0020                     ??_Button_State_Initializing:	
  3314                           ; 1 bytes @ 0x0
  3315                           
  3316  0020                     ??_Button_State_NotPressed:	
  3317                           ; 1 bytes @ 0x0
  3318                           
  3319  0020                     ??_Button_State_Pressed:	
  3320                           ; 1 bytes @ 0x0
  3321                           
  3322  0020                     ??___fladd:	
  3323                           ; 1 bytes @ 0x0
  3324                           
  3325  0020                     ?___flmul:	
  3326                           ; 1 bytes @ 0x0
  3327                           
  3328  0020                     Button_Deviation_Update@button:	
  3329                           ; 4 bytes @ 0x0
  3330                           
  3331  0020                     ___flmul@b:	
  3332                           ; 1 bytes @ 0x0
  3333                           
  3334                           
  3335                           ; 4 bytes @ 0x0
  3336  0020                     	ds	1
  3337  0021                     Sensor_Acquisition@retry:
  3338  0021                     Button_Deviation_Update@deviation:	
  3339                           ; 1 bytes @ 0x1
  3340                           
  3341                           
  3342                           ; 4 bytes @ 0x1
  3343  0021                     	ds	1
  3344  0022                     Sensor_Acquisition@sensor:
  3345                           
  3346                           ; 1 bytes @ 0x2
  3347  0022                     	ds	1
  3348  0023                     ??_Sensor_Service:
  3349                           
  3350                           ; 1 bytes @ 0x3
  3351  0023                     	ds	1
  3352  0024                     ___flmul@a:
  3353                           
  3354                           ; 4 bytes @ 0x4
  3355  0024                     	ds	1
  3356  0025                     ??_Button_Service:
  3357  0025                     Sensor_Service@name:	
  3358                           ; 1 bytes @ 0x5
  3359                           
  3360                           
  3361                           ; 1 bytes @ 0x5
  3362  0025                     	ds	1
  3363  0026                     Sensor_Service@error:
  3364                           
  3365                           ; 1 bytes @ 0x6
  3366  0026                     	ds	1
  3367  0027                     Sensor_Service@sensor:
  3368  0027                     Button_Service@name:	
  3369                           ; 1 bytes @ 0x7
  3370                           
  3371                           
  3372                           ; 1 bytes @ 0x7
  3373  0027                     	ds	1
  3374  0028                     ??_MTOUCH_Sensor_SampleAll:
  3375  0028                     Button_Service@button:	
  3376                           ; 1 bytes @ 0x8
  3377                           
  3378  0028                     ___flmul@sign:	
  3379                           ; 1 bytes @ 0x8
  3380                           
  3381                           
  3382                           ; 1 bytes @ 0x8
  3383  0028                     	ds	1
  3384  0029                     ??_MTOUCH_Button_ServiceAll:
  3385  0029                     MTOUCH_Sensor_SampleAll@sensor:	
  3386                           ; 1 bytes @ 0x9
  3387                           
  3388  0029                     ___flmul@aexp:	
  3389                           ; 1 bytes @ 0x9
  3390                           
  3391                           
  3392                           ; 1 bytes @ 0x9
  3393  0029                     	ds	1
  3394  002A                     MTOUCH_Button_ServiceAll@button:
  3395  002A                     ___flmul@grs:	
  3396                           ; 1 bytes @ 0xA
  3397                           
  3398                           
  3399                           ; 4 bytes @ 0xA
  3400  002A                     	ds	1
  3401  002B                     ??_MTOUCH_Service_Mainloop:
  3402                           
  3403                           ; 1 bytes @ 0xB
  3404  002B                     	ds	3
  3405  002E                     ___flmul@bexp:
  3406                           
  3407                           ; 1 bytes @ 0xE
  3408  002E                     	ds	1
  3409  002F                     ___flmul@prod:
  3410                           
  3411                           ; 4 bytes @ 0xF
  3412  002F                     	ds	4
  3413  0033                     ___flmul@temp:
  3414                           
  3415                           ; 2 bytes @ 0x13
  3416  0033                     	ds	2
  3417  0035                     ?___fldiv:
  3418  0035                     ___fldiv@a:	
  3419                           ; 4 bytes @ 0x15
  3420                           
  3421                           
  3422                           ; 4 bytes @ 0x15
  3423  0035                     	ds	4
  3424  0039                     ___fldiv@b:
  3425                           
  3426                           ; 4 bytes @ 0x19
  3427  0039                     	ds	4
  3428  003D                     ??___fldiv:
  3429                           
  3430                           ; 1 bytes @ 0x1D
  3431  003D                     	ds	5
  3432  0042                     ___fldiv@rem:
  3433                           
  3434                           ; 4 bytes @ 0x22
  3435  0042                     	ds	4
  3436  0046                     ___fldiv@sign:
  3437                           
  3438                           ; 1 bytes @ 0x26
  3439  0046                     	ds	1
  3440  0047                     ___fldiv@new_exp:
  3441                           
  3442                           ; 2 bytes @ 0x27
  3443  0047                     	ds	2
  3444  0049                     ___fldiv@grs:
  3445                           
  3446                           ; 4 bytes @ 0x29
  3447  0049                     	ds	4
  3448  004D                     ___fldiv@bexp:
  3449                           
  3450                           ; 1 bytes @ 0x2D
  3451  004D                     	ds	1
  3452  004E                     ___fldiv@aexp:
  3453                           
  3454                           ; 1 bytes @ 0x2E
  3455  004E                     	ds	1
  3456  004F                     ?___fltol:
  3457  004F                     ?___flsub:	
  3458                           ; 4 bytes @ 0x2F
  3459                           
  3460  004F                     ___fltol@f1:	
  3461                           ; 4 bytes @ 0x2F
  3462                           
  3463  004F                     ___flsub@a:	
  3464                           ; 4 bytes @ 0x2F
  3465                           
  3466                           
  3467                           ; 4 bytes @ 0x2F
  3468  004F                     	ds	4
  3469  0053                     ??___fltol:
  3470  0053                     ___flsub@b:	
  3471                           ; 1 bytes @ 0x33
  3472                           
  3473                           
  3474                           ; 4 bytes @ 0x33
  3475  0053                     	ds	5
  3476  0058                     ___fltol@sign1:
  3477                           
  3478                           ; 1 bytes @ 0x38
  3479  0058                     	ds	1
  3480  0059                     ___fltol@exp1:
  3481                           
  3482                           ; 1 bytes @ 0x39
  3483  0059                     	ds	1
  3484  005A                     ?_SetDimmer:
  3485  005A                     SetDimmer@dim_percentage:	
  3486                           ; 1 bytes @ 0x3A
  3487                           
  3488                           
  3489                           ; 4 bytes @ 0x3A
  3490  005A                     	ds	4
  3491  005E                     SetDimmer@TRIAC_off_duration_ms:
  3492                           
  3493                           ; 4 bytes @ 0x3E
  3494  005E                     	ds	4
  3495  0062                     StartStop_Dimmer@OnOff:
  3496                           
  3497                           ; 1 bytes @ 0x42
  3498  0062                     	ds	1
  3499  0063                     ??_StartHeater:
  3500                           
  3501                           ; 1 bytes @ 0x43
  3502  0063                     	ds	2
  3503  0065                     StartHeater@i:
  3504                           
  3505                           ; 1 bytes @ 0x45
  3506  0065                     	ds	1
  3507                           
  3508                           	psect	maintext
  3509  1608                     __pmaintext:	
  3510 ;;
  3511 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3512 ;;
  3513 ;; *************** function _main *****************
  3514 ;; Defined at:
  3515 ;;		line 50 in file "main.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : B1F/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3533 ;;Total ram usage:        0 bytes
  3534 ;; Hardware stack levels required when called:   15
  3535 ;; This function calls:
  3536 ;;		_IOCAF2_SetInterruptHandler
  3537 ;;		_Init_Function
  3538 ;;		_SYSTEM_Initialize
  3539 ;;		_StartTouchDetection
  3540 ;;		_TMR2_SetInterruptHandler
  3541 ;;		_TMR4_SetInterruptHandler
  3542 ;; This function is called by:
  3543 ;;		Startup code after reset
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           
  3548                           ;psect for function _main
  3549  1608                     _main:
  3550                           
  3551                           ;main.c: 52:     SYSTEM_Initialize();
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3555  1608  3194  2462  3196   	fcall	_SYSTEM_Initialize
  3556                           
  3557                           ;main.c: 53:     Init_Function();
  3558  160B  3194  248C  3196   	fcall	_Init_Function
  3559                           
  3560                           ;main.c: 55:     (INTCONbits.GIE = 1);
  3561  160E  178B               	bsf	11,7	;volatile
  3562                           
  3563                           ;main.c: 56:     (INTCONbits.PEIE = 1);
  3564  160F  170B               	bsf	11,6	;volatile
  3565                           
  3566                           ;main.c: 58:     IOCAF2_SetInterruptHandler(Zero_Detection_isr);
  3567  1610  30B5               	movlw	low _Zero_Detection_isr
  3568  1611  00F0               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
  3569  1612  3012               	movlw	high _Zero_Detection_isr
  3570  1613  00F1               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
  3571  1614  3192  22A3  3196   	fcall	_IOCAF2_SetInterruptHandler
  3572                           
  3573                           ;main.c: 59:     TMR2_SetInterruptHandler(TMR2_Drive_TRIAC_isr);
  3574  1617  3029               	movlw	low _TMR2_Drive_TRIAC_isr
  3575  1618  00F0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3576  1619  3016               	movlw	high _TMR2_Drive_TRIAC_isr
  3577  161A  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3578  161B  3192  2288  3196   	fcall	_TMR2_SetInterruptHandler
  3579                           
  3580                           ;main.c: 60:     TMR4_SetInterruptHandler(TMR4_Wroking_Blink_AlarmLED_isr);
  3581  161E  30FD               	movlw	low _TMR4_Wroking_Blink_AlarmLED_isr
  3582  161F  00F0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  3583  1620  3014               	movlw	high _TMR4_Wroking_Blink_AlarmLED_isr
  3584  1621  00F1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  3585  1622  3192  228D  3196   	fcall	_TMR4_SetInterruptHandler
  3586  1625                     l795:	
  3587                           ;main.c: 63:     while(1){
  3588                           
  3589                           
  3590                           ;main.c: 65:         StartTouchDetection();
  3591  1625  3193  23B0  3196   	fcall	_StartTouchDetection
  3592  1628  2E25               	goto	l795
  3593  1629                     __end_of_main:
  3594                           
  3595                           	psect	text1
  3596  13B0                     __ptext1:	
  3597 ;; *************** function _StartTouchDetection *****************
  3598 ;; Defined at:
  3599 ;;		line 222 in file "main.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/1
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3617 ;;Total ram usage:        0 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:   14
  3620 ;; This function calls:
  3621 ;;		_MTOUCH_Button_isPressed
  3622 ;;		_MTOUCH_Service_Mainloop
  3623 ;;		_StartHeater
  3624 ;; This function is called by:
  3625 ;;		_main
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           
  3630                           ;psect for function _StartTouchDetection
  3631  13B0                     _StartTouchDetection:
  3632                           
  3633                           ;main.c: 225:     if (1 == MTOUCH_Service_Mainloop()) {
  3634                           
  3635                           ;incstack = 0
  3636                           ; Regs used in _StartTouchDetection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3637  13B0  3187  27DD  3193   	fcall	_MTOUCH_Service_Mainloop
  3638  13B3  3A01               	xorlw	1
  3639  13B4  1D03               	skipz
  3640  13B5  0008               	return
  3641                           
  3642                           ;main.c: 227:         if (1 == MTOUCH_Button_isPressed(T_start)){
  3643  13B6  3000               	movlw	0
  3644  13B7  3195  2530  3193   	fcall	_MTOUCH_Button_isPressed
  3645  13BA  3A01               	xorlw	1
  3646  13BB  1D03               	skipz
  3647  13BC  0008               	return
  3648                           
  3649                           ;main.c: 229:             StartHeater();
  3650  13BD  3180  2056         	fcall	_StartHeater
  3651                           
  3652                           ;main.c: 231:         }
  3653  13BF  0008               	return
  3654  13C0                     __end_of_StartTouchDetection:
  3655                           
  3656                           	psect	text2
  3657  0056                     __ptext2:	
  3658 ;; *************** function _StartHeater *****************
  3659 ;; Defined at:
  3660 ;;		line 275 in file "main.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;		None
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  i               1   69[BANK0 ] unsigned char 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/1
  3671 ;;		On exit  : 1F/2
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3675 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3676 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3677 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3678 ;;Total ram usage:        3 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; Hardware stack levels required when called:   13
  3681 ;; This function calls:
  3682 ;;		_SetDimmer
  3683 ;;		_StartStop_AlarmLED_Blink
  3684 ;;		_StartStop_Buzzer
  3685 ;;		_StartStop_Dimmer
  3686 ;;		_StartStop_Fan
  3687 ;;		_StopTouchDetection
  3688 ;; This function is called by:
  3689 ;;		_StartTouchDetection
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _StartHeater
  3695  0056                     _StartHeater:
  3696                           
  3697                           ;main.c: 277:     StartStop_AlarmLED_Blink(1);
  3698                           
  3699                           ;incstack = 0
  3700                           ; Regs used in _StartHeater: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3701  0056  3001               	movlw	1
  3702  0057  3193  2330  3180   	fcall	_StartStop_AlarmLED_Blink
  3703                           
  3704                           ;main.c: 278:     StartStop_Dimmer(1);
  3705  005A  3001               	movlw	1
  3706  005B  3194  2477  3180   	fcall	_StartStop_Dimmer
  3707                           
  3708                           ;main.c: 280:     SetDimmer(10);
  3709  005E  3041               	movlw	65
  3710  005F  00DD               	movwf	SetDimmer@dim_percentage+3
  3711  0060  3020               	movlw	32
  3712  0061  00DC               	movwf	SetDimmer@dim_percentage+2
  3713  0062  3000               	movlw	0
  3714  0063  00DB               	movwf	SetDimmer@dim_percentage+1
  3715  0064  3000               	movlw	0
  3716  0065  00DA               	movwf	SetDimmer@dim_percentage
  3717  0066  318A  223E  3180   	fcall	_SetDimmer
  3718                           
  3719                           ;main.c: 281:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  3720  0069  3010               	movlw	16
  3721  006A  0020               	movlb	0	; select bank0
  3722  006B  00E4               	movwf	??_StartHeater+1
  3723  006C  3039               	movlw	57
  3724  006D  00E3               	movwf	??_StartHeater
  3725  006E  300D               	movlw	13
  3726  006F                     u4137:
  3727  006F  0B89               	decfsz	9,f
  3728  0070  286F               	goto	u4137
  3729  0071  0BE3               	decfsz	??_StartHeater,f
  3730  0072  286F               	goto	u4137
  3731  0073  0BE4               	decfsz	??_StartHeater+1,f
  3732  0074  286F               	goto	u4137
  3733  0075  3200               	nop2
  3734                           
  3735                           ;main.c: 282:     StopTouchDetection();
  3736  0076  3193  23A0  3180   	fcall	_StopTouchDetection
  3737                           
  3738                           ;main.c: 284:     SetDimmer(11);
  3739  0079  3041               	movlw	65
  3740  007A  0020               	movlb	0	; select bank0
  3741  007B  00DD               	movwf	SetDimmer@dim_percentage+3
  3742  007C  3030               	movlw	48
  3743  007D  00DC               	movwf	SetDimmer@dim_percentage+2
  3744  007E  3000               	movlw	0
  3745  007F  00DB               	movwf	SetDimmer@dim_percentage+1
  3746  0080  3000               	movlw	0
  3747  0081  00DA               	movwf	SetDimmer@dim_percentage
  3748  0082  318A  223E  3180   	fcall	_SetDimmer
  3749                           
  3750                           ;main.c: 285:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  3751  0085  3010               	movlw	16
  3752  0086  0020               	movlb	0	; select bank0
  3753  0087  00E4               	movwf	??_StartHeater+1
  3754  0088  3039               	movlw	57
  3755  0089  00E3               	movwf	??_StartHeater
  3756  008A  300D               	movlw	13
  3757  008B                     u4147:
  3758  008B  0B89               	decfsz	9,f
  3759  008C  288B               	goto	u4147
  3760  008D  0BE3               	decfsz	??_StartHeater,f
  3761  008E  288B               	goto	u4147
  3762  008F  0BE4               	decfsz	??_StartHeater+1,f
  3763  0090  288B               	goto	u4147
  3764  0091  3200               	nop2
  3765                           
  3766                           ;main.c: 286:     StopTouchDetection();
  3767  0092  3193  23A0  3180   	fcall	_StopTouchDetection
  3768                           
  3769                           ;main.c: 288:     SetDimmer(12);
  3770  0095  3041               	movlw	65
  3771  0096  0020               	movlb	0	; select bank0
  3772  0097  00DD               	movwf	SetDimmer@dim_percentage+3
  3773  0098  3040               	movlw	64
  3774  0099  00DC               	movwf	SetDimmer@dim_percentage+2
  3775  009A  3000               	movlw	0
  3776  009B  00DB               	movwf	SetDimmer@dim_percentage+1
  3777  009C  3000               	movlw	0
  3778  009D  00DA               	movwf	SetDimmer@dim_percentage
  3779  009E  318A  223E  3180   	fcall	_SetDimmer
  3780                           
  3781                           ;main.c: 289:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  3782  00A1  3010               	movlw	16
  3783  00A2  0020               	movlb	0	; select bank0
  3784  00A3  00E4               	movwf	??_StartHeater+1
  3785  00A4  3039               	movlw	57
  3786  00A5  00E3               	movwf	??_StartHeater
  3787  00A6  300D               	movlw	13
  3788  00A7                     u4157:
  3789  00A7  0B89               	decfsz	9,f
  3790  00A8  28A7               	goto	u4157
  3791  00A9  0BE3               	decfsz	??_StartHeater,f
  3792  00AA  28A7               	goto	u4157
  3793  00AB  0BE4               	decfsz	??_StartHeater+1,f
  3794  00AC  28A7               	goto	u4157
  3795  00AD  3200               	nop2
  3796                           
  3797                           ;main.c: 290:     StopTouchDetection();
  3798  00AE  3193  23A0  3180   	fcall	_StopTouchDetection
  3799                           
  3800                           ;main.c: 292:     SetDimmer(13);
  3801  00B1  3041               	movlw	65
  3802  00B2  0020               	movlb	0	; select bank0
  3803  00B3  00DD               	movwf	SetDimmer@dim_percentage+3
  3804  00B4  3050               	movlw	80
  3805  00B5  00DC               	movwf	SetDimmer@dim_percentage+2
  3806  00B6  3000               	movlw	0
  3807  00B7  00DB               	movwf	SetDimmer@dim_percentage+1
  3808  00B8  3000               	movlw	0
  3809  00B9  00DA               	movwf	SetDimmer@dim_percentage
  3810  00BA  318A  223E  3180   	fcall	_SetDimmer
  3811                           
  3812                           ;main.c: 293:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  3813  00BD  3010               	movlw	16
  3814  00BE  0020               	movlb	0	; select bank0
  3815  00BF  00E4               	movwf	??_StartHeater+1
  3816  00C0  3039               	movlw	57
  3817  00C1  00E3               	movwf	??_StartHeater
  3818  00C2  300D               	movlw	13
  3819  00C3                     u4167:
  3820  00C3  0B89               	decfsz	9,f
  3821  00C4  28C3               	goto	u4167
  3822  00C5  0BE3               	decfsz	??_StartHeater,f
  3823  00C6  28C3               	goto	u4167
  3824  00C7  0BE4               	decfsz	??_StartHeater+1,f
  3825  00C8  28C3               	goto	u4167
  3826  00C9  3200               	nop2
  3827                           
  3828                           ;main.c: 294:     StopTouchDetection();
  3829  00CA  3193  23A0  3180   	fcall	_StopTouchDetection
  3830                           
  3831                           ;main.c: 296:     SetDimmer(14);
  3832  00CD  3041               	movlw	65
  3833  00CE  0020               	movlb	0	; select bank0
  3834  00CF  00DD               	movwf	SetDimmer@dim_percentage+3
  3835  00D0  3060               	movlw	96
  3836  00D1  00DC               	movwf	SetDimmer@dim_percentage+2
  3837  00D2  3000               	movlw	0
  3838  00D3  00DB               	movwf	SetDimmer@dim_percentage+1
  3839  00D4  3000               	movlw	0
  3840  00D5  00DA               	movwf	SetDimmer@dim_percentage
  3841  00D6  318A  223E  3180   	fcall	_SetDimmer
  3842                           
  3843                           ;main.c: 297:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  3844  00D9  3010               	movlw	16
  3845  00DA  0020               	movlb	0	; select bank0
  3846  00DB  00E4               	movwf	??_StartHeater+1
  3847  00DC  3039               	movlw	57
  3848  00DD  00E3               	movwf	??_StartHeater
  3849  00DE  300D               	movlw	13
  3850  00DF                     u4177:
  3851  00DF  0B89               	decfsz	9,f
  3852  00E0  28DF               	goto	u4177
  3853  00E1  0BE3               	decfsz	??_StartHeater,f
  3854  00E2  28DF               	goto	u4177
  3855  00E3  0BE4               	decfsz	??_StartHeater+1,f
  3856  00E4  28DF               	goto	u4177
  3857  00E5  3200               	nop2
  3858                           
  3859                           ;main.c: 298:     StopTouchDetection();
  3860  00E6  3193  23A0  3180   	fcall	_StopTouchDetection
  3861                           
  3862                           ;main.c: 300:     SetDimmer(15);
  3863  00E9  3041               	movlw	65
  3864  00EA  0020               	movlb	0	; select bank0
  3865  00EB  00DD               	movwf	SetDimmer@dim_percentage+3
  3866  00EC  3070               	movlw	112
  3867  00ED  00DC               	movwf	SetDimmer@dim_percentage+2
  3868  00EE  3000               	movlw	0
  3869  00EF  00DB               	movwf	SetDimmer@dim_percentage+1
  3870  00F0  3000               	movlw	0
  3871  00F1  00DA               	movwf	SetDimmer@dim_percentage
  3872  00F2  318A  223E  3180   	fcall	_SetDimmer
  3873                           
  3874                           ;main.c: 301:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  3875  00F5  3010               	movlw	16
  3876  00F6  0020               	movlb	0	; select bank0
  3877  00F7  00E4               	movwf	??_StartHeater+1
  3878  00F8  3039               	movlw	57
  3879  00F9  00E3               	movwf	??_StartHeater
  3880  00FA  300D               	movlw	13
  3881  00FB                     u4187:
  3882  00FB  0B89               	decfsz	9,f
  3883  00FC  28FB               	goto	u4187
  3884  00FD  0BE3               	decfsz	??_StartHeater,f
  3885  00FE  28FB               	goto	u4187
  3886  00FF  0BE4               	decfsz	??_StartHeater+1,f
  3887  0100  28FB               	goto	u4187
  3888  0101  3200               	nop2
  3889                           
  3890                           ;main.c: 302:     StopTouchDetection();
  3891  0102  3193  23A0  3180   	fcall	_StopTouchDetection
  3892                           
  3893                           ;main.c: 304:     SetDimmer(16);
  3894  0105  3041               	movlw	65
  3895  0106  0020               	movlb	0	; select bank0
  3896  0107  00DD               	movwf	SetDimmer@dim_percentage+3
  3897  0108  3080               	movlw	128
  3898  0109  00DC               	movwf	SetDimmer@dim_percentage+2
  3899  010A  3000               	movlw	0
  3900  010B  00DB               	movwf	SetDimmer@dim_percentage+1
  3901  010C  3000               	movlw	0
  3902  010D  00DA               	movwf	SetDimmer@dim_percentage
  3903  010E  318A  223E  3180   	fcall	_SetDimmer
  3904                           
  3905                           ;main.c: 305:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  3906  0111  3010               	movlw	16
  3907  0112  0020               	movlb	0	; select bank0
  3908  0113  00E4               	movwf	??_StartHeater+1
  3909  0114  3039               	movlw	57
  3910  0115  00E3               	movwf	??_StartHeater
  3911  0116  300D               	movlw	13
  3912  0117                     u4197:
  3913  0117  0B89               	decfsz	9,f
  3914  0118  2917               	goto	u4197
  3915  0119  0BE3               	decfsz	??_StartHeater,f
  3916  011A  2917               	goto	u4197
  3917  011B  0BE4               	decfsz	??_StartHeater+1,f
  3918  011C  2917               	goto	u4197
  3919  011D  3200               	nop2
  3920                           
  3921                           ;main.c: 306:     StopTouchDetection();
  3922  011E  3193  23A0  3180   	fcall	_StopTouchDetection
  3923                           
  3924                           ;main.c: 308:     SetDimmer(17);
  3925  0121  3041               	movlw	65
  3926  0122  0020               	movlb	0	; select bank0
  3927  0123  00DD               	movwf	SetDimmer@dim_percentage+3
  3928  0124  3088               	movlw	136
  3929  0125  00DC               	movwf	SetDimmer@dim_percentage+2
  3930  0126  3000               	movlw	0
  3931  0127  00DB               	movwf	SetDimmer@dim_percentage+1
  3932  0128  3000               	movlw	0
  3933  0129  00DA               	movwf	SetDimmer@dim_percentage
  3934  012A  318A  223E  3180   	fcall	_SetDimmer
  3935                           
  3936                           ;main.c: 309:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  3937  012D  3010               	movlw	16
  3938  012E  0020               	movlb	0	; select bank0
  3939  012F  00E4               	movwf	??_StartHeater+1
  3940  0130  3039               	movlw	57
  3941  0131  00E3               	movwf	??_StartHeater
  3942  0132  300D               	movlw	13
  3943  0133                     u4207:
  3944  0133  0B89               	decfsz	9,f
  3945  0134  2933               	goto	u4207
  3946  0135  0BE3               	decfsz	??_StartHeater,f
  3947  0136  2933               	goto	u4207
  3948  0137  0BE4               	decfsz	??_StartHeater+1,f
  3949  0138  2933               	goto	u4207
  3950  0139  3200               	nop2
  3951                           
  3952                           ;main.c: 310:     StopTouchDetection();
  3953  013A  3193  23A0  3180   	fcall	_StopTouchDetection
  3954                           
  3955                           ;main.c: 312:     SetDimmer(18);
  3956  013D  3041               	movlw	65
  3957  013E  0020               	movlb	0	; select bank0
  3958  013F  00DD               	movwf	SetDimmer@dim_percentage+3
  3959  0140  3090               	movlw	144
  3960  0141  00DC               	movwf	SetDimmer@dim_percentage+2
  3961  0142  3000               	movlw	0
  3962  0143  00DB               	movwf	SetDimmer@dim_percentage+1
  3963  0144  3000               	movlw	0
  3964  0145  00DA               	movwf	SetDimmer@dim_percentage
  3965  0146  318A  223E  3180   	fcall	_SetDimmer
  3966                           
  3967                           ;main.c: 313:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  3968  0149  3010               	movlw	16
  3969  014A  0020               	movlb	0	; select bank0
  3970  014B  00E4               	movwf	??_StartHeater+1
  3971  014C  3039               	movlw	57
  3972  014D  00E3               	movwf	??_StartHeater
  3973  014E  300D               	movlw	13
  3974  014F                     u4217:
  3975  014F  0B89               	decfsz	9,f
  3976  0150  294F               	goto	u4217
  3977  0151  0BE3               	decfsz	??_StartHeater,f
  3978  0152  294F               	goto	u4217
  3979  0153  0BE4               	decfsz	??_StartHeater+1,f
  3980  0154  294F               	goto	u4217
  3981  0155  3200               	nop2
  3982                           
  3983                           ;main.c: 314:     StopTouchDetection();
  3984  0156  3193  23A0  3180   	fcall	_StopTouchDetection
  3985                           
  3986                           ;main.c: 316:     SetDimmer(19);
  3987  0159  3041               	movlw	65
  3988  015A  0020               	movlb	0	; select bank0
  3989  015B  00DD               	movwf	SetDimmer@dim_percentage+3
  3990  015C  3098               	movlw	152
  3991  015D  00DC               	movwf	SetDimmer@dim_percentage+2
  3992  015E  3000               	movlw	0
  3993  015F  00DB               	movwf	SetDimmer@dim_percentage+1
  3994  0160  3000               	movlw	0
  3995  0161  00DA               	movwf	SetDimmer@dim_percentage
  3996  0162  318A  223E  3180   	fcall	_SetDimmer
  3997                           
  3998                           ;main.c: 317:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  3999  0165  3010               	movlw	16
  4000  0166  0020               	movlb	0	; select bank0
  4001  0167  00E4               	movwf	??_StartHeater+1
  4002  0168  3039               	movlw	57
  4003  0169  00E3               	movwf	??_StartHeater
  4004  016A  300D               	movlw	13
  4005  016B                     u4227:
  4006  016B  0B89               	decfsz	9,f
  4007  016C  296B               	goto	u4227
  4008  016D  0BE3               	decfsz	??_StartHeater,f
  4009  016E  296B               	goto	u4227
  4010  016F  0BE4               	decfsz	??_StartHeater+1,f
  4011  0170  296B               	goto	u4227
  4012  0171  3200               	nop2
  4013                           
  4014                           ;main.c: 318:     StopTouchDetection();
  4015  0172  3193  23A0  3180   	fcall	_StopTouchDetection
  4016                           
  4017                           ;main.c: 320:     SetDimmer(20);
  4018  0175  3041               	movlw	65
  4019  0176  0020               	movlb	0	; select bank0
  4020  0177  00DD               	movwf	SetDimmer@dim_percentage+3
  4021  0178  30A0               	movlw	160
  4022  0179  00DC               	movwf	SetDimmer@dim_percentage+2
  4023  017A  3000               	movlw	0
  4024  017B  00DB               	movwf	SetDimmer@dim_percentage+1
  4025  017C  3000               	movlw	0
  4026  017D  00DA               	movwf	SetDimmer@dim_percentage
  4027  017E  318A  223E  3180   	fcall	_SetDimmer
  4028                           
  4029                           ;main.c: 321:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  4030  0181  3010               	movlw	16
  4031  0182  0020               	movlb	0	; select bank0
  4032  0183  00E4               	movwf	??_StartHeater+1
  4033  0184  3039               	movlw	57
  4034  0185  00E3               	movwf	??_StartHeater
  4035  0186  300D               	movlw	13
  4036  0187                     u4237:
  4037  0187  0B89               	decfsz	9,f
  4038  0188  2987               	goto	u4237
  4039  0189  0BE3               	decfsz	??_StartHeater,f
  4040  018A  2987               	goto	u4237
  4041  018B  0BE4               	decfsz	??_StartHeater+1,f
  4042  018C  2987               	goto	u4237
  4043  018D  3200               	nop2
  4044                           
  4045                           ;main.c: 322:     StopTouchDetection();
  4046  018E  3193  23A0  3180   	fcall	_StopTouchDetection
  4047                           
  4048                           ;main.c: 324:     SetDimmer(21);
  4049  0191  3041               	movlw	65
  4050  0192  0020               	movlb	0	; select bank0
  4051  0193  00DD               	movwf	SetDimmer@dim_percentage+3
  4052  0194  30A8               	movlw	168
  4053  0195  00DC               	movwf	SetDimmer@dim_percentage+2
  4054  0196  3000               	movlw	0
  4055  0197  00DB               	movwf	SetDimmer@dim_percentage+1
  4056  0198  3000               	movlw	0
  4057  0199  00DA               	movwf	SetDimmer@dim_percentage
  4058  019A  318A  223E  3180   	fcall	_SetDimmer
  4059                           
  4060                           ;main.c: 325:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  4061  019D  3010               	movlw	16
  4062  019E  0020               	movlb	0	; select bank0
  4063  019F  00E4               	movwf	??_StartHeater+1
  4064  01A0  3039               	movlw	57
  4065  01A1  00E3               	movwf	??_StartHeater
  4066  01A2  300D               	movlw	13
  4067  01A3                     u4247:
  4068  01A3  0B89               	decfsz	9,f
  4069  01A4  29A3               	goto	u4247
  4070  01A5  0BE3               	decfsz	??_StartHeater,f
  4071  01A6  29A3               	goto	u4247
  4072  01A7  0BE4               	decfsz	??_StartHeater+1,f
  4073  01A8  29A3               	goto	u4247
  4074  01A9  3200               	nop2
  4075                           
  4076                           ;main.c: 326:     StopTouchDetection();
  4077  01AA  3193  23A0  3180   	fcall	_StopTouchDetection
  4078                           
  4079                           ;main.c: 328:     SetDimmer(22);
  4080  01AD  3041               	movlw	65
  4081  01AE  0020               	movlb	0	; select bank0
  4082  01AF  00DD               	movwf	SetDimmer@dim_percentage+3
  4083  01B0  30B0               	movlw	176
  4084  01B1  00DC               	movwf	SetDimmer@dim_percentage+2
  4085  01B2  3000               	movlw	0
  4086  01B3  00DB               	movwf	SetDimmer@dim_percentage+1
  4087  01B4  3000               	movlw	0
  4088  01B5  00DA               	movwf	SetDimmer@dim_percentage
  4089  01B6  318A  223E  3180   	fcall	_SetDimmer
  4090                           
  4091                           ;main.c: 329:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  4092  01B9  3010               	movlw	16
  4093  01BA  0020               	movlb	0	; select bank0
  4094  01BB  00E4               	movwf	??_StartHeater+1
  4095  01BC  3039               	movlw	57
  4096  01BD  00E3               	movwf	??_StartHeater
  4097  01BE  300D               	movlw	13
  4098  01BF                     u4257:
  4099  01BF  0B89               	decfsz	9,f
  4100  01C0  29BF               	goto	u4257
  4101  01C1  0BE3               	decfsz	??_StartHeater,f
  4102  01C2  29BF               	goto	u4257
  4103  01C3  0BE4               	decfsz	??_StartHeater+1,f
  4104  01C4  29BF               	goto	u4257
  4105  01C5  3200               	nop2
  4106                           
  4107                           ;main.c: 330:     StopTouchDetection();
  4108  01C6  3193  23A0  3180   	fcall	_StopTouchDetection
  4109                           
  4110                           ;main.c: 332:     SetDimmer(23);
  4111  01C9  3041               	movlw	65
  4112  01CA  0020               	movlb	0	; select bank0
  4113  01CB  00DD               	movwf	SetDimmer@dim_percentage+3
  4114  01CC  30B8               	movlw	184
  4115  01CD  00DC               	movwf	SetDimmer@dim_percentage+2
  4116  01CE  3000               	movlw	0
  4117  01CF  00DB               	movwf	SetDimmer@dim_percentage+1
  4118  01D0  3000               	movlw	0
  4119  01D1  00DA               	movwf	SetDimmer@dim_percentage
  4120  01D2  318A  223E  3180   	fcall	_SetDimmer
  4121                           
  4122                           ;main.c: 333:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  4123  01D5  3010               	movlw	16
  4124  01D6  0020               	movlb	0	; select bank0
  4125  01D7  00E4               	movwf	??_StartHeater+1
  4126  01D8  3039               	movlw	57
  4127  01D9  00E3               	movwf	??_StartHeater
  4128  01DA  300D               	movlw	13
  4129  01DB                     u4267:
  4130  01DB  0B89               	decfsz	9,f
  4131  01DC  29DB               	goto	u4267
  4132  01DD  0BE3               	decfsz	??_StartHeater,f
  4133  01DE  29DB               	goto	u4267
  4134  01DF  0BE4               	decfsz	??_StartHeater+1,f
  4135  01E0  29DB               	goto	u4267
  4136  01E1  3200               	nop2
  4137                           
  4138                           ;main.c: 334:     StopTouchDetection();
  4139  01E2  3193  23A0  3180   	fcall	_StopTouchDetection
  4140                           
  4141                           ;main.c: 336:     SetDimmer(24);
  4142  01E5  3041               	movlw	65
  4143  01E6  0020               	movlb	0	; select bank0
  4144  01E7  00DD               	movwf	SetDimmer@dim_percentage+3
  4145  01E8  30C0               	movlw	192
  4146  01E9  00DC               	movwf	SetDimmer@dim_percentage+2
  4147  01EA  3000               	movlw	0
  4148  01EB  00DB               	movwf	SetDimmer@dim_percentage+1
  4149  01EC  3000               	movlw	0
  4150  01ED  00DA               	movwf	SetDimmer@dim_percentage
  4151  01EE  318A  223E  3180   	fcall	_SetDimmer
  4152                           
  4153                           ;main.c: 337:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  4154  01F1  3010               	movlw	16
  4155  01F2  0020               	movlb	0	; select bank0
  4156  01F3  00E4               	movwf	??_StartHeater+1
  4157  01F4  3039               	movlw	57
  4158  01F5  00E3               	movwf	??_StartHeater
  4159  01F6  300D               	movlw	13
  4160  01F7                     u4277:
  4161  01F7  0B89               	decfsz	9,f
  4162  01F8  29F7               	goto	u4277
  4163  01F9  0BE3               	decfsz	??_StartHeater,f
  4164  01FA  29F7               	goto	u4277
  4165  01FB  0BE4               	decfsz	??_StartHeater+1,f
  4166  01FC  29F7               	goto	u4277
  4167  01FD  3200               	nop2
  4168                           
  4169                           ;main.c: 338:     StopTouchDetection();
  4170  01FE  3193  23A0  3180   	fcall	_StopTouchDetection
  4171                           
  4172                           ;main.c: 340:     SetDimmer(25);
  4173  0201  3041               	movlw	65
  4174  0202  0020               	movlb	0	; select bank0
  4175  0203  00DD               	movwf	SetDimmer@dim_percentage+3
  4176  0204  30C8               	movlw	200
  4177  0205  00DC               	movwf	SetDimmer@dim_percentage+2
  4178  0206  3000               	movlw	0
  4179  0207  00DB               	movwf	SetDimmer@dim_percentage+1
  4180  0208  3000               	movlw	0
  4181  0209  00DA               	movwf	SetDimmer@dim_percentage
  4182  020A  318A  223E  3180   	fcall	_SetDimmer
  4183                           
  4184                           ;main.c: 341:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  4185  020D  3010               	movlw	16
  4186  020E  0020               	movlb	0	; select bank0
  4187  020F  00E4               	movwf	??_StartHeater+1
  4188  0210  3039               	movlw	57
  4189  0211  00E3               	movwf	??_StartHeater
  4190  0212  300D               	movlw	13
  4191  0213                     u4287:
  4192  0213  0B89               	decfsz	9,f
  4193  0214  2A13               	goto	u4287
  4194  0215  0BE3               	decfsz	??_StartHeater,f
  4195  0216  2A13               	goto	u4287
  4196  0217  0BE4               	decfsz	??_StartHeater+1,f
  4197  0218  2A13               	goto	u4287
  4198  0219  3200               	nop2
  4199                           
  4200                           ;main.c: 342:     StopTouchDetection();
  4201  021A  3193  23A0  3180   	fcall	_StopTouchDetection
  4202                           
  4203                           ;main.c: 344:     SetDimmer(26);
  4204  021D  3041               	movlw	65
  4205  021E  0020               	movlb	0	; select bank0
  4206  021F  00DD               	movwf	SetDimmer@dim_percentage+3
  4207  0220  30D0               	movlw	208
  4208  0221  00DC               	movwf	SetDimmer@dim_percentage+2
  4209  0222  3000               	movlw	0
  4210  0223  00DB               	movwf	SetDimmer@dim_percentage+1
  4211  0224  3000               	movlw	0
  4212  0225  00DA               	movwf	SetDimmer@dim_percentage
  4213  0226  318A  223E  3180   	fcall	_SetDimmer
  4214                           
  4215                           ;main.c: 345:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  4216  0229  3010               	movlw	16
  4217  022A  0020               	movlb	0	; select bank0
  4218  022B  00E4               	movwf	??_StartHeater+1
  4219  022C  3039               	movlw	57
  4220  022D  00E3               	movwf	??_StartHeater
  4221  022E  300D               	movlw	13
  4222  022F                     u4297:
  4223  022F  0B89               	decfsz	9,f
  4224  0230  2A2F               	goto	u4297
  4225  0231  0BE3               	decfsz	??_StartHeater,f
  4226  0232  2A2F               	goto	u4297
  4227  0233  0BE4               	decfsz	??_StartHeater+1,f
  4228  0234  2A2F               	goto	u4297
  4229  0235  3200               	nop2
  4230                           
  4231                           ;main.c: 346:     StopTouchDetection();
  4232  0236  3193  23A0  3180   	fcall	_StopTouchDetection
  4233                           
  4234                           ;main.c: 348:     SetDimmer(27);
  4235  0239  3041               	movlw	65
  4236  023A  0020               	movlb	0	; select bank0
  4237  023B  00DD               	movwf	SetDimmer@dim_percentage+3
  4238  023C  30D8               	movlw	216
  4239  023D  00DC               	movwf	SetDimmer@dim_percentage+2
  4240  023E  3000               	movlw	0
  4241  023F  00DB               	movwf	SetDimmer@dim_percentage+1
  4242  0240  3000               	movlw	0
  4243  0241  00DA               	movwf	SetDimmer@dim_percentage
  4244  0242  318A  223E  3180   	fcall	_SetDimmer
  4245                           
  4246                           ;main.c: 349:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  4247  0245  3010               	movlw	16
  4248  0246  0020               	movlb	0	; select bank0
  4249  0247  00E4               	movwf	??_StartHeater+1
  4250  0248  3039               	movlw	57
  4251  0249  00E3               	movwf	??_StartHeater
  4252  024A  300D               	movlw	13
  4253  024B                     u4307:
  4254  024B  0B89               	decfsz	9,f
  4255  024C  2A4B               	goto	u4307
  4256  024D  0BE3               	decfsz	??_StartHeater,f
  4257  024E  2A4B               	goto	u4307
  4258  024F  0BE4               	decfsz	??_StartHeater+1,f
  4259  0250  2A4B               	goto	u4307
  4260  0251  3200               	nop2
  4261                           
  4262                           ;main.c: 350:     StopTouchDetection();
  4263  0252  3193  23A0  3180   	fcall	_StopTouchDetection
  4264                           
  4265                           ;main.c: 352:     SetDimmer(28);
  4266  0255  3041               	movlw	65
  4267  0256  0020               	movlb	0	; select bank0
  4268  0257  00DD               	movwf	SetDimmer@dim_percentage+3
  4269  0258  30E0               	movlw	224
  4270  0259  00DC               	movwf	SetDimmer@dim_percentage+2
  4271  025A  3000               	movlw	0
  4272  025B  00DB               	movwf	SetDimmer@dim_percentage+1
  4273  025C  3000               	movlw	0
  4274  025D  00DA               	movwf	SetDimmer@dim_percentage
  4275  025E  318A  223E  3180   	fcall	_SetDimmer
  4276                           
  4277                           ;main.c: 353:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  4278  0261  3010               	movlw	16
  4279  0262  0020               	movlb	0	; select bank0
  4280  0263  00E4               	movwf	??_StartHeater+1
  4281  0264  3039               	movlw	57
  4282  0265  00E3               	movwf	??_StartHeater
  4283  0266  300D               	movlw	13
  4284  0267                     u4317:
  4285  0267  0B89               	decfsz	9,f
  4286  0268  2A67               	goto	u4317
  4287  0269  0BE3               	decfsz	??_StartHeater,f
  4288  026A  2A67               	goto	u4317
  4289  026B  0BE4               	decfsz	??_StartHeater+1,f
  4290  026C  2A67               	goto	u4317
  4291  026D  3200               	nop2
  4292                           
  4293                           ;main.c: 354:     StopTouchDetection();
  4294  026E  3193  23A0  3180   	fcall	_StopTouchDetection
  4295                           
  4296                           ;main.c: 356:     SetDimmer(29);
  4297  0271  3041               	movlw	65
  4298  0272  0020               	movlb	0	; select bank0
  4299  0273  00DD               	movwf	SetDimmer@dim_percentage+3
  4300  0274  30E8               	movlw	232
  4301  0275  00DC               	movwf	SetDimmer@dim_percentage+2
  4302  0276  3000               	movlw	0
  4303  0277  00DB               	movwf	SetDimmer@dim_percentage+1
  4304  0278  3000               	movlw	0
  4305  0279  00DA               	movwf	SetDimmer@dim_percentage
  4306  027A  318A  223E  3180   	fcall	_SetDimmer
  4307                           
  4308                           ;main.c: 357:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  4309  027D  3010               	movlw	16
  4310  027E  0020               	movlb	0	; select bank0
  4311  027F  00E4               	movwf	??_StartHeater+1
  4312  0280  3039               	movlw	57
  4313  0281  00E3               	movwf	??_StartHeater
  4314  0282  300D               	movlw	13
  4315  0283                     u4327:
  4316  0283  0B89               	decfsz	9,f
  4317  0284  2A83               	goto	u4327
  4318  0285  0BE3               	decfsz	??_StartHeater,f
  4319  0286  2A83               	goto	u4327
  4320  0287  0BE4               	decfsz	??_StartHeater+1,f
  4321  0288  2A83               	goto	u4327
  4322  0289  3200               	nop2
  4323                           
  4324                           ;main.c: 358:     StopTouchDetection();
  4325  028A  3193  23A0  3180   	fcall	_StopTouchDetection
  4326                           
  4327                           ;main.c: 360:     SetDimmer(30);
  4328  028D  3041               	movlw	65
  4329  028E  0020               	movlb	0	; select bank0
  4330  028F  00DD               	movwf	SetDimmer@dim_percentage+3
  4331  0290  30F0               	movlw	240
  4332  0291  00DC               	movwf	SetDimmer@dim_percentage+2
  4333  0292  3000               	movlw	0
  4334  0293  00DB               	movwf	SetDimmer@dim_percentage+1
  4335  0294  3000               	movlw	0
  4336  0295  00DA               	movwf	SetDimmer@dim_percentage
  4337  0296  318A  223E  3180   	fcall	_SetDimmer
  4338                           
  4339                           ;main.c: 361:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  4340  0299  3010               	movlw	16
  4341  029A  0020               	movlb	0	; select bank0
  4342  029B  00E4               	movwf	??_StartHeater+1
  4343  029C  3039               	movlw	57
  4344  029D  00E3               	movwf	??_StartHeater
  4345  029E  300D               	movlw	13
  4346  029F                     u4337:
  4347  029F  0B89               	decfsz	9,f
  4348  02A0  2A9F               	goto	u4337
  4349  02A1  0BE3               	decfsz	??_StartHeater,f
  4350  02A2  2A9F               	goto	u4337
  4351  02A3  0BE4               	decfsz	??_StartHeater+1,f
  4352  02A4  2A9F               	goto	u4337
  4353  02A5  3200               	nop2
  4354                           
  4355                           ;main.c: 362:     StopTouchDetection();
  4356  02A6  3193  23A0  3180   	fcall	_StopTouchDetection
  4357                           
  4358                           ;main.c: 366:     SetDimmer(30.5);
  4359  02A9  3041               	movlw	65
  4360  02AA  0020               	movlb	0	; select bank0
  4361  02AB  00DD               	movwf	SetDimmer@dim_percentage+3
  4362  02AC  30F4               	movlw	244
  4363  02AD  00DC               	movwf	SetDimmer@dim_percentage+2
  4364  02AE  3000               	movlw	0
  4365  02AF  00DB               	movwf	SetDimmer@dim_percentage+1
  4366  02B0  3000               	movlw	0
  4367  02B1  00DA               	movwf	SetDimmer@dim_percentage
  4368  02B2  318A  223E  3180   	fcall	_SetDimmer
  4369                           
  4370                           ;main.c: 367:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  4371  02B5  3033               	movlw	51
  4372  02B6  0020               	movlb	0	; select bank0
  4373  02B7  00E4               	movwf	??_StartHeater+1
  4374  02B8  30BB               	movlw	187
  4375  02B9  00E3               	movwf	??_StartHeater
  4376  02BA  30DF               	movlw	223
  4377  02BB                     u4347:
  4378  02BB  0B89               	decfsz	9,f
  4379  02BC  2ABB               	goto	u4347
  4380  02BD  0BE3               	decfsz	??_StartHeater,f
  4381  02BE  2ABB               	goto	u4347
  4382  02BF  0BE4               	decfsz	??_StartHeater+1,f
  4383  02C0  2ABB               	goto	u4347
  4384  02C1  3200               	nop2
  4385                           
  4386                           ;main.c: 368:     StopTouchDetection();
  4387  02C2  3193  23A0  3180   	fcall	_StopTouchDetection
  4388                           
  4389                           ;main.c: 370:     SetDimmer(31);
  4390  02C5  3041               	movlw	65
  4391  02C6  0020               	movlb	0	; select bank0
  4392  02C7  00DD               	movwf	SetDimmer@dim_percentage+3
  4393  02C8  30F8               	movlw	248
  4394  02C9  00DC               	movwf	SetDimmer@dim_percentage+2
  4395  02CA  3000               	movlw	0
  4396  02CB  00DB               	movwf	SetDimmer@dim_percentage+1
  4397  02CC  3000               	movlw	0
  4398  02CD  00DA               	movwf	SetDimmer@dim_percentage
  4399  02CE  318A  223E  3180   	fcall	_SetDimmer
  4400                           
  4401                           ;main.c: 371:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  4402  02D1  3033               	movlw	51
  4403  02D2  0020               	movlb	0	; select bank0
  4404  02D3  00E4               	movwf	??_StartHeater+1
  4405  02D4  30BB               	movlw	187
  4406  02D5  00E3               	movwf	??_StartHeater
  4407  02D6  30DF               	movlw	223
  4408  02D7                     u4357:
  4409  02D7  0B89               	decfsz	9,f
  4410  02D8  2AD7               	goto	u4357
  4411  02D9  0BE3               	decfsz	??_StartHeater,f
  4412  02DA  2AD7               	goto	u4357
  4413  02DB  0BE4               	decfsz	??_StartHeater+1,f
  4414  02DC  2AD7               	goto	u4357
  4415  02DD  3200               	nop2
  4416                           
  4417                           ;main.c: 372:     StopTouchDetection();
  4418  02DE  3193  23A0  3180   	fcall	_StopTouchDetection
  4419                           
  4420                           ;main.c: 374:     SetDimmer(31.5);
  4421  02E1  3041               	movlw	65
  4422  02E2  0020               	movlb	0	; select bank0
  4423  02E3  00DD               	movwf	SetDimmer@dim_percentage+3
  4424  02E4  30FC               	movlw	252
  4425  02E5  00DC               	movwf	SetDimmer@dim_percentage+2
  4426  02E6  3000               	movlw	0
  4427  02E7  00DB               	movwf	SetDimmer@dim_percentage+1
  4428  02E8  3000               	movlw	0
  4429  02E9  00DA               	movwf	SetDimmer@dim_percentage
  4430  02EA  318A  223E  3180   	fcall	_SetDimmer
  4431                           
  4432                           ;main.c: 375:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  4433  02ED  3033               	movlw	51
  4434  02EE  0020               	movlb	0	; select bank0
  4435  02EF  00E4               	movwf	??_StartHeater+1
  4436  02F0  30BB               	movlw	187
  4437  02F1  00E3               	movwf	??_StartHeater
  4438  02F2  30DF               	movlw	223
  4439  02F3                     u4367:
  4440  02F3  0B89               	decfsz	9,f
  4441  02F4  2AF3               	goto	u4367
  4442  02F5  0BE3               	decfsz	??_StartHeater,f
  4443  02F6  2AF3               	goto	u4367
  4444  02F7  0BE4               	decfsz	??_StartHeater+1,f
  4445  02F8  2AF3               	goto	u4367
  4446  02F9  3200               	nop2
  4447                           
  4448                           ;main.c: 376:     StopTouchDetection();
  4449  02FA  3193  23A0  3180   	fcall	_StopTouchDetection
  4450                           
  4451                           ;main.c: 378:     SetDimmer(32);
  4452  02FD  3042               	movlw	66
  4453  02FE  0020               	movlb	0	; select bank0
  4454  02FF  00DD               	movwf	SetDimmer@dim_percentage+3
  4455  0300  3000               	movlw	0
  4456  0301  00DC               	movwf	SetDimmer@dim_percentage+2
  4457  0302  3000               	movlw	0
  4458  0303  00DB               	movwf	SetDimmer@dim_percentage+1
  4459  0304  3000               	movlw	0
  4460  0305  00DA               	movwf	SetDimmer@dim_percentage
  4461  0306  318A  223E  3180   	fcall	_SetDimmer
  4462                           
  4463                           ;main.c: 379:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  4464  0309  3033               	movlw	51
  4465  030A  0020               	movlb	0	; select bank0
  4466  030B  00E4               	movwf	??_StartHeater+1
  4467  030C  30BB               	movlw	187
  4468  030D  00E3               	movwf	??_StartHeater
  4469  030E  30DF               	movlw	223
  4470  030F                     u4377:
  4471  030F  0B89               	decfsz	9,f
  4472  0310  2B0F               	goto	u4377
  4473  0311  0BE3               	decfsz	??_StartHeater,f
  4474  0312  2B0F               	goto	u4377
  4475  0313  0BE4               	decfsz	??_StartHeater+1,f
  4476  0314  2B0F               	goto	u4377
  4477  0315  3200               	nop2
  4478                           
  4479                           ;main.c: 380:     StopTouchDetection();
  4480  0316  3193  23A0  3180   	fcall	_StopTouchDetection
  4481                           
  4482                           ;main.c: 382:     SetDimmer(32.5);
  4483  0319  3042               	movlw	66
  4484  031A  0020               	movlb	0	; select bank0
  4485  031B  00DD               	movwf	SetDimmer@dim_percentage+3
  4486  031C  3002               	movlw	2
  4487  031D  00DC               	movwf	SetDimmer@dim_percentage+2
  4488  031E  3000               	movlw	0
  4489  031F  00DB               	movwf	SetDimmer@dim_percentage+1
  4490  0320  3000               	movlw	0
  4491  0321  00DA               	movwf	SetDimmer@dim_percentage
  4492  0322  318A  223E  3180   	fcall	_SetDimmer
  4493                           
  4494                           ;main.c: 383:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  4495  0325  3033               	movlw	51
  4496  0326  0020               	movlb	0	; select bank0
  4497  0327  00E4               	movwf	??_StartHeater+1
  4498  0328  30BB               	movlw	187
  4499  0329  00E3               	movwf	??_StartHeater
  4500  032A  30DF               	movlw	223
  4501  032B                     u4387:
  4502  032B  0B89               	decfsz	9,f
  4503  032C  2B2B               	goto	u4387
  4504  032D  0BE3               	decfsz	??_StartHeater,f
  4505  032E  2B2B               	goto	u4387
  4506  032F  0BE4               	decfsz	??_StartHeater+1,f
  4507  0330  2B2B               	goto	u4387
  4508  0331  3200               	nop2
  4509                           
  4510                           ;main.c: 384:     StopTouchDetection();
  4511  0332  3193  23A0  3180   	fcall	_StopTouchDetection
  4512                           
  4513                           ;main.c: 386:     SetDimmer(33);
  4514  0335  3042               	movlw	66
  4515  0336  0020               	movlb	0	; select bank0
  4516  0337  00DD               	movwf	SetDimmer@dim_percentage+3
  4517  0338  3004               	movlw	4
  4518  0339  00DC               	movwf	SetDimmer@dim_percentage+2
  4519  033A  3000               	movlw	0
  4520  033B  00DB               	movwf	SetDimmer@dim_percentage+1
  4521  033C  3000               	movlw	0
  4522  033D  00DA               	movwf	SetDimmer@dim_percentage
  4523  033E  318A  223E  3180   	fcall	_SetDimmer
  4524                           
  4525                           ;main.c: 387:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  4526  0341  3033               	movlw	51
  4527  0342  0020               	movlb	0	; select bank0
  4528  0343  00E4               	movwf	??_StartHeater+1
  4529  0344  30BB               	movlw	187
  4530  0345  00E3               	movwf	??_StartHeater
  4531  0346  30DF               	movlw	223
  4532  0347                     u4397:
  4533  0347  0B89               	decfsz	9,f
  4534  0348  2B47               	goto	u4397
  4535  0349  0BE3               	decfsz	??_StartHeater,f
  4536  034A  2B47               	goto	u4397
  4537  034B  0BE4               	decfsz	??_StartHeater+1,f
  4538  034C  2B47               	goto	u4397
  4539  034D  3200               	nop2
  4540                           
  4541                           ;main.c: 388:     StopTouchDetection();
  4542  034E  3193  23A0  3180   	fcall	_StopTouchDetection
  4543                           
  4544                           ;main.c: 390:     SetDimmer(33.5);
  4545  0351  3042               	movlw	66
  4546  0352  0020               	movlb	0	; select bank0
  4547  0353  00DD               	movwf	SetDimmer@dim_percentage+3
  4548  0354  3006               	movlw	6
  4549  0355  00DC               	movwf	SetDimmer@dim_percentage+2
  4550  0356  3000               	movlw	0
  4551  0357  00DB               	movwf	SetDimmer@dim_percentage+1
  4552  0358  3000               	movlw	0
  4553  0359  00DA               	movwf	SetDimmer@dim_percentage
  4554  035A  318A  223E  3180   	fcall	_SetDimmer
  4555                           
  4556                           ;main.c: 391:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  4557  035D  3033               	movlw	51
  4558  035E  0020               	movlb	0	; select bank0
  4559  035F  00E4               	movwf	??_StartHeater+1
  4560  0360  30BB               	movlw	187
  4561  0361  00E3               	movwf	??_StartHeater
  4562  0362  30DF               	movlw	223
  4563  0363                     u4407:
  4564  0363  0B89               	decfsz	9,f
  4565  0364  2B63               	goto	u4407
  4566  0365  0BE3               	decfsz	??_StartHeater,f
  4567  0366  2B63               	goto	u4407
  4568  0367  0BE4               	decfsz	??_StartHeater+1,f
  4569  0368  2B63               	goto	u4407
  4570  0369  3200               	nop2
  4571                           
  4572                           ;main.c: 392:     StopTouchDetection();
  4573  036A  3193  23A0  3180   	fcall	_StopTouchDetection
  4574                           
  4575                           ;main.c: 394:     SetDimmer(34);
  4576  036D  3042               	movlw	66
  4577  036E  0020               	movlb	0	; select bank0
  4578  036F  00DD               	movwf	SetDimmer@dim_percentage+3
  4579  0370  3008               	movlw	8
  4580  0371  00DC               	movwf	SetDimmer@dim_percentage+2
  4581  0372  3000               	movlw	0
  4582  0373  00DB               	movwf	SetDimmer@dim_percentage+1
  4583  0374  3000               	movlw	0
  4584  0375  00DA               	movwf	SetDimmer@dim_percentage
  4585  0376  318A  223E  3180   	fcall	_SetDimmer
  4586                           
  4587                           ;main.c: 395:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  4588  0379  3033               	movlw	51
  4589  037A  0020               	movlb	0	; select bank0
  4590  037B  00E4               	movwf	??_StartHeater+1
  4591  037C  30BB               	movlw	187
  4592  037D  00E3               	movwf	??_StartHeater
  4593  037E  30DF               	movlw	223
  4594  037F                     u4417:
  4595  037F  0B89               	decfsz	9,f
  4596  0380  2B7F               	goto	u4417
  4597  0381  0BE3               	decfsz	??_StartHeater,f
  4598  0382  2B7F               	goto	u4417
  4599  0383  0BE4               	decfsz	??_StartHeater+1,f
  4600  0384  2B7F               	goto	u4417
  4601  0385  3200               	nop2
  4602                           
  4603                           ;main.c: 396:     StopTouchDetection();
  4604  0386  3193  23A0  3180   	fcall	_StopTouchDetection
  4605                           
  4606                           ;main.c: 398:     SetDimmer(34.5);
  4607  0389  3042               	movlw	66
  4608  038A  0020               	movlb	0	; select bank0
  4609  038B  00DD               	movwf	SetDimmer@dim_percentage+3
  4610  038C  300A               	movlw	10
  4611  038D  00DC               	movwf	SetDimmer@dim_percentage+2
  4612  038E  3000               	movlw	0
  4613  038F  00DB               	movwf	SetDimmer@dim_percentage+1
  4614  0390  3000               	movlw	0
  4615  0391  00DA               	movwf	SetDimmer@dim_percentage
  4616  0392  318A  223E  3180   	fcall	_SetDimmer
  4617                           
  4618                           ;main.c: 399:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  4619  0395  3033               	movlw	51
  4620  0396  0020               	movlb	0	; select bank0
  4621  0397  00E4               	movwf	??_StartHeater+1
  4622  0398  30BB               	movlw	187
  4623  0399  00E3               	movwf	??_StartHeater
  4624  039A  30DF               	movlw	223
  4625  039B                     u4427:
  4626  039B  0B89               	decfsz	9,f
  4627  039C  2B9B               	goto	u4427
  4628  039D  0BE3               	decfsz	??_StartHeater,f
  4629  039E  2B9B               	goto	u4427
  4630  039F  0BE4               	decfsz	??_StartHeater+1,f
  4631  03A0  2B9B               	goto	u4427
  4632  03A1  3200               	nop2
  4633                           
  4634                           ;main.c: 400:     StopTouchDetection();
  4635  03A2  3193  23A0  3180   	fcall	_StopTouchDetection
  4636                           
  4637                           ;main.c: 402:     SetDimmer(35);
  4638  03A5  3042               	movlw	66
  4639  03A6  0020               	movlb	0	; select bank0
  4640  03A7  00DD               	movwf	SetDimmer@dim_percentage+3
  4641  03A8  300C               	movlw	12
  4642  03A9  00DC               	movwf	SetDimmer@dim_percentage+2
  4643  03AA  3000               	movlw	0
  4644  03AB  00DB               	movwf	SetDimmer@dim_percentage+1
  4645  03AC  3000               	movlw	0
  4646  03AD  00DA               	movwf	SetDimmer@dim_percentage
  4647  03AE  318A  223E  3180   	fcall	_SetDimmer
  4648                           
  4649                           ;main.c: 403:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  4650  03B1  3033               	movlw	51
  4651  03B2  0020               	movlb	0	; select bank0
  4652  03B3  00E4               	movwf	??_StartHeater+1
  4653  03B4  30BB               	movlw	187
  4654  03B5  00E3               	movwf	??_StartHeater
  4655  03B6  30DF               	movlw	223
  4656  03B7                     u4437:
  4657  03B7  0B89               	decfsz	9,f
  4658  03B8  2BB7               	goto	u4437
  4659  03B9  0BE3               	decfsz	??_StartHeater,f
  4660  03BA  2BB7               	goto	u4437
  4661  03BB  0BE4               	decfsz	??_StartHeater+1,f
  4662  03BC  2BB7               	goto	u4437
  4663  03BD  3200               	nop2
  4664                           
  4665                           ;main.c: 404:     StopTouchDetection();
  4666  03BE  3193  23A0  3180   	fcall	_StopTouchDetection
  4667                           
  4668                           ;main.c: 408:     SetDimmer(37);
  4669  03C1  3042               	movlw	66
  4670  03C2  0020               	movlb	0	; select bank0
  4671  03C3  00DD               	movwf	SetDimmer@dim_percentage+3
  4672  03C4  3014               	movlw	20
  4673  03C5  00DC               	movwf	SetDimmer@dim_percentage+2
  4674  03C6  3000               	movlw	0
  4675  03C7  00DB               	movwf	SetDimmer@dim_percentage+1
  4676  03C8  3000               	movlw	0
  4677  03C9  00DA               	movwf	SetDimmer@dim_percentage
  4678  03CA  318A  223E  3180   	fcall	_SetDimmer
  4679                           
  4680                           ;main.c: 409:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  4681  03CD  301F               	movlw	31
  4682  03CE  0020               	movlb	0	; select bank0
  4683  03CF  00E4               	movwf	??_StartHeater+1
  4684  03D0  3071               	movlw	113
  4685  03D1  00E3               	movwf	??_StartHeater
  4686  03D2  301E               	movlw	30
  4687  03D3                     u4447:
  4688  03D3  0B89               	decfsz	9,f
  4689  03D4  2BD3               	goto	u4447
  4690  03D5  0BE3               	decfsz	??_StartHeater,f
  4691  03D6  2BD3               	goto	u4447
  4692  03D7  0BE4               	decfsz	??_StartHeater+1,f
  4693  03D8  2BD3               	goto	u4447
  4694  03D9  0000               	nop
  4695                           
  4696                           ;main.c: 410:     StopTouchDetection();
  4697  03DA  3193  23A0  3180   	fcall	_StopTouchDetection
  4698                           
  4699                           ;main.c: 412:     SetDimmer(39);
  4700  03DD  3042               	movlw	66
  4701  03DE  0020               	movlb	0	; select bank0
  4702  03DF  00DD               	movwf	SetDimmer@dim_percentage+3
  4703  03E0  301C               	movlw	28
  4704  03E1  00DC               	movwf	SetDimmer@dim_percentage+2
  4705  03E2  3000               	movlw	0
  4706  03E3  00DB               	movwf	SetDimmer@dim_percentage+1
  4707  03E4  3000               	movlw	0
  4708  03E5  00DA               	movwf	SetDimmer@dim_percentage
  4709  03E6  318A  223E  3180   	fcall	_SetDimmer
  4710                           
  4711                           ;main.c: 413:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  4712  03E9  301F               	movlw	31
  4713  03EA  0020               	movlb	0	; select bank0
  4714  03EB  00E4               	movwf	??_StartHeater+1
  4715  03EC  3071               	movlw	113
  4716  03ED  00E3               	movwf	??_StartHeater
  4717  03EE  301E               	movlw	30
  4718  03EF                     u4457:
  4719  03EF  0B89               	decfsz	9,f
  4720  03F0  2BEF               	goto	u4457
  4721  03F1  0BE3               	decfsz	??_StartHeater,f
  4722  03F2  2BEF               	goto	u4457
  4723  03F3  0BE4               	decfsz	??_StartHeater+1,f
  4724  03F4  2BEF               	goto	u4457
  4725  03F5  0000               	nop
  4726                           
  4727                           ;main.c: 414:     StopTouchDetection();
  4728  03F6  3193  23A0  3180   	fcall	_StopTouchDetection
  4729                           
  4730                           ;main.c: 416:     SetDimmer(41);
  4731  03F9  3042               	movlw	66
  4732  03FA  0020               	movlb	0	; select bank0
  4733  03FB  00DD               	movwf	SetDimmer@dim_percentage+3
  4734  03FC  3024               	movlw	36
  4735  03FD  00DC               	movwf	SetDimmer@dim_percentage+2
  4736  03FE  3000               	movlw	0
  4737  03FF  00DB               	movwf	SetDimmer@dim_percentage+1
  4738  0400  3000               	movlw	0
  4739  0401  00DA               	movwf	SetDimmer@dim_percentage
  4740  0402  318A  223E  3180   	fcall	_SetDimmer
  4741                           
  4742                           ;main.c: 417:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  4743  0405  301F               	movlw	31
  4744  0406  0020               	movlb	0	; select bank0
  4745  0407  00E4               	movwf	??_StartHeater+1
  4746  0408  3071               	movlw	113
  4747  0409  00E3               	movwf	??_StartHeater
  4748  040A  301E               	movlw	30
  4749  040B                     u4467:
  4750  040B  0B89               	decfsz	9,f
  4751  040C  2C0B               	goto	u4467
  4752  040D  0BE3               	decfsz	??_StartHeater,f
  4753  040E  2C0B               	goto	u4467
  4754  040F  0BE4               	decfsz	??_StartHeater+1,f
  4755  0410  2C0B               	goto	u4467
  4756  0411  0000               	nop
  4757                           
  4758                           ;main.c: 418:     StopTouchDetection();
  4759  0412  3193  23A0  3180   	fcall	_StopTouchDetection
  4760                           
  4761                           ;main.c: 420:     SetDimmer(43);
  4762  0415  3042               	movlw	66
  4763  0416  0020               	movlb	0	; select bank0
  4764  0417  00DD               	movwf	SetDimmer@dim_percentage+3
  4765  0418  302C               	movlw	44
  4766  0419  00DC               	movwf	SetDimmer@dim_percentage+2
  4767  041A  3000               	movlw	0
  4768  041B  00DB               	movwf	SetDimmer@dim_percentage+1
  4769  041C  3000               	movlw	0
  4770  041D  00DA               	movwf	SetDimmer@dim_percentage
  4771  041E  318A  223E  3180   	fcall	_SetDimmer
  4772                           
  4773                           ;main.c: 421:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  4774  0421  301F               	movlw	31
  4775  0422  0020               	movlb	0	; select bank0
  4776  0423  00E4               	movwf	??_StartHeater+1
  4777  0424  3071               	movlw	113
  4778  0425  00E3               	movwf	??_StartHeater
  4779  0426  301E               	movlw	30
  4780  0427                     u4477:
  4781  0427  0B89               	decfsz	9,f
  4782  0428  2C27               	goto	u4477
  4783  0429  0BE3               	decfsz	??_StartHeater,f
  4784  042A  2C27               	goto	u4477
  4785  042B  0BE4               	decfsz	??_StartHeater+1,f
  4786  042C  2C27               	goto	u4477
  4787  042D  0000               	nop
  4788                           
  4789                           ;main.c: 422:     StopTouchDetection();
  4790  042E  3193  23A0  3180   	fcall	_StopTouchDetection
  4791                           
  4792                           ;main.c: 424:     SetDimmer(45);
  4793  0431  3042               	movlw	66
  4794  0432  0020               	movlb	0	; select bank0
  4795  0433  00DD               	movwf	SetDimmer@dim_percentage+3
  4796  0434  3034               	movlw	52
  4797  0435  00DC               	movwf	SetDimmer@dim_percentage+2
  4798  0436  3000               	movlw	0
  4799  0437  00DB               	movwf	SetDimmer@dim_percentage+1
  4800  0438  3000               	movlw	0
  4801  0439  00DA               	movwf	SetDimmer@dim_percentage
  4802  043A  318A  223E  3180   	fcall	_SetDimmer
  4803                           
  4804                           ;main.c: 425:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  4805  043D  301F               	movlw	31
  4806  043E  0020               	movlb	0	; select bank0
  4807  043F  00E4               	movwf	??_StartHeater+1
  4808  0440  3071               	movlw	113
  4809  0441  00E3               	movwf	??_StartHeater
  4810  0442  301E               	movlw	30
  4811  0443                     u4487:
  4812  0443  0B89               	decfsz	9,f
  4813  0444  2C43               	goto	u4487
  4814  0445  0BE3               	decfsz	??_StartHeater,f
  4815  0446  2C43               	goto	u4487
  4816  0447  0BE4               	decfsz	??_StartHeater+1,f
  4817  0448  2C43               	goto	u4487
  4818  0449  0000               	nop
  4819                           
  4820                           ;main.c: 426:     StopTouchDetection();
  4821  044A  3193  23A0  3180   	fcall	_StopTouchDetection
  4822                           
  4823                           ;main.c: 428:     SetDimmer(47);
  4824  044D  3042               	movlw	66
  4825  044E  0020               	movlb	0	; select bank0
  4826  044F  00DD               	movwf	SetDimmer@dim_percentage+3
  4827  0450  303C               	movlw	60
  4828  0451  00DC               	movwf	SetDimmer@dim_percentage+2
  4829  0452  3000               	movlw	0
  4830  0453  00DB               	movwf	SetDimmer@dim_percentage+1
  4831  0454  3000               	movlw	0
  4832  0455  00DA               	movwf	SetDimmer@dim_percentage
  4833  0456  318A  223E  3180   	fcall	_SetDimmer
  4834                           
  4835                           ;main.c: 429:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  4836  0459  301F               	movlw	31
  4837  045A  0020               	movlb	0	; select bank0
  4838  045B  00E4               	movwf	??_StartHeater+1
  4839  045C  3071               	movlw	113
  4840  045D  00E3               	movwf	??_StartHeater
  4841  045E  301E               	movlw	30
  4842  045F                     u4497:
  4843  045F  0B89               	decfsz	9,f
  4844  0460  2C5F               	goto	u4497
  4845  0461  0BE3               	decfsz	??_StartHeater,f
  4846  0462  2C5F               	goto	u4497
  4847  0463  0BE4               	decfsz	??_StartHeater+1,f
  4848  0464  2C5F               	goto	u4497
  4849  0465  0000               	nop
  4850                           
  4851                           ;main.c: 430:     StopTouchDetection();
  4852  0466  3193  23A0  3180   	fcall	_StopTouchDetection
  4853                           
  4854                           ;main.c: 432:     SetDimmer(49);
  4855  0469  3042               	movlw	66
  4856  046A  0020               	movlb	0	; select bank0
  4857  046B  00DD               	movwf	SetDimmer@dim_percentage+3
  4858  046C  3044               	movlw	68
  4859  046D  00DC               	movwf	SetDimmer@dim_percentage+2
  4860  046E  3000               	movlw	0
  4861  046F  00DB               	movwf	SetDimmer@dim_percentage+1
  4862  0470  3000               	movlw	0
  4863  0471  00DA               	movwf	SetDimmer@dim_percentage
  4864  0472  318A  223E  3180   	fcall	_SetDimmer
  4865                           
  4866                           ;main.c: 433:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  4867  0475  301F               	movlw	31
  4868  0476  0020               	movlb	0	; select bank0
  4869  0477  00E4               	movwf	??_StartHeater+1
  4870  0478  3071               	movlw	113
  4871  0479  00E3               	movwf	??_StartHeater
  4872  047A  301E               	movlw	30
  4873  047B                     u4507:
  4874  047B  0B89               	decfsz	9,f
  4875  047C  2C7B               	goto	u4507
  4876  047D  0BE3               	decfsz	??_StartHeater,f
  4877  047E  2C7B               	goto	u4507
  4878  047F  0BE4               	decfsz	??_StartHeater+1,f
  4879  0480  2C7B               	goto	u4507
  4880  0481  0000               	nop
  4881                           
  4882                           ;main.c: 434:     StopTouchDetection();
  4883  0482  3193  23A0  3180   	fcall	_StopTouchDetection
  4884                           
  4885                           ;main.c: 436:     SetDimmer(51);
  4886  0485  3042               	movlw	66
  4887  0486  0020               	movlb	0	; select bank0
  4888  0487  00DD               	movwf	SetDimmer@dim_percentage+3
  4889  0488  304C               	movlw	76
  4890  0489  00DC               	movwf	SetDimmer@dim_percentage+2
  4891  048A  3000               	movlw	0
  4892  048B  00DB               	movwf	SetDimmer@dim_percentage+1
  4893  048C  3000               	movlw	0
  4894  048D  00DA               	movwf	SetDimmer@dim_percentage
  4895  048E  318A  223E  3180   	fcall	_SetDimmer
  4896                           
  4897                           ;main.c: 437:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  4898  0491  301F               	movlw	31
  4899  0492  0020               	movlb	0	; select bank0
  4900  0493  00E4               	movwf	??_StartHeater+1
  4901  0494  3071               	movlw	113
  4902  0495  00E3               	movwf	??_StartHeater
  4903  0496  301E               	movlw	30
  4904  0497                     u4517:
  4905  0497  0B89               	decfsz	9,f
  4906  0498  2C97               	goto	u4517
  4907  0499  0BE3               	decfsz	??_StartHeater,f
  4908  049A  2C97               	goto	u4517
  4909  049B  0BE4               	decfsz	??_StartHeater+1,f
  4910  049C  2C97               	goto	u4517
  4911  049D  0000               	nop
  4912                           
  4913                           ;main.c: 438:     StopTouchDetection();
  4914  049E  3193  23A0  3180   	fcall	_StopTouchDetection
  4915                           
  4916                           ;main.c: 440:     SetDimmer(53);
  4917  04A1  3042               	movlw	66
  4918  04A2  0020               	movlb	0	; select bank0
  4919  04A3  00DD               	movwf	SetDimmer@dim_percentage+3
  4920  04A4  3054               	movlw	84
  4921  04A5  00DC               	movwf	SetDimmer@dim_percentage+2
  4922  04A6  3000               	movlw	0
  4923  04A7  00DB               	movwf	SetDimmer@dim_percentage+1
  4924  04A8  3000               	movlw	0
  4925  04A9  00DA               	movwf	SetDimmer@dim_percentage
  4926  04AA  318A  223E  3180   	fcall	_SetDimmer
  4927                           
  4928                           ;main.c: 441:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  4929  04AD  301F               	movlw	31
  4930  04AE  0020               	movlb	0	; select bank0
  4931  04AF  00E4               	movwf	??_StartHeater+1
  4932  04B0  3071               	movlw	113
  4933  04B1  00E3               	movwf	??_StartHeater
  4934  04B2  301E               	movlw	30
  4935  04B3                     u4527:
  4936  04B3  0B89               	decfsz	9,f
  4937  04B4  2CB3               	goto	u4527
  4938  04B5  0BE3               	decfsz	??_StartHeater,f
  4939  04B6  2CB3               	goto	u4527
  4940  04B7  0BE4               	decfsz	??_StartHeater+1,f
  4941  04B8  2CB3               	goto	u4527
  4942  04B9  0000               	nop
  4943                           
  4944                           ;main.c: 442:     StopTouchDetection();
  4945  04BA  3193  23A0  3180   	fcall	_StopTouchDetection
  4946                           
  4947                           ;main.c: 444:     SetDimmer(55);
  4948  04BD  3042               	movlw	66
  4949  04BE  0020               	movlb	0	; select bank0
  4950  04BF  00DD               	movwf	SetDimmer@dim_percentage+3
  4951  04C0  305C               	movlw	92
  4952  04C1  00DC               	movwf	SetDimmer@dim_percentage+2
  4953  04C2  3000               	movlw	0
  4954  04C3  00DB               	movwf	SetDimmer@dim_percentage+1
  4955  04C4  3000               	movlw	0
  4956  04C5  00DA               	movwf	SetDimmer@dim_percentage
  4957  04C6  318A  223E  3180   	fcall	_SetDimmer
  4958                           
  4959                           ;main.c: 445:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  4960  04C9  301F               	movlw	31
  4961  04CA  0020               	movlb	0	; select bank0
  4962  04CB  00E4               	movwf	??_StartHeater+1
  4963  04CC  3071               	movlw	113
  4964  04CD  00E3               	movwf	??_StartHeater
  4965  04CE  301E               	movlw	30
  4966  04CF                     u4537:
  4967  04CF  0B89               	decfsz	9,f
  4968  04D0  2CCF               	goto	u4537
  4969  04D1  0BE3               	decfsz	??_StartHeater,f
  4970  04D2  2CCF               	goto	u4537
  4971  04D3  0BE4               	decfsz	??_StartHeater+1,f
  4972  04D4  2CCF               	goto	u4537
  4973  04D5  0000               	nop
  4974                           
  4975                           ;main.c: 446:     StopTouchDetection();
  4976  04D6  3193  23A0  3180   	fcall	_StopTouchDetection
  4977                           
  4978                           ;main.c: 448:     SetDimmer(57);
  4979  04D9  3042               	movlw	66
  4980  04DA  0020               	movlb	0	; select bank0
  4981  04DB  00DD               	movwf	SetDimmer@dim_percentage+3
  4982  04DC  3064               	movlw	100
  4983  04DD  00DC               	movwf	SetDimmer@dim_percentage+2
  4984  04DE  3000               	movlw	0
  4985  04DF  00DB               	movwf	SetDimmer@dim_percentage+1
  4986  04E0  3000               	movlw	0
  4987  04E1  00DA               	movwf	SetDimmer@dim_percentage
  4988  04E2  318A  223E  3180   	fcall	_SetDimmer
  4989                           
  4990                           ;main.c: 449:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  4991  04E5  301F               	movlw	31
  4992  04E6  0020               	movlb	0	; select bank0
  4993  04E7  00E4               	movwf	??_StartHeater+1
  4994  04E8  3071               	movlw	113
  4995  04E9  00E3               	movwf	??_StartHeater
  4996  04EA  301E               	movlw	30
  4997  04EB                     u4547:
  4998  04EB  0B89               	decfsz	9,f
  4999  04EC  2CEB               	goto	u4547
  5000  04ED  0BE3               	decfsz	??_StartHeater,f
  5001  04EE  2CEB               	goto	u4547
  5002  04EF  0BE4               	decfsz	??_StartHeater+1,f
  5003  04F0  2CEB               	goto	u4547
  5004  04F1  0000               	nop
  5005                           
  5006                           ;main.c: 450:     StopTouchDetection();
  5007  04F2  3193  23A0  3180   	fcall	_StopTouchDetection
  5008                           
  5009                           ;main.c: 452:     SetDimmer(59);
  5010  04F5  3042               	movlw	66
  5011  04F6  0020               	movlb	0	; select bank0
  5012  04F7  00DD               	movwf	SetDimmer@dim_percentage+3
  5013  04F8  306C               	movlw	108
  5014  04F9  00DC               	movwf	SetDimmer@dim_percentage+2
  5015  04FA  3000               	movlw	0
  5016  04FB  00DB               	movwf	SetDimmer@dim_percentage+1
  5017  04FC  3000               	movlw	0
  5018  04FD  00DA               	movwf	SetDimmer@dim_percentage
  5019  04FE  318A  223E  3180   	fcall	_SetDimmer
  5020                           
  5021                           ;main.c: 453:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  5022  0501  301F               	movlw	31
  5023  0502  0020               	movlb	0	; select bank0
  5024  0503  00E4               	movwf	??_StartHeater+1
  5025  0504  3071               	movlw	113
  5026  0505  00E3               	movwf	??_StartHeater
  5027  0506  301E               	movlw	30
  5028  0507                     u4557:
  5029  0507  0B89               	decfsz	9,f
  5030  0508  2D07               	goto	u4557
  5031  0509  0BE3               	decfsz	??_StartHeater,f
  5032  050A  2D07               	goto	u4557
  5033  050B  0BE4               	decfsz	??_StartHeater+1,f
  5034  050C  2D07               	goto	u4557
  5035  050D  0000               	nop
  5036                           
  5037                           ;main.c: 454:     StopTouchDetection();
  5038  050E  3193  23A0  3180   	fcall	_StopTouchDetection
  5039                           
  5040                           ;main.c: 456:     SetDimmer(61);
  5041  0511  3042               	movlw	66
  5042  0512  0020               	movlb	0	; select bank0
  5043  0513  00DD               	movwf	SetDimmer@dim_percentage+3
  5044  0514  3074               	movlw	116
  5045  0515  00DC               	movwf	SetDimmer@dim_percentage+2
  5046  0516  3000               	movlw	0
  5047  0517  00DB               	movwf	SetDimmer@dim_percentage+1
  5048  0518  3000               	movlw	0
  5049  0519  00DA               	movwf	SetDimmer@dim_percentage
  5050  051A  318A  223E  3180   	fcall	_SetDimmer
  5051                           
  5052                           ;main.c: 457:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  5053  051D  301F               	movlw	31
  5054  051E  0020               	movlb	0	; select bank0
  5055  051F  00E4               	movwf	??_StartHeater+1
  5056  0520  3071               	movlw	113
  5057  0521  00E3               	movwf	??_StartHeater
  5058  0522  301E               	movlw	30
  5059  0523                     u4567:
  5060  0523  0B89               	decfsz	9,f
  5061  0524  2D23               	goto	u4567
  5062  0525  0BE3               	decfsz	??_StartHeater,f
  5063  0526  2D23               	goto	u4567
  5064  0527  0BE4               	decfsz	??_StartHeater+1,f
  5065  0528  2D23               	goto	u4567
  5066  0529  0000               	nop
  5067                           
  5068                           ;main.c: 458:     StopTouchDetection();
  5069  052A  3193  23A0  3180   	fcall	_StopTouchDetection
  5070                           
  5071                           ;main.c: 460:     SetDimmer(63);
  5072  052D  3042               	movlw	66
  5073  052E  0020               	movlb	0	; select bank0
  5074  052F  00DD               	movwf	SetDimmer@dim_percentage+3
  5075  0530  307C               	movlw	124
  5076  0531  00DC               	movwf	SetDimmer@dim_percentage+2
  5077  0532  3000               	movlw	0
  5078  0533  00DB               	movwf	SetDimmer@dim_percentage+1
  5079  0534  3000               	movlw	0
  5080  0535  00DA               	movwf	SetDimmer@dim_percentage
  5081  0536  318A  223E  3180   	fcall	_SetDimmer
  5082                           
  5083                           ;main.c: 461:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  5084  0539  301F               	movlw	31
  5085  053A  0020               	movlb	0	; select bank0
  5086  053B  00E4               	movwf	??_StartHeater+1
  5087  053C  3071               	movlw	113
  5088  053D  00E3               	movwf	??_StartHeater
  5089  053E  301E               	movlw	30
  5090  053F                     u4577:
  5091  053F  0B89               	decfsz	9,f
  5092  0540  2D3F               	goto	u4577
  5093  0541  0BE3               	decfsz	??_StartHeater,f
  5094  0542  2D3F               	goto	u4577
  5095  0543  0BE4               	decfsz	??_StartHeater+1,f
  5096  0544  2D3F               	goto	u4577
  5097  0545  0000               	nop
  5098                           
  5099                           ;main.c: 462:     StopTouchDetection();
  5100  0546  3193  23A0  3180   	fcall	_StopTouchDetection
  5101                           
  5102                           ;main.c: 464:     SetDimmer(65);
  5103  0549  3042               	movlw	66
  5104  054A  0020               	movlb	0	; select bank0
  5105  054B  00DD               	movwf	SetDimmer@dim_percentage+3
  5106  054C  3082               	movlw	130
  5107  054D  00DC               	movwf	SetDimmer@dim_percentage+2
  5108  054E  3000               	movlw	0
  5109  054F  00DB               	movwf	SetDimmer@dim_percentage+1
  5110  0550  3000               	movlw	0
  5111  0551  00DA               	movwf	SetDimmer@dim_percentage
  5112  0552  318A  223E  3180   	fcall	_SetDimmer
  5113                           
  5114                           ;main.c: 465:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  5115  0555  301F               	movlw	31
  5116  0556  0020               	movlb	0	; select bank0
  5117  0557  00E4               	movwf	??_StartHeater+1
  5118  0558  3071               	movlw	113
  5119  0559  00E3               	movwf	??_StartHeater
  5120  055A  301E               	movlw	30
  5121  055B                     u4587:
  5122  055B  0B89               	decfsz	9,f
  5123  055C  2D5B               	goto	u4587
  5124  055D  0BE3               	decfsz	??_StartHeater,f
  5125  055E  2D5B               	goto	u4587
  5126  055F  0BE4               	decfsz	??_StartHeater+1,f
  5127  0560  2D5B               	goto	u4587
  5128  0561  0000               	nop
  5129                           
  5130                           ;main.c: 466:     StopTouchDetection();
  5131  0562  3193  23A0  3180   	fcall	_StopTouchDetection
  5132                           
  5133                           ;main.c: 468:     SetDimmer(67);
  5134  0565  3042               	movlw	66
  5135  0566  0020               	movlb	0	; select bank0
  5136  0567  00DD               	movwf	SetDimmer@dim_percentage+3
  5137  0568  3086               	movlw	134
  5138  0569  00DC               	movwf	SetDimmer@dim_percentage+2
  5139  056A  3000               	movlw	0
  5140  056B  00DB               	movwf	SetDimmer@dim_percentage+1
  5141  056C  3000               	movlw	0
  5142  056D  00DA               	movwf	SetDimmer@dim_percentage
  5143  056E  318A  223E  3180   	fcall	_SetDimmer
  5144                           
  5145                           ;main.c: 469:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  5146  0571  301F               	movlw	31
  5147  0572  0020               	movlb	0	; select bank0
  5148  0573  00E4               	movwf	??_StartHeater+1
  5149  0574  3071               	movlw	113
  5150  0575  00E3               	movwf	??_StartHeater
  5151  0576  301E               	movlw	30
  5152  0577                     u4597:
  5153  0577  0B89               	decfsz	9,f
  5154  0578  2D77               	goto	u4597
  5155  0579  0BE3               	decfsz	??_StartHeater,f
  5156  057A  2D77               	goto	u4597
  5157  057B  0BE4               	decfsz	??_StartHeater+1,f
  5158  057C  2D77               	goto	u4597
  5159  057D  0000               	nop
  5160                           
  5161                           ;main.c: 470:     StopTouchDetection();
  5162  057E  3193  23A0  3180   	fcall	_StopTouchDetection
  5163                           
  5164                           ;main.c: 472:     SetDimmer(69);
  5165  0581  3042               	movlw	66
  5166  0582  0020               	movlb	0	; select bank0
  5167  0583  00DD               	movwf	SetDimmer@dim_percentage+3
  5168  0584  308A               	movlw	138
  5169  0585  00DC               	movwf	SetDimmer@dim_percentage+2
  5170  0586  3000               	movlw	0
  5171  0587  00DB               	movwf	SetDimmer@dim_percentage+1
  5172  0588  3000               	movlw	0
  5173  0589  00DA               	movwf	SetDimmer@dim_percentage
  5174  058A  318A  223E  3180   	fcall	_SetDimmer
  5175                           
  5176                           ;main.c: 473:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  5177  058D  301F               	movlw	31
  5178  058E  0020               	movlb	0	; select bank0
  5179  058F  00E4               	movwf	??_StartHeater+1
  5180  0590  3071               	movlw	113
  5181  0591  00E3               	movwf	??_StartHeater
  5182  0592  301E               	movlw	30
  5183  0593                     u4607:
  5184  0593  0B89               	decfsz	9,f
  5185  0594  2D93               	goto	u4607
  5186  0595  0BE3               	decfsz	??_StartHeater,f
  5187  0596  2D93               	goto	u4607
  5188  0597  0BE4               	decfsz	??_StartHeater+1,f
  5189  0598  2D93               	goto	u4607
  5190  0599  0000               	nop
  5191                           
  5192                           ;main.c: 474:     StopTouchDetection();
  5193  059A  3193  23A0  3180   	fcall	_StopTouchDetection
  5194                           
  5195                           ;main.c: 476:     SetDimmer(71);
  5196  059D  3042               	movlw	66
  5197  059E  0020               	movlb	0	; select bank0
  5198  059F  00DD               	movwf	SetDimmer@dim_percentage+3
  5199  05A0  308E               	movlw	142
  5200  05A1  00DC               	movwf	SetDimmer@dim_percentage+2
  5201  05A2  3000               	movlw	0
  5202  05A3  00DB               	movwf	SetDimmer@dim_percentage+1
  5203  05A4  3000               	movlw	0
  5204  05A5  00DA               	movwf	SetDimmer@dim_percentage
  5205  05A6  318A  223E  3180   	fcall	_SetDimmer
  5206                           
  5207                           ;main.c: 477:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  5208  05A9  301F               	movlw	31
  5209  05AA  0020               	movlb	0	; select bank0
  5210  05AB  00E4               	movwf	??_StartHeater+1
  5211  05AC  3071               	movlw	113
  5212  05AD  00E3               	movwf	??_StartHeater
  5213  05AE  301E               	movlw	30
  5214  05AF                     u4617:
  5215  05AF  0B89               	decfsz	9,f
  5216  05B0  2DAF               	goto	u4617
  5217  05B1  0BE3               	decfsz	??_StartHeater,f
  5218  05B2  2DAF               	goto	u4617
  5219  05B3  0BE4               	decfsz	??_StartHeater+1,f
  5220  05B4  2DAF               	goto	u4617
  5221  05B5  0000               	nop
  5222                           
  5223                           ;main.c: 478:     StopTouchDetection();
  5224  05B6  3193  23A0  3180   	fcall	_StopTouchDetection
  5225                           
  5226                           ;main.c: 482:     StartStop_AlarmLED_Blink(0);
  5227  05B9  3000               	movlw	0
  5228  05BA  3193  2330  3180   	fcall	_StartStop_AlarmLED_Blink
  5229                           
  5230                           ;main.c: 483:     StartStop_Dimmer(0);
  5231  05BD  3000               	movlw	0
  5232  05BE  3194  2477  3180   	fcall	_StartStop_Dimmer
  5233                           
  5234                           ;main.c: 484:     StartStop_Fan(1);
  5235  05C1  3001               	movlw	1
  5236  05C2  3192  22EC  3180   	fcall	_StartStop_Fan
  5237                           
  5238                           ;main.c: 485:     for (uint8_t i = 0; i < 18; i++){
  5239  05C5  0020               	movlb	0	; select bank0
  5240  05C6  01E5               	clrf	StartHeater@i
  5241  05C7                     l4672:
  5242                           
  5243                           ;main.c: 487:         _delay((unsigned long)((10000)*(8000000/4000.0)));
  5244  05C7  3066               	movlw	102
  5245  05C8  0020               	movlb	0	; select bank0
  5246  05C9  00E4               	movwf	??_StartHeater+1
  5247  05CA  3076               	movlw	118
  5248  05CB  00E3               	movwf	??_StartHeater
  5249  05CC  30C1               	movlw	193
  5250  05CD                     u4627:
  5251  05CD  0B89               	decfsz	9,f
  5252  05CE  2DCD               	goto	u4627
  5253  05CF  0BE3               	decfsz	??_StartHeater,f
  5254  05D0  2DCD               	goto	u4627
  5255  05D1  0BE4               	decfsz	??_StartHeater+1,f
  5256  05D2  2DCD               	goto	u4627
  5257                           
  5258                           ;main.c: 488:     }
  5259  05D3  3001               	movlw	1
  5260  05D4  0020               	movlb	0	; select bank0
  5261  05D5  00E3               	movwf	??_StartHeater
  5262  05D6  0863               	movf	??_StartHeater,w
  5263  05D7  07E5               	addwf	StartHeater@i,f
  5264  05D8  3012               	movlw	18
  5265  05D9  0265               	subwf	StartHeater@i,w
  5266  05DA  1C03               	skipc
  5267  05DB  2DC7               	goto	l4672
  5268                           
  5269                           ;main.c: 489:     StartStop_Fan(0);
  5270  05DC  3000               	movlw	0
  5271  05DD  3192  22EC  3180   	fcall	_StartStop_Fan
  5272                           
  5273                           ;main.c: 490:     StartStop_Buzzer(1);
  5274  05E0  3001               	movlw	1
  5275  05E1  3192  22E2  3180   	fcall	_StartStop_Buzzer
  5276                           
  5277                           ;main.c: 491:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  5278  05E4  300B               	movlw	11
  5279  05E5  0020               	movlb	0	; select bank0
  5280  05E6  00E4               	movwf	??_StartHeater+1
  5281  05E7  3026               	movlw	38
  5282  05E8  00E3               	movwf	??_StartHeater
  5283  05E9  305D               	movlw	93
  5284  05EA                     u4637:
  5285  05EA  0B89               	decfsz	9,f
  5286  05EB  2DEA               	goto	u4637
  5287  05EC  0BE3               	decfsz	??_StartHeater,f
  5288  05ED  2DEA               	goto	u4637
  5289  05EE  0BE4               	decfsz	??_StartHeater+1,f
  5290  05EF  2DEA               	goto	u4637
  5291  05F0  3200               	nop2
  5292                           
  5293                           ;main.c: 492:     StartStop_Buzzer(0);
  5294  05F1  3000               	movlw	0
  5295  05F2  3192  22E2         	fcall	_StartStop_Buzzer
  5296  05F4  0008               	return
  5297  05F5                     __end_of_StartHeater:
  5298                           
  5299                           	psect	text3
  5300  13A0                     __ptext3:	
  5301 ;; *************** function _StopTouchDetection *****************
  5302 ;; Defined at:
  5303 ;;		line 242 in file "main.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;		None
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;		None
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  1    wreg      void 
  5310 ;; Registers used:
  5311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/1
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5321 ;;Total ram usage:        0 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:   12
  5324 ;; This function calls:
  5325 ;;		_Init_Function
  5326 ;;		_MTOUCH_Button_isPressed
  5327 ;;		_MTOUCH_Service_Mainloop
  5328 ;; This function is called by:
  5329 ;;		_StartHeater
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333                           
  5334                           ;psect for function _StopTouchDetection
  5335  13A0                     _StopTouchDetection:
  5336                           
  5337                           ;main.c: 245:     if (1 == MTOUCH_Service_Mainloop()) {
  5338                           
  5339                           ;incstack = 0
  5340                           ; Regs used in _StopTouchDetection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5341  13A0  3187  27DD  3193   	fcall	_MTOUCH_Service_Mainloop
  5342  13A3  3A01               	xorlw	1
  5343  13A4  1D03               	skipz
  5344  13A5  0008               	return
  5345                           
  5346                           ;main.c: 247:         if (1 == MTOUCH_Button_isPressed(T_stop)){
  5347  13A6  3001               	movlw	1
  5348  13A7  3195  2530  3193   	fcall	_MTOUCH_Button_isPressed
  5349  13AA  3A01               	xorlw	1
  5350  13AB  1D03               	skipz
  5351  13AC  0008               	return
  5352                           
  5353                           ;main.c: 249:             Init_Function();
  5354  13AD  3194  248C         	fcall	_Init_Function
  5355                           
  5356                           ;main.c: 252:         }
  5357  13AF  0008               	return
  5358  13B0                     __end_of_StopTouchDetection:
  5359                           
  5360                           	psect	text4
  5361  07DD                     __ptext4:	
  5362 ;; *************** function _MTOUCH_Service_Mainloop *****************
  5363 ;; Defined at:
  5364 ;;		line 96 in file "mcc_generated_files/mtouch/mtouch.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;		None
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      _Bool 
  5371 ;; Registers used:
  5372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/1
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;Total ram usage:        1 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:   11
  5385 ;; This function calls:
  5386 ;;		_MTOUCH_Button_ServiceAll
  5387 ;;		_MTOUCH_Initialize
  5388 ;;		_MTOUCH_Sensor_SampleAll
  5389 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  5390 ;;		_MTOUCH_Tick
  5391 ;;		_MTOUCH_needReburst
  5392 ;; This function is called by:
  5393 ;;		_StartTouchDetection
  5394 ;;		_StopTouchDetection
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           
  5399                           ;psect for function _MTOUCH_Service_Mainloop
  5400  07DD                     _MTOUCH_Service_Mainloop:
  5401                           
  5402                           ;mcc_generated_files/mtouch/mtouch.c: 99:     if(mtouch_request_init)
  5403                           
  5404                           ;incstack = 0
  5405                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5406  07DD  0020               	movlb	0	; select bank0
  5407  07DE  0869               	movf	_mtouch_request_init,w
  5408  07DF  1903               	btfsc	3,2
  5409  07E0  2FE6               	goto	l4260
  5410                           
  5411                           ;mcc_generated_files/mtouch/mtouch.c: 100:     {;mcc_generated_files/mtouch/mtouch.c: 10
      +                          1:         MTOUCH_Initialize();
  5412  07E1  3193  2324  3187   	fcall	_MTOUCH_Initialize
  5413                           
  5414                           ;mcc_generated_files/mtouch/mtouch.c: 102:         mtouch_request_init = 0;
  5415  07E4  0020               	movlb	0	; select bank0
  5416  07E5  01E9               	clrf	_mtouch_request_init
  5417  07E6                     l4260:
  5418                           
  5419                           ;mcc_generated_files/mtouch/mtouch.c: 106:     mtouch_time_toScan = 1;
  5420  07E6  01EA               	clrf	_mtouch_time_toScan
  5421  07E7  0AEA               	incf	_mtouch_time_toScan,f
  5422                           
  5423                           ;mcc_generated_files/mtouch/mtouch.c: 109:     {;mcc_generated_files/mtouch/mtouch.c: 11
      +                          0:         if(MTOUCH_Sensor_SampleAll() == 0)
  5424                           
  5425                           ;mcc_generated_files/mtouch/mtouch.c: 108:     if(mtouch_time_toScan)
  5426  07E8  3194  244E  3187   	fcall	_MTOUCH_Sensor_SampleAll
  5427  07EB  3A00               	xorlw	0
  5428  07EC  1D03               	skipz
  5429  07ED  2FF0               	goto	l4270
  5430                           
  5431                           ;mcc_generated_files/mtouch/mtouch.c: 111:             return 0;
  5432  07EE  3000               	movlw	0
  5433  07EF  0008               	return
  5434  07F0                     l4270:
  5435                           
  5436                           ;mcc_generated_files/mtouch/mtouch.c: 113:             MTOUCH_Button_ServiceAll();
  5437  07F0  3193  2371  3187   	fcall	_MTOUCH_Button_ServiceAll
  5438                           
  5439                           ;mcc_generated_files/mtouch/mtouch.c: 114:             mtouch_time_toScan = MTOUCH_needR
      +                          eburst();
  5440  07F3  3180  2002  3187   	fcall	_MTOUCH_needReburst
  5441  07F6  00AB               	movwf	??_MTOUCH_Service_Mainloop
  5442  07F7  082B               	movf	??_MTOUCH_Service_Mainloop,w
  5443  07F8  00EA               	movwf	_mtouch_time_toScan
  5444                           
  5445                           ;mcc_generated_files/mtouch/mtouch.c: 115:             MTOUCH_Sensor_Sampled_ResetAll();
  5446  07F9  3194  2427  3187   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  5447                           
  5448                           ;mcc_generated_files/mtouch/mtouch.c: 116:             MTOUCH_Tick();
  5449  07FC  3192  227C         	fcall	_MTOUCH_Tick
  5450                           
  5451                           ;mcc_generated_files/mtouch/mtouch.c: 117:             return 1;
  5452  07FE  3001               	movlw	1
  5453  07FF  0008               	return
  5454  0800                     __end_of_MTOUCH_Service_Mainloop:
  5455                           
  5456                           	psect	text5
  5457  0002                     __ptext5:	
  5458 ;; *************** function _MTOUCH_needReburst *****************
  5459 ;; Defined at:
  5460 ;;		line 140 in file "mcc_generated_files/mtouch/mtouch.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;		None
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  needReburst     1    0        _Bool 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  1    wreg      _Bool 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2
  5469 ;; Tracked objects:
  5470 ;;		On entry : 1F/0
  5471 ;;		On exit  : 1F/0
  5472 ;;		Unchanged: 1F/0
  5473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;Total ram usage:        1 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    5
  5481 ;; This function calls:
  5482 ;;		Nothing
  5483 ;; This function is called by:
  5484 ;;		_MTOUCH_Service_Mainloop
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           
  5489                           ;psect for function _MTOUCH_needReburst
  5490  0002                     _MTOUCH_needReburst:
  5491                           
  5492                           ;mcc_generated_files/mtouch/mtouch.c: 144:     return needReburst;
  5493                           
  5494                           ;incstack = 0
  5495                           ; Regs used in _MTOUCH_needReburst: [wreg+status,2]
  5496  0002  3000               	movlw	0
  5497  0003  0008               	return
  5498  0004                     __end_of_MTOUCH_needReburst:
  5499                           
  5500                           	psect	text6
  5501  127C                     __ptext6:	
  5502 ;; *************** function _MTOUCH_Tick *****************
  5503 ;; Defined at:
  5504 ;;		line 130 in file "mcc_generated_files/mtouch/mtouch.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;		None
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;		None
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  1    wreg      void 
  5511 ;; Registers used:
  5512 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5522 ;;Total ram usage:        0 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; Hardware stack levels required when called:    7
  5525 ;; This function calls:
  5526 ;;		_MTOUCH_Button_Tick
  5527 ;; This function is called by:
  5528 ;;		_MTOUCH_Service_Mainloop
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           
  5533                           ;psect for function _MTOUCH_Tick
  5534  127C                     _MTOUCH_Tick:
  5535                           
  5536                           ;mcc_generated_files/mtouch/mtouch.c: 132:     MTOUCH_Button_Tick();
  5537                           
  5538                           ;incstack = 0
  5539                           ; Regs used in _MTOUCH_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5540  127C  3194  24A2         	fcall	_MTOUCH_Button_Tick
  5541  127E  0008               	return
  5542  127F                     __end_of_MTOUCH_Tick:
  5543                           
  5544                           	psect	text7
  5545  14A2                     __ptext7:	
  5546 ;; *************** function _MTOUCH_Button_Tick *****************
  5547 ;; Defined at:
  5548 ;;		line 289 in file "mcc_generated_files/mtouch/mtouch_button.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  i               1    4[COMMON] unsigned char 
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      void 
  5555 ;; Registers used:
  5556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5566 ;;Total ram usage:        2 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; Hardware stack levels required when called:    6
  5569 ;; This function calls:
  5570 ;;		_Button_Tick_helper
  5571 ;; This function is called by:
  5572 ;;		_MTOUCH_Tick
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           
  5577                           ;psect for function _MTOUCH_Button_Tick
  5578  14A2                     _MTOUCH_Button_Tick:
  5579                           
  5580                           ;mcc_generated_files/mtouch/mtouch_button.c: 291:     uint8_t i;;mcc_generated_files/mto
      +                          uch/mtouch_button.c: 292:     for (i = 0; i < 2u; i++)
  5581                           
  5582                           ;incstack = 0
  5583                           ; Regs used in _MTOUCH_Button_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5584  14A2  01F4               	clrf	MTOUCH_Button_Tick@i
  5585  14A3                     l4168:
  5586                           
  5587                           ;mcc_generated_files/mtouch/mtouch_button.c: 293:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 294:         Button_Tick_helper(&mtouch_button[i]);
  5588  14A3  0874               	movf	MTOUCH_Button_Tick@i,w
  5589  14A4  00F3               	movwf	??_MTOUCH_Button_Tick
  5590  14A5  3003               	movlw	3
  5591  14A6                     u3715:
  5592  14A6  35F3               	lslf	??_MTOUCH_Button_Tick,f
  5593  14A7  3EFF               	addlw	-1
  5594  14A8  1D03               	skipz
  5595  14A9  2CA6               	goto	u3715
  5596  14AA  3573               	lslf	??_MTOUCH_Button_Tick,w
  5597  14AB  3E20               	addlw	(low (_mtouch_button| (0+256)))& (0+255)
  5598  14AC  3196  264E  3194   	fcall	_Button_Tick_helper
  5599                           
  5600                           ;mcc_generated_files/mtouch/mtouch_button.c: 295:     }
  5601  14AF  3001               	movlw	1
  5602  14B0  00F3               	movwf	??_MTOUCH_Button_Tick
  5603  14B1  0873               	movf	??_MTOUCH_Button_Tick,w
  5604  14B2  07F4               	addwf	MTOUCH_Button_Tick@i,f
  5605  14B3  3002               	movlw	2
  5606  14B4  0274               	subwf	MTOUCH_Button_Tick@i,w
  5607  14B5  1803               	btfsc	3,0
  5608  14B6  0008               	return
  5609  14B7  2CA3               	goto	l4168
  5610  14B8                     __end_of_MTOUCH_Button_Tick:
  5611                           
  5612                           	psect	text8
  5613  164E                     __ptext8:	
  5614 ;; *************** function _Button_Tick_helper *****************
  5615 ;; Defined at:
  5616 ;;		line 297 in file "mcc_generated_files/mtouch/mtouch_button.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  button          1    wreg     PTR struct .
  5619 ;;		 -> mtouch_button(32), 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  button          1    2[COMMON] PTR struct .
  5622 ;;		 -> mtouch_button(32), 
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1    wreg      void 
  5625 ;; Registers used:
  5626 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5634 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;Total ram usage:        3 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:    5
  5639 ;; This function calls:
  5640 ;;		Nothing
  5641 ;; This function is called by:
  5642 ;;		_MTOUCH_Button_Tick
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           
  5647                           ;psect for function _Button_Tick_helper
  5648  164E                     _Button_Tick_helper:
  5649                           
  5650                           ;incstack = 0
  5651                           ; Regs used in _Button_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
  5652                           ;Button_Tick_helper@button stored from wreg
  5653  164E  00F2               	movwf	Button_Tick_helper@button
  5654                           
  5655                           ;mcc_generated_files/mtouch/mtouch_button.c: 297: static void Button_Tick_helper(mtouch_
      +                          button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 298: {;mcc_generated_files
      +                          /mtouch/mtouch_button.c: 300:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  5656  164F  0872               	movf	Button_Tick_helper@button,w
  5657  1650  3E02               	addlw	2
  5658  1651  0086               	movwf	6
  5659  1652  3001               	movlw	1	; select bank2/3
  5660  1653  0087               	movwf	7
  5661  1654  3002               	movlw	2
  5662  1655  0601               	xorwf	1,w
  5663  1656  1D03               	btfss	3,2
  5664  1657  0008               	return
  5665                           
  5666                           ;mcc_generated_files/mtouch/mtouch_button.c: 301:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 302:         (button->counter)++;
  5667  1658  0872               	movf	Button_Tick_helper@button,w
  5668  1659  3E0A               	addlw	10
  5669  165A  0086               	movwf	6
  5670  165B  3001               	movlw	1	; select bank2/3
  5671  165C  0087               	movwf	7
  5672  165D  3001               	movlw	1
  5673  165E  0781               	addwf	1,f
  5674  165F  3141               	addfsr 1,1
  5675  1660  1803               	skipnc
  5676  1661  0A81               	incf	1,f
  5677                           
  5678                           ;mcc_generated_files/mtouch/mtouch_button.c: 303:         if (button->counter == (mtouch
      +                          _button_statecounter_t)0)
  5679  1662  0872               	movf	Button_Tick_helper@button,w
  5680  1663  3E0A               	addlw	10
  5681  1664  0086               	movwf	6
  5682  1665  3001               	movlw	1	; select bank2/3
  5683  1666  0087               	movwf	7
  5684  1667  0016               	moviw fsr1++
  5685  1668  0401               	iorwf	1,w
  5686  1669  1D03               	btfss	3,2
  5687  166A  0008               	return
  5688                           
  5689                           ;mcc_generated_files/mtouch/mtouch_button.c: 304:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 305:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
  5690  166B  0872               	movf	Button_Tick_helper@button,w
  5691  166C  3E0A               	addlw	10
  5692  166D  0086               	movwf	6
  5693  166E  3001               	movlw	1	; select bank2/3
  5694  166F  0087               	movwf	7
  5695  1670  30FF               	movlw	255
  5696  1671  3FC0               	movwi [0]fsr1
  5697  1672  30FF               	movlw	255
  5698  1673  3FC1               	movwi [1]fsr1
  5699  1674  0008               	return
  5700  1675                     __end_of_Button_Tick_helper:
  5701                           
  5702                           	psect	text9
  5703  144E                     __ptext9:	
  5704 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  5705 ;; Defined at:
  5706 ;;		line 187 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;		None
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  sensor          1    9[BANK0 ] enum E2661
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      _Bool 
  5713 ;; Registers used:
  5714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5715 ;; Tracked objects:
  5716 ;;		On entry : 1F/0
  5717 ;;		On exit  : 1F/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;Total ram usage:        2 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; Hardware stack levels required when called:   10
  5727 ;; This function calls:
  5728 ;;		_Sensor_Service
  5729 ;; This function is called by:
  5730 ;;		_MTOUCH_Service_Mainloop
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           
  5735                           ;psect for function _MTOUCH_Sensor_SampleAll
  5736  144E                     _MTOUCH_Sensor_SampleAll:
  5737                           
  5738                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 189:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 190:     for (sensor = 0; sensor < (2u); sens
      +                          or++)
  5739                           
  5740                           ;incstack = 0
  5741                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5742  144E  01A9               	clrf	MTOUCH_Sensor_SampleAll@sensor
  5743  144F                     l4190:
  5744                           
  5745                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 191:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 192:         if(Sensor_Service(sensor)!= MTOUCH_SENSOR_ERROR_none)
  5746  144F  0829               	movf	MTOUCH_Sensor_SampleAll@sensor,w
  5747  1450  3197  2767  3194   	fcall	_Sensor_Service
  5748  1453  3A00               	xorlw	0
  5749  1454  1903               	skipnz
  5750  1455  2C58               	goto	l4196
  5751                           
  5752                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 193:             return 0;
  5753  1456  3000               	movlw	0
  5754  1457  0008               	return
  5755  1458                     l4196:
  5756                           
  5757                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 194:     }
  5758  1458  3001               	movlw	1
  5759  1459  00A8               	movwf	??_MTOUCH_Sensor_SampleAll
  5760  145A  0828               	movf	??_MTOUCH_Sensor_SampleAll,w
  5761  145B  07A9               	addwf	MTOUCH_Sensor_SampleAll@sensor,f
  5762  145C  3002               	movlw	2
  5763  145D  0229               	subwf	MTOUCH_Sensor_SampleAll@sensor,w
  5764  145E  1C03               	skipc
  5765  145F  2C4F               	goto	l4190
  5766                           
  5767                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 195:     return 1;
  5768  1460  3001               	movlw	1
  5769  1461  0008               	return
  5770  1462                     __end_of_MTOUCH_Sensor_SampleAll:
  5771                           
  5772                           	psect	text10
  5773  1767                     __ptext10:	
  5774 ;; *************** function _Sensor_Service *****************
  5775 ;; Defined at:
  5776 ;;		line 233 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  name            1    wreg     enum E2661
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;  name            1    5[BANK0 ] enum E2661
  5781 ;;  sensor          1    7[BANK0 ] PTR struct .
  5782 ;;		 -> mtouch_sensor(18), 
  5783 ;;  error           1    6[BANK0 ] enum E2664
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      enum E2664
  5786 ;; Registers used:
  5787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 1F/0
  5790 ;;		On exit  : 1F/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5797 ;;Total ram usage:        5 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    9
  5800 ;; This function calls:
  5801 ;;		_Sensor_Acquisition
  5802 ;;		_Sensor_DefaultCallback
  5803 ;;		_Sensor_RawSample_Update
  5804 ;;		_Sensor_isEnabled
  5805 ;;		_Sensor_setSampled
  5806 ;;		___bmul
  5807 ;; This function is called by:
  5808 ;;		_MTOUCH_Sensor_SampleAll
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           
  5813                           ;psect for function _Sensor_Service
  5814  1767                     _Sensor_Service:
  5815                           
  5816                           ;incstack = 0
  5817                           ; Regs used in _Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5818                           ;Sensor_Service@name stored from wreg
  5819  1767  00A5               	movwf	Sensor_Service@name
  5820                           
  5821                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 233: static enum mtouch_sensor_error Sensor
      +                          _Service(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 234:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 235:     mtouch_sensor_t* sensor = &mtouc
      +                          h_sensor[name];
  5822  1768  3009               	movlw	9
  5823  1769  00A3               	movwf	??_Sensor_Service
  5824  176A  0823               	movf	??_Sensor_Service,w
  5825  176B  00F0               	movwf	___bmul@multiplicand
  5826  176C  0825               	movf	Sensor_Service@name,w
  5827  176D  3193  23C0  3197   	fcall	___bmul
  5828  1770  3EB0               	addlw	(low (_mtouch_sensor| 0))& (0+255)
  5829  1771  0020               	movlb	0	; select bank0
  5830  1772  00A4               	movwf	??_Sensor_Service+1
  5831  1773  0824               	movf	??_Sensor_Service+1,w
  5832  1774  00A7               	movwf	Sensor_Service@sensor
  5833                           
  5834                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 236:     enum mtouch_sensor_error error = S
      +                          ensor_Acquisition(sensor);
  5835  1775  0827               	movf	Sensor_Service@sensor,w
  5836  1776  3197  272B  3197   	fcall	_Sensor_Acquisition
  5837  1779  00A3               	movwf	??_Sensor_Service
  5838  177A  0823               	movf	??_Sensor_Service,w
  5839  177B  00A6               	movwf	Sensor_Service@error
  5840                           
  5841                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 239:     switch(error)
  5842  177C  2F94               	goto	l4110
  5843  177D                     l4102:
  5844                           
  5845                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 244:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 249:                 if(!lowpowerActivated)
  5846  177D  0827               	movf	Sensor_Service@sensor,w
  5847  177E  3193  2356  3197   	fcall	_Sensor_isEnabled
  5848  1781  3A00               	xorlw	0
  5849  1782  1903               	skipnz
  5850  1783  2FB1               	goto	l4112
  5851                           
  5852                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 250:                 {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 251:                     Sensor_RawSample_Update(sensor);
  5853  1784  0827               	movf	Sensor_Service@sensor,w
  5854  1785  3194  24E6  3197   	fcall	_Sensor_RawSample_Update
  5855                           
  5856                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 253:                 Sensor_setSampled(sens
      +                          or);
  5857                           
  5858                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 252:                 }
  5859  1788  0827               	movf	Sensor_Service@sensor,w
  5860  1789  3192  22D1  3197   	fcall	_Sensor_setSampled
  5861                           
  5862                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 254:                 callback_sampled(name)
      +                          ;
  5863  178C  0825               	movf	Sensor_Service@name,w
  5864  178D  00A3               	movwf	??_Sensor_Service
  5865  178E  0823               	movf	??_Sensor_Service,w
  5866  178F  00F0               	movwf	Sensor_DefaultCallback@sensor
  5867  1790  3188  2000  3197   	fcall	_Sensor_DefaultCallback
  5868  1793  2FB1               	goto	l4112
  5869  1794                     l4110:
  5870  1794  0826               	movf	Sensor_Service@error,w
  5871  1795  00A3               	movwf	??_Sensor_Service
  5872  1796  01A4               	clrf	??_Sensor_Service+1
  5873  1797  1BA3               	btfsc	??_Sensor_Service,7
  5874  1798  03A4               	decf	??_Sensor_Service+1,f
  5875                           
  5876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5877                           ; Switch size 1, requested type "simple"
  5878                           ; Number of cases is 2, Range of values is 0 to 255
  5879                           ; switch strategies available:
  5880                           ; Name         Instructions Cycles
  5881                           ; simple_byte            7     4 (average)
  5882                           ; jumptable            260     6 (fixed)
  5883                           ;	Chosen strategy is simple_byte
  5884  1799  0824               	movf	??_Sensor_Service+1,w
  5885  179A  3A00               	xorlw	0	; case 0
  5886  179B  1903               	skipnz
  5887  179C  2FA1               	goto	l4810
  5888  179D  3AFF               	xorlw	255	; case 255
  5889  179E  1903               	skipnz
  5890  179F  2FA6               	goto	l4812
  5891  17A0  2FB1               	goto	l4112
  5892  17A1                     l4810:
  5893                           
  5894                           ; Switch size 1, requested type "simple"
  5895                           ; Number of cases is 1, Range of values is 0 to 0
  5896                           ; switch strategies available:
  5897                           ; Name         Instructions Cycles
  5898                           ; simple_byte            4     3 (average)
  5899                           ; direct_byte            8     6 (fixed)
  5900                           ; jumptable            260     6 (fixed)
  5901                           ;	Chosen strategy is simple_byte
  5902  17A1  0823               	movf	??_Sensor_Service,w
  5903  17A2  3A00               	xorlw	0	; case 0
  5904  17A3  1903               	skipnz
  5905  17A4  2F7D               	goto	l4102
  5906  17A5  2FB1               	goto	l4112
  5907  17A6                     l4812:
  5908                           
  5909                           ; Switch size 1, requested type "simple"
  5910                           ; Number of cases is 3, Range of values is 253 to 255
  5911                           ; switch strategies available:
  5912                           ; Name         Instructions Cycles
  5913                           ; simple_byte           10     6 (average)
  5914                           ; direct_byte           11     5 (fixed)
  5915                           ; jumptable            263     9 (fixed)
  5916                           ;	Chosen strategy is simple_byte
  5917  17A6  0823               	movf	??_Sensor_Service,w
  5918  17A7  3AFD               	xorlw	253	; case 253
  5919  17A8  1903               	skipnz
  5920  17A9  2FB1               	goto	l4112
  5921  17AA  3A03               	xorlw	3	; case 254
  5922  17AB  1903               	skipnz
  5923  17AC  2FB1               	goto	l4112
  5924  17AD  3A01               	xorlw	1	; case 255
  5925  17AE  1903               	skipnz
  5926  17AF  2FB1               	goto	l4112
  5927  17B0  2FB1               	goto	l4112
  5928  17B1                     l4112:
  5929                           
  5930                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 266:     return error;
  5931  17B1  0826               	movf	Sensor_Service@error,w
  5932  17B2  0008               	return
  5933  17B3                     __end_of_Sensor_Service:
  5934                           
  5935                           	psect	text11
  5936  12D1                     __ptext11:	
  5937 ;; *************** function _Sensor_setSampled *****************
  5938 ;; Defined at:
  5939 ;;		line 569 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  sensor          1    wreg     PTR struct .
  5942 ;;		 -> mtouch_sensor(18), 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  sensor          1    0[COMMON] PTR struct .
  5945 ;;		 -> mtouch_sensor(18), 
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1    wreg      void 
  5948 ;; Registers used:
  5949 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5950 ;; Tracked objects:
  5951 ;;		On entry : 1F/0
  5952 ;;		On exit  : 1F/0
  5953 ;;		Unchanged: 1F/0
  5954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5959 ;;Total ram usage:        1 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:    5
  5962 ;; This function calls:
  5963 ;;		Nothing
  5964 ;; This function is called by:
  5965 ;;		_Sensor_Service
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           
  5970                           ;psect for function _Sensor_setSampled
  5971  12D1                     _Sensor_setSampled:
  5972                           
  5973                           ;incstack = 0
  5974                           ; Regs used in _Sensor_setSampled: [wreg+fsr1l+fsr1h+status,2+status,0]
  5975                           ;Sensor_setSampled@sensor stored from wreg
  5976  12D1  00F0               	movwf	Sensor_setSampled@sensor
  5977                           
  5978                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 569: static __attribute__((inline)) void Se
      +                          nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 570
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 571:     sensor->sampled = 1;
  5979  12D2  0870               	movf	Sensor_setSampled@sensor,w
  5980  12D3  3E08               	addlw	8
  5981  12D4  0086               	movwf	6
  5982  12D5  0187               	clrf	7
  5983  12D6  1481               	bsf	1,1
  5984  12D7  0008               	return
  5985  12D8                     __end_of_Sensor_setSampled:
  5986                           
  5987                           	psect	text12
  5988  14E6                     __ptext12:	
  5989 ;; *************** function _Sensor_RawSample_Update *****************
  5990 ;; Defined at:
  5991 ;;		line 430 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  sensor          1    wreg     PTR struct .
  5994 ;;		 -> mtouch_sensor(18), 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  sensor          1    0[COMMON] PTR struct .
  5997 ;;		 -> mtouch_sensor(18), 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  1    wreg      void 
  6000 ;; Registers used:
  6001 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6002 ;; Tracked objects:
  6003 ;;		On entry : 1F/0
  6004 ;;		On exit  : 1F/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;Total ram usage:        1 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:    5
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		_Sensor_Service
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           
  6022                           ;psect for function _Sensor_RawSample_Update
  6023  14E6                     _Sensor_RawSample_Update:
  6024                           
  6025                           ;incstack = 0
  6026                           ; Regs used in _Sensor_RawSample_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  6027                           ;Sensor_RawSample_Update@sensor stored from wreg
  6028  14E6  00F0               	movwf	Sensor_RawSample_Update@sensor
  6029  14E7  1F8B               	btfss	11,7	;volatile
  6030  14E8  2CF4               	goto	l3662
  6031  14E9  138B               	bcf	11,7	;volatile
  6032  14EA  0870               	movf	Sensor_RawSample_Update@sensor,w
  6033  14EB  3E06               	addlw	6
  6034  14EC  0086               	movwf	6
  6035  14ED  0187               	clrf	7
  6036  14EE  0866               	movf	_packet_sample,w
  6037  14EF  3FC0               	movwi [0]fsr1
  6038  14F0  0867               	movf	_packet_sample+1,w
  6039  14F1  3FC1               	movwi [1]fsr1
  6040  14F2  178B               	bsf	11,7	;volatile
  6041  14F3  0008               	return
  6042  14F4                     l3662:
  6043  14F4  0870               	movf	Sensor_RawSample_Update@sensor,w
  6044  14F5  3E06               	addlw	6
  6045  14F6  0086               	movwf	6
  6046  14F7  0187               	clrf	7
  6047  14F8  0866               	movf	_packet_sample,w
  6048  14F9  3FC0               	movwi [0]fsr1
  6049  14FA  0867               	movf	_packet_sample+1,w
  6050  14FB  3FC1               	movwi [1]fsr1
  6051  14FC  0008               	return
  6052  14FD                     __end_of_Sensor_RawSample_Update:
  6053                           
  6054                           	psect	text13
  6055  0800                     __ptext13:	
  6056 ;; *************** function _Sensor_DefaultCallback *****************
  6057 ;; Defined at:
  6058 ;;		line 450 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  sensor          1    0[COMMON] enum E2661
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;		None
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      void 
  6065 ;; Registers used:
  6066 ;;		None
  6067 ;; Tracked objects:
  6068 ;;		On entry : 1F/0
  6069 ;;		On exit  : 1F/0
  6070 ;;		Unchanged: 1F/0
  6071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6072 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;Total ram usage:        1 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    5
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_Sensor_Service
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           
  6087                           ;psect for function _Sensor_DefaultCallback
  6088  0800                     _Sensor_DefaultCallback:
  6089                           
  6090                           ;incstack = 0
  6091                           ; Regs used in _Sensor_DefaultCallback: []
  6092  0800  0008               	return
  6093  0801                     __end_of_Sensor_DefaultCallback:
  6094                           
  6095                           	psect	text14
  6096  172B                     __ptext14:	
  6097 ;; *************** function _Sensor_Acquisition *****************
  6098 ;; Defined at:
  6099 ;;		line 280 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;  sensor          1    wreg     PTR struct .
  6102 ;;		 -> mtouch_sensor(18), 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  sensor          1    2[BANK0 ] PTR struct .
  6105 ;;		 -> mtouch_sensor(18), 
  6106 ;;  retry           1    1[BANK0 ] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      enum E2664
  6109 ;; Registers used:
  6110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 1F/0
  6113 ;;		On exit  : 1F/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;Total ram usage:        3 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    8
  6123 ;; This function calls:
  6124 ;;		_Sensor_Acq_ExecutePacket
  6125 ;;		_Sensor_isEnabled
  6126 ;;		_Sensor_setActive
  6127 ;;		_Sensor_setInactive
  6128 ;;		_abs
  6129 ;; This function is called by:
  6130 ;;		_Sensor_Service
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           
  6135                           ;psect for function _Sensor_Acquisition
  6136  172B                     _Sensor_Acquisition:
  6137                           
  6138                           ;incstack = 0
  6139                           ; Regs used in _Sensor_Acquisition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6140                           ;Sensor_Acquisition@sensor stored from wreg
  6141  172B  00A2               	movwf	Sensor_Acquisition@sensor
  6142                           
  6143                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 280: static enum mtouch_sensor_error Sensor
      +                          _Acquisition(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 281: {
      +                          ;mcc_generated_files/mtouch/mtouch_sensor.c: 283:     uint8_t retry = (uint8_t)5u;
  6144  172C  3005               	movlw	5
  6145  172D  00A0               	movwf	??_Sensor_Acquisition
  6146  172E  0820               	movf	??_Sensor_Acquisition,w
  6147  172F  00A1               	movwf	Sensor_Acquisition@retry
  6148                           
  6149                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 285:     if(!Sensor_isEnabled(sensor))
  6150  1730  0822               	movf	Sensor_Acquisition@sensor,w
  6151  1731  3193  2356  3197   	fcall	_Sensor_isEnabled
  6152  1734  3A00               	xorlw	0
  6153  1735  1D03               	skipz
  6154  1736  2F40               	goto	l3642
  6155  1737                     l3632:
  6156                           
  6157                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 286:         return MTOUCH_SENSOR_ERROR_non
      +                          e;
  6158  1737  3000               	movlw	0
  6159  1738  0008               	return
  6160  1739                     l3636:
  6161                           
  6162                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 289:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 290:         retry--;
  6163  1739  3001               	movlw	1
  6164  173A  02A1               	subwf	Sensor_Acquisition@retry,f
  6165                           
  6166                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 291:         if(retry == 0)
  6167  173B  0821               	movf	Sensor_Acquisition@retry,w
  6168  173C  1D03               	btfss	3,2
  6169  173D  2F40               	goto	l3642
  6170                           
  6171                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 292:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 293:             return MTOUCH_SENSOR_ERROR_tooManyRetries;
  6172  173E  30FC               	movlw	252
  6173  173F  0008               	return
  6174  1740                     l3642:
  6175                           
  6176                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 288:     while(Sensor_Acq_ExecutePacket(sen
      +                          sor))
  6177  1740  0822               	movf	Sensor_Acquisition@sensor,w
  6178  1741  3188  2023  3197   	fcall	_Sensor_Acq_ExecutePacket
  6179  1744  3A00               	xorlw	0
  6180  1745  1D03               	skipz
  6181  1746  2F39               	goto	l3636
  6182                           
  6183                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 297:     if((mtouch_sensor_packetsample_t)a
      +                          bs(packet_sample - sensor->rawSample) > 100u)
  6184  1747  0822               	movf	Sensor_Acquisition@sensor,w
  6185  1748  3E06               	addlw	6
  6186  1749  0086               	movwf	6
  6187  174A  0187               	clrf	7
  6188  174B  3F40               	moviw [0]fsr1
  6189  174C  0266               	subwf	_packet_sample,w
  6190  174D  00F0               	movwf	abs@a
  6191  174E  3F41               	moviw [1]fsr1
  6192  174F  3B67               	subwfb	_packet_sample+1,w
  6193  1750  00F1               	movwf	abs@a+1
  6194  1751  3194  24CF  3197   	fcall	_abs
  6195  1754  3000               	movlw	0
  6196  1755  0271               	subwf	?_abs+1,w
  6197  1756  3065               	movlw	101
  6198  1757  1903               	skipnz
  6199  1758  0270               	subwf	?_abs,w
  6200  1759  1C03               	skipc
  6201  175A  2F61               	goto	l3648
  6202                           
  6203                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 298:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 299:         Sensor_setActive(sensor);
  6204  175B  0020               	movlb	0	; select bank0
  6205  175C  0822               	movf	Sensor_Acquisition@sensor,w
  6206  175D  3192  22C3  3197   	fcall	_Sensor_setActive
  6207                           
  6208                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 300:     }
  6209  1760  2F37               	goto	l3632
  6210  1761                     l3648:
  6211                           
  6212                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 302:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 303:         Sensor_setInactive(sensor);
  6213  1761  0020               	movlb	0	; select bank0
  6214  1762  0822               	movf	Sensor_Acquisition@sensor,w
  6215  1763  3192  22CA  3197   	fcall	_Sensor_setInactive
  6216  1766  2F37               	goto	l3632
  6217  1767                     __end_of_Sensor_Acquisition:
  6218                           
  6219                           	psect	text15
  6220  14CF                     __ptext15:	
  6221 ;; *************** function _abs *****************
  6222 ;; Defined at:
  6223 ;;		line 1 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/abs.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  a               2    0[COMMON] int 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;		None
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  2    0[COMMON] int 
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, status,0
  6232 ;; Tracked objects:
  6233 ;;		On entry : 1F/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;Total ram usage:        4 bytes
  6242 ;; Hardware stack levels used:    1
  6243 ;; Hardware stack levels required when called:    5
  6244 ;; This function calls:
  6245 ;;		Nothing
  6246 ;; This function is called by:
  6247 ;;		_Sensor_Acquisition
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           
  6252                           ;psect for function _abs
  6253  14CF                     _abs:
  6254                           
  6255                           ;incstack = 0
  6256                           ; Regs used in _abs: [wreg+status,2+status,0]
  6257  14CF  0871               	movf	abs@a+1,w
  6258  14D0  3A80               	xorlw	128
  6259  14D1  00F2               	movwf	??_abs
  6260  14D2  3080               	movlw	128
  6261  14D3  0272               	subwf	??_abs,w
  6262  14D4  1D03               	skipz
  6263  14D5  2CD8               	goto	u2225
  6264  14D6  3001               	movlw	1
  6265  14D7  0270               	subwf	abs@a,w
  6266  14D8                     u2225:
  6267  14D8  1803               	skipnc
  6268  14D9  0008               	return
  6269  14DA  0970               	comf	abs@a,w
  6270  14DB  00F2               	movwf	??_abs
  6271  14DC  0971               	comf	abs@a+1,w
  6272  14DD  00F3               	movwf	??_abs+1
  6273  14DE  0AF2               	incf	??_abs,f
  6274  14DF  1903               	skipnz
  6275  14E0  0AF3               	incf	??_abs+1,f
  6276  14E1  0872               	movf	??_abs,w
  6277  14E2  00F0               	movwf	?_abs
  6278  14E3  0873               	movf	??_abs+1,w
  6279  14E4  00F1               	movwf	?_abs+1
  6280  14E5  0008               	return
  6281  14E6                     __end_of_abs:
  6282                           
  6283                           	psect	text16
  6284  12CA                     __ptext16:	
  6285 ;; *************** function _Sensor_setInactive *****************
  6286 ;; Defined at:
  6287 ;;		line 515 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;  sensor          1    wreg     PTR struct .
  6290 ;;		 -> mtouch_sensor(18), 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;  sensor          1    0[COMMON] PTR struct .
  6293 ;;		 -> mtouch_sensor(18), 
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6298 ;; Tracked objects:
  6299 ;;		On entry : 1F/0
  6300 ;;		On exit  : 1F/0
  6301 ;;		Unchanged: 1F/0
  6302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6306 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6307 ;;Total ram usage:        1 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:    5
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_Sensor_Acquisition
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           
  6318                           ;psect for function _Sensor_setInactive
  6319  12CA                     _Sensor_setInactive:
  6320                           
  6321                           ;incstack = 0
  6322                           ; Regs used in _Sensor_setInactive: [wreg+fsr1l+fsr1h+status,2+status,0]
  6323                           ;Sensor_setInactive@sensor stored from wreg
  6324  12CA  00F0               	movwf	Sensor_setInactive@sensor
  6325                           
  6326                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 515: static __attribute__((inline)) void Se
      +                          nsor_setInactive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 51
      +                          6: {;mcc_generated_files/mtouch/mtouch_sensor.c: 517:     sensor->active = 0;
  6327  12CB  0870               	movf	Sensor_setInactive@sensor,w
  6328  12CC  3E08               	addlw	8
  6329  12CD  0086               	movwf	6
  6330  12CE  0187               	clrf	7
  6331  12CF  1101               	bcf	1,2
  6332  12D0  0008               	return
  6333  12D1                     __end_of_Sensor_setInactive:
  6334                           
  6335                           	psect	text17
  6336  12C3                     __ptext17:	
  6337 ;; *************** function _Sensor_setActive *****************
  6338 ;; Defined at:
  6339 ;;		line 510 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  sensor          1    wreg     PTR struct .
  6342 ;;		 -> mtouch_sensor(18), 
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;  sensor          1    0[COMMON] PTR struct .
  6345 ;;		 -> mtouch_sensor(18), 
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      void 
  6348 ;; Registers used:
  6349 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6350 ;; Tracked objects:
  6351 ;;		On entry : 1F/0
  6352 ;;		On exit  : 1F/0
  6353 ;;		Unchanged: 1F/0
  6354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6359 ;;Total ram usage:        1 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; Hardware stack levels required when called:    5
  6362 ;; This function calls:
  6363 ;;		Nothing
  6364 ;; This function is called by:
  6365 ;;		_Sensor_Acquisition
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           
  6370                           ;psect for function _Sensor_setActive
  6371  12C3                     _Sensor_setActive:
  6372                           
  6373                           ;incstack = 0
  6374                           ; Regs used in _Sensor_setActive: [wreg+fsr1l+fsr1h+status,2+status,0]
  6375                           ;Sensor_setActive@sensor stored from wreg
  6376  12C3  00F0               	movwf	Sensor_setActive@sensor
  6377                           
  6378                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 510: static __attribute__((inline)) void Se
      +                          nsor_setActive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 511:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 512:     sensor->active = 1;
  6379  12C4  0870               	movf	Sensor_setActive@sensor,w
  6380  12C5  3E08               	addlw	8
  6381  12C6  0086               	movwf	6
  6382  12C7  0187               	clrf	7
  6383  12C8  1501               	bsf	1,2
  6384  12C9  0008               	return
  6385  12CA                     __end_of_Sensor_setActive:
  6386                           
  6387                           	psect	text18
  6388  1356                     __ptext18:	
  6389 ;; *************** function _Sensor_isEnabled *****************
  6390 ;; Defined at:
  6391 ;;		line 495 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;  sensor          1    wreg     PTR struct .
  6394 ;;		 -> mtouch_sensor(18), 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  sensor          1    0[COMMON] PTR struct .
  6397 ;;		 -> mtouch_sensor(18), 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  1    wreg      _Bool 
  6400 ;; Registers used:
  6401 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6402 ;; Tracked objects:
  6403 ;;		On entry : 1F/0
  6404 ;;		On exit  : 1F/0
  6405 ;;		Unchanged: 1F/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6411 ;;Total ram usage:        1 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    5
  6414 ;; This function calls:
  6415 ;;		Nothing
  6416 ;; This function is called by:
  6417 ;;		_Sensor_Service
  6418 ;;		_Sensor_Acquisition
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           
  6423                           ;psect for function _Sensor_isEnabled
  6424  1356                     _Sensor_isEnabled:
  6425                           
  6426                           ;incstack = 0
  6427                           ; Regs used in _Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0]
  6428                           ;Sensor_isEnabled@sensor stored from wreg
  6429  1356  00F0               	movwf	Sensor_isEnabled@sensor
  6430                           
  6431                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 495: static _Bool Sensor_isEnabled(mtouch_s
      +                          ensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 496: {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 497:     if(sensor!=((void*)0))
  6432  1357  0870               	movf	Sensor_isEnabled@sensor,w
  6433  1358  1903               	btfsc	3,2
  6434  1359  2B61               	goto	l3332
  6435                           
  6436                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 498:         return (_Bool)sensor->enabled;
  6437  135A  0870               	movf	Sensor_isEnabled@sensor,w
  6438  135B  3E08               	addlw	8
  6439  135C  0086               	movwf	6
  6440  135D  0187               	clrf	7
  6441  135E  0801               	movf	1,w
  6442  135F  3901               	andlw	1
  6443  1360  0008               	return
  6444  1361                     l3332:
  6445                           
  6446                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 500:         return 0;
  6447  1361  3000               	movlw	0
  6448  1362  0008               	return
  6449  1363                     __end_of_Sensor_isEnabled:
  6450                           
  6451                           	psect	text19
  6452  0823                     __ptext19:	
  6453 ;; *************** function _Sensor_Acq_ExecutePacket *****************
  6454 ;; Defined at:
  6455 ;;		line 315 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  sensor          1    wreg     PTR struct .
  6458 ;;		 -> mtouch_sensor(18), 
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;  sensor          1   13[COMMON] PTR struct .
  6461 ;;		 -> mtouch_sensor(18), 
  6462 ;;  error           1   12[COMMON] enum E2664
  6463 ;;  GIE_state       1   11[COMMON] unsigned char 
  6464 ;;  ADCON1_temp     1   10[COMMON] unsigned char 
  6465 ;;  ADCON0_temp     1    9[COMMON] unsigned char 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      enum E2664
  6468 ;; Registers used:
  6469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 1F/0
  6472 ;;		On exit  : 1F/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6476 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6478 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6479 ;;Total ram usage:        6 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; Hardware stack levels required when called:    7
  6482 ;; This function calls:
  6483 ;;		_MTOUCH_Delay
  6484 ;;		_MTOUCH_Random
  6485 ;;		_MTOUCH_Sensor_Scan_Initialize
  6486 ;;		_Sensor_Acq_ExecuteScan
  6487 ;;		_Sensor_setScanFunction
  6488 ;; This function is called by:
  6489 ;;		_Sensor_Acquisition
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           
  6494                           ;psect for function _Sensor_Acq_ExecutePacket
  6495  0823                     _Sensor_Acq_ExecutePacket:
  6496                           
  6497                           ;incstack = 0
  6498                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6499                           ;Sensor_Acq_ExecutePacket@sensor stored from wreg
  6500  0823  00FD               	movwf	Sensor_Acq_ExecutePacket@sensor
  6501                           
  6502                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 315: static enum mtouch_sensor_error Sensor
      +                          _Acq_ExecutePacket(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          316: {;mcc_generated_files/mtouch/mtouch_sensor.c: 318:     enum mtouch_sensor_error err
      +                          or = MTOUCH_SENSOR_ERROR_none;
  6503  0824  01FC               	clrf	Sensor_Acq_ExecutePacket@error
  6504                           
  6505                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 319:     uint8_t ADCON0_temp;;mcc_generated
      +                          _files/mtouch/mtouch_sensor.c: 320:     uint8_t ADCON1_temp;;mcc_generated_files/mtouch/
      +                          mtouch_sensor.c: 322:     uint8_t GIE_state;;mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           324:     ADCON0_temp = ADCON0;
  6506  0825  0021               	movlb	1	; select bank1
  6507  0826  081D               	movf	29,w	;volatile
  6508  0827  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  6509  0828  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  6510  0829  00F9               	movwf	Sensor_Acq_ExecutePacket@ADCON0_temp
  6511                           
  6512                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 325:     ADCON1_temp = ADCON1;
  6513  082A  081E               	movf	30,w	;volatile
  6514  082B  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  6515  082C  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  6516  082D  00FA               	movwf	Sensor_Acq_ExecutePacket@ADCON1_temp
  6517                           
  6518                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 326:     MTOUCH_Sensor_Scan_Initialize();
  6519  082E  3192  2283  3188   	fcall	_MTOUCH_Sensor_Scan_Initialize
  6520                           
  6521                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 328:     GIE_state = INTCONbits.GIE;
  6522  0831  3000               	movlw	0
  6523  0832  1B8B               	btfsc	11,7	;volatile
  6524  0833  3001               	movlw	1
  6525  0834  00FB               	movwf	Sensor_Acq_ExecutePacket@GIE_state
  6526                           
  6527                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 330:     Sensor_setScanFunction(sensor);
  6528  0835  087D               	movf	Sensor_Acq_ExecutePacket@sensor,w
  6529  0836  3194  2404  3188   	fcall	_Sensor_setScanFunction
  6530                           
  6531                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 332:     currentScannSensor = sensor->senso
      +                          r_name;
  6532  0839  087D               	movf	Sensor_Acq_ExecutePacket@sensor,w
  6533  083A  0086               	movwf	6
  6534  083B  0187               	clrf	7
  6535  083C  0801               	movf	1,w
  6536  083D  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  6537  083E  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  6538  083F  0020               	movlb	0	; select bank0
  6539  0840  00ED               	movwf	_currentScannSensor
  6540                           
  6541                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 333:     packet_counter = sensor->oversampl
      +                          ing;
  6542  0841  087D               	movf	Sensor_Acq_ExecutePacket@sensor,w
  6543  0842  0086               	movwf	6
  6544  0843  0187               	clrf	7
  6545  0844  3F45               	moviw [5]fsr1
  6546  0845  00EC               	movwf	_packet_counter
  6547                           
  6548                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 334:     packet_sample = 0;
  6549  0846  01E6               	clrf	_packet_sample
  6550  0847  01E7               	clrf	_packet_sample+1
  6551                           
  6552                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 335:     sensor_globalFlags.packet_done = 0
      +                          ;
  6553  0848  106E               	bcf	_sensor_globalFlags,0	;volatile
  6554                           
  6555                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 336:     sample_delay = MTOUCH_Random();
  6556  0849  3193  2390  3188   	fcall	_MTOUCH_Random
  6557  084C  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  6558  084D  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  6559  084E  00EB               	movwf	_sample_delay
  6560                           
  6561                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 337:     packet_sample = 0;
  6562  084F  01E6               	clrf	_packet_sample
  6563  0850  01E7               	clrf	_packet_sample+1
  6564                           
  6565                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 339:     sensor_globalFlags.interrupted = 0
      +                          ;
  6566  0851  10EE               	bcf	_sensor_globalFlags,1	;volatile
  6567  0852                     l3358:
  6568                           
  6569                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 343:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 344:         INTCONbits.GIE = (uint8_t)0;
  6570  0852  138B               	bcf	11,7	;volatile
  6571                           
  6572                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 345:         Sensor_Acq_ExecuteScan();
  6573  0853  3188  20C4  3188   	fcall	_Sensor_Acq_ExecuteScan
  6574                           
  6575                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 346:         INTCONbits.GIE = GIE_state;
  6576  0856  0C7B               	rrf	Sensor_Acq_ExecutePacket@GIE_state,w
  6577  0857  1C03               	skipc
  6578  0858  138B               	bcf	11,7	;volatile
  6579  0859  1803               	skipnc
  6580  085A  178B               	bsf	11,7	;volatile
  6581                           
  6582                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 347:         MTOUCH_Delay();
  6583  085B  3192  22F6  3188   	fcall	_MTOUCH_Delay
  6584  085E                     l136:	
  6585                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 348:         while(ADCON0bits.GO_nDONE == 1
      +                          );
  6586                           
  6587  085E  0021               	movlb	1	; select bank1
  6588  085F  189D               	btfsc	29,1	;volatile
  6589  0860  285E               	goto	l136
  6590                           
  6591                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 349:     } while(sensor_globalFlags.packet_
      +                          done == 0);
  6592  0861  0020               	movlb	0	; select bank0
  6593  0862  1C6E               	btfss	_sensor_globalFlags,0	;volatile
  6594  0863  2852               	goto	l3358
  6595                           
  6596                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 352:     ADCON0 = ADCON0_temp;
  6597  0864  0879               	movf	Sensor_Acq_ExecutePacket@ADCON0_temp,w
  6598  0865  0021               	movlb	1	; select bank1
  6599  0866  009D               	movwf	29	;volatile
  6600                           
  6601                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 353:     ADCON1 = ADCON1_temp;
  6602  0867  087A               	movf	Sensor_Acq_ExecutePacket@ADCON1_temp,w
  6603  0868  009E               	movwf	30	;volatile
  6604                           
  6605                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 355:     if(sensor_globalFlags.interrupted)
  6606  0869  0020               	movlb	0	; select bank0
  6607  086A  1CEE               	btfss	_sensor_globalFlags,1	;volatile
  6608  086B  2870               	goto	l140
  6609                           
  6610                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 356:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 357:         error = MTOUCH_SENSOR_ERROR_interruptedScan;
  6611  086C  30FA               	movlw	250
  6612  086D  00F8               	movwf	??_Sensor_Acq_ExecutePacket
  6613  086E  0878               	movf	??_Sensor_Acq_ExecutePacket,w
  6614  086F  00FC               	movwf	Sensor_Acq_ExecutePacket@error
  6615  0870                     l140:	
  6616                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 358:     }
  6617                           
  6618                           
  6619                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 360:     return error;
  6620  0870  087C               	movf	Sensor_Acq_ExecutePacket@error,w
  6621  0871  0008               	return
  6622  0872                     __end_of_Sensor_Acq_ExecutePacket:
  6623                           
  6624                           	psect	text20
  6625  1404                     __ptext20:	
  6626 ;; *************** function _Sensor_setScanFunction *****************
  6627 ;; Defined at:
  6628 ;;		line 462 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  sensor          1    wreg     PTR struct .
  6631 ;;		 -> mtouch_sensor(18), 
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;  sensor          1    0[COMMON] PTR struct .
  6634 ;;		 -> mtouch_sensor(18), 
  6635 ;; Return value:  Size  Location     Type
  6636 ;;                  1    wreg      void 
  6637 ;; Registers used:
  6638 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6639 ;; Tracked objects:
  6640 ;;		On entry : 1F/1
  6641 ;;		On exit  : 1F/1
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;Total ram usage:        1 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; Hardware stack levels required when called:    5
  6651 ;; This function calls:
  6652 ;;		Nothing
  6653 ;; This function is called by:
  6654 ;;		_Sensor_Acq_ExecutePacket
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           
  6659                           ;psect for function _Sensor_setScanFunction
  6660  1404                     _Sensor_setScanFunction:
  6661                           
  6662                           ;incstack = 0
  6663                           ; Regs used in _Sensor_setScanFunction: [wreg+fsr1l+fsr1h+status,2+status,0]
  6664                           ;Sensor_setScanFunction@sensor stored from wreg
  6665  1404  00F0               	movwf	Sensor_setScanFunction@sensor
  6666  1405  0A70               	incf	Sensor_setScanFunction@sensor,w
  6667  1406  0086               	movwf	6
  6668  1407  0187               	clrf	7
  6669  1408  3F40               	moviw [0]fsr1
  6670  1409  00AC               	movwf	_Sensor_scanA^(0+128)
  6671  140A  3F41               	moviw [1]fsr1
  6672  140B  00AD               	movwf	(_Sensor_scanA+1)^(0+128)
  6673  140C  0870               	movf	Sensor_setScanFunction@sensor,w
  6674  140D  3E03               	addlw	3
  6675  140E  0086               	movwf	6
  6676  140F  0187               	clrf	7
  6677  1410  3F40               	moviw [0]fsr1
  6678  1411  00AA               	movwf	_Sensor_scanB^(0+128)
  6679  1412  3F41               	moviw [1]fsr1
  6680  1413  00AB               	movwf	(_Sensor_scanB+1)^(0+128)
  6681  1414  0008               	return
  6682  1415                     __end_of_Sensor_setScanFunction:
  6683                           
  6684                           	psect	text21
  6685  08C4                     __ptext21:	
  6686 ;; *************** function _Sensor_Acq_ExecuteScan *****************
  6687 ;; Defined at:
  6688 ;;		line 379 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;		None
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;  result          2    6[COMMON] unsigned short 
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  1    wreg      void 
  6695 ;; Registers used:
  6696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6697 ;; Tracked objects:
  6698 ;;		On entry : 1F/0
  6699 ;;		On exit  : 1F/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6704 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6705 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6706 ;;Total ram usage:        4 bytes
  6707 ;; Hardware stack levels used:    1
  6708 ;; Hardware stack levels required when called:    6
  6709 ;; This function calls:
  6710 ;;		_MTOUCH_CVD_ScanA_0
  6711 ;;		_MTOUCH_CVD_ScanA_1
  6712 ;;		_MTOUCH_CVD_ScanB_0
  6713 ;;		_MTOUCH_CVD_ScanB_1
  6714 ;;		___bmul
  6715 ;; This function is called by:
  6716 ;;		_Sensor_Acq_ExecutePacket
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           
  6721                           ;psect for function _Sensor_Acq_ExecuteScan
  6722  08C4                     _Sensor_Acq_ExecuteScan:
  6723                           
  6724                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 382:     mtouch_sensor_adcsample_t result =
      +                           ADRES;
  6725                           
  6726                           ;incstack = 0
  6727                           ; Regs used in _Sensor_Acq_ExecuteScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6728  08C4  0021               	movlb	1	; select bank1
  6729  08C5  081C               	movf	28,w	;volatile
  6730  08C6  00F7               	movwf	Sensor_Acq_ExecuteScan@result+1
  6731  08C7  081B               	movf	27,w	;volatile
  6732  08C8  00F6               	movwf	Sensor_Acq_ExecuteScan@result
  6733                           
  6734                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 384:     if(sensor_globalFlags.packet_done)
  6735  08C9  0020               	movlb	0	; select bank0
  6736  08CA  186E               	btfsc	_sensor_globalFlags,0	;volatile
  6737  08CB  0008               	return
  6738                           
  6739                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 387:     if (packet_counter != (uint8_t)0)
  6740  08CC  086C               	movf	_packet_counter,w
  6741  08CD  1D03               	btfss	3,2
  6742  08CE  28DE               	goto	l3276
  6743  08CF  2913               	goto	l3288
  6744  08D0                     l3270:
  6745  08D0  0021               	movlb	1	; select bank1
  6746  08D1  082D               	movf	(_Sensor_scanA+1)^(0+128),w
  6747  08D2  008A               	movwf	10
  6748  08D3  082C               	movf	_Sensor_scanA^(0+128),w
  6749  08D4  000A               	callw
  6750  08D5  3188               	pagesel	$
  6751  08D6  28EF               	goto	l3278
  6752  08D7                     l3272:
  6753  08D7  0021               	movlb	1	; select bank1
  6754  08D8  082B               	movf	(_Sensor_scanB+1)^(0+128),w
  6755  08D9  008A               	movwf	10
  6756  08DA  082A               	movf	_Sensor_scanB^(0+128),w
  6757  08DB  000A               	callw
  6758  08DC  3188               	pagesel	$
  6759  08DD  28EF               	goto	l3278
  6760  08DE                     l3276:
  6761  08DE  086C               	movf	_packet_counter,w
  6762  08DF  3901               	andlw	1
  6763  08E0  00F4               	movwf	??_Sensor_Acq_ExecuteScan
  6764  08E1  01F5               	clrf	??_Sensor_Acq_ExecuteScan+1
  6765                           
  6766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6767                           ; Switch size 1, requested type "simple"
  6768                           ; Number of cases is 1, Range of values is 0 to 0
  6769                           ; switch strategies available:
  6770                           ; Name         Instructions Cycles
  6771                           ; simple_byte            4     3 (average)
  6772                           ; direct_byte            8     6 (fixed)
  6773                           ; jumptable            260     6 (fixed)
  6774                           ;	Chosen strategy is simple_byte
  6775  08E2  0875               	movf	??_Sensor_Acq_ExecuteScan+1,w
  6776  08E3  3A00               	xorlw	0	; case 0
  6777  08E4  1903               	skipnz
  6778  08E5  28E7               	goto	l4814
  6779  08E6  28EF               	goto	l3278
  6780  08E7                     l4814:
  6781                           
  6782                           ; Switch size 1, requested type "simple"
  6783                           ; Number of cases is 2, Range of values is 0 to 1
  6784                           ; switch strategies available:
  6785                           ; Name         Instructions Cycles
  6786                           ; simple_byte            7     4 (average)
  6787                           ; direct_byte           10     6 (fixed)
  6788                           ; jumptable            260     6 (fixed)
  6789                           ;	Chosen strategy is simple_byte
  6790  08E7  0874               	movf	??_Sensor_Acq_ExecuteScan,w
  6791  08E8  3A00               	xorlw	0	; case 0
  6792  08E9  1903               	skipnz
  6793  08EA  28D0               	goto	l3270
  6794  08EB  3A01               	xorlw	1	; case 1
  6795  08EC  1903               	skipnz
  6796  08ED  28D7               	goto	l3272
  6797  08EE  28EF               	goto	l3278
  6798  08EF                     l3278:
  6799  08EF  3009               	movlw	9
  6800  08F0  00F4               	movwf	??_Sensor_Acq_ExecuteScan
  6801  08F1  0874               	movf	??_Sensor_Acq_ExecuteScan,w
  6802  08F2  00F0               	movwf	___bmul@multiplicand
  6803  08F3  0020               	movlb	0	; select bank0
  6804  08F4  086D               	movf	_currentScannSensor,w
  6805  08F5  3193  23C0  3188   	fcall	___bmul
  6806  08F8  3EB5               	addlw	(low ((_mtouch_sensor| 0+5)))& (0+255)
  6807  08F9  0086               	movwf	6
  6808  08FA  0187               	clrf	7
  6809  08FB  0801               	movf	1,w
  6810  08FC  0020               	movlb	0	; select bank0
  6811  08FD  066C               	xorwf	_packet_counter,w
  6812  08FE  1903               	skipnz
  6813  08FF  2910               	goto	l3286
  6814  0900  1C6C               	btfss	_packet_counter,0
  6815  0901  290C               	goto	l3284
  6816  0902  3000               	movlw	0
  6817  0903  00F4               	movwf	??_Sensor_Acq_ExecuteScan
  6818  0904  3004               	movlw	4
  6819  0905  00F5               	movwf	??_Sensor_Acq_ExecuteScan+1
  6820  0906  0876               	movf	Sensor_Acq_ExecuteScan@result,w
  6821  0907  0274               	subwf	??_Sensor_Acq_ExecuteScan,w
  6822  0908  00F6               	movwf	Sensor_Acq_ExecuteScan@result
  6823  0909  0877               	movf	Sensor_Acq_ExecuteScan@result+1,w
  6824  090A  3B75               	subwfb	??_Sensor_Acq_ExecuteScan+1,w
  6825  090B  00F7               	movwf	Sensor_Acq_ExecuteScan@result+1
  6826  090C                     l3284:
  6827  090C  0876               	movf	Sensor_Acq_ExecuteScan@result,w
  6828  090D  07E6               	addwf	_packet_sample,f
  6829  090E  0877               	movf	Sensor_Acq_ExecuteScan@result+1,w
  6830  090F  3DE7               	addwfc	_packet_sample+1,f
  6831  0910                     l3286:
  6832  0910  3001               	movlw	1
  6833  0911  02EC               	subwf	_packet_counter,f
  6834  0912  0008               	return
  6835  0913                     l3288:
  6836  0913  0876               	movf	Sensor_Acq_ExecuteScan@result,w
  6837  0914  07E6               	addwf	_packet_sample,f
  6838  0915  0877               	movf	Sensor_Acq_ExecuteScan@result+1,w
  6839  0916  3DE7               	addwfc	_packet_sample+1,f
  6840  0917  146E               	bsf	_sensor_globalFlags,0	;volatile
  6841  0918  0008               	return
  6842  0919                     __end_of_Sensor_Acq_ExecuteScan:
  6843                           
  6844                           	psect	text22
  6845  15E8                     __ptext22:	
  6846 ;; *************** function _MTOUCH_CVD_ScanB_0 *****************
  6847 ;; Defined at:
  6848 ;;		line 113 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;		None
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;		None
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      void 
  6855 ;; Registers used:
  6856 ;;		wreg
  6857 ;; Tracked objects:
  6858 ;;		On entry : 1F/1
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6866 ;;Total ram usage:        0 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; Hardware stack levels required when called:    5
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		_Sensor_Acq_ExecuteScan
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           
  6877                           ;psect for function _MTOUCH_CVD_ScanB_0
  6878  15E8                     _MTOUCH_CVD_ScanB_0:
  6879                           
  6880                           ;incstack = 0
  6881                           ; Regs used in _MTOUCH_CVD_ScanB_0: [wreg]
  6882  15E8  0022               	banksel	270	;# 
  6883  15E9  138E               	bcf	14,7	;# 
  6884  15EA  0021               	banksel	157	;# 
  6885  15EB  3025               	movlw	37	;# 
  6886  15EC  009D               	movwf	29	;# 
  6887                           
  6888                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 125:     _delay(16u);
  6889  15ED  3005               	movlw	5
  6890  15EE                     u4647:
  6891  15EE  0B89               	decfsz	9,f
  6892  15EF  2DEE               	goto	u4647
  6893  15F0  0000               	nop
  6894  15F1  308E               	movlw	142	;# 
  6895  15F2  0084               	movwf	4	;# 
  6896  15F3  3000               	movlw	0	;# 
  6897  15F4  0085               	movwf	5	;# 
  6898  15F5  300E               	movlw	14	;# 
  6899  15F6  0086               	movwf	6	;# 
  6900  15F7  3001               	movlw	1	;# 
  6901  15F8  0087               	movwf	7	;# 
  6902  15F9  3021               	movlw	33	;# 
  6903  15FA  1700               	bsf	0,6	;# 
  6904                           
  6905                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 143:     _delay(0u);
  6906  15FB  009D               	movwf	29	;# 
  6907                           
  6908                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 150:     _delay(8u);
  6909  15FC  3200               	nop2	;2 cycle nop
  6910  15FD  3200               	nop2	;2 cycle nop
  6911  15FE  3200               	nop2	;2 cycle nop
  6912  15FF  3200               	nop2	;2 cycle nop
  6913  1600  0021               	banksel	157	;# 
  6914  1601  149D               	bsf	29,1	;# 
  6915                           
  6916                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 157:     _delay(3u);
  6917  1602  3200               	nop2	;2 cycle nop
  6918  1603  0000               	nop
  6919  1604  0022               	banksel	270	;# 
  6920  1605  130E               	bcf	14,6	;# 
  6921  1606  1300               	bcf	0,6	;# 
  6922  1607  0008               	return
  6923  1608                     __end_of_MTOUCH_CVD_ScanB_0:
  6924                           
  6925                           	psect	text23
  6926  15C8                     __ptext23:	
  6927 ;; *************** function _MTOUCH_CVD_ScanB_1 *****************
  6928 ;; Defined at:
  6929 ;;		line 240 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;		None
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;		None
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  1    wreg      void 
  6936 ;; Registers used:
  6937 ;;		wreg
  6938 ;; Tracked objects:
  6939 ;;		On entry : 1F/1
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6947 ;;Total ram usage:        0 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; Hardware stack levels required when called:    5
  6950 ;; This function calls:
  6951 ;;		Nothing
  6952 ;; This function is called by:
  6953 ;;		_Sensor_Acq_ExecuteScan
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           
  6958                           ;psect for function _MTOUCH_CVD_ScanB_1
  6959  15C8                     _MTOUCH_CVD_ScanB_1:
  6960                           
  6961                           ;incstack = 0
  6962                           ; Regs used in _MTOUCH_CVD_ScanB_1: [wreg]
  6963  15C8  0022               	banksel	270	;# 
  6964  15C9  130E               	bcf	14,6	;# 
  6965  15CA  0021               	banksel	157	;# 
  6966  15CB  3021               	movlw	33	;# 
  6967  15CC  009D               	movwf	29	;# 
  6968                           
  6969                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 252:     _delay(16u);
  6970  15CD  3005               	movlw	5
  6971  15CE                     u4657:
  6972  15CE  0B89               	decfsz	9,f
  6973  15CF  2DCE               	goto	u4657
  6974  15D0  0000               	nop
  6975  15D1  308E               	movlw	142	;# 
  6976  15D2  0084               	movwf	4	;# 
  6977  15D3  3000               	movlw	0	;# 
  6978  15D4  0085               	movwf	5	;# 
  6979  15D5  300E               	movlw	14	;# 
  6980  15D6  0086               	movwf	6	;# 
  6981  15D7  3001               	movlw	1	;# 
  6982  15D8  0087               	movwf	7	;# 
  6983  15D9  3025               	movlw	37	;# 
  6984  15DA  1780               	bsf	0,7	;# 
  6985                           
  6986                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 270:     _delay(0u);
  6987  15DB  009D               	movwf	29	;# 
  6988                           
  6989                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 277:     _delay(8u);
  6990  15DC  3200               	nop2	;2 cycle nop
  6991  15DD  3200               	nop2	;2 cycle nop
  6992  15DE  3200               	nop2	;2 cycle nop
  6993  15DF  3200               	nop2	;2 cycle nop
  6994  15E0  0021               	banksel	157	;# 
  6995  15E1  149D               	bsf	29,1	;# 
  6996                           
  6997                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 284:     _delay(3u);
  6998  15E2  3200               	nop2	;2 cycle nop
  6999  15E3  0000               	nop
  7000  15E4  0022               	banksel	270	;# 
  7001  15E5  138E               	bcf	14,7	;# 
  7002  15E6  1380               	bcf	0,7	;# 
  7003  15E7  0008               	return
  7004  15E8                     __end_of_MTOUCH_CVD_ScanB_1:
  7005                           
  7006                           	psect	text24
  7007  15A8                     __ptext24:	
  7008 ;; *************** function _MTOUCH_CVD_ScanA_0 *****************
  7009 ;; Defined at:
  7010 ;;		line 50 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;		None
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;		None
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  1    wreg      void 
  7017 ;; Registers used:
  7018 ;;		wreg
  7019 ;; Tracked objects:
  7020 ;;		On entry : 1F/1
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7028 ;;Total ram usage:        0 bytes
  7029 ;; Hardware stack levels used:    1
  7030 ;; Hardware stack levels required when called:    5
  7031 ;; This function calls:
  7032 ;;		Nothing
  7033 ;; This function is called by:
  7034 ;;		_Sensor_Acq_ExecuteScan
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           
  7039                           ;psect for function _MTOUCH_CVD_ScanA_0
  7040  15A8                     _MTOUCH_CVD_ScanA_0:
  7041                           
  7042                           ;incstack = 0
  7043                           ; Regs used in _MTOUCH_CVD_ScanA_0: [wreg]
  7044  15A8  0022               	banksel	270	;# 
  7045  15A9  178E               	bsf	14,7	;# 
  7046  15AA  0021               	banksel	157	;# 
  7047  15AB  3025               	movlw	37	;# 
  7048  15AC  009D               	movwf	29	;# 
  7049                           
  7050                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 62:     _delay(16u);
  7051  15AD  3005               	movlw	5
  7052  15AE                     u4667:
  7053  15AE  0B89               	decfsz	9,f
  7054  15AF  2DAE               	goto	u4667
  7055  15B0  0000               	nop
  7056  15B1  308E               	movlw	142	;# 
  7057  15B2  0084               	movwf	4	;# 
  7058  15B3  3000               	movlw	0	;# 
  7059  15B4  0085               	movwf	5	;# 
  7060  15B5  300E               	movlw	14	;# 
  7061  15B6  0086               	movwf	6	;# 
  7062  15B7  3001               	movlw	1	;# 
  7063  15B8  0087               	movwf	7	;# 
  7064  15B9  3021               	movlw	33	;# 
  7065  15BA  1700               	bsf	0,6	;# 
  7066                           
  7067                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 80:     _delay(0u);
  7068  15BB  009D               	movwf	29	;# 
  7069                           
  7070                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 86:     _delay(8u);
  7071  15BC  3200               	nop2	;2 cycle nop
  7072  15BD  3200               	nop2	;2 cycle nop
  7073  15BE  3200               	nop2	;2 cycle nop
  7074  15BF  3200               	nop2	;2 cycle nop
  7075  15C0  0021               	banksel	157	;# 
  7076  15C1  149D               	bsf	29,1	;# 
  7077                           
  7078                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 93:     _delay(3u);
  7079  15C2  3200               	nop2	;2 cycle nop
  7080  15C3  0000               	nop
  7081  15C4  0022               	banksel	270	;# 
  7082  15C5  170E               	bsf	14,6	;# 
  7083  15C6  1300               	bcf	0,6	;# 
  7084  15C7  0008               	return
  7085  15C8                     __end_of_MTOUCH_CVD_ScanA_0:
  7086                           
  7087                           	psect	text25
  7088  1588                     __ptext25:	
  7089 ;; *************** function _MTOUCH_CVD_ScanA_1 *****************
  7090 ;; Defined at:
  7091 ;;		line 177 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;		None
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;		None
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  1    wreg      void 
  7098 ;; Registers used:
  7099 ;;		wreg
  7100 ;; Tracked objects:
  7101 ;;		On entry : 1F/1
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7109 ;;Total ram usage:        0 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:    5
  7112 ;; This function calls:
  7113 ;;		Nothing
  7114 ;; This function is called by:
  7115 ;;		_Sensor_Acq_ExecuteScan
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           
  7120                           ;psect for function _MTOUCH_CVD_ScanA_1
  7121  1588                     _MTOUCH_CVD_ScanA_1:
  7122                           
  7123                           ;incstack = 0
  7124                           ; Regs used in _MTOUCH_CVD_ScanA_1: [wreg]
  7125  1588  0022               	banksel	270	;# 
  7126  1589  170E               	bsf	14,6	;# 
  7127  158A  0021               	banksel	157	;# 
  7128  158B  3021               	movlw	33	;# 
  7129  158C  009D               	movwf	29	;# 
  7130                           
  7131                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 189:     _delay(16u);
  7132  158D  3005               	movlw	5
  7133  158E                     u4677:
  7134  158E  0B89               	decfsz	9,f
  7135  158F  2D8E               	goto	u4677
  7136  1590  0000               	nop
  7137  1591  308E               	movlw	142	;# 
  7138  1592  0084               	movwf	4	;# 
  7139  1593  3000               	movlw	0	;# 
  7140  1594  0085               	movwf	5	;# 
  7141  1595  300E               	movlw	14	;# 
  7142  1596  0086               	movwf	6	;# 
  7143  1597  3001               	movlw	1	;# 
  7144  1598  0087               	movwf	7	;# 
  7145  1599  3025               	movlw	37	;# 
  7146  159A  1780               	bsf	0,7	;# 
  7147                           
  7148                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 207:     _delay(0u);
  7149  159B  009D               	movwf	29	;# 
  7150                           
  7151                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 213:     _delay(8u);
  7152  159C  3200               	nop2	;2 cycle nop
  7153  159D  3200               	nop2	;2 cycle nop
  7154  159E  3200               	nop2	;2 cycle nop
  7155  159F  3200               	nop2	;2 cycle nop
  7156  15A0  0021               	banksel	157	;# 
  7157  15A1  149D               	bsf	29,1	;# 
  7158                           
  7159                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 220:     _delay(3u);
  7160  15A2  3200               	nop2	;2 cycle nop
  7161  15A3  0000               	nop
  7162  15A4  0022               	banksel	270	;# 
  7163  15A5  178E               	bsf	14,7	;# 
  7164  15A6  1380               	bcf	0,7	;# 
  7165  15A7  0008               	return
  7166  15A8                     __end_of_MTOUCH_CVD_ScanA_1:
  7167                           
  7168                           	psect	text26
  7169  1390                     __ptext26:	
  7170 ;; *************** function _MTOUCH_Random *****************
  7171 ;; Defined at:
  7172 ;;		line 66 in file "mcc_generated_files/mtouch/mtouch_random.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;		None
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;		None
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  1    wreg      unsigned char 
  7179 ;; Registers used:
  7180 ;;		wreg, status,2, status,0
  7181 ;; Tracked objects:
  7182 ;;		On entry : 1F/0
  7183 ;;		On exit  : 1F/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7188 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7189 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7190 ;;Total ram usage:        1 bytes
  7191 ;; Hardware stack levels used:    1
  7192 ;; Hardware stack levels required when called:    5
  7193 ;; This function calls:
  7194 ;;		Nothing
  7195 ;; This function is called by:
  7196 ;;		_Sensor_Acq_ExecutePacket
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           
  7201                           ;psect for function _MTOUCH_Random
  7202  1390                     _MTOUCH_Random:
  7203                           
  7204                           ;mcc_generated_files/mtouch/mtouch_random.c: 68:     static MTOUCH_RANDOM_t seed = (MTOU
      +                          CH_RANDOM_t)0;;mcc_generated_files/mtouch/mtouch_random.c: 70:     if ((seed & (MTOUCH_R
      +                          ANDOM_t)1) != (MTOUCH_RANDOM_t)0)
  7205                           
  7206                           ;incstack = 0
  7207                           ; Regs used in _MTOUCH_Random: [wreg+status,2+status,0]
  7208  1390  1C6F               	btfss	MTOUCH_Random@seed,0
  7209  1391  2B94               	goto	l3246
  7210                           
  7211                           ;mcc_generated_files/mtouch/mtouch_random.c: 71:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 73:         seed = seed >> (uint8_t)1;
  7212  1392  366F               	lsrf	MTOUCH_Random@seed,w
  7213  1393  2B9A               	goto	L1
  7214  1394                     l3246:	
  7215                           ;mcc_generated_files/mtouch/mtouch_random.c: 74:     }
  7216                           
  7217                           
  7218                           ;mcc_generated_files/mtouch/mtouch_random.c: 76:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 81:         seed = seed >> (uint8_t)1;
  7219  1394  366F               	lsrf	MTOUCH_Random@seed,w
  7220  1395  00F0               	movwf	??_MTOUCH_Random
  7221  1396  0870               	movf	??_MTOUCH_Random,w
  7222  1397  00EF               	movwf	MTOUCH_Random@seed
  7223                           
  7224                           ;mcc_generated_files/mtouch/mtouch_random.c: 82:         seed = seed ^ (MTOUCH_RANDOM_t)
      +                          0xB4;
  7225  1398  086F               	movf	MTOUCH_Random@seed,w
  7226  1399  3AB4               	xorlw	180
  7227  139A                     L1:
  7228  139A  00F0               	movwf	??_MTOUCH_Random
  7229  139B  0870               	movf	??_MTOUCH_Random,w
  7230  139C  00EF               	movwf	MTOUCH_Random@seed
  7231                           
  7232                           ;mcc_generated_files/mtouch/mtouch_random.c: 85:     return (uint8_t)seed & 0x0F;
  7233  139D  086F               	movf	MTOUCH_Random@seed,w
  7234  139E  390F               	andlw	15
  7235  139F  0008               	return
  7236  13A0                     __end_of_MTOUCH_Random:
  7237                           
  7238                           	psect	text27
  7239  12F6                     __ptext27:	
  7240 ;; *************** function _MTOUCH_Delay *****************
  7241 ;; Defined at:
  7242 ;;		line 363 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;		None
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;  i               1    1[COMMON] unsigned char 
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  1    wreg      void 
  7249 ;; Registers used:
  7250 ;;		wreg, status,2, status,0
  7251 ;; Tracked objects:
  7252 ;;		On entry : 1F/0
  7253 ;;		On exit  : 1F/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7259 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7260 ;;Total ram usage:        2 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; Hardware stack levels required when called:    5
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_Sensor_Acq_ExecutePacket
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           
  7271                           ;psect for function _MTOUCH_Delay
  7272  12F6                     _MTOUCH_Delay:
  7273                           
  7274                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 365:     for(uint8_t i = sample_delay;i>0;i
      +                          --)
  7275                           
  7276                           ;incstack = 0
  7277                           ; Regs used in _MTOUCH_Delay: [wreg+status,2+status,0]
  7278  12F6  086B               	movf	_sample_delay,w
  7279  12F7  00F0               	movwf	??_MTOUCH_Delay
  7280  12F8  0870               	movf	??_MTOUCH_Delay,w
  7281  12F9  00F1               	movwf	MTOUCH_Delay@i
  7282  12FA                     L2:
  7283  12FA  0871               	movf	MTOUCH_Delay@i,w
  7284  12FB  1903               	btfsc	3,2
  7285  12FC  0008               	return
  7286                           
  7287                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 366:     { }
  7288  12FD  3001               	movlw	1
  7289  12FE  02F1               	subwf	MTOUCH_Delay@i,f
  7290  12FF  2AFA               	goto	L2
  7291  1300                     __end_of_MTOUCH_Delay:
  7292                           
  7293                           	psect	text28
  7294  1371                     __ptext28:	
  7295 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  7296 ;; Defined at:
  7297 ;;		line 181 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;		None
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  button          1   10[BANK0 ] enum E2819
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 1F/0
  7308 ;;		On exit  : 1F/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;Total ram usage:        2 bytes
  7316 ;; Hardware stack levels used:    1
  7317 ;; Hardware stack levels required when called:   10
  7318 ;; This function calls:
  7319 ;;		_Button_Service
  7320 ;; This function is called by:
  7321 ;;		_MTOUCH_Service_Mainloop
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           
  7326                           ;psect for function _MTOUCH_Button_ServiceAll
  7327  1371                     _MTOUCH_Button_ServiceAll:
  7328                           
  7329                           ;mcc_generated_files/mtouch/mtouch_button.c: 183:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 186:     for (button = 0; button < 2u; button
      +                          ++)
  7330                           
  7331                           ;incstack = 0
  7332                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7333  1371  01AA               	clrf	MTOUCH_Button_ServiceAll@button
  7334  1372                     l4210:
  7335                           
  7336                           ;mcc_generated_files/mtouch/mtouch_button.c: 187:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 188:         Button_Service(button);
  7337  1372  082A               	movf	MTOUCH_Button_ServiceAll@button,w
  7338  1373  3188  2072  3193   	fcall	_Button_Service
  7339                           
  7340                           ;mcc_generated_files/mtouch/mtouch_button.c: 189:     }
  7341  1376  3001               	movlw	1
  7342  1377  0020               	movlb	0	; select bank0
  7343  1378  00A9               	movwf	??_MTOUCH_Button_ServiceAll
  7344  1379  0829               	movf	??_MTOUCH_Button_ServiceAll,w
  7345  137A  07AA               	addwf	MTOUCH_Button_ServiceAll@button,f
  7346  137B  3002               	movlw	2
  7347  137C  022A               	subwf	MTOUCH_Button_ServiceAll@button,w
  7348  137D  1803               	btfsc	3,0
  7349  137E  0008               	return
  7350  137F  2B72               	goto	l4210
  7351  1380                     __end_of_MTOUCH_Button_ServiceAll:
  7352                           
  7353                           	psect	text29
  7354  0872                     __ptext29:	
  7355 ;; *************** function _Button_Service *****************
  7356 ;; Defined at:
  7357 ;;		line 192 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  name            1    wreg     enum E2819
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;  name            1    7[BANK0 ] enum E2819
  7362 ;;  button          1    8[BANK0 ] PTR struct .
  7363 ;;		 -> mtouch_button(32), 
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  1    wreg      void 
  7366 ;; Registers used:
  7367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7368 ;; Tracked objects:
  7369 ;;		On entry : 1F/0
  7370 ;;		On exit  : 0/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7374 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7375 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7376 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7377 ;;Total ram usage:        4 bytes
  7378 ;; Hardware stack levels used:    1
  7379 ;; Hardware stack levels required when called:    9
  7380 ;; This function calls:
  7381 ;;		_Button_Deviation_Update
  7382 ;;		_Button_Reading_Update
  7383 ;;		_Button_State_Initializing
  7384 ;;		_Button_State_NotPressed
  7385 ;;		_Button_State_Pressed
  7386 ;;		_MTOUCH_Button_Initialize
  7387 ;;		_MTOUCH_Sensor_isCalibrated
  7388 ;;		_MTOUCH_Sensor_wasSampled
  7389 ;; This function is called by:
  7390 ;;		_MTOUCH_Button_ServiceAll
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           
  7395                           ;psect for function _Button_Service
  7396  0872                     _Button_Service:
  7397                           
  7398                           ;incstack = 0
  7399                           ; Regs used in _Button_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7400                           ;Button_Service@name stored from wreg
  7401  0872  00A7               	movwf	Button_Service@name
  7402                           
  7403                           ;mcc_generated_files/mtouch/mtouch_button.c: 192: static void Button_Service(enum mtouch
      +                          _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 193: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 194:     mtouch_button_t* button = &mtouch_button[name];
  7404  0873  0827               	movf	Button_Service@name,w
  7405  0874  00A5               	movwf	??_Button_Service
  7406  0875  3003               	movlw	3
  7407  0876                     u3675:
  7408  0876  35A5               	lslf	??_Button_Service,f
  7409  0877  3EFF               	addlw	-1
  7410  0878  1D03               	skipz
  7411  0879  2876               	goto	u3675
  7412  087A  3525               	lslf	??_Button_Service,w
  7413  087B  3E20               	addlw	(low (_mtouch_button| (0+256)))& (0+255)
  7414  087C  00A6               	movwf	??_Button_Service+1
  7415  087D  0826               	movf	??_Button_Service+1,w
  7416  087E  00A8               	movwf	Button_Service@button
  7417                           
  7418                           ;mcc_generated_files/mtouch/mtouch_button.c: 196:     if (MTOUCH_Sensor_wasSampled(butto
      +                          n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
  7419  087F  0A28               	incf	Button_Service@button,w
  7420  0880  0086               	movwf	6
  7421  0881  3001               	movlw	1	; select bank2/3
  7422  0882  0087               	movwf	7
  7423  0883  0801               	movf	1,w
  7424  0884  3194  243A  3188   	fcall	_MTOUCH_Sensor_wasSampled
  7425  0887  3A00               	xorlw	0
  7426  0888  1903               	skipnz
  7427  0889  0008               	return
  7428  088A  0020               	movlb	0	; select bank0
  7429  088B  0A28               	incf	Button_Service@button,w
  7430  088C  0086               	movwf	6
  7431  088D  3001               	movlw	1	; select bank2/3
  7432  088E  0087               	movwf	7
  7433  088F  0801               	movf	1,w
  7434  0890  3192  2271  3188   	fcall	_MTOUCH_Sensor_isCalibrated
  7435  0893  3A00               	xorlw	0
  7436  0894  1903               	skipnz
  7437  0895  0008               	return
  7438                           
  7439                           ;mcc_generated_files/mtouch/mtouch_button.c: 197:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 198:         Button_Reading_Update(button);
  7440  0896  0828               	movf	Button_Service@button,w
  7441  0897  3193  2349  3188   	fcall	_Button_Reading_Update
  7442                           
  7443                           ;mcc_generated_files/mtouch/mtouch_button.c: 199:         Button_Deviation_Update(button
      +                          );
  7444  089A  0020               	movlb	0	; select bank0
  7445  089B  0828               	movf	Button_Service@button,w
  7446  089C  318A  22B7  3188   	fcall	_Button_Deviation_Update
  7447                           
  7448                           ;mcc_generated_files/mtouch/mtouch_button.c: 201:         if (button->state >= (uint8_t)
      +                          (sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
  7449  089F  0828               	movf	Button_Service@button,w
  7450  08A0  3E02               	addlw	2
  7451  08A1  0086               	movwf	6
  7452  08A2  3001               	movlw	1	; select bank2/3
  7453  08A3  0087               	movwf	7
  7454  08A4  3003               	movlw	3
  7455  08A5  0201               	subwf	1,w
  7456  08A6  1C03               	skipc
  7457  08A7  28B0               	goto	l4160
  7458                           
  7459                           ;mcc_generated_files/mtouch/mtouch_button.c: 202:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 203:             MTOUCH_Button_Initialize(button->name);
  7460  08A8  0828               	movf	Button_Service@button,w
  7461  08A9  0086               	movwf	6
  7462  08AA  3001               	movlw	1	; select bank2/3
  7463  08AB  0087               	movwf	7
  7464  08AC  0801               	movf	1,w
  7465  08AD  3196  26F5  3188   	fcall	_MTOUCH_Button_Initialize
  7466  08B0                     l4160:
  7467                           
  7468                           ;mcc_generated_files/mtouch/mtouch_button.c: 205:         Button_StateMachine[(uint8_t)b
      +                          utton->state](button);
  7469  08B0  0020               	movlb	0	; select bank0
  7470  08B1  0828               	movf	Button_Service@button,w
  7471  08B2  00A5               	movwf	??_Button_Service
  7472  08B3  0825               	movf	??_Button_Service,w
  7473  08B4  00FD               	movwf	Button_State_Pressed@button
  7474  08B5  0828               	movf	Button_Service@button,w
  7475  08B6  3E02               	addlw	2
  7476  08B7  0086               	movwf	6
  7477  08B8  3001               	movlw	1	; select bank2/3
  7478  08B9  0087               	movwf	7
  7479  08BA  3501               	lslf	1,w
  7480  08BB  3EA0               	addlw	(low (_Button_StateMachine| 0))& (0+255)
  7481  08BC  0086               	movwf	6
  7482  08BD  0187               	clrf	7
  7483  08BE  3F41               	moviw [1]fsr1
  7484  08BF  008A               	movwf	10
  7485  08C0  3F40               	moviw [0]fsr1
  7486  08C1  000A               	callw
  7487  08C2  3188               	pagesel	$
  7488  08C3  0008               	return
  7489  08C4                     __end_of_Button_Service:
  7490                           
  7491                           	psect	text30
  7492  143A                     __ptext30:	
  7493 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  7494 ;; Defined at:
  7495 ;;		line 556 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7496 ;; Parameters:    Size  Location     Type
  7497 ;;  sensor          1    wreg     enum E2661
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;  sensor          1    5[COMMON] enum E2661
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  1    wreg      _Bool 
  7502 ;; Registers used:
  7503 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7504 ;; Tracked objects:
  7505 ;;		On entry : 1F/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7513 ;;Total ram usage:        2 bytes
  7514 ;; Hardware stack levels used:    1
  7515 ;; Hardware stack levels required when called:    6
  7516 ;; This function calls:
  7517 ;;		___bmul
  7518 ;; This function is called by:
  7519 ;;		_Button_Service
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           
  7524                           ;psect for function _MTOUCH_Sensor_wasSampled
  7525  143A                     _MTOUCH_Sensor_wasSampled:
  7526                           
  7527                           ;incstack = 0
  7528                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  7529                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  7530  143A  00F5               	movwf	MTOUCH_Sensor_wasSampled@sensor
  7531                           
  7532                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 556: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 557: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 558:     if(sensor < (2u))
  7533  143B  3002               	movlw	2
  7534  143C  0275               	subwf	MTOUCH_Sensor_wasSampled@sensor,w
  7535  143D  1803               	skipnc
  7536  143E  2C4C               	goto	l3678
  7537                           
  7538                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 559:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
  7539  143F  3009               	movlw	9
  7540  1440  00F4               	movwf	??_MTOUCH_Sensor_wasSampled
  7541  1441  0874               	movf	??_MTOUCH_Sensor_wasSampled,w
  7542  1442  00F0               	movwf	___bmul@multiplicand
  7543  1443  0875               	movf	MTOUCH_Sensor_wasSampled@sensor,w
  7544  1444  3193  23C0         	fcall	___bmul
  7545  1446  3EB8               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
  7546  1447  0086               	movwf	6
  7547  1448  0187               	clrf	7
  7548  1449  0C01               	rrf	1,w
  7549  144A  3901               	andlw	1
  7550  144B  0008               	return
  7551  144C                     l3678:
  7552                           
  7553                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 561:         return 0;
  7554  144C  3000               	movlw	0
  7555  144D  0008               	return
  7556  144E                     __end_of_MTOUCH_Sensor_wasSampled:
  7557                           
  7558                           	psect	text31
  7559  1271                     __ptext31:	
  7560 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  7561 ;; Defined at:
  7562 ;;		line 529 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;  sensor          1    wreg     enum E2661
  7565 ;; Auto vars:     Size  Location     Type
  7566 ;;  sensor          1    0[COMMON] enum E2661
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  1    wreg      _Bool 
  7569 ;; Registers used:
  7570 ;;		wreg
  7571 ;; Tracked objects:
  7572 ;;		On entry : 1F/0
  7573 ;;		On exit  : 1F/0
  7574 ;;		Unchanged: 1F/0
  7575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;Total ram usage:        0 bytes
  7581 ;; Hardware stack levels used:    1
  7582 ;; Hardware stack levels required when called:    5
  7583 ;; This function calls:
  7584 ;;		Nothing
  7585 ;; This function is called by:
  7586 ;;		_Button_Service
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           
  7591                           ;psect for function _MTOUCH_Sensor_isCalibrated
  7592  1271                     _MTOUCH_Sensor_isCalibrated:
  7593                           
  7594                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 529: _Bool MTOUCH_Sensor_isCalibrated(enum 
      +                          mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 530: {;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 532:     return 1;
  7595                           
  7596                           ;incstack = 0
  7597                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg]
  7598  1271  3001               	movlw	1
  7599  1272  0008               	return
  7600  1273                     __end_of_MTOUCH_Sensor_isCalibrated:
  7601                           
  7602                           	psect	text32
  7603  0BD0                     __ptext32:	
  7604 ;; *************** function _Button_State_NotPressed *****************
  7605 ;; Defined at:
  7606 ;;		line 229 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;  button          1   13[COMMON] PTR struct .
  7609 ;;		 -> mtouch_button(32), 
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;		None
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  1    wreg      void 
  7614 ;; Registers used:
  7615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7616 ;; Tracked objects:
  7617 ;;		On entry : 1F/0
  7618 ;;		On exit  : 1F/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7621 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7624 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;Total ram usage:        3 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; Hardware stack levels required when called:    7
  7628 ;; This function calls:
  7629 ;;		_Button_Baseline_Update
  7630 ;;		_Button_DefaultCallback
  7631 ;;		_MTOUCH_Button_Initialize
  7632 ;; This function is called by:
  7633 ;;		_Button_Service
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           
  7638                           ;psect for function _Button_State_NotPressed
  7639  0BD0                     _Button_State_NotPressed:
  7640                           
  7641                           ;mcc_generated_files/mtouch/mtouch_button.c: 229: static void Button_State_NotPressed(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 230: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 232:     if ((button->deviation) < (mtouch_button_deviatio
      +                          n_t)(-button->threshold))
  7642                           
  7643                           ;incstack = 0
  7644                           ; Regs used in _Button_State_NotPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7645  0BD0  087D               	movf	Button_State_NotPressed@button,w
  7646  0BD1  3E09               	addlw	9
  7647  0BD2  0086               	movwf	6
  7648  0BD3  3001               	movlw	1	; select bank2/3
  7649  0BD4  0087               	movwf	7
  7650  0BD5  0801               	movf	1,w
  7651  0BD6  3A80               	xorlw	128
  7652  0BD7  00A0               	movwf	??_Button_State_NotPressed
  7653  0BD8  087D               	movf	Button_State_NotPressed@button,w
  7654  0BD9  3E0E               	addlw	14
  7655  0BDA  0086               	movwf	6
  7656  0BDB  3001               	movlw	1	; select bank2/3
  7657  0BDC  0087               	movwf	7
  7658  0BDD  0301               	decf	1,w
  7659  0BDE  3AFF               	xorlw	255
  7660  0BDF  3A80               	xorlw	128
  7661  0BE0  02A0               	subwf	??_Button_State_NotPressed,f
  7662  0BE1  1803               	skipnc
  7663  0BE2  2C0E               	goto	l3736
  7664                           
  7665                           ;mcc_generated_files/mtouch/mtouch_button.c: 233:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 234:         (button->counter)++;
  7666  0BE3  087D               	movf	Button_State_NotPressed@button,w
  7667  0BE4  3E0A               	addlw	10
  7668  0BE5  0086               	movwf	6
  7669  0BE6  3001               	movlw	1	; select bank2/3
  7670  0BE7  0087               	movwf	7
  7671  0BE8  3001               	movlw	1
  7672  0BE9  0781               	addwf	1,f
  7673  0BEA  3141               	addfsr 1,1
  7674  0BEB  1803               	skipnc
  7675  0BEC  0A81               	incf	1,f
  7676                           
  7677                           ;mcc_generated_files/mtouch/mtouch_button.c: 235:         if ((button->counter) > (mtouc
      +                          h_button_statecounter_t)((mtouch_button_statecounter_t)64u))
  7678  0BED  087D               	movf	Button_State_NotPressed@button,w
  7679  0BEE  3E0A               	addlw	10
  7680  0BEF  0086               	movwf	6
  7681  0BF0  3001               	movlw	1	; select bank2/3
  7682  0BF1  0087               	movwf	7
  7683  0BF2  3F40               	moviw [0]fsr1
  7684  0BF3  00A0               	movwf	??_Button_State_NotPressed
  7685  0BF4  3F41               	moviw [1]fsr1
  7686  0BF5  00A1               	movwf	??_Button_State_NotPressed+1
  7687  0BF6  3000               	movlw	0
  7688  0BF7  0221               	subwf	??_Button_State_NotPressed+1,w
  7689  0BF8  3041               	movlw	65
  7690  0BF9  1903               	skipnz
  7691  0BFA  0220               	subwf	??_Button_State_NotPressed,w
  7692  0BFB  1C03               	skipc
  7693  0BFC  2C4C               	goto	l340
  7694                           
  7695                           ;mcc_generated_files/mtouch/mtouch_button.c: 236:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 237:             button->counter = (mtouch_button_statecounter_t)0;
  7696  0BFD  087D               	movf	Button_State_NotPressed@button,w
  7697  0BFE  3E0A               	addlw	10
  7698  0BFF  0086               	movwf	6
  7699  0C00  3001               	movlw	1	; select bank2/3
  7700  0C01  0087               	movwf	7
  7701  0C02  3000               	movlw	0
  7702  0C03  3FC0               	movwi [0]fsr1
  7703  0C04  3FC1               	movwi [1]fsr1
  7704                           
  7705                           ;mcc_generated_files/mtouch/mtouch_button.c: 238:             MTOUCH_Button_Initialize(b
      +                          utton->name);
  7706  0C05  087D               	movf	Button_State_NotPressed@button,w
  7707  0C06  0086               	movwf	6
  7708  0C07  3001               	movlw	1	; select bank2/3
  7709  0C08  0087               	movwf	7
  7710  0C09  0801               	movf	1,w
  7711  0C0A  3196  26F5  318B   	fcall	_MTOUCH_Button_Initialize
  7712  0C0D  2C4C               	goto	l340
  7713  0C0E                     l3736:
  7714  0C0E  087D               	movf	Button_State_NotPressed@button,w
  7715  0C0F  3E09               	addlw	9
  7716  0C10  0086               	movwf	6
  7717  0C11  3001               	movlw	1	; select bank2/3
  7718  0C12  0087               	movwf	7
  7719  0C13  0801               	movf	1,w
  7720  0C14  00A0               	movwf	??_Button_State_NotPressed
  7721  0C15  01A1               	clrf	??_Button_State_NotPressed+1
  7722  0C16  1BA0               	btfsc	??_Button_State_NotPressed,7
  7723  0C17  03A1               	decf	??_Button_State_NotPressed+1,f
  7724  0C18  087D               	movf	Button_State_NotPressed@button,w
  7725  0C19  3E0E               	addlw	14
  7726  0C1A  0086               	movwf	6
  7727  0C1B  3001               	movlw	1	; select bank2/3
  7728  0C1C  0087               	movwf	7
  7729  0C1D  0821               	movf	??_Button_State_NotPressed+1,w
  7730  0C1E  3A80               	xorlw	128
  7731  0C1F  3C80               	sublw	128
  7732  0C20  1D03               	skipz
  7733  0C21  2C24               	goto	u2925
  7734  0C22  0820               	movf	??_Button_State_NotPressed,w
  7735  0C23  0201               	subwf	1,w
  7736  0C24                     u2925:
  7737  0C24  1803               	skipnc
  7738  0C25  2C44               	goto	l3742
  7739                           
  7740                           ;mcc_generated_files/mtouch/mtouch_button.c: 243:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 245:         button->state = MTOUCH_BUTTON_STATE_pressed;
  7741  0C26  3002               	movlw	2
  7742  0C27  0020               	movlb	0	; select bank0
  7743  0C28  00A0               	movwf	??_Button_State_NotPressed
  7744  0C29  087D               	movf	Button_State_NotPressed@button,w
  7745  0C2A  3E02               	addlw	2
  7746  0C2B  0086               	movwf	6
  7747  0C2C  3001               	movlw	1	; select bank2/3
  7748  0C2D  0087               	movwf	7
  7749  0C2E  0820               	movf	??_Button_State_NotPressed,w
  7750  0C2F  0081               	movwf	1
  7751                           
  7752                           ;mcc_generated_files/mtouch/mtouch_button.c: 246:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  7753  0C30  087D               	movf	Button_State_NotPressed@button,w
  7754  0C31  3E0A               	addlw	10
  7755  0C32  0086               	movwf	6
  7756  0C33  3001               	movlw	1	; select bank2/3
  7757  0C34  0087               	movwf	7
  7758  0C35  3000               	movlw	0
  7759  0C36  3FC0               	movwi [0]fsr1
  7760  0C37  3FC1               	movwi [1]fsr1
  7761                           
  7762                           ;mcc_generated_files/mtouch/mtouch_button.c: 247:         callback_pressed(button->name)
      +                          ;
  7763  0C38  087D               	movf	Button_State_NotPressed@button,w
  7764  0C39  0086               	movwf	6
  7765  0C3A  3001               	movlw	1	; select bank2/3
  7766  0C3B  0087               	movwf	7
  7767  0C3C  0801               	movf	1,w
  7768  0C3D  00A0               	movwf	??_Button_State_NotPressed
  7769  0C3E  0820               	movf	??_Button_State_NotPressed,w
  7770  0C3F  00F0               	movwf	Button_DefaultCallback@button
  7771  0C40  3192  226E  318B   	fcall	_Button_DefaultCallback
  7772                           
  7773                           ;mcc_generated_files/mtouch/mtouch_button.c: 248:     }
  7774  0C43  2C4C               	goto	l340
  7775  0C44                     l3742:
  7776                           
  7777                           ;mcc_generated_files/mtouch/mtouch_button.c: 250:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 252:         button->counter = (mtouch_button_statecounter_t)0;
  7778  0C44  087D               	movf	Button_State_NotPressed@button,w
  7779  0C45  3E0A               	addlw	10
  7780  0C46  0086               	movwf	6
  7781  0C47  3001               	movlw	1	; select bank2/3
  7782  0C48  0087               	movwf	7
  7783  0C49  3000               	movlw	0
  7784  0C4A  3FC0               	movwi [0]fsr1
  7785  0C4B  3FC1               	movwi [1]fsr1
  7786  0C4C                     l340:
  7787                           
  7788                           ;mcc_generated_files/mtouch/mtouch_button.c: 257:     (button->baseline_count)++;
  7789  0C4C  087D               	movf	Button_State_NotPressed@button,w
  7790  0C4D  3E0C               	addlw	12
  7791  0C4E  0086               	movwf	6
  7792  0C4F  3001               	movlw	1	; select bank2/3
  7793  0C50  0087               	movwf	7
  7794  0C51  3001               	movlw	1
  7795  0C52  0781               	addwf	1,f
  7796  0C53  3141               	addfsr 1,1
  7797  0C54  1803               	skipnc
  7798  0C55  0A81               	incf	1,f
  7799                           
  7800                           ;mcc_generated_files/mtouch/mtouch_button.c: 258:     if ((button->baseline_count) == ((
      +                          mtouch_button_baselinecounter_t)64u))
  7801  0C56  087D               	movf	Button_State_NotPressed@button,w
  7802  0C57  3E0C               	addlw	12
  7803  0C58  0086               	movwf	6
  7804  0C59  3001               	movlw	1	; select bank2/3
  7805  0C5A  0087               	movwf	7
  7806  0C5B  0016               	moviw fsr1++
  7807  0C5C  3A40               	xorlw	64
  7808  0C5D  0020               	movlb	0	; select bank0
  7809  0C5E  00A0               	movwf	??_Button_State_NotPressed
  7810  0C5F  0016               	moviw fsr1++
  7811  0C60  04A0               	iorwf	??_Button_State_NotPressed,f
  7812  0C61  1D03               	btfss	3,2
  7813  0C62  0008               	return
  7814                           
  7815                           ;mcc_generated_files/mtouch/mtouch_button.c: 259:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 260:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
  7816  0C63  087D               	movf	Button_State_NotPressed@button,w
  7817  0C64  3E0C               	addlw	12
  7818  0C65  0086               	movwf	6
  7819  0C66  3001               	movlw	1	; select bank2/3
  7820  0C67  0087               	movwf	7
  7821  0C68  3000               	movlw	0
  7822  0C69  3FC0               	movwi [0]fsr1
  7823  0C6A  3FC1               	movwi [1]fsr1
  7824                           
  7825                           ;mcc_generated_files/mtouch/mtouch_button.c: 261:         Button_Baseline_Update(button)
      +                          ;
  7826  0C6B  087D               	movf	Button_State_NotPressed@button,w
  7827  0C6C  318B  2341         	fcall	_Button_Baseline_Update
  7828  0C6E  0008               	return
  7829  0C6F                     __end_of_Button_State_NotPressed:
  7830                           
  7831                           	psect	text33
  7832  0978                     __ptext33:	
  7833 ;; *************** function _Button_State_Initializing *****************
  7834 ;; Defined at:
  7835 ;;		line 209 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  button          1   13[COMMON] PTR struct .
  7838 ;;		 -> mtouch_button(32), 
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;		None
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  1    wreg      void 
  7843 ;; Registers used:
  7844 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7845 ;; Tracked objects:
  7846 ;;		On entry : 1F/0
  7847 ;;		On exit  : 1F/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7850 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;Total ram usage:        5 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    8
  7857 ;; This function calls:
  7858 ;;		_Button_Baseline_Initialize
  7859 ;;		_Button_Baseline_Update
  7860 ;; This function is called by:
  7861 ;;		_Button_Service
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           
  7866                           ;psect for function _Button_State_Initializing
  7867  0978                     _Button_State_Initializing:
  7868                           
  7869                           ;mcc_generated_files/mtouch/mtouch_button.c: 209: static void Button_State_Initializing(
      +                          mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 210: {;mcc_generate
      +                          d_files/mtouch/mtouch_button.c: 212:     if ((button->counter) <= (mtouch_button_stateco
      +                          unter_t)((mtouch_button_baselinecounter_t)16u)/2)
  7870                           
  7871                           ;incstack = 0
  7872                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7873  0978  087D               	movf	Button_State_Initializing@button,w
  7874  0979  3E0A               	addlw	10
  7875  097A  0086               	movwf	6
  7876  097B  3001               	movlw	1	; select bank2/3
  7877  097C  0087               	movwf	7
  7878  097D  3F40               	moviw [0]fsr1
  7879  097E  00A0               	movwf	??_Button_State_Initializing
  7880  097F  3F41               	moviw [1]fsr1
  7881  0980  00A1               	movwf	??_Button_State_Initializing+1
  7882  0981  3000               	movlw	0
  7883  0982  0221               	subwf	??_Button_State_Initializing+1,w
  7884  0983  3009               	movlw	9
  7885  0984  1903               	skipnz
  7886  0985  0220               	subwf	??_Button_State_Initializing,w
  7887  0986  1803               	skipnc
  7888  0987  298D               	goto	l3720
  7889                           
  7890                           ;mcc_generated_files/mtouch/mtouch_button.c: 213:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 214:         Button_Baseline_Initialize(button);
  7891  0988  087D               	movf	Button_State_Initializing@button,w
  7892  0989  3196  26C8  3189   	fcall	_Button_Baseline_Initialize
  7893                           
  7894                           ;mcc_generated_files/mtouch/mtouch_button.c: 215:     } else {
  7895  098C  2991               	goto	l3722
  7896  098D                     l3720:
  7897                           
  7898                           ;mcc_generated_files/mtouch/mtouch_button.c: 216:         Button_Baseline_Update(button)
      +                          ;
  7899  098D  087D               	movf	Button_State_Initializing@button,w
  7900  098E  318B  2341  3189   	fcall	_Button_Baseline_Update
  7901  0991                     l3722:
  7902                           
  7903                           ;mcc_generated_files/mtouch/mtouch_button.c: 220:     (button->counter)++;
  7904  0991  087D               	movf	Button_State_Initializing@button,w
  7905  0992  3E0A               	addlw	10
  7906  0993  0086               	movwf	6
  7907  0994  3001               	movlw	1	; select bank2/3
  7908  0995  0087               	movwf	7
  7909  0996  3001               	movlw	1
  7910  0997  0781               	addwf	1,f
  7911  0998  3141               	addfsr 1,1
  7912  0999  1803               	skipnc
  7913  099A  0A81               	incf	1,f
  7914                           
  7915                           ;mcc_generated_files/mtouch/mtouch_button.c: 221:     if ((button->counter) >= (mtouch_b
      +                          utton_statecounter_t)((mtouch_button_baselinecounter_t)16u))
  7916  099B  087D               	movf	Button_State_Initializing@button,w
  7917  099C  3E0A               	addlw	10
  7918  099D  0086               	movwf	6
  7919  099E  3001               	movlw	1	; select bank2/3
  7920  099F  0087               	movwf	7
  7921  09A0  3F40               	moviw [0]fsr1
  7922  09A1  0020               	movlb	0	; select bank0
  7923  09A2  00A0               	movwf	??_Button_State_Initializing
  7924  09A3  3F41               	moviw [1]fsr1
  7925  09A4  00A1               	movwf	??_Button_State_Initializing+1
  7926  09A5  3000               	movlw	0
  7927  09A6  0221               	subwf	??_Button_State_Initializing+1,w
  7928  09A7  3010               	movlw	16
  7929  09A8  1903               	skipnz
  7930  09A9  0220               	subwf	??_Button_State_Initializing,w
  7931  09AA  1C03               	skipc
  7932  09AB  0008               	return
  7933                           
  7934                           ;mcc_generated_files/mtouch/mtouch_button.c: 222:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 223:         button->reading = (mtouch_button_reading_t)((button->baseline)>
      +                          >((uint8_t)4u));
  7935  09AC  087D               	movf	Button_State_Initializing@button,w
  7936  09AD  3E05               	addlw	5
  7937  09AE  0086               	movwf	6
  7938  09AF  3001               	movlw	1	; select bank2/3
  7939  09B0  0087               	movwf	7
  7940  09B1  3F40               	moviw [0]fsr1
  7941  09B2  00A0               	movwf	??_Button_State_Initializing
  7942  09B3  3F41               	moviw [1]fsr1
  7943  09B4  00A1               	movwf	??_Button_State_Initializing+1
  7944  09B5  3F42               	moviw [2]fsr1
  7945  09B6  00A2               	movwf	??_Button_State_Initializing+2
  7946  09B7  3F43               	moviw [3]fsr1
  7947  09B8  00A3               	movwf	??_Button_State_Initializing+3
  7948  09B9  3004               	movlw	4
  7949  09BA                     u2895:
  7950  09BA  36A3               	lsrf	??_Button_State_Initializing+3,f
  7951  09BB  0CA2               	rrf	??_Button_State_Initializing+2,f
  7952  09BC  0CA1               	rrf	??_Button_State_Initializing+1,f
  7953  09BD  0CA0               	rrf	??_Button_State_Initializing,f
  7954  09BE  0B89               	decfsz	9,f
  7955  09BF  29BA               	goto	u2895
  7956  09C0  087D               	movf	Button_State_Initializing@button,w
  7957  09C1  3E03               	addlw	3
  7958  09C2  0086               	movwf	6
  7959  09C3  3001               	movlw	1	; select bank2/3
  7960  09C4  0087               	movwf	7
  7961  09C5  0820               	movf	??_Button_State_Initializing,w
  7962  09C6  3FC0               	movwi [0]fsr1
  7963  09C7  0821               	movf	??_Button_State_Initializing+1,w
  7964  09C8  3FC1               	movwi [1]fsr1
  7965                           
  7966                           ;mcc_generated_files/mtouch/mtouch_button.c: 224:         button->state = MTOUCH_BUTTON_
      +                          STATE_notPressed;
  7967  09C9  087D               	movf	Button_State_Initializing@button,w
  7968  09CA  3E02               	addlw	2
  7969  09CB  0086               	movwf	6
  7970  09CC  3001               	movlw	1	; select bank2/3
  7971  09CD  0087               	movwf	7
  7972  09CE  0181               	clrf	1
  7973  09CF  0A81               	incf	1,f
  7974                           
  7975                           ;mcc_generated_files/mtouch/mtouch_button.c: 225:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  7976  09D0  087D               	movf	Button_State_Initializing@button,w
  7977  09D1  3E0A               	addlw	10
  7978  09D2  0086               	movwf	6
  7979  09D3  3001               	movlw	1	; select bank2/3
  7980  09D4  0087               	movwf	7
  7981  09D5  3000               	movlw	0
  7982  09D6  3FC0               	movwi [0]fsr1
  7983  09D7  3FC1               	movwi [1]fsr1
  7984  09D8  0008               	return
  7985  09D9                     __end_of_Button_State_Initializing:
  7986                           
  7987                           	psect	text34
  7988  0919                     __ptext34:	
  7989 ;; *************** function _Button_State_Pressed *****************
  7990 ;; Defined at:
  7991 ;;		line 265 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;  button          1   13[COMMON] PTR struct .
  7994 ;;		 -> mtouch_button(32), 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;		None
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  1    wreg      void 
  7999 ;; Registers used:
  8000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8001 ;; Tracked objects:
  8002 ;;		On entry : 1F/0
  8003 ;;		On exit  : 1F/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8006 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8008 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;Total ram usage:        3 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    7
  8013 ;; This function calls:
  8014 ;;		_Button_DefaultCallback
  8015 ;;		_MTOUCH_Button_Initialize
  8016 ;; This function is called by:
  8017 ;;		_Button_Service
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           
  8022                           ;psect for function _Button_State_Pressed
  8023  0919                     _Button_State_Pressed:
  8024                           
  8025                           ;mcc_generated_files/mtouch/mtouch_button.c: 265: static void Button_State_Pressed(mtouc
      +                          h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 266: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 268:     if ((button->counter) >= ((mtouch_button_statecounte
      +                          r_t)1000u))
  8026                           
  8027                           ;incstack = 0
  8028                           ; Regs used in _Button_State_Pressed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8029  0919  087D               	movf	Button_State_Pressed@button,w
  8030  091A  3E0A               	addlw	10
  8031  091B  0086               	movwf	6
  8032  091C  3001               	movlw	1	; select bank2/3
  8033  091D  0087               	movwf	7
  8034  091E  3F40               	moviw [0]fsr1
  8035  091F  00A0               	movwf	??_Button_State_Pressed
  8036  0920  3F41               	moviw [1]fsr1
  8037  0921  00A1               	movwf	??_Button_State_Pressed+1
  8038  0922  3003               	movlw	3
  8039  0923  0221               	subwf	??_Button_State_Pressed+1,w
  8040  0924  30E8               	movlw	232
  8041  0925  1903               	skipnz
  8042  0926  0220               	subwf	??_Button_State_Pressed,w
  8043  0927  1C03               	skipc
  8044  0928  293D               	goto	l3752
  8045                           
  8046                           ;mcc_generated_files/mtouch/mtouch_button.c: 269:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 270:         MTOUCH_Button_Initialize(button->name);
  8047  0929  087D               	movf	Button_State_Pressed@button,w
  8048  092A  0086               	movwf	6
  8049  092B  3001               	movlw	1	; select bank2/3
  8050  092C  0087               	movwf	7
  8051  092D  0801               	movf	1,w
  8052  092E  3196  26F5  3189   	fcall	_MTOUCH_Button_Initialize
  8053                           
  8054                           ;mcc_generated_files/mtouch/mtouch_button.c: 271:         callback_notPressed(button->na
      +                          me);
  8055  0931  087D               	movf	Button_State_Pressed@button,w
  8056  0932  0086               	movwf	6
  8057  0933  3001               	movlw	1	; select bank2/3
  8058  0934  0087               	movwf	7
  8059  0935  0801               	movf	1,w
  8060  0936  0020               	movlb	0	; select bank0
  8061  0937  00A0               	movwf	??_Button_State_Pressed
  8062  0938  0820               	movf	??_Button_State_Pressed,w
  8063  0939  00F0               	movwf	Button_DefaultCallback@button
  8064  093A  3192  226E         	fcall	_Button_DefaultCallback
  8065                           
  8066                           ;mcc_generated_files/mtouch/mtouch_button.c: 272:     }
  8067  093C  0008               	return
  8068  093D                     l3752:
  8069  093D  087D               	movf	Button_State_Pressed@button,w
  8070  093E  3E09               	addlw	9
  8071  093F  0086               	movwf	6
  8072  0940  3001               	movlw	1	; select bank2/3
  8073  0941  0087               	movwf	7
  8074  0942  0801               	movf	1,w
  8075  0943  3A80               	xorlw	128
  8076  0944  00A0               	movwf	??_Button_State_Pressed
  8077  0945  087D               	movf	Button_State_Pressed@button,w
  8078  0946  3E0E               	addlw	14
  8079  0947  0086               	movwf	6
  8080  0948  3001               	movlw	1	; select bank2/3
  8081  0949  0087               	movwf	7
  8082  094A  087D               	movf	Button_State_Pressed@button,w
  8083  094B  3E0E               	addlw	14
  8084  094C  0084               	movwf	4
  8085  094D  3001               	movlw	1	; select bank2/3
  8086  094E  0085               	movwf	5
  8087  094F  3600               	lsrf	0,w
  8088  0950  0201               	subwf	1,w
  8089  0951  3A80               	xorlw	128
  8090  0952  02A0               	subwf	??_Button_State_Pressed,f
  8091  0953  1803               	skipnc
  8092  0954  0008               	return
  8093                           
  8094                           ;mcc_generated_files/mtouch/mtouch_button.c: 276:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 277:         button->state = MTOUCH_BUTTON_STATE_notPressed;
  8095  0955  087D               	movf	Button_State_Pressed@button,w
  8096  0956  3E02               	addlw	2
  8097  0957  0086               	movwf	6
  8098  0958  3001               	movlw	1	; select bank2/3
  8099  0959  0087               	movwf	7
  8100  095A  0181               	clrf	1
  8101  095B  0A81               	incf	1,f
  8102                           
  8103                           ;mcc_generated_files/mtouch/mtouch_button.c: 278:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  8104  095C  087D               	movf	Button_State_Pressed@button,w
  8105  095D  3E0A               	addlw	10
  8106  095E  0086               	movwf	6
  8107  095F  3001               	movlw	1	; select bank2/3
  8108  0960  0087               	movwf	7
  8109  0961  3000               	movlw	0
  8110  0962  3FC0               	movwi [0]fsr1
  8111  0963  3FC1               	movwi [1]fsr1
  8112                           
  8113                           ;mcc_generated_files/mtouch/mtouch_button.c: 279:         button->baseline_count = (mtou
      +                          ch_button_baselinecounter_t)((0xffff))-((mtouch_button_baselinecounter_t)1024u);
  8114  0964  087D               	movf	Button_State_Pressed@button,w
  8115  0965  3E0C               	addlw	12
  8116  0966  0086               	movwf	6
  8117  0967  3001               	movlw	1	; select bank2/3
  8118  0968  0087               	movwf	7
  8119  0969  30FF               	movlw	255
  8120  096A  3FC0               	movwi [0]fsr1
  8121  096B  30FB               	movlw	251
  8122  096C  3FC1               	movwi [1]fsr1
  8123                           
  8124                           ;mcc_generated_files/mtouch/mtouch_button.c: 280:         callback_notPressed(button->na
      +                          me);
  8125  096D  087D               	movf	Button_State_Pressed@button,w
  8126  096E  0086               	movwf	6
  8127  096F  3001               	movlw	1	; select bank2/3
  8128  0970  0087               	movwf	7
  8129  0971  0801               	movf	1,w
  8130  0972  00A0               	movwf	??_Button_State_Pressed
  8131  0973  0820               	movf	??_Button_State_Pressed,w
  8132  0974  00F0               	movwf	Button_DefaultCallback@button
  8133  0975  3192  226E         	fcall	_Button_DefaultCallback
  8134  0977  0008               	return
  8135  0978                     __end_of_Button_State_Pressed:
  8136                           
  8137                           	psect	text35
  8138  126E                     __ptext35:	
  8139 ;; *************** function _Button_DefaultCallback *****************
  8140 ;; Defined at:
  8141 ;;		line 519 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;  button          1    0[COMMON] enum E2819
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;		None
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  1    wreg      void 
  8148 ;; Registers used:
  8149 ;;		None
  8150 ;; Tracked objects:
  8151 ;;		On entry : 1F/0
  8152 ;;		On exit  : 1F/0
  8153 ;;		Unchanged: 1F/0
  8154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8155 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8158 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8159 ;;Total ram usage:        1 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; Hardware stack levels required when called:    5
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_Button_State_NotPressed
  8166 ;;		_Button_State_Pressed
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           
  8171                           ;psect for function _Button_DefaultCallback
  8172  126E                     _Button_DefaultCallback:
  8173                           
  8174                           ;incstack = 0
  8175                           ; Regs used in _Button_DefaultCallback: []
  8176  126E  0008               	return
  8177  126F                     __end_of_Button_DefaultCallback:
  8178                           
  8179                           	psect	text36
  8180  0B41                     __ptext36:	
  8181 ;; *************** function _Button_Baseline_Update *****************
  8182 ;; Defined at:
  8183 ;;		line 473 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;  button          1    wreg     PTR struct .
  8186 ;;		 -> mtouch_button(32), 
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;  button          1    6[COMMON] PTR struct .
  8189 ;;		 -> mtouch_button(32), 
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  1    wreg      void 
  8192 ;; Registers used:
  8193 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8194 ;; Tracked objects:
  8195 ;;		On entry : 1F/0
  8196 ;;		On exit  : 1F/0
  8197 ;;		Unchanged: 1F/0
  8198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8201 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8202 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8203 ;;Total ram usage:        7 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:    5
  8206 ;; This function calls:
  8207 ;;		Nothing
  8208 ;; This function is called by:
  8209 ;;		_Button_State_Initializing
  8210 ;;		_Button_State_NotPressed
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           
  8215                           ;psect for function _Button_Baseline_Update
  8216  0B41                     _Button_Baseline_Update:
  8217                           
  8218                           ;incstack = 0
  8219                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  8220                           ;Button_Baseline_Update@button stored from wreg
  8221  0B41  00F6               	movwf	Button_Baseline_Update@button
  8222                           
  8223                           ;mcc_generated_files/mtouch/mtouch_button.c: 473: static void Button_Baseline_Update(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 474: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 475:     if (GIE == (uint8_t)1)
  8224  0B42  1F8B               	btfss	11,7	;volatile
  8225  0B43  2B8B               	goto	l3406
  8226                           
  8227                           ;mcc_generated_files/mtouch/mtouch_button.c: 476:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 477:         GIE = (uint8_t)0;
  8228  0B44  138B               	bcf	11,7	;volatile
  8229                           
  8230                           ;mcc_generated_files/mtouch/mtouch_button.c: 478:         button->baseline -= (button->b
      +                          aseline) >> ((uint8_t)4u);
  8231  0B45  0876               	movf	Button_Baseline_Update@button,w
  8232  0B46  3E05               	addlw	5
  8233  0B47  0086               	movwf	6
  8234  0B48  3001               	movlw	1	; select bank2/3
  8235  0B49  0087               	movwf	7
  8236  0B4A  3F40               	moviw [0]fsr1
  8237  0B4B  00F0               	movwf	??_Button_Baseline_Update
  8238  0B4C  3F41               	moviw [1]fsr1
  8239  0B4D  00F1               	movwf	??_Button_Baseline_Update+1
  8240  0B4E  3F42               	moviw [2]fsr1
  8241  0B4F  00F2               	movwf	??_Button_Baseline_Update+2
  8242  0B50  3F43               	moviw [3]fsr1
  8243  0B51  00F3               	movwf	??_Button_Baseline_Update+3
  8244  0B52  3004               	movlw	4
  8245  0B53                     u2265:
  8246  0B53  36F3               	lsrf	??_Button_Baseline_Update+3,f
  8247  0B54  0CF2               	rrf	??_Button_Baseline_Update+2,f
  8248  0B55  0CF1               	rrf	??_Button_Baseline_Update+1,f
  8249  0B56  0CF0               	rrf	??_Button_Baseline_Update,f
  8250  0B57  0B89               	decfsz	9,f
  8251  0B58  2B53               	goto	u2265
  8252  0B59  0876               	movf	Button_Baseline_Update@button,w
  8253  0B5A  3E05               	addlw	5
  8254  0B5B  0086               	movwf	6
  8255  0B5C  3001               	movlw	1	; select bank2/3
  8256  0B5D  0087               	movwf	7
  8257  0B5E  0870               	movf	??_Button_Baseline_Update,w
  8258  0B5F  0281               	subwf	1,f
  8259  0B60  3141               	addfsr 1,1
  8260  0B61  0871               	movf	??_Button_Baseline_Update+1,w
  8261  0B62  3B81               	subwfb	1,f
  8262  0B63  3141               	addfsr 1,1
  8263  0B64  0872               	movf	??_Button_Baseline_Update+2,w
  8264  0B65  3B81               	subwfb	1,f
  8265  0B66  3141               	addfsr 1,1
  8266  0B67  0873               	movf	??_Button_Baseline_Update+3,w
  8267  0B68  3B81               	subwfb	1,f
  8268  0B69  317D               	addfsr 1,-3
  8269                           
  8270                           ;mcc_generated_files/mtouch/mtouch_button.c: 479:         button->baseline += button->re
      +                          ading;
  8271  0B6A  0876               	movf	Button_Baseline_Update@button,w
  8272  0B6B  3E03               	addlw	3
  8273  0B6C  0086               	movwf	6
  8274  0B6D  3001               	movlw	1	; select bank2/3
  8275  0B6E  0087               	movwf	7
  8276  0B6F  3F40               	moviw [0]fsr1
  8277  0B70  00F0               	movwf	??_Button_Baseline_Update
  8278  0B71  3F41               	moviw [1]fsr1
  8279  0B72  00F1               	movwf	??_Button_Baseline_Update+1
  8280  0B73  0870               	movf	??_Button_Baseline_Update,w
  8281  0B74  00F2               	movwf	??_Button_Baseline_Update+2
  8282  0B75  0871               	movf	??_Button_Baseline_Update+1,w
  8283  0B76  00F3               	movwf	??_Button_Baseline_Update+3
  8284  0B77  01F4               	clrf	??_Button_Baseline_Update+4
  8285  0B78  01F5               	clrf	??_Button_Baseline_Update+5
  8286  0B79  0876               	movf	Button_Baseline_Update@button,w
  8287  0B7A  3E05               	addlw	5
  8288  0B7B  0086               	movwf	6
  8289  0B7C  3001               	movlw	1	; select bank2/3
  8290  0B7D  0087               	movwf	7
  8291  0B7E  0872               	movf	??_Button_Baseline_Update+2,w
  8292  0B7F  0781               	addwf	1,f
  8293  0B80  3141               	addfsr 1,1
  8294  0B81  0873               	movf	??_Button_Baseline_Update+3,w
  8295  0B82  3D81               	addwfc	1,f
  8296  0B83  3141               	addfsr 1,1
  8297  0B84  0874               	movf	??_Button_Baseline_Update+4,w
  8298  0B85  3D81               	addwfc	1,f
  8299  0B86  3141               	addfsr 1,1
  8300  0B87  0875               	movf	??_Button_Baseline_Update+5,w
  8301  0B88  3D81               	addwfc	1,f
  8302                           
  8303                           ;mcc_generated_files/mtouch/mtouch_button.c: 480:         GIE = (uint8_t)1;
  8304  0B89  178B               	bsf	11,7	;volatile
  8305                           
  8306                           ;mcc_generated_files/mtouch/mtouch_button.c: 481:     }
  8307  0B8A  0008               	return
  8308  0B8B                     l3406:
  8309                           
  8310                           ;mcc_generated_files/mtouch/mtouch_button.c: 483:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 484:         button->baseline -= (button->baseline) >> ((uint8_t)4u);
  8311  0B8B  0876               	movf	Button_Baseline_Update@button,w
  8312  0B8C  3E05               	addlw	5
  8313  0B8D  0086               	movwf	6
  8314  0B8E  3001               	movlw	1	; select bank2/3
  8315  0B8F  0087               	movwf	7
  8316  0B90  3F40               	moviw [0]fsr1
  8317  0B91  00F0               	movwf	??_Button_Baseline_Update
  8318  0B92  3F41               	moviw [1]fsr1
  8319  0B93  00F1               	movwf	??_Button_Baseline_Update+1
  8320  0B94  3F42               	moviw [2]fsr1
  8321  0B95  00F2               	movwf	??_Button_Baseline_Update+2
  8322  0B96  3F43               	moviw [3]fsr1
  8323  0B97  00F3               	movwf	??_Button_Baseline_Update+3
  8324  0B98  3004               	movlw	4
  8325  0B99                     u2275:
  8326  0B99  36F3               	lsrf	??_Button_Baseline_Update+3,f
  8327  0B9A  0CF2               	rrf	??_Button_Baseline_Update+2,f
  8328  0B9B  0CF1               	rrf	??_Button_Baseline_Update+1,f
  8329  0B9C  0CF0               	rrf	??_Button_Baseline_Update,f
  8330  0B9D  0B89               	decfsz	9,f
  8331  0B9E  2B99               	goto	u2275
  8332  0B9F  0876               	movf	Button_Baseline_Update@button,w
  8333  0BA0  3E05               	addlw	5
  8334  0BA1  0086               	movwf	6
  8335  0BA2  3001               	movlw	1	; select bank2/3
  8336  0BA3  0087               	movwf	7
  8337  0BA4  0870               	movf	??_Button_Baseline_Update,w
  8338  0BA5  0281               	subwf	1,f
  8339  0BA6  3141               	addfsr 1,1
  8340  0BA7  0871               	movf	??_Button_Baseline_Update+1,w
  8341  0BA8  3B81               	subwfb	1,f
  8342  0BA9  3141               	addfsr 1,1
  8343  0BAA  0872               	movf	??_Button_Baseline_Update+2,w
  8344  0BAB  3B81               	subwfb	1,f
  8345  0BAC  3141               	addfsr 1,1
  8346  0BAD  0873               	movf	??_Button_Baseline_Update+3,w
  8347  0BAE  3B81               	subwfb	1,f
  8348  0BAF  317D               	addfsr 1,-3
  8349                           
  8350                           ;mcc_generated_files/mtouch/mtouch_button.c: 485:         button->baseline += button->re
      +                          ading;
  8351  0BB0  0876               	movf	Button_Baseline_Update@button,w
  8352  0BB1  3E03               	addlw	3
  8353  0BB2  0086               	movwf	6
  8354  0BB3  3001               	movlw	1	; select bank2/3
  8355  0BB4  0087               	movwf	7
  8356  0BB5  3F40               	moviw [0]fsr1
  8357  0BB6  00F0               	movwf	??_Button_Baseline_Update
  8358  0BB7  3F41               	moviw [1]fsr1
  8359  0BB8  00F1               	movwf	??_Button_Baseline_Update+1
  8360  0BB9  0870               	movf	??_Button_Baseline_Update,w
  8361  0BBA  00F2               	movwf	??_Button_Baseline_Update+2
  8362  0BBB  0871               	movf	??_Button_Baseline_Update+1,w
  8363  0BBC  00F3               	movwf	??_Button_Baseline_Update+3
  8364  0BBD  01F4               	clrf	??_Button_Baseline_Update+4
  8365  0BBE  01F5               	clrf	??_Button_Baseline_Update+5
  8366  0BBF  0876               	movf	Button_Baseline_Update@button,w
  8367  0BC0  3E05               	addlw	5
  8368  0BC1  0086               	movwf	6
  8369  0BC2  3001               	movlw	1	; select bank2/3
  8370  0BC3  0087               	movwf	7
  8371  0BC4  0872               	movf	??_Button_Baseline_Update+2,w
  8372  0BC5  0781               	addwf	1,f
  8373  0BC6  3141               	addfsr 1,1
  8374  0BC7  0873               	movf	??_Button_Baseline_Update+3,w
  8375  0BC8  3D81               	addwfc	1,f
  8376  0BC9  3141               	addfsr 1,1
  8377  0BCA  0874               	movf	??_Button_Baseline_Update+4,w
  8378  0BCB  3D81               	addwfc	1,f
  8379  0BCC  3141               	addfsr 1,1
  8380  0BCD  0875               	movf	??_Button_Baseline_Update+5,w
  8381  0BCE  3D81               	addwfc	1,f
  8382  0BCF  0008               	return
  8383  0BD0                     __end_of_Button_Baseline_Update:
  8384                           
  8385                           	psect	text37
  8386  16C8                     __ptext37:	
  8387 ;; *************** function _Button_Baseline_Initialize *****************
  8388 ;; Defined at:
  8389 ;;		line 467 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  button          1    wreg     PTR struct .
  8392 ;;		 -> mtouch_button(32), 
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  button          1   12[COMMON] PTR struct .
  8395 ;;		 -> mtouch_button(32), 
  8396 ;; Return value:  Size  Location     Type
  8397 ;;                  1    wreg      void 
  8398 ;; Registers used:
  8399 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8400 ;; Tracked objects:
  8401 ;;		On entry : 1F/0
  8402 ;;		On exit  : 0/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;Total ram usage:        5 bytes
  8410 ;; Hardware stack levels used:    1
  8411 ;; Hardware stack levels required when called:    7
  8412 ;; This function calls:
  8413 ;;		_MTOUCH_Sensor_RawSample_Get
  8414 ;; This function is called by:
  8415 ;;		_Button_State_Initializing
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           
  8420                           ;psect for function _Button_Baseline_Initialize
  8421  16C8                     _Button_Baseline_Initialize:
  8422                           
  8423                           ;incstack = 0
  8424                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8425                           ;Button_Baseline_Initialize@button stored from wreg
  8426  16C8  00FC               	movwf	Button_Baseline_Initialize@button
  8427                           
  8428                           ;mcc_generated_files/mtouch/mtouch_button.c: 467: static void Button_Baseline_Initialize
      +                          (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 468: {;mcc_generat
      +                          ed_files/mtouch/mtouch_button.c: 469:     button->baseline = MTOUCH_Sensor_RawSample_Get
      +                          (button->sensor);
  8429  16C9  0A7C               	incf	Button_Baseline_Initialize@button,w
  8430  16CA  0086               	movwf	6
  8431  16CB  3001               	movlw	1	; select bank2/3
  8432  16CC  0087               	movwf	7
  8433  16CD  0801               	movf	1,w
  8434  16CE  3194  24B8  3196   	fcall	_MTOUCH_Sensor_RawSample_Get
  8435  16D1  0874               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8436  16D2  00F8               	movwf	??_Button_Baseline_Initialize
  8437  16D3  0875               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8438  16D4  00F9               	movwf	??_Button_Baseline_Initialize+1
  8439  16D5  01FA               	clrf	??_Button_Baseline_Initialize+2
  8440  16D6  01FB               	clrf	??_Button_Baseline_Initialize+3
  8441  16D7  087C               	movf	Button_Baseline_Initialize@button,w
  8442  16D8  3E05               	addlw	5
  8443  16D9  0086               	movwf	6
  8444  16DA  3001               	movlw	1	; select bank2/3
  8445  16DB  0087               	movwf	7
  8446  16DC  0878               	movf	??_Button_Baseline_Initialize,w
  8447  16DD  3FC0               	movwi [0]fsr1
  8448  16DE  0879               	movf	??_Button_Baseline_Initialize+1,w
  8449  16DF  3FC1               	movwi [1]fsr1
  8450  16E0  087A               	movf	??_Button_Baseline_Initialize+2,w
  8451  16E1  3FC2               	movwi [2]fsr1
  8452  16E2  087B               	movf	??_Button_Baseline_Initialize+3,w
  8453  16E3  3FC3               	movwi [3]fsr1
  8454                           
  8455                           ;mcc_generated_files/mtouch/mtouch_button.c: 470:     button->baseline <<= ((uint8_t)4u)
      +                          ;
  8456  16E4  087C               	movf	Button_Baseline_Initialize@button,w
  8457  16E5  3E05               	addlw	5
  8458  16E6  0086               	movwf	6
  8459  16E7  3001               	movlw	1	; select bank2/3
  8460  16E8  0087               	movwf	7
  8461  16E9  3004               	movlw	4
  8462  16EA                     u2245:
  8463  16EA  3581               	lslf	1,f
  8464  16EB  3141               	addfsr 1,1
  8465  16EC  0D81               	rlf	1,f
  8466  16ED  3141               	addfsr 1,1
  8467  16EE  0D81               	rlf	1,f
  8468  16EF  3141               	addfsr 1,1
  8469  16F0  0D81               	rlf	1,f
  8470  16F1  317D               	addfsr 1,-3
  8471  16F2  0B89               	decfsz	9,f
  8472  16F3  2EEA               	goto	u2245
  8473  16F4  0008               	return
  8474  16F5                     __end_of_Button_Baseline_Initialize:
  8475                           
  8476                           	psect	text38
  8477  1349                     __ptext38:	
  8478 ;; *************** function _Button_Reading_Update *****************
  8479 ;; Defined at:
  8480 ;;		line 440 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  button          1    wreg     PTR struct .
  8483 ;;		 -> mtouch_button(32), 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  button          1   11[COMMON] PTR struct .
  8486 ;;		 -> mtouch_button(32), 
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  1    wreg      void 
  8489 ;; Registers used:
  8490 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8491 ;; Tracked objects:
  8492 ;;		On entry : 1F/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8500 ;;Total ram usage:        1 bytes
  8501 ;; Hardware stack levels used:    1
  8502 ;; Hardware stack levels required when called:    8
  8503 ;; This function calls:
  8504 ;;		_Button_Reading_Update_Helper
  8505 ;; This function is called by:
  8506 ;;		_Button_Service
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           
  8511                           ;psect for function _Button_Reading_Update
  8512  1349                     _Button_Reading_Update:
  8513                           
  8514                           ;incstack = 0
  8515                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8516                           ;Button_Reading_Update@button stored from wreg
  8517  1349  00FB               	movwf	Button_Reading_Update@button
  8518                           
  8519                           ;mcc_generated_files/mtouch/mtouch_button.c: 440: static void Button_Reading_Update(mtou
      +                          ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 441: {;mcc_generated_fi
      +                          les/mtouch/mtouch_button.c: 442:     if (GIE == (uint8_t) 1)
  8520  134A  1F8B               	btfss	11,7	;volatile
  8521  134B  2B52               	goto	l3702
  8522                           
  8523                           ;mcc_generated_files/mtouch/mtouch_button.c: 443:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 444:         GIE = (uint8_t) 0;
  8524  134C  138B               	bcf	11,7	;volatile
  8525                           
  8526                           ;mcc_generated_files/mtouch/mtouch_button.c: 445:         Button_Reading_Update_Helper(b
      +                          utton);
  8527  134D  087B               	movf	Button_Reading_Update@button,w
  8528  134E  3197  27B3         	fcall	_Button_Reading_Update_Helper
  8529                           
  8530                           ;mcc_generated_files/mtouch/mtouch_button.c: 446:         GIE = (uint8_t) 1;
  8531  1350  178B               	bsf	11,7	;volatile
  8532                           
  8533                           ;mcc_generated_files/mtouch/mtouch_button.c: 447:     }
  8534  1351  0008               	return
  8535  1352                     l3702:
  8536                           
  8537                           ;mcc_generated_files/mtouch/mtouch_button.c: 449:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 450:         Button_Reading_Update_Helper(button);
  8538  1352  087B               	movf	Button_Reading_Update@button,w
  8539  1353  3197  27B3         	fcall	_Button_Reading_Update_Helper
  8540  1355  0008               	return
  8541  1356                     __end_of_Button_Reading_Update:
  8542                           
  8543                           	psect	text39
  8544  17B3                     __ptext39:	
  8545 ;; *************** function _Button_Reading_Update_Helper *****************
  8546 ;; Defined at:
  8547 ;;		line 454 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;  button          1    wreg     PTR struct .
  8550 ;;		 -> mtouch_button(32), 
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;  button          1   10[COMMON] PTR struct .
  8553 ;;		 -> mtouch_button(32), 
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  1    wreg      void 
  8556 ;; Registers used:
  8557 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8558 ;; Tracked objects:
  8559 ;;		On entry : 1F/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8566 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8567 ;;Total ram usage:        3 bytes
  8568 ;; Hardware stack levels used:    1
  8569 ;; Hardware stack levels required when called:    7
  8570 ;; This function calls:
  8571 ;;		_MTOUCH_Sensor_RawSample_Get
  8572 ;; This function is called by:
  8573 ;;		_Button_Reading_Update
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           
  8578                           ;psect for function _Button_Reading_Update_Helper
  8579  17B3                     _Button_Reading_Update_Helper:
  8580                           
  8581                           ;incstack = 0
  8582                           ; Regs used in _Button_Reading_Update_Helper: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  8583                           ;Button_Reading_Update_Helper@button stored from wreg
  8584  17B3  00FA               	movwf	Button_Reading_Update_Helper@button
  8585                           
  8586                           ;mcc_generated_files/mtouch/mtouch_button.c: 454: static void Button_Reading_Update_Help
      +                          er(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 455: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 456:     if (button->state != MTOUCH_BUTTON_STATE_ini
      +                          tializing)
  8587  17B4  087A               	movf	Button_Reading_Update_Helper@button,w
  8588  17B5  3E02               	addlw	2
  8589  17B6  0086               	movwf	6
  8590  17B7  3001               	movlw	1	; select bank2/3
  8591  17B8  0087               	movwf	7
  8592  17B9  0801               	movf	1,w
  8593  17BA  1903               	btfsc	3,2
  8594  17BB  2FEF               	goto	l3414
  8595                           
  8596                           ;mcc_generated_files/mtouch/mtouch_button.c: 457:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 458:         button->reading -= button->reading>>((uint8_t)2u);
  8597  17BC  087A               	movf	Button_Reading_Update_Helper@button,w
  8598  17BD  3E03               	addlw	3
  8599  17BE  0086               	movwf	6
  8600  17BF  3001               	movlw	1	; select bank2/3
  8601  17C0  0087               	movwf	7
  8602  17C1  3F40               	moviw [0]fsr1
  8603  17C2  00F8               	movwf	??_Button_Reading_Update_Helper
  8604  17C3  3F41               	moviw [1]fsr1
  8605  17C4  00F9               	movwf	??_Button_Reading_Update_Helper+1
  8606  17C5  36F9               	lsrf	??_Button_Reading_Update_Helper+1,f
  8607  17C6  0CF8               	rrf	??_Button_Reading_Update_Helper,f
  8608  17C7  36F9               	lsrf	??_Button_Reading_Update_Helper+1,f
  8609  17C8  0CF8               	rrf	??_Button_Reading_Update_Helper,f
  8610  17C9  087A               	movf	Button_Reading_Update_Helper@button,w
  8611  17CA  3E03               	addlw	3
  8612  17CB  0086               	movwf	6
  8613  17CC  3001               	movlw	1	; select bank2/3
  8614  17CD  0087               	movwf	7
  8615  17CE  0878               	movf	??_Button_Reading_Update_Helper,w
  8616  17CF  0281               	subwf	1,f
  8617  17D0  3141               	addfsr 1,1
  8618  17D1  0879               	movf	??_Button_Reading_Update_Helper+1,w
  8619  17D2  3B81               	subwfb	1,f
  8620  17D3  317F               	addfsr 1,-1
  8621                           
  8622                           ;mcc_generated_files/mtouch/mtouch_button.c: 459:         button->reading += MTOUCH_Sens
      +                          or_RawSample_Get(button->sensor) >> ((uint8_t)2u);
  8623  17D4  0A7A               	incf	Button_Reading_Update_Helper@button,w
  8624  17D5  0086               	movwf	6
  8625  17D6  3001               	movlw	1	; select bank2/3
  8626  17D7  0087               	movwf	7
  8627  17D8  0801               	movf	1,w
  8628  17D9  3194  24B8         	fcall	_MTOUCH_Sensor_RawSample_Get
  8629  17DB  0874               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8630  17DC  00F8               	movwf	??_Button_Reading_Update_Helper
  8631  17DD  0875               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8632  17DE  00F9               	movwf	??_Button_Reading_Update_Helper+1
  8633  17DF  36F9               	lsrf	??_Button_Reading_Update_Helper+1,f
  8634  17E0  0CF8               	rrf	??_Button_Reading_Update_Helper,f
  8635  17E1  36F9               	lsrf	??_Button_Reading_Update_Helper+1,f
  8636  17E2  0CF8               	rrf	??_Button_Reading_Update_Helper,f
  8637  17E3  087A               	movf	Button_Reading_Update_Helper@button,w
  8638  17E4  3E03               	addlw	3
  8639  17E5  0086               	movwf	6
  8640  17E6  3001               	movlw	1	; select bank2/3
  8641  17E7  0087               	movwf	7
  8642  17E8  0878               	movf	??_Button_Reading_Update_Helper,w
  8643  17E9  0781               	addwf	1,f
  8644  17EA  3141               	addfsr 1,1
  8645  17EB  0879               	movf	??_Button_Reading_Update_Helper+1,w
  8646  17EC  3D81               	addwfc	1,f
  8647  17ED  317F               	addfsr 1,-1
  8648                           
  8649                           ;mcc_generated_files/mtouch/mtouch_button.c: 460:     }
  8650  17EE  0008               	return
  8651  17EF                     l3414:
  8652                           
  8653                           ;mcc_generated_files/mtouch/mtouch_button.c: 462:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 463:         button->reading = MTOUCH_Sensor_RawSample_Get(button->sensor);
  8654  17EF  0A7A               	incf	Button_Reading_Update_Helper@button,w
  8655  17F0  0086               	movwf	6
  8656  17F1  3001               	movlw	1	; select bank2/3
  8657  17F2  0087               	movwf	7
  8658  17F3  0801               	movf	1,w
  8659  17F4  3194  24B8         	fcall	_MTOUCH_Sensor_RawSample_Get
  8660  17F6  087A               	movf	Button_Reading_Update_Helper@button,w
  8661  17F7  3E03               	addlw	3
  8662  17F8  0086               	movwf	6
  8663  17F9  3001               	movlw	1	; select bank2/3
  8664  17FA  0087               	movwf	7
  8665  17FB  0874               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8666  17FC  3FC0               	movwi [0]fsr1
  8667  17FD  0875               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8668  17FE  3FC1               	movwi [1]fsr1
  8669  17FF  0008               	return
  8670  1800                     __end_of_Button_Reading_Update_Helper:
  8671                           
  8672                           	psect	text40
  8673  14B8                     __ptext40:	
  8674 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
  8675 ;; Defined at:
  8676 ;;		line 420 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;  name            1    wreg     enum E2661
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;  name            1    7[COMMON] enum E2661
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  2    4[COMMON] unsigned short 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8685 ;; Tracked objects:
  8686 ;;		On entry : 1F/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8693 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8694 ;;Total ram usage:        4 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:    6
  8697 ;; This function calls:
  8698 ;;		___bmul
  8699 ;; This function is called by:
  8700 ;;		_Button_Reading_Update_Helper
  8701 ;;		_Button_Baseline_Initialize
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           
  8706                           ;psect for function _MTOUCH_Sensor_RawSample_Get
  8707  14B8                     _MTOUCH_Sensor_RawSample_Get:
  8708                           
  8709                           ;incstack = 0
  8710                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  8711                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
  8712  14B8  00F7               	movwf	MTOUCH_Sensor_RawSample_Get@name
  8713  14B9  3002               	movlw	2
  8714  14BA  0277               	subwf	MTOUCH_Sensor_RawSample_Get@name,w
  8715  14BB  1803               	skipnc
  8716  14BC  2CCC               	goto	l3314
  8717  14BD  3009               	movlw	9
  8718  14BE  00F6               	movwf	??_MTOUCH_Sensor_RawSample_Get
  8719  14BF  0876               	movf	??_MTOUCH_Sensor_RawSample_Get,w
  8720  14C0  00F0               	movwf	___bmul@multiplicand
  8721  14C1  0877               	movf	MTOUCH_Sensor_RawSample_Get@name,w
  8722  14C2  3193  23C0         	fcall	___bmul
  8723  14C4  3EB6               	addlw	(low ((_mtouch_sensor| 0+6)))& (0+255)
  8724  14C5  0086               	movwf	6
  8725  14C6  0187               	clrf	7
  8726  14C7  3F40               	moviw [0]fsr1
  8727  14C8  00F4               	movwf	?_MTOUCH_Sensor_RawSample_Get
  8728  14C9  3F41               	moviw [1]fsr1
  8729  14CA  00F5               	movwf	?_MTOUCH_Sensor_RawSample_Get+1
  8730  14CB  0008               	return
  8731  14CC                     l3314:
  8732  14CC  01F4               	clrf	?_MTOUCH_Sensor_RawSample_Get
  8733  14CD  01F5               	clrf	?_MTOUCH_Sensor_RawSample_Get+1
  8734  14CE  0008               	return
  8735  14CF                     __end_of_MTOUCH_Sensor_RawSample_Get:
  8736                           
  8737                           	psect	text41
  8738  0AB7                     __ptext41:	
  8739 ;; *************** function _Button_Deviation_Update *****************
  8740 ;; Defined at:
  8741 ;;		line 391 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;  button          1    wreg     PTR struct .
  8744 ;;		 -> mtouch_button(32), 
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;  button          1    0[BANK0 ] PTR struct .
  8747 ;;		 -> mtouch_button(32), 
  8748 ;;  deviation       4    1[BANK0 ] long 
  8749 ;; Return value:  Size  Location     Type
  8750 ;;                  1    wreg      void 
  8751 ;; Registers used:
  8752 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8753 ;; Tracked objects:
  8754 ;;		On entry : 1F/0
  8755 ;;		On exit  : 1F/0
  8756 ;;		Unchanged: 0/0
  8757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8759 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8760 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;      Totals:        10       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8762 ;;Total ram usage:       15 bytes
  8763 ;; Hardware stack levels used:    1
  8764 ;; Hardware stack levels required when called:    5
  8765 ;; This function calls:
  8766 ;;		Nothing
  8767 ;; This function is called by:
  8768 ;;		_Button_Service
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           
  8773                           ;psect for function _Button_Deviation_Update
  8774  0AB7                     _Button_Deviation_Update:
  8775                           
  8776                           ;incstack = 0
  8777                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  8778                           ;Button_Deviation_Update@button stored from wreg
  8779  0AB7  00A0               	movwf	Button_Deviation_Update@button
  8780                           
  8781                           ;mcc_generated_files/mtouch/mtouch_button.c: 391: static void Button_Deviation_Update(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 392: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 393:     int32_t deviation;;mcc_generated_files/mtouch/mto
      +                          uch_button.c: 395:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4u)));
  8782  0AB8  0820               	movf	Button_Deviation_Update@button,w
  8783  0AB9  3E05               	addlw	5
  8784  0ABA  0086               	movwf	6
  8785  0ABB  3001               	movlw	1	; select bank2/3
  8786  0ABC  0087               	movwf	7
  8787  0ABD  3F40               	moviw [0]fsr1
  8788  0ABE  00F0               	movwf	??_Button_Deviation_Update
  8789  0ABF  3F41               	moviw [1]fsr1
  8790  0AC0  00F1               	movwf	??_Button_Deviation_Update+1
  8791  0AC1  3F42               	moviw [2]fsr1
  8792  0AC2  00F2               	movwf	??_Button_Deviation_Update+2
  8793  0AC3  3F43               	moviw [3]fsr1
  8794  0AC4  00F3               	movwf	??_Button_Deviation_Update+3
  8795  0AC5  3004               	movlw	4
  8796  0AC6                     u2835:
  8797  0AC6  36F3               	lsrf	??_Button_Deviation_Update+3,f
  8798  0AC7  0CF2               	rrf	??_Button_Deviation_Update+2,f
  8799  0AC8  0CF1               	rrf	??_Button_Deviation_Update+1,f
  8800  0AC9  0CF0               	rrf	??_Button_Deviation_Update,f
  8801  0ACA  0B89               	decfsz	9,f
  8802  0ACB  2AC6               	goto	u2835
  8803  0ACC  0820               	movf	Button_Deviation_Update@button,w
  8804  0ACD  3E03               	addlw	3
  8805  0ACE  0086               	movwf	6
  8806  0ACF  3001               	movlw	1	; select bank2/3
  8807  0AD0  0087               	movwf	7
  8808  0AD1  3F40               	moviw [0]fsr1
  8809  0AD2  00F4               	movwf	??_Button_Deviation_Update+4
  8810  0AD3  3F41               	moviw [1]fsr1
  8811  0AD4  00F5               	movwf	??_Button_Deviation_Update+5
  8812  0AD5  0874               	movf	??_Button_Deviation_Update+4,w
  8813  0AD6  00F6               	movwf	??_Button_Deviation_Update+6
  8814  0AD7  0875               	movf	??_Button_Deviation_Update+5,w
  8815  0AD8  00F7               	movwf	??_Button_Deviation_Update+7
  8816  0AD9  01F8               	clrf	??_Button_Deviation_Update+8
  8817  0ADA  01F9               	clrf	??_Button_Deviation_Update+9
  8818  0ADB  0870               	movf	??_Button_Deviation_Update,w
  8819  0ADC  02F6               	subwf	??_Button_Deviation_Update+6,f
  8820  0ADD  0871               	movf	??_Button_Deviation_Update+1,w
  8821  0ADE  3BF7               	subwfb	??_Button_Deviation_Update+7,f
  8822  0ADF  0872               	movf	??_Button_Deviation_Update+2,w
  8823  0AE0  3BF8               	subwfb	??_Button_Deviation_Update+8,f
  8824  0AE1  0873               	movf	??_Button_Deviation_Update+3,w
  8825  0AE2  3BF9               	subwfb	??_Button_Deviation_Update+9,f
  8826  0AE3  0879               	movf	??_Button_Deviation_Update+9,w
  8827  0AE4  00A4               	movwf	Button_Deviation_Update@deviation+3
  8828  0AE5  0878               	movf	??_Button_Deviation_Update+8,w
  8829  0AE6  00A3               	movwf	Button_Deviation_Update@deviation+2
  8830  0AE7  0877               	movf	??_Button_Deviation_Update+7,w
  8831  0AE8  00A2               	movwf	Button_Deviation_Update@deviation+1
  8832  0AE9  0876               	movf	??_Button_Deviation_Update+6,w
  8833  0AEA  00A1               	movwf	Button_Deviation_Update@deviation
  8834                           
  8835                           ;mcc_generated_files/mtouch/mtouch_button.c: 398:     deviation = deviation >> (button->
      +                          scaling);
  8836  0AEB  0821               	movf	Button_Deviation_Update@deviation,w
  8837  0AEC  00F0               	movwf	??_Button_Deviation_Update
  8838  0AED  0822               	movf	Button_Deviation_Update@deviation+1,w
  8839  0AEE  00F1               	movwf	??_Button_Deviation_Update+1
  8840  0AEF  0823               	movf	Button_Deviation_Update@deviation+2,w
  8841  0AF0  00F2               	movwf	??_Button_Deviation_Update+2
  8842  0AF1  0824               	movf	Button_Deviation_Update@deviation+3,w
  8843  0AF2  00F3               	movwf	??_Button_Deviation_Update+3
  8844  0AF3  0820               	movf	Button_Deviation_Update@button,w
  8845  0AF4  3E0F               	addlw	15
  8846  0AF5  0086               	movwf	6
  8847  0AF6  3001               	movlw	1	; select bank2/3
  8848  0AF7  0087               	movwf	7
  8849  0AF8  0A01               	incf	1,w
  8850  0AF9  2AFE               	goto	u2840
  8851  0AFA                     u2845:
  8852  0AFA  37F3               	asrf	??_Button_Deviation_Update+3,f
  8853  0AFB  0CF2               	rrf	??_Button_Deviation_Update+2,f
  8854  0AFC  0CF1               	rrf	??_Button_Deviation_Update+1,f
  8855  0AFD  0CF0               	rrf	??_Button_Deviation_Update,f
  8856  0AFE                     u2840:
  8857  0AFE  0B89               	decfsz	9,f
  8858  0AFF  2AFA               	goto	u2845
  8859  0B00  0873               	movf	??_Button_Deviation_Update+3,w
  8860  0B01  00A4               	movwf	Button_Deviation_Update@deviation+3
  8861  0B02  0872               	movf	??_Button_Deviation_Update+2,w
  8862  0B03  00A3               	movwf	Button_Deviation_Update@deviation+2
  8863  0B04  0871               	movf	??_Button_Deviation_Update+1,w
  8864  0B05  00A2               	movwf	Button_Deviation_Update@deviation+1
  8865  0B06  0870               	movf	??_Button_Deviation_Update,w
  8866  0B07  00A1               	movwf	Button_Deviation_Update@deviation
  8867                           
  8868                           ;mcc_generated_files/mtouch/mtouch_button.c: 401:     if (deviation > ((0x7f)))
  8869  0B08  1BA4               	btfsc	Button_Deviation_Update@deviation+3,7
  8870  0B09  2B20               	goto	l3710
  8871  0B0A  0824               	movf	Button_Deviation_Update@deviation+3,w
  8872  0B0B  1D03               	btfss	3,2
  8873  0B0C  2B17               	goto	l3708
  8874  0B0D  0823               	movf	Button_Deviation_Update@deviation+2,w
  8875  0B0E  1D03               	btfss	3,2
  8876  0B0F  2B17               	goto	l3708
  8877  0B10  0822               	movf	Button_Deviation_Update@deviation+1,w
  8878  0B11  1D03               	btfss	3,2
  8879  0B12  2B17               	goto	l3708
  8880  0B13  3080               	movlw	128
  8881  0B14  0221               	subwf	Button_Deviation_Update@deviation,w
  8882  0B15  1C03               	btfss	3,0
  8883  0B16  2B20               	goto	l3710
  8884  0B17                     l3708:
  8885                           
  8886                           ;mcc_generated_files/mtouch/mtouch_button.c: 402:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 403:         deviation = ((0x7f));
  8887  0B17  3000               	movlw	0
  8888  0B18  0020               	movlb	0	; select bank0
  8889  0B19  00A4               	movwf	Button_Deviation_Update@deviation+3
  8890  0B1A  3000               	movlw	0
  8891  0B1B  00A3               	movwf	Button_Deviation_Update@deviation+2
  8892  0B1C  3000               	movlw	0
  8893  0B1D  00A2               	movwf	Button_Deviation_Update@deviation+1
  8894  0B1E  307F               	movlw	127
  8895  0B1F  00A1               	movwf	Button_Deviation_Update@deviation
  8896  0B20                     l3710:
  8897                           
  8898                           ;mcc_generated_files/mtouch/mtouch_button.c: 405:     if (deviation < ((-1-0x7f)))
  8899  0B20  0020               	movlb	0	; select bank0
  8900  0B21  1FA4               	btfss	Button_Deviation_Update@deviation+3,7
  8901  0B22  2B36               	goto	l3714
  8902  0B23  3080               	movlw	128
  8903  0B24  0221               	subwf	Button_Deviation_Update@deviation,w
  8904  0B25  30FF               	movlw	255
  8905  0B26  3B22               	subwfb	Button_Deviation_Update@deviation+1,w
  8906  0B27  30FF               	movlw	255
  8907  0B28  3B23               	subwfb	Button_Deviation_Update@deviation+2,w
  8908  0B29  30FF               	movlw	255
  8909  0B2A  3B24               	subwfb	Button_Deviation_Update@deviation+3,w
  8910  0B2B  1803               	btfsc	3,0
  8911  0B2C  2B36               	goto	l3714
  8912                           
  8913                           ;mcc_generated_files/mtouch/mtouch_button.c: 406:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 407:         deviation = ((-1-0x7f));
  8914  0B2D  30FF               	movlw	255
  8915  0B2E  0020               	movlb	0	; select bank0
  8916  0B2F  00A4               	movwf	Button_Deviation_Update@deviation+3
  8917  0B30  30FF               	movlw	255
  8918  0B31  00A3               	movwf	Button_Deviation_Update@deviation+2
  8919  0B32  30FF               	movlw	255
  8920  0B33  00A2               	movwf	Button_Deviation_Update@deviation+1
  8921  0B34  3080               	movlw	128
  8922  0B35  00A1               	movwf	Button_Deviation_Update@deviation
  8923  0B36                     l3714:
  8924                           
  8925                           ;mcc_generated_files/mtouch/mtouch_button.c: 410:     button->deviation = (mtouch_button
      +                          _deviation_t)deviation;
  8926  0B36  0020               	movlb	0	; select bank0
  8927  0B37  0821               	movf	Button_Deviation_Update@deviation,w
  8928  0B38  00F0               	movwf	??_Button_Deviation_Update
  8929  0B39  0820               	movf	Button_Deviation_Update@button,w
  8930  0B3A  3E09               	addlw	9
  8931  0B3B  0086               	movwf	6
  8932  0B3C  3001               	movlw	1	; select bank2/3
  8933  0B3D  0087               	movwf	7
  8934  0B3E  0870               	movf	??_Button_Deviation_Update,w
  8935  0B3F  0081               	movwf	1
  8936  0B40  0008               	return
  8937  0B41                     __end_of_Button_Deviation_Update:
  8938                           
  8939                           	psect	text42
  8940  1530                     __ptext42:	
  8941 ;; *************** function _MTOUCH_Button_isPressed *****************
  8942 ;; Defined at:
  8943 ;;		line 366 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;  name            1    wreg     enum E2819
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;  name            1    1[COMMON] enum E2819
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  1    wreg      _Bool 
  8950 ;; Registers used:
  8951 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/1
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8961 ;;Total ram usage:        2 bytes
  8962 ;; Hardware stack levels used:    1
  8963 ;; Hardware stack levels required when called:    5
  8964 ;; This function calls:
  8965 ;;		Nothing
  8966 ;; This function is called by:
  8967 ;;		_StartTouchDetection
  8968 ;;		_StopTouchDetection
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           
  8973                           ;psect for function _MTOUCH_Button_isPressed
  8974  1530                     _MTOUCH_Button_isPressed:
  8975                           
  8976                           ;incstack = 0
  8977                           ; Regs used in _MTOUCH_Button_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0]
  8978                           ;MTOUCH_Button_isPressed@name stored from wreg
  8979  1530  00F1               	movwf	MTOUCH_Button_isPressed@name
  8980                           
  8981                           ;mcc_generated_files/mtouch/mtouch_button.c: 366: _Bool MTOUCH_Button_isPressed(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 367: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 368:     if(name < 2u)
  8982  1531  3002               	movlw	2
  8983  1532  0271               	subwf	MTOUCH_Button_isPressed@name,w
  8984  1533  1803               	skipnc
  8985  1534  2D49               	goto	l4296
  8986                           
  8987                           ;mcc_generated_files/mtouch/mtouch_button.c: 369:         return (_Bool)((mtouch_button[
      +                          name].state == MTOUCH_BUTTON_STATE_pressed) ? 1 : 0);
  8988  1535  0871               	movf	MTOUCH_Button_isPressed@name,w
  8989  1536  00F0               	movwf	??_MTOUCH_Button_isPressed
  8990  1537  3003               	movlw	3
  8991  1538                     u3845:
  8992  1538  35F0               	lslf	??_MTOUCH_Button_isPressed,f
  8993  1539  3EFF               	addlw	-1
  8994  153A  1D03               	skipz
  8995  153B  2D38               	goto	u3845
  8996  153C  3570               	lslf	??_MTOUCH_Button_isPressed,w
  8997  153D  3E22               	addlw	(low ((_mtouch_button| (0+256)+2)))& (0+255)
  8998  153E  0086               	movwf	6
  8999  153F  3001               	movlw	1	; select bank2/3
  9000  1540  0087               	movwf	7
  9001  1541  3002               	movlw	2
  9002  1542  0601               	xorwf	1,w
  9003  1543  1D03               	btfss	3,2
  9004  1544  2D47               	goto	u3850
  9005  1545  3001               	movlw	1
  9006  1546  0008               	return
  9007  1547                     u3850:
  9008  1547  3000               	movlw	0
  9009  1548  0008               	return
  9010  1549                     l4296:
  9011                           
  9012                           ;mcc_generated_files/mtouch/mtouch_button.c: 371:         return 0;
  9013  1549  3000               	movlw	0
  9014  154A  0008               	return
  9015  154B                     __end_of_MTOUCH_Button_isPressed:
  9016                           
  9017                           	psect	text43
  9018  148C                     __ptext43:	
  9019 ;; *************** function _Init_Function *****************
  9020 ;; Defined at:
  9021 ;;		line 78 in file "main.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;		None
  9024 ;; Auto vars:     Size  Location     Type
  9025 ;;		None
  9026 ;; Return value:  Size  Location     Type
  9027 ;;                  1    wreg      void 
  9028 ;; Registers used:
  9029 ;;		wreg, status,2, status,0, pclath, cstack
  9030 ;; Tracked objects:
  9031 ;;		On entry : 0/1
  9032 ;;		On exit  : 1F/2
  9033 ;;		Unchanged: 0/0
  9034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9039 ;;Total ram usage:        0 bytes
  9040 ;; Hardware stack levels used:    1
  9041 ;; Hardware stack levels required when called:    9
  9042 ;; This function calls:
  9043 ;;		_StartStop_AlarmLED
  9044 ;;		_StartStop_AlarmLED_Blink
  9045 ;;		_StartStop_Buzzer
  9046 ;;		_StartStop_Dimmer
  9047 ;;		_StartStop_Fan
  9048 ;; This function is called by:
  9049 ;;		_main
  9050 ;;		_StopTouchDetection
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           
  9055                           ;psect for function _Init_Function
  9056  148C                     _Init_Function:
  9057                           
  9058                           ;main.c: 80:     StartStop_AlarmLED(0);
  9059                           
  9060                           ;incstack = 0
  9061                           ; Regs used in _Init_Function: [wreg+status,2+status,0+pclath+cstack]
  9062  148C  3000               	movlw	0
  9063  148D  3192  22D8  3194   	fcall	_StartStop_AlarmLED
  9064                           
  9065                           ;main.c: 81:     StartStop_AlarmLED_Blink(0);
  9066  1490  3000               	movlw	0
  9067  1491  3193  2330  3194   	fcall	_StartStop_AlarmLED_Blink
  9068                           
  9069                           ;main.c: 82:     StartStop_Fan(0);
  9070  1494  3000               	movlw	0
  9071  1495  3192  22EC  3194   	fcall	_StartStop_Fan
  9072                           
  9073                           ;main.c: 83:     StartStop_Buzzer(0);
  9074  1498  3000               	movlw	0
  9075  1499  3192  22E2  3194   	fcall	_StartStop_Buzzer
  9076                           
  9077                           ;main.c: 84:     StartStop_Dimmer(0);
  9078  149C  3000               	movlw	0
  9079  149D  3194  2477         	fcall	_StartStop_Dimmer
  9080  149F  0022               	movlb	2	; select bank2
  9081  14A0  128E               	bcf	14,5	;volatile
  9082  14A1  0008               	return
  9083  14A2                     __end_of_Init_Function:
  9084                           
  9085                           	psect	text44
  9086  12EC                     __ptext44:	
  9087 ;; *************** function _StartStop_Fan *****************
  9088 ;; Defined at:
  9089 ;;		line 180 in file "main.c"
  9090 ;; Parameters:    Size  Location     Type
  9091 ;;  OnOff           1    wreg     _Bool 
  9092 ;; Auto vars:     Size  Location     Type
  9093 ;;  OnOff           1    0[COMMON] _Bool 
  9094 ;; Return value:  Size  Location     Type
  9095 ;;                  1    wreg      void 
  9096 ;; Registers used:
  9097 ;;		wreg, status,2, status,0
  9098 ;; Tracked objects:
  9099 ;;		On entry : 15/0
  9100 ;;		On exit  : 1F/2
  9101 ;;		Unchanged: 0/0
  9102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9106 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9107 ;;Total ram usage:        1 bytes
  9108 ;; Hardware stack levels used:    1
  9109 ;; Hardware stack levels required when called:    5
  9110 ;; This function calls:
  9111 ;;		Nothing
  9112 ;; This function is called by:
  9113 ;;		_Init_Function
  9114 ;;		_StartHeater
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           
  9119                           ;psect for function _StartStop_Fan
  9120  12EC                     _StartStop_Fan:
  9121                           
  9122                           ;incstack = 0
  9123                           ; Regs used in _StartStop_Fan: [wreg+status,2+status,0]
  9124                           ;StartStop_Fan@OnOff stored from wreg
  9125  12EC  00F0               	movwf	StartStop_Fan@OnOff
  9126                           
  9127                           ;main.c: 182:     if (1 == OnOff){
  9128  12ED  0370               	decf	StartStop_Fan@OnOff,w
  9129  12EE  1D03               	btfss	3,2
  9130  12EF  2AF3               	goto	l855
  9131                           
  9132                           ;main.c: 184:         do { LATCbits.LATC3 = 1; } while(0);
  9133  12F0  0022               	movlb	2	; select bank2
  9134  12F1  158E               	bsf	14,3	;volatile
  9135  12F2  0008               	return
  9136  12F3                     l855:	
  9137                           ;main.c: 188:         do { LATCbits.LATC3 = 0; } while(0);
  9138                           
  9139  12F3  0022               	movlb	2	; select bank2
  9140  12F4  118E               	bcf	14,3	;volatile
  9141  12F5  0008               	return
  9142  12F6                     __end_of_StartStop_Fan:
  9143                           
  9144                           	psect	text45
  9145  1477                     __ptext45:	
  9146 ;; *************** function _StartStop_Dimmer *****************
  9147 ;; Defined at:
  9148 ;;		line 208 in file "main.c"
  9149 ;; Parameters:    Size  Location     Type
  9150 ;;  OnOff           1    wreg     _Bool 
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;  OnOff           1   66[BANK0 ] _Bool 
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  1    wreg      void 
  9155 ;; Registers used:
  9156 ;;		wreg, status,2, status,0, pclath, cstack
  9157 ;; Tracked objects:
  9158 ;;		On entry : 15/0
  9159 ;;		On exit  : 1F/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9163 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9165 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9166 ;;Total ram usage:        1 bytes
  9167 ;; Hardware stack levels used:    1
  9168 ;; Hardware stack levels required when called:    8
  9169 ;; This function calls:
  9170 ;;		_SetDimmer
  9171 ;; This function is called by:
  9172 ;;		_Init_Function
  9173 ;;		_StartHeater
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           
  9178                           ;psect for function _StartStop_Dimmer
  9179  1477                     _StartStop_Dimmer:
  9180                           
  9181                           ;incstack = 0
  9182                           ; Regs used in _StartStop_Dimmer: [wreg+status,2+status,0+pclath+cstack]
  9183                           ;StartStop_Dimmer@OnOff stored from wreg
  9184  1477  0020               	movlb	0	; select bank0
  9185  1478  00E2               	movwf	StartStop_Dimmer@OnOff
  9186                           
  9187                           ;main.c: 210:     if (1 == OnOff){
  9188  1479  0362               	decf	StartStop_Dimmer@OnOff,w
  9189  147A  1D03               	btfss	3,2
  9190  147B  2C7F               	goto	l4250
  9191                           
  9192                           ;main.c: 212:         DimmerStatusFlag_g = 1;
  9193  147C  01E8               	clrf	_DimmerStatusFlag_g
  9194  147D  0AE8               	incf	_DimmerStatusFlag_g,f
  9195                           
  9196                           ;main.c: 213:     }
  9197  147E  0008               	return
  9198  147F                     l4250:
  9199                           
  9200                           ;main.c: 216:         SetDimmer(3);
  9201  147F  3040               	movlw	64
  9202  1480  00DD               	movwf	SetDimmer@dim_percentage+3
  9203  1481  3040               	movlw	64
  9204  1482  00DC               	movwf	SetDimmer@dim_percentage+2
  9205  1483  3000               	movlw	0
  9206  1484  00DB               	movwf	SetDimmer@dim_percentage+1
  9207  1485  3000               	movlw	0
  9208  1486  00DA               	movwf	SetDimmer@dim_percentage
  9209  1487  318A  223E         	fcall	_SetDimmer
  9210                           
  9211                           ;main.c: 217:         DimmerStatusFlag_g = 0;
  9212  1489  0020               	movlb	0	; select bank0
  9213  148A  01E8               	clrf	_DimmerStatusFlag_g
  9214  148B  0008               	return
  9215  148C                     __end_of_StartStop_Dimmer:
  9216                           
  9217                           	psect	text46
  9218  0A3E                     __ptext46:	
  9219 ;; *************** function _SetDimmer *****************
  9220 ;; Defined at:
  9221 ;;		line 262 in file "main.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;  dim_percenta    4   58[BANK0 ] float 
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;  TRIAC_off_du    4   62[BANK0 ] float 
  9226 ;; Return value:  Size  Location     Type
  9227 ;;                  1    wreg      void 
  9228 ;; Registers used:
  9229 ;;		wreg, status,2, status,0, pclath, cstack
  9230 ;; Tracked objects:
  9231 ;;		On entry : 1F/0
  9232 ;;		On exit  : 1F/1
  9233 ;;		Unchanged: 0/0
  9234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9235 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9238 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;Total ram usage:        8 bytes
  9240 ;; Hardware stack levels used:    1
  9241 ;; Hardware stack levels required when called:    7
  9242 ;; This function calls:
  9243 ;;		___fldiv
  9244 ;;		___flmul
  9245 ;;		___flsub
  9246 ;;		___fltol
  9247 ;; This function is called by:
  9248 ;;		_StartStop_Dimmer
  9249 ;;		_StartHeater
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           
  9254                           ;psect for function _SetDimmer
  9255  0A3E                     _SetDimmer:
  9256                           
  9257                           ;main.c: 269:     TRIAC_off_duration_ms = HalfCycleACDuration_const - (5.0 * dim_percent
      +                          age / 50.0);
  9258                           
  9259                           ;incstack = 0
  9260                           ; Regs used in _SetDimmer: [wreg+status,2+status,0+pclath+cstack]
  9261  0A3E  3042               	movlw	66
  9262  0A3F  00B8               	movwf	___fldiv@a+3
  9263  0A40  3048               	movlw	72
  9264  0A41  00B7               	movwf	___fldiv@a+2
  9265  0A42  3000               	movlw	0
  9266  0A43  00B6               	movwf	___fldiv@a+1
  9267  0A44  3000               	movlw	0
  9268  0A45  00B5               	movwf	___fldiv@a
  9269  0A46  3040               	movlw	64
  9270  0A47  00A3               	movwf	___flmul@b+3
  9271  0A48  30A0               	movlw	160
  9272  0A49  00A2               	movwf	___flmul@b+2
  9273  0A4A  3000               	movlw	0
  9274  0A4B  00A1               	movwf	___flmul@b+1
  9275  0A4C  3000               	movlw	0
  9276  0A4D  00A0               	movwf	___flmul@b
  9277  0A4E  085D               	movf	SetDimmer@dim_percentage+3,w
  9278  0A4F  00A7               	movwf	___flmul@a+3
  9279  0A50  085C               	movf	SetDimmer@dim_percentage+2,w
  9280  0A51  00A6               	movwf	___flmul@a+2
  9281  0A52  085B               	movf	SetDimmer@dim_percentage+1,w
  9282  0A53  00A5               	movwf	___flmul@a+1
  9283  0A54  085A               	movf	SetDimmer@dim_percentage,w
  9284  0A55  00A4               	movwf	___flmul@a
  9285  0A56  318D  25E8  318A   	fcall	___flmul
  9286  0A59  0823               	movf	?___flmul+3,w
  9287  0A5A  00BC               	movwf	___fldiv@b+3
  9288  0A5B  0822               	movf	?___flmul+2,w
  9289  0A5C  00BB               	movwf	___fldiv@b+2
  9290  0A5D  0821               	movf	?___flmul+1,w
  9291  0A5E  00BA               	movwf	___fldiv@b+1
  9292  0A5F  0820               	movf	?___flmul,w
  9293  0A60  00B9               	movwf	___fldiv@b
  9294  0A61  318C  246F  318A   	fcall	___fldiv
  9295  0A64  0838               	movf	?___fldiv+3,w
  9296  0A65  00D2               	movwf	___flsub@a+3
  9297  0A66  0837               	movf	?___fldiv+2,w
  9298  0A67  00D1               	movwf	___flsub@a+2
  9299  0A68  0836               	movf	?___fldiv+1,w
  9300  0A69  00D0               	movwf	___flsub@a+1
  9301  0A6A  0835               	movf	?___fldiv,w
  9302  0A6B  00CF               	movwf	___flsub@a
  9303  0A6C  3041               	movlw	65
  9304  0A6D  00D6               	movwf	___flsub@b+3
  9305  0A6E  3020               	movlw	32
  9306  0A6F  00D5               	movwf	___flsub@b+2
  9307  0A70  3000               	movlw	0
  9308  0A71  00D4               	movwf	___flsub@b+1
  9309  0A72  3000               	movlw	0
  9310  0A73  00D3               	movwf	___flsub@b
  9311  0A74  3195  254B  318A   	fcall	___flsub
  9312  0A77  0852               	movf	?___flsub+3,w
  9313  0A78  00E1               	movwf	SetDimmer@TRIAC_off_duration_ms+3
  9314  0A79  0851               	movf	?___flsub+2,w
  9315  0A7A  00E0               	movwf	SetDimmer@TRIAC_off_duration_ms+2
  9316  0A7B  0850               	movf	?___flsub+1,w
  9317  0A7C  00DF               	movwf	SetDimmer@TRIAC_off_duration_ms+1
  9318  0A7D  084F               	movf	?___flsub,w
  9319  0A7E  00DE               	movwf	SetDimmer@TRIAC_off_duration_ms
  9320                           
  9321                           ;main.c: 270:     tmr2_required_counter_steps_g = (TRIAC_off_duration_ms * 1000) / TMR2_
      +                          Timer_Period_const;
  9322  0A7F  0861               	movf	SetDimmer@TRIAC_off_duration_ms+3,w
  9323  0A80  00A7               	movwf	___flmul@a+3
  9324  0A81  0860               	movf	SetDimmer@TRIAC_off_duration_ms+2,w
  9325  0A82  00A6               	movwf	___flmul@a+2
  9326  0A83  085F               	movf	SetDimmer@TRIAC_off_duration_ms+1,w
  9327  0A84  00A5               	movwf	___flmul@a+1
  9328  0A85  085E               	movf	SetDimmer@TRIAC_off_duration_ms,w
  9329  0A86  00A4               	movwf	___flmul@a
  9330  0A87  3044               	movlw	68
  9331  0A88  00A3               	movwf	___flmul@b+3
  9332  0A89  307A               	movlw	122
  9333  0A8A  00A2               	movwf	___flmul@b+2
  9334  0A8B  3000               	movlw	0
  9335  0A8C  00A1               	movwf	___flmul@b+1
  9336  0A8D  3000               	movlw	0
  9337  0A8E  00A0               	movwf	___flmul@b
  9338  0A8F  318D  25E8  318A   	fcall	___flmul
  9339  0A92  0823               	movf	?___flmul+3,w
  9340  0A93  00BC               	movwf	___fldiv@b+3
  9341  0A94  0822               	movf	?___flmul+2,w
  9342  0A95  00BB               	movwf	___fldiv@b+2
  9343  0A96  0821               	movf	?___flmul+1,w
  9344  0A97  00BA               	movwf	___fldiv@b+1
  9345  0A98  0820               	movf	?___flmul,w
  9346  0A99  00B9               	movwf	___fldiv@b
  9347  0A9A  3042               	movlw	66
  9348  0A9B  00B8               	movwf	___fldiv@a+3
  9349  0A9C  30C8               	movlw	200
  9350  0A9D  00B7               	movwf	___fldiv@a+2
  9351  0A9E  3000               	movlw	0
  9352  0A9F  00B6               	movwf	___fldiv@a+1
  9353  0AA0  3000               	movlw	0
  9354  0AA1  00B5               	movwf	___fldiv@a
  9355  0AA2  318C  246F  318A   	fcall	___fldiv
  9356  0AA5  0838               	movf	?___fldiv+3,w
  9357  0AA6  00D2               	movwf	___fltol@f1+3
  9358  0AA7  0837               	movf	?___fldiv+2,w
  9359  0AA8  00D1               	movwf	___fltol@f1+2
  9360  0AA9  0836               	movf	?___fldiv+1,w
  9361  0AAA  00D0               	movwf	___fltol@f1+1
  9362  0AAB  0835               	movf	?___fldiv,w
  9363  0AAC  00CF               	movwf	___fltol@f1
  9364  0AAD  3189  21D9         	fcall	___fltol
  9365  0AAF  0850               	movf	?___fltol+1,w
  9366  0AB0  0021               	movlb	1	; select bank1
  9367  0AB1  00CF               	movwf	(_tmr2_required_counter_steps_g+1)^(0+128)
  9368  0AB2  0020               	movlb	0	; select bank0
  9369  0AB3  084F               	movf	?___fltol,w
  9370  0AB4  0021               	movlb	1	; select bank1
  9371  0AB5  00CE               	movwf	_tmr2_required_counter_steps_g^(0+128)
  9372  0AB6  0008               	return
  9373  0AB7                     __end_of_SetDimmer:
  9374                           
  9375                           	psect	text47
  9376  09D9                     __ptext47:	
  9377 ;; *************** function ___fltol *****************
  9378 ;; Defined at:
  9379 ;;		line 43 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/fltol.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;  f1              4   47[BANK0 ] void 
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;  exp1            1   57[BANK0 ] unsigned char 
  9384 ;;  sign1           1   56[BANK0 ] unsigned char 
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  4   47[BANK0 ] long 
  9387 ;; Registers used:
  9388 ;;		wreg, status,2, status,0
  9389 ;; Tracked objects:
  9390 ;;		On entry : 1F/0
  9391 ;;		On exit  : 1F/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9394 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9395 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9396 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9397 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9398 ;;Total ram usage:       11 bytes
  9399 ;; Hardware stack levels used:    1
  9400 ;; Hardware stack levels required when called:    5
  9401 ;; This function calls:
  9402 ;;		Nothing
  9403 ;; This function is called by:
  9404 ;;		_SetDimmer
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           
  9409                           ;psect for function ___fltol
  9410  09D9                     ___fltol:
  9411                           
  9412                           ;incstack = 0
  9413                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9414  09D9  1003               	clrc
  9415  09DA  0D51               	rlf	___fltol@f1+2,w
  9416  09DB  0D52               	rlf	___fltol@f1+3,w
  9417  09DC  00D3               	movwf	??___fltol
  9418  09DD  0853               	movf	??___fltol,w
  9419  09DE  00D9               	movwf	___fltol@exp1
  9420  09DF  0859               	movf	___fltol@exp1,w
  9421  09E0  1D03               	btfss	3,2
  9422  09E1  29EB               	goto	l3770
  9423  09E2                     l3766:
  9424  09E2  3000               	movlw	0
  9425  09E3  00D2               	movwf	?___fltol+3
  9426  09E4  3000               	movlw	0
  9427  09E5  00D1               	movwf	?___fltol+2
  9428  09E6  3000               	movlw	0
  9429  09E7  00D0               	movwf	?___fltol+1
  9430  09E8  3000               	movlw	0
  9431  09E9  00CF               	movwf	?___fltol
  9432  09EA  0008               	return
  9433  09EB                     l3770:
  9434  09EB  084F               	movf	___fltol@f1,w
  9435  09EC  00D3               	movwf	??___fltol
  9436  09ED  0850               	movf	___fltol@f1+1,w
  9437  09EE  00D4               	movwf	??___fltol+1
  9438  09EF  0851               	movf	___fltol@f1+2,w
  9439  09F0  00D5               	movwf	??___fltol+2
  9440  09F1  0852               	movf	___fltol@f1+3,w
  9441  09F2  00D6               	movwf	??___fltol+3
  9442  09F3  301F               	movlw	31
  9443  09F4                     u2995:
  9444  09F4  36D6               	lsrf	??___fltol+3,f
  9445  09F5  0CD5               	rrf	??___fltol+2,f
  9446  09F6  0CD4               	rrf	??___fltol+1,f
  9447  09F7  0CD3               	rrf	??___fltol,f
  9448  09F8  0B89               	decfsz	9,f
  9449  09F9  29F4               	goto	u2995
  9450  09FA  0853               	movf	??___fltol,w
  9451  09FB  00D7               	movwf	??___fltol+4
  9452  09FC  0857               	movf	??___fltol+4,w
  9453  09FD  00D8               	movwf	___fltol@sign1
  9454  09FE  17D1               	bsf	___fltol@f1+2,7
  9455  09FF  30FF               	movlw	255
  9456  0A00  05CF               	andwf	___fltol@f1,f
  9457  0A01  30FF               	movlw	255
  9458  0A02  05D0               	andwf	___fltol@f1+1,f
  9459  0A03  30FF               	movlw	255
  9460  0A04  05D1               	andwf	___fltol@f1+2,f
  9461  0A05  3000               	movlw	0
  9462  0A06  05D2               	andwf	___fltol@f1+3,f
  9463  0A07  3096               	movlw	150
  9464  0A08  02D9               	subwf	___fltol@exp1,f
  9465  0A09  1FD9               	btfss	___fltol@exp1,7
  9466  0A0A  2A1E               	goto	l3788
  9467  0A0B  0859               	movf	___fltol@exp1,w
  9468  0A0C  3A80               	xorlw	128
  9469  0A0D  3E97               	addlw	151
  9470  0A0E  1C03               	btfss	3,0
  9471  0A0F  29E2               	goto	l3766
  9472  0A10                     l3786:
  9473  0A10  3001               	movlw	1
  9474  0A11                     u3025:
  9475  0A11  36D2               	lsrf	___fltol@f1+3,f
  9476  0A12  0CD1               	rrf	___fltol@f1+2,f
  9477  0A13  0CD0               	rrf	___fltol@f1+1,f
  9478  0A14  0CCF               	rrf	___fltol@f1,f
  9479  0A15  0B89               	decfsz	9,f
  9480  0A16  2A11               	goto	u3025
  9481  0A17  3001               	movlw	1
  9482  0A18  00D3               	movwf	??___fltol
  9483  0A19  0853               	movf	??___fltol,w
  9484  0A1A  07D9               	addwf	___fltol@exp1,f
  9485  0A1B  1903               	btfsc	3,2
  9486  0A1C  2A2F               	goto	l3796
  9487  0A1D  2A10               	goto	l3786
  9488  0A1E                     l3788:
  9489  0A1E  3020               	movlw	32
  9490  0A1F  0259               	subwf	___fltol@exp1,w
  9491  0A20  1803               	btfsc	3,0
  9492  0A21  29E2               	goto	l3766
  9493  0A22                     l1288:
  9494  0A22  0859               	movf	___fltol@exp1,w
  9495  0A23  1903               	btfsc	3,2
  9496  0A24  2A2F               	goto	l3796
  9497  0A25  3001               	movlw	1
  9498  0A26                     u3055:
  9499  0A26  35CF               	lslf	___fltol@f1,f
  9500  0A27  0DD0               	rlf	___fltol@f1+1,f
  9501  0A28  0DD1               	rlf	___fltol@f1+2,f
  9502  0A29  0DD2               	rlf	___fltol@f1+3,f
  9503  0A2A  0B89               	decfsz	9,f
  9504  0A2B  2A26               	goto	u3055
  9505  0A2C  3001               	movlw	1
  9506  0A2D  02D9               	subwf	___fltol@exp1,f
  9507  0A2E  2A22               	goto	l1288
  9508  0A2F                     l3796:
  9509  0A2F  0858               	movf	___fltol@sign1,w
  9510  0A30  1903               	btfsc	3,2
  9511  0A31  0008               	return
  9512  0A32  09CF               	comf	___fltol@f1,f
  9513  0A33  09D0               	comf	___fltol@f1+1,f
  9514  0A34  09D1               	comf	___fltol@f1+2,f
  9515  0A35  09D2               	comf	___fltol@f1+3,f
  9516  0A36  0ACF               	incf	___fltol@f1,f
  9517  0A37  1903               	skipnz
  9518  0A38  0AD0               	incf	___fltol@f1+1,f
  9519  0A39  1903               	skipnz
  9520  0A3A  0AD1               	incf	___fltol@f1+2,f
  9521  0A3B  1903               	skipnz
  9522  0A3C  0AD2               	incf	___fltol@f1+3,f
  9523  0A3D  0008               	return
  9524  0A3E                     __end_of___fltol:
  9525                           
  9526                           	psect	text48
  9527  154B                     __ptext48:	
  9528 ;; *************** function ___flsub *****************
  9529 ;; Defined at:
  9530 ;;		line 242 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  a               4   47[BANK0 ] long 
  9533 ;;  b               4   51[BANK0 ] long 
  9534 ;; Auto vars:     Size  Location     Type
  9535 ;;		None
  9536 ;; Return value:  Size  Location     Type
  9537 ;;                  4   47[BANK0 ] long 
  9538 ;; Registers used:
  9539 ;;		wreg, status,2, status,0, pclath, cstack
  9540 ;; Tracked objects:
  9541 ;;		On entry : 1F/0
  9542 ;;		On exit  : 1F/0
  9543 ;;		Unchanged: 0/0
  9544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9545 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9548 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9549 ;;Total ram usage:        8 bytes
  9550 ;; Hardware stack levels used:    1
  9551 ;; Hardware stack levels required when called:    6
  9552 ;; This function calls:
  9553 ;;		___fladd
  9554 ;; This function is called by:
  9555 ;;		_SetDimmer
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           
  9560                           ;psect for function ___flsub
  9561  154B                     ___flsub:
  9562                           
  9563                           ;incstack = 0
  9564                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  9565  154B  3080               	movlw	128
  9566  154C  06D2               	xorwf	___flsub@a+3,f
  9567  154D  0856               	movf	___flsub@b+3,w
  9568  154E  00F3               	movwf	___fladd@b+3
  9569  154F  0855               	movf	___flsub@b+2,w
  9570  1550  00F2               	movwf	___fladd@b+2
  9571  1551  0854               	movf	___flsub@b+1,w
  9572  1552  00F1               	movwf	___fladd@b+1
  9573  1553  0853               	movf	___flsub@b,w
  9574  1554  00F0               	movwf	___fladd@b
  9575  1555  0852               	movf	___flsub@a+3,w
  9576  1556  00F7               	movwf	___fladd@a+3
  9577  1557  0851               	movf	___flsub@a+2,w
  9578  1558  00F6               	movwf	___fladd@a+2
  9579  1559  0850               	movf	___flsub@a+1,w
  9580  155A  00F5               	movwf	___fladd@a+1
  9581  155B  084F               	movf	___flsub@a,w
  9582  155C  00F4               	movwf	___fladd@a
  9583  155D  3185  25F5         	fcall	___fladd
  9584  155F  0873               	movf	?___fladd+3,w
  9585  1560  0020               	movlb	0	; select bank0
  9586  1561  00D2               	movwf	?___flsub+3
  9587  1562  0872               	movf	?___fladd+2,w
  9588  1563  00D1               	movwf	?___flsub+2
  9589  1564  0871               	movf	?___fladd+1,w
  9590  1565  00D0               	movwf	?___flsub+1
  9591  1566  0870               	movf	?___fladd,w
  9592  1567  00CF               	movwf	?___flsub
  9593  1568  0008               	return
  9594  1569                     __end_of___flsub:
  9595                           
  9596                           	psect	text49
  9597  05F5                     __ptext49:	
  9598 ;; *************** function ___fladd *****************
  9599 ;; Defined at:
  9600 ;;		line 10 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  9601 ;; Parameters:    Size  Location     Type
  9602 ;;  b               4    0[COMMON] long 
  9603 ;;  a               4    4[COMMON] long 
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;  grs             1   11[COMMON] unsigned char 
  9606 ;;  bexp            1   10[COMMON] unsigned char 
  9607 ;;  aexp            1    9[COMMON] unsigned char 
  9608 ;;  signs           1    8[COMMON] unsigned char 
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  4    0[COMMON] unsigned char 
  9611 ;; Registers used:
  9612 ;;		wreg, status,2, status,0
  9613 ;; Tracked objects:
  9614 ;;		On entry : 1F/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9618 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9620 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9621 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9622 ;;Total ram usage:       20 bytes
  9623 ;; Hardware stack levels used:    1
  9624 ;; Hardware stack levels required when called:    5
  9625 ;; This function calls:
  9626 ;;		Nothing
  9627 ;; This function is called by:
  9628 ;;		___flsub
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632                           
  9633                           ;psect for function ___fladd
  9634  05F5                     ___fladd:
  9635                           
  9636                           ;incstack = 0
  9637                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9638  05F5  0873               	movf	___fladd@b+3,w
  9639  05F6  3980               	andlw	128
  9640  05F7  00A0               	movwf	??___fladd
  9641  05F8  0820               	movf	??___fladd,w
  9642  05F9  00F8               	movwf	___fladd@signs
  9643  05FA  3573               	lslf	___fladd@b+3,w
  9644  05FB  00A0               	movwf	??___fladd
  9645  05FC  0820               	movf	??___fladd,w
  9646  05FD  00FA               	movwf	___fladd@bexp
  9647  05FE  1BF2               	btfsc	___fladd@b+2,7
  9648  05FF  147A               	bsf	___fladd@bexp,0
  9649  0600  087A               	movf	___fladd@bexp,w
  9650  0601  1903               	btfsc	3,2
  9651  0602  2E11               	goto	l3434
  9652  0603  0A7A               	incf	___fladd@bexp,w
  9653  0604  1D03               	btfss	3,2
  9654  0605  2E0E               	goto	l3430
  9655  0606  3000               	movlw	0
  9656  0607  00F3               	movwf	___fladd@b+3
  9657  0608  3000               	movlw	0
  9658  0609  00F2               	movwf	___fladd@b+2
  9659  060A  3000               	movlw	0
  9660  060B  00F1               	movwf	___fladd@b+1
  9661  060C  3000               	movlw	0
  9662  060D  00F0               	movwf	___fladd@b
  9663  060E                     l3430:
  9664  060E  17F2               	bsf	___fladd@b+2,7
  9665  060F  01F3               	clrf	___fladd@b+3
  9666  0610  2E19               	goto	l3436
  9667  0611                     l3434:
  9668  0611  3000               	movlw	0
  9669  0612  00F3               	movwf	___fladd@b+3
  9670  0613  3000               	movlw	0
  9671  0614  00F2               	movwf	___fladd@b+2
  9672  0615  3000               	movlw	0
  9673  0616  00F1               	movwf	___fladd@b+1
  9674  0617  3000               	movlw	0
  9675  0618  00F0               	movwf	___fladd@b
  9676  0619                     l3436:
  9677  0619  0877               	movf	___fladd@a+3,w
  9678  061A  3980               	andlw	128
  9679  061B  00A0               	movwf	??___fladd
  9680  061C  0820               	movf	??___fladd,w
  9681  061D  00F9               	movwf	___fladd@aexp
  9682  061E  0879               	movf	___fladd@aexp,w
  9683  061F  0678               	xorwf	___fladd@signs,w
  9684  0620  1D03               	btfss	3,2
  9685  0621  1778               	bsf	___fladd@signs,6
  9686  0622  3577               	lslf	___fladd@a+3,w
  9687  0623  00A0               	movwf	??___fladd
  9688  0624  0820               	movf	??___fladd,w
  9689  0625  00F9               	movwf	___fladd@aexp
  9690  0626  1BF6               	btfsc	___fladd@a+2,7
  9691  0627  1479               	bsf	___fladd@aexp,0
  9692  0628  0879               	movf	___fladd@aexp,w
  9693  0629  1903               	btfsc	3,2
  9694  062A  2E39               	goto	l3458
  9695  062B  0A79               	incf	___fladd@aexp,w
  9696  062C  1D03               	btfss	3,2
  9697  062D  2E36               	goto	l3454
  9698  062E  3000               	movlw	0
  9699  062F  00F7               	movwf	___fladd@a+3
  9700  0630  3000               	movlw	0
  9701  0631  00F6               	movwf	___fladd@a+2
  9702  0632  3000               	movlw	0
  9703  0633  00F5               	movwf	___fladd@a+1
  9704  0634  3000               	movlw	0
  9705  0635  00F4               	movwf	___fladd@a
  9706  0636                     l3454:
  9707  0636  17F6               	bsf	___fladd@a+2,7
  9708  0637  01F7               	clrf	___fladd@a+3
  9709  0638  2E41               	goto	l1388
  9710  0639                     l3458:
  9711  0639  3000               	movlw	0
  9712  063A  00F7               	movwf	___fladd@a+3
  9713  063B  3000               	movlw	0
  9714  063C  00F6               	movwf	___fladd@a+2
  9715  063D  3000               	movlw	0
  9716  063E  00F5               	movwf	___fladd@a+1
  9717  063F  3000               	movlw	0
  9718  0640  00F4               	movwf	___fladd@a
  9719  0641                     l1388:
  9720  0641  087A               	movf	___fladd@bexp,w
  9721  0642  0279               	subwf	___fladd@aexp,w
  9722  0643  1803               	skipnc
  9723  0644  2E87               	goto	l3494
  9724  0645  1F78               	btfss	___fladd@signs,6
  9725  0646  2E4B               	goto	l3464
  9726  0647  3080               	movlw	128
  9727  0648  00A0               	movwf	??___fladd
  9728  0649  0820               	movf	??___fladd,w
  9729  064A  06F8               	xorwf	___fladd@signs,f
  9730  064B                     l3464:
  9731  064B  087A               	movf	___fladd@bexp,w
  9732  064C  00A0               	movwf	??___fladd
  9733  064D  0820               	movf	??___fladd,w
  9734  064E  00FB               	movwf	___fladd@grs
  9735  064F  0879               	movf	___fladd@aexp,w
  9736  0650  00A0               	movwf	??___fladd
  9737  0651  0820               	movf	??___fladd,w
  9738  0652  00FA               	movwf	___fladd@bexp
  9739  0653  087B               	movf	___fladd@grs,w
  9740  0654  00A0               	movwf	??___fladd
  9741  0655  0820               	movf	??___fladd,w
  9742  0656  00F9               	movwf	___fladd@aexp
  9743  0657  0870               	movf	___fladd@b,w
  9744  0658  00A0               	movwf	??___fladd
  9745  0659  0820               	movf	??___fladd,w
  9746  065A  00FB               	movwf	___fladd@grs
  9747  065B  0874               	movf	___fladd@a,w
  9748  065C  00A0               	movwf	??___fladd
  9749  065D  0820               	movf	??___fladd,w
  9750  065E  00F0               	movwf	___fladd@b
  9751  065F  087B               	movf	___fladd@grs,w
  9752  0660  00A0               	movwf	??___fladd
  9753  0661  0820               	movf	??___fladd,w
  9754  0662  00F4               	movwf	___fladd@a
  9755  0663  0871               	movf	___fladd@b+1,w
  9756  0664  00A0               	movwf	??___fladd
  9757  0665  0820               	movf	??___fladd,w
  9758  0666  00FB               	movwf	___fladd@grs
  9759  0667  0875               	movf	___fladd@a+1,w
  9760  0668  00A0               	movwf	??___fladd
  9761  0669  0820               	movf	??___fladd,w
  9762  066A  00F1               	movwf	___fladd@b+1
  9763  066B  087B               	movf	___fladd@grs,w
  9764  066C  00A0               	movwf	??___fladd
  9765  066D  0820               	movf	??___fladd,w
  9766  066E  00F5               	movwf	___fladd@a+1
  9767  066F  0872               	movf	___fladd@b+2,w
  9768  0670  00A0               	movwf	??___fladd
  9769  0671  0820               	movf	??___fladd,w
  9770  0672  00FB               	movwf	___fladd@grs
  9771  0673  0876               	movf	___fladd@a+2,w
  9772  0674  00A0               	movwf	??___fladd
  9773  0675  0820               	movf	??___fladd,w
  9774  0676  00F2               	movwf	___fladd@b+2
  9775  0677  087B               	movf	___fladd@grs,w
  9776  0678  00A0               	movwf	??___fladd
  9777  0679  0820               	movf	??___fladd,w
  9778  067A  00F6               	movwf	___fladd@a+2
  9779  067B  0873               	movf	___fladd@b+3,w
  9780  067C  00A0               	movwf	??___fladd
  9781  067D  0820               	movf	??___fladd,w
  9782  067E  00FB               	movwf	___fladd@grs
  9783  067F  0877               	movf	___fladd@a+3,w
  9784  0680  00A0               	movwf	??___fladd
  9785  0681  0820               	movf	??___fladd,w
  9786  0682  00F3               	movwf	___fladd@b+3
  9787  0683  087B               	movf	___fladd@grs,w
  9788  0684  00A0               	movwf	??___fladd
  9789  0685  0820               	movf	??___fladd,w
  9790  0686  00F7               	movwf	___fladd@a+3
  9791  0687                     l3494:
  9792  0687  01FB               	clrf	___fladd@grs
  9793  0688  0879               	movf	___fladd@aexp,w
  9794  0689  00A0               	movwf	??___fladd
  9795  068A  01A1               	clrf	??___fladd+1
  9796  068B  0821               	movf	??___fladd+1,w
  9797  068C  00A3               	movwf	??___fladd+3
  9798  068D  087A               	movf	___fladd@bexp,w
  9799  068E  0220               	subwf	??___fladd,w
  9800  068F  00A2               	movwf	??___fladd+2
  9801  0690  1C03               	skipc
  9802  0691  03A3               	decf	??___fladd+3,f
  9803  0692  0823               	movf	??___fladd+3,w
  9804  0693  3A80               	xorlw	128
  9805  0694  00A4               	movwf	??___fladd+4
  9806  0695  3080               	movlw	128
  9807  0696  0224               	subwf	??___fladd+4,w
  9808  0697  1D03               	skipz
  9809  0698  2E9B               	goto	u2385
  9810  0699  301A               	movlw	26
  9811  069A  0222               	subwf	??___fladd+2,w
  9812  069B                     u2385:
  9813  069B  1C03               	skipc
  9814  069C  2ED1               	goto	l3512
  9815  069D  0873               	movf	___fladd@b+3,w
  9816  069E  0472               	iorwf	___fladd@b+2,w
  9817  069F  0471               	iorwf	___fladd@b+1,w
  9818  06A0  0470               	iorwf	___fladd@b,w
  9819  06A1  1903               	btfsc	3,2
  9820  06A2  2EA5               	goto	u2390
  9821  06A3  3001               	movlw	1
  9822  06A4  2EA6               	goto	u2400
  9823  06A5                     u2390:
  9824  06A5  3000               	movlw	0
  9825  06A6                     u2400:
  9826  06A6  0020               	movlb	0	; select bank0
  9827  06A7  00A0               	movwf	??___fladd
  9828  06A8  0820               	movf	??___fladd,w
  9829  06A9  00FB               	movwf	___fladd@grs
  9830  06AA  3000               	movlw	0
  9831  06AB  00F3               	movwf	___fladd@b+3
  9832  06AC  3000               	movlw	0
  9833  06AD  00F2               	movwf	___fladd@b+2
  9834  06AE  3000               	movlw	0
  9835  06AF  00F1               	movwf	___fladd@b+1
  9836  06B0  3000               	movlw	0
  9837  06B1  00F0               	movwf	___fladd@b
  9838  06B2  0879               	movf	___fladd@aexp,w
  9839  06B3  00A0               	movwf	??___fladd
  9840  06B4  0820               	movf	??___fladd,w
  9841  06B5  00FA               	movwf	___fladd@bexp
  9842  06B6  2ED5               	goto	l1392
  9843  06B7                     l1394:
  9844  06B7  1C7B               	btfss	___fladd@grs,0
  9845  06B8  2EC0               	goto	l3502
  9846  06B9  367B               	lsrf	___fladd@grs,w
  9847  06BA  3801               	iorlw	1
  9848  06BB  0020               	movlb	0	; select bank0
  9849  06BC  00A0               	movwf	??___fladd
  9850  06BD  0820               	movf	??___fladd,w
  9851  06BE  00FB               	movwf	___fladd@grs
  9852  06BF  2EC2               	goto	l3504
  9853  06C0                     l3502:
  9854  06C0  1003               	clrc
  9855  06C1  0CFB               	rrf	___fladd@grs,f
  9856  06C2                     l3504:
  9857  06C2  1870               	btfsc	___fladd@b,0
  9858  06C3  17FB               	bsf	___fladd@grs,7
  9859  06C4  3001               	movlw	1
  9860  06C5  0020               	movlb	0	; select bank0
  9861  06C6  00A0               	movwf	??___fladd
  9862  06C7                     u2435:
  9863  06C7  37F3               	asrf	___fladd@b+3,f
  9864  06C8  0CF2               	rrf	___fladd@b+2,f
  9865  06C9  0CF1               	rrf	___fladd@b+1,f
  9866  06CA  0CF0               	rrf	___fladd@b,f
  9867  06CB  0BA0               	decfsz	??___fladd& (0+127),f
  9868  06CC  2EC7               	goto	u2435
  9869  06CD  3001               	movlw	1
  9870  06CE  00A0               	movwf	??___fladd
  9871  06CF  0820               	movf	??___fladd,w
  9872  06D0  07FA               	addwf	___fladd@bexp,f
  9873  06D1                     l3512:
  9874  06D1  0879               	movf	___fladd@aexp,w
  9875  06D2  027A               	subwf	___fladd@bexp,w
  9876  06D3  1C03               	skipc
  9877  06D4  2EB7               	goto	l1394
  9878  06D5                     l1392:
  9879  06D5  1B78               	btfsc	___fladd@signs,6
  9880  06D6  2F08               	goto	l3538
  9881  06D7  087A               	movf	___fladd@bexp,w
  9882  06D8  1D03               	btfss	3,2
  9883  06D9  2EE3               	goto	l3520
  9884  06DA  3000               	movlw	0
  9885  06DB  00F3               	movwf	?___fladd+3
  9886  06DC  3000               	movlw	0
  9887  06DD  00F2               	movwf	?___fladd+2
  9888  06DE  3000               	movlw	0
  9889  06DF  00F1               	movwf	?___fladd+1
  9890  06E0  3000               	movlw	0
  9891  06E1  00F0               	movwf	?___fladd
  9892  06E2  0008               	return
  9893  06E3                     l3520:
  9894  06E3  0874               	movf	___fladd@a,w
  9895  06E4  07F0               	addwf	___fladd@b,f
  9896  06E5  0875               	movf	___fladd@a+1,w
  9897  06E6  3DF1               	addwfc	___fladd@b+1,f
  9898  06E7  0876               	movf	___fladd@a+2,w
  9899  06E8  3DF2               	addwfc	___fladd@b+2,f
  9900  06E9  0877               	movf	___fladd@a+3,w
  9901  06EA  3DF3               	addwfc	___fladd@b+3,f
  9902  06EB  1C73               	btfss	___fladd@b+3,0
  9903  06EC  2F83               	goto	l3572
  9904  06ED  1C7B               	btfss	___fladd@grs,0
  9905  06EE  2EF6               	goto	l3528
  9906  06EF  367B               	lsrf	___fladd@grs,w
  9907  06F0  3801               	iorlw	1
  9908  06F1  0020               	movlb	0	; select bank0
  9909  06F2  00A0               	movwf	??___fladd
  9910  06F3  0820               	movf	??___fladd,w
  9911  06F4  00FB               	movwf	___fladd@grs
  9912  06F5  2EF8               	goto	l3530
  9913  06F6                     l3528:
  9914  06F6  1003               	clrc
  9915  06F7  0CFB               	rrf	___fladd@grs,f
  9916  06F8                     l3530:
  9917  06F8  1870               	btfsc	___fladd@b,0
  9918  06F9  17FB               	bsf	___fladd@grs,7
  9919  06FA  3001               	movlw	1
  9920  06FB  0020               	movlb	0	; select bank0
  9921  06FC  00A0               	movwf	??___fladd
  9922  06FD                     u2505:
  9923  06FD  37F3               	asrf	___fladd@b+3,f
  9924  06FE  0CF2               	rrf	___fladd@b+2,f
  9925  06FF  0CF1               	rrf	___fladd@b+1,f
  9926  0700  0CF0               	rrf	___fladd@b,f
  9927  0701  0BA0               	decfsz	??___fladd& (0+127),f
  9928  0702  2EFD               	goto	u2505
  9929  0703  3001               	movlw	1
  9930  0704  00A0               	movwf	??___fladd
  9931  0705  0820               	movf	??___fladd,w
  9932  0706  07FA               	addwf	___fladd@bexp,f
  9933  0707  2F83               	goto	l3572
  9934  0708                     l3538:
  9935  0708  0873               	movf	___fladd@b+3,w
  9936  0709  3A80               	xorlw	128
  9937  070A  0020               	movlb	0	; select bank0
  9938  070B  00A0               	movwf	??___fladd
  9939  070C  0877               	movf	___fladd@a+3,w
  9940  070D  3A80               	xorlw	128
  9941  070E  0220               	subwf	??___fladd,w
  9942  070F  1D03               	skipz
  9943  0710  2F1B               	goto	u2513
  9944  0711  0876               	movf	___fladd@a+2,w
  9945  0712  0272               	subwf	___fladd@b+2,w
  9946  0713  1D03               	skipz
  9947  0714  2F1B               	goto	u2513
  9948  0715  0875               	movf	___fladd@a+1,w
  9949  0716  0271               	subwf	___fladd@b+1,w
  9950  0717  1D03               	skipz
  9951  0718  2F1B               	goto	u2513
  9952  0719  0874               	movf	___fladd@a,w
  9953  071A  0270               	subwf	___fladd@b,w
  9954  071B                     u2513:
  9955  071B  1803               	skipnc
  9956  071C  2F53               	goto	l3548
  9957  071D  30FF               	movlw	255
  9958  071E  00A0               	movwf	??___fladd
  9959  071F  30FF               	movlw	255
  9960  0720  00A1               	movwf	??___fladd+1
  9961  0721  30FF               	movlw	255
  9962  0722  00A2               	movwf	??___fladd+2
  9963  0723  30FF               	movlw	255
  9964  0724  00A3               	movwf	??___fladd+3
  9965  0725  0870               	movf	___fladd@b,w
  9966  0726  0274               	subwf	___fladd@a,w
  9967  0727  00A4               	movwf	??___fladd+4
  9968  0728  0871               	movf	___fladd@b+1,w
  9969  0729  3B75               	subwfb	___fladd@a+1,w
  9970  072A  00A5               	movwf	??___fladd+5
  9971  072B  0872               	movf	___fladd@b+2,w
  9972  072C  3B76               	subwfb	___fladd@a+2,w
  9973  072D  00A6               	movwf	??___fladd+6
  9974  072E  0873               	movf	___fladd@b+3,w
  9975  072F  3B77               	subwfb	___fladd@a+3,w
  9976  0730  00A7               	movwf	??___fladd+7
  9977  0731  0824               	movf	??___fladd+4,w
  9978  0732  07A0               	addwf	??___fladd,f
  9979  0733  0825               	movf	??___fladd+5,w
  9980  0734  3DA1               	addwfc	??___fladd+1,f
  9981  0735  0826               	movf	??___fladd+6,w
  9982  0736  3DA2               	addwfc	??___fladd+2,f
  9983  0737  0827               	movf	??___fladd+7,w
  9984  0738  3DA3               	addwfc	??___fladd+3,f
  9985  0739  0823               	movf	??___fladd+3,w
  9986  073A  00F3               	movwf	___fladd@b+3
  9987  073B  0822               	movf	??___fladd+2,w
  9988  073C  00F2               	movwf	___fladd@b+2
  9989  073D  0821               	movf	??___fladd+1,w
  9990  073E  00F1               	movwf	___fladd@b+1
  9991  073F  0820               	movf	??___fladd,w
  9992  0740  00F0               	movwf	___fladd@b
  9993  0741  3080               	movlw	128
  9994  0742  00A0               	movwf	??___fladd
  9995  0743  0820               	movf	??___fladd,w
  9996  0744  06F8               	xorwf	___fladd@signs,f
  9997  0745  09FB               	comf	___fladd@grs,f
  9998  0746  0AFB               	incf	___fladd@grs,f
  9999  0747  087B               	movf	___fladd@grs,w
 10000  0748  1D03               	btfss	3,2
 10001  0749  2F5B               	goto	l1409
 10002  074A  3001               	movlw	1
 10003  074B  07F0               	addwf	___fladd@b,f
 10004  074C  3000               	movlw	0
 10005  074D  3DF1               	addwfc	___fladd@b+1,f
 10006  074E  3000               	movlw	0
 10007  074F  3DF2               	addwfc	___fladd@b+2,f
 10008  0750  3000               	movlw	0
 10009  0751  3DF3               	addwfc	___fladd@b+3,f
 10010  0752  2F5B               	goto	l1409
 10011  0753                     l3548:
 10012  0753  0874               	movf	___fladd@a,w
 10013  0754  02F0               	subwf	___fladd@b,f
 10014  0755  0875               	movf	___fladd@a+1,w
 10015  0756  3BF1               	subwfb	___fladd@b+1,f
 10016  0757  0876               	movf	___fladd@a+2,w
 10017  0758  3BF2               	subwfb	___fladd@b+2,f
 10018  0759  0877               	movf	___fladd@a+3,w
 10019  075A  3BF3               	subwfb	___fladd@b+3,f
 10020  075B                     l1409:
 10021  075B  0873               	movf	___fladd@b+3,w
 10022  075C  0472               	iorwf	___fladd@b+2,w
 10023  075D  0471               	iorwf	___fladd@b+1,w
 10024  075E  0470               	iorwf	___fladd@b,w
 10025  075F  1D03               	skipz
 10026  0760  2F81               	goto	l3570
 10027  0761  087B               	movf	___fladd@grs,w
 10028  0762  1D03               	btfss	3,2
 10029  0763  2F81               	goto	l3570
 10030  0764  3000               	movlw	0
 10031  0765  00F3               	movwf	?___fladd+3
 10032  0766  3000               	movlw	0
 10033  0767  00F2               	movwf	?___fladd+2
 10034  0768  3000               	movlw	0
 10035  0769  00F1               	movwf	?___fladd+1
 10036  076A  3000               	movlw	0
 10037  076B  00F0               	movwf	?___fladd
 10038  076C  0008               	return
 10039  076D                     l3556:
 10040  076D  3001               	movlw	1
 10041  076E                     u2555:
 10042  076E  35F0               	lslf	___fladd@b,f
 10043  076F  0DF1               	rlf	___fladd@b+1,f
 10044  0770  0DF2               	rlf	___fladd@b+2,f
 10045  0771  0DF3               	rlf	___fladd@b+3,f
 10046  0772  0B89               	decfsz	9,f
 10047  0773  2F6E               	goto	u2555
 10048  0774  1BFB               	btfsc	___fladd@grs,7
 10049  0775  1470               	bsf	___fladd@b,0
 10050  0776  1C7B               	btfss	___fladd@grs,0
 10051  0777  2F7A               	goto	l3564
 10052  0778  1403               	setc
 10053  0779  2F7B               	goto	L3
 10054  077A                     l3564:
 10055  077A  1003               	clrc
 10056  077B                     L3:
 10057  077B  0DFB               	rlf	___fladd@grs,f
 10058  077C  087A               	movf	___fladd@bexp,w
 10059  077D  1903               	btfsc	3,2
 10060  077E  2F81               	goto	l3570
 10061  077F  3001               	movlw	1
 10062  0780  02FA               	subwf	___fladd@bexp,f
 10063  0781                     l3570:
 10064  0781  1FF2               	btfss	___fladd@b+2,7
 10065  0782  2F6D               	goto	l3556
 10066  0783                     l3572:
 10067  0783  01F9               	clrf	___fladd@aexp
 10068  0784  1FFB               	btfss	___fladd@grs,7
 10069  0785  2F8E               	goto	l3582
 10070  0786  087B               	movf	___fladd@grs,w
 10071  0787  397F               	andlw	127
 10072  0788  1903               	btfsc	3,2
 10073  0789  1870               	btfsc	___fladd@b,0
 10074  078A  2F8C               	goto	l3578
 10075  078B  2F8E               	goto	l3582
 10076  078C                     l3578:
 10077  078C  01F9               	clrf	___fladd@aexp
 10078  078D  0AF9               	incf	___fladd@aexp,f
 10079  078E                     l3582:
 10080  078E  0879               	movf	___fladd@aexp,w
 10081  078F  1903               	btfsc	3,2
 10082  0790  2FBB               	goto	l1422
 10083  0791  3001               	movlw	1
 10084  0792  07F0               	addwf	___fladd@b,f
 10085  0793  3000               	movlw	0
 10086  0794  3DF1               	addwfc	___fladd@b+1,f
 10087  0795  3000               	movlw	0
 10088  0796  3DF2               	addwfc	___fladd@b+2,f
 10089  0797  3000               	movlw	0
 10090  0798  3DF3               	addwfc	___fladd@b+3,f
 10091  0799  1C73               	btfss	___fladd@b+3,0
 10092  079A  2FBB               	goto	l1422
 10093  079B  0870               	movf	___fladd@b,w
 10094  079C  0020               	movlb	0	; select bank0
 10095  079D  00A0               	movwf	??___fladd
 10096  079E  0871               	movf	___fladd@b+1,w
 10097  079F  00A1               	movwf	??___fladd+1
 10098  07A0  0872               	movf	___fladd@b+2,w
 10099  07A1  00A2               	movwf	??___fladd+2
 10100  07A2  0873               	movf	___fladd@b+3,w
 10101  07A3  00A3               	movwf	??___fladd+3
 10102  07A4  3001               	movlw	1
 10103  07A5  00A4               	movwf	??___fladd+4
 10104  07A6                     u2655:
 10105  07A6  37A3               	asrf	??___fladd+3,f
 10106  07A7  0CA2               	rrf	??___fladd+2,f
 10107  07A8  0CA1               	rrf	??___fladd+1,f
 10108  07A9  0CA0               	rrf	??___fladd,f
 10109  07AA  0BA4               	decfsz	??___fladd+4,f
 10110  07AB  2FA6               	goto	u2655
 10111  07AC  0823               	movf	??___fladd+3,w
 10112  07AD  00F3               	movwf	___fladd@b+3
 10113  07AE  0822               	movf	??___fladd+2,w
 10114  07AF  00F2               	movwf	___fladd@b+2
 10115  07B0  0821               	movf	??___fladd+1,w
 10116  07B1  00F1               	movwf	___fladd@b+1
 10117  07B2  0820               	movf	??___fladd,w
 10118  07B3  00F0               	movwf	___fladd@b
 10119  07B4  0A7A               	incf	___fladd@bexp,w
 10120  07B5  1903               	btfsc	3,2
 10121  07B6  2FBB               	goto	l1422
 10122  07B7  3001               	movlw	1
 10123  07B8  00A0               	movwf	??___fladd
 10124  07B9  0820               	movf	??___fladd,w
 10125  07BA  07FA               	addwf	___fladd@bexp,f
 10126  07BB                     l1422:
 10127  07BB  0A7A               	incf	___fladd@bexp,w
 10128  07BC  1D03               	btfss	3,2
 10129  07BD  087A               	movf	___fladd@bexp,w
 10130  07BE  1D03               	btfss	3,2
 10131  07BF  2FCB               	goto	l3600
 10132  07C0  3000               	movlw	0
 10133  07C1  00F3               	movwf	___fladd@b+3
 10134  07C2  3000               	movlw	0
 10135  07C3  00F2               	movwf	___fladd@b+2
 10136  07C4  3000               	movlw	0
 10137  07C5  00F1               	movwf	___fladd@b+1
 10138  07C6  3000               	movlw	0
 10139  07C7  00F0               	movwf	___fladd@b
 10140  07C8  087A               	movf	___fladd@bexp,w
 10141  07C9  1903               	btfsc	3,2
 10142  07CA  01F8               	clrf	___fladd@signs
 10143  07CB                     l3600:
 10144  07CB  1C7A               	btfss	___fladd@bexp,0
 10145  07CC  2FCF               	goto	l3604
 10146  07CD  17F2               	bsf	___fladd@b+2,7
 10147  07CE  2FD4               	goto	l1430
 10148  07CF                     l3604:
 10149  07CF  307F               	movlw	127
 10150  07D0  0020               	movlb	0	; select bank0
 10151  07D1  00A0               	movwf	??___fladd
 10152  07D2  0820               	movf	??___fladd,w
 10153  07D3  05F2               	andwf	___fladd@b+2,f
 10154  07D4                     l1430:
 10155  07D4  367A               	lsrf	___fladd@bexp,w
 10156  07D5  0020               	movlb	0	; select bank0
 10157  07D6  00A0               	movwf	??___fladd
 10158  07D7  0820               	movf	??___fladd,w
 10159  07D8  00F3               	movwf	___fladd@b+3
 10160  07D9  1FF8               	btfss	___fladd@signs,7
 10161  07DA  0008               	return
 10162  07DB  17F3               	bsf	___fladd@b+3,7
 10163  07DC  0008               	return
 10164  07DD                     __end_of___fladd:
 10165                           
 10166                           	psect	text50
 10167  0DE8                     __ptext50:	
 10168 ;; *************** function ___flmul *****************
 10169 ;; Defined at:
 10170 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcmul.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;  b               4    0[BANK0 ] unsigned char 
 10173 ;;  a               4    4[BANK0 ] unsigned char 
 10174 ;; Auto vars:     Size  Location     Type
 10175 ;;  prod            4   15[BANK0 ] struct .
 10176 ;;  grs             4   10[BANK0 ] unsigned long 
 10177 ;;  temp            2   19[BANK0 ] struct .
 10178 ;;  bexp            1   14[BANK0 ] unsigned char 
 10179 ;;  aexp            1    9[BANK0 ] unsigned char 
 10180 ;;  sign            1    8[BANK0 ] unsigned char 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  4    0[BANK0 ] unsigned char 
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0, pclath, cstack
 10185 ;; Tracked objects:
 10186 ;;		On entry : 1F/0
 10187 ;;		On exit  : 1F/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10190 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10191 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10192 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10193 ;;      Totals:         5      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10194 ;;Total ram usage:       26 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:    6
 10197 ;; This function calls:
 10198 ;;		__Umul8_16
 10199 ;; This function is called by:
 10200 ;;		_SetDimmer
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           
 10205                           ;psect for function ___flmul
 10206  0DE8                     ___flmul:
 10207                           
 10208                           ;incstack = 0
 10209                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10210  0DE8  0823               	movf	___flmul@b+3,w
 10211  0DE9  3980               	andlw	128
 10212  0DEA  00F9               	movwf	??___flmul
 10213  0DEB  0879               	movf	??___flmul,w
 10214  0DEC  00A8               	movwf	___flmul@sign
 10215  0DED  3523               	lslf	___flmul@b+3,w
 10216  0DEE  00F9               	movwf	??___flmul
 10217  0DEF  0879               	movf	??___flmul,w
 10218  0DF0  00AE               	movwf	___flmul@bexp
 10219  0DF1  1BA2               	btfsc	___flmul@b+2,7
 10220  0DF2  142E               	bsf	___flmul@bexp,0
 10221  0DF3  082E               	movf	___flmul@bexp,w
 10222  0DF4  1903               	btfsc	3,2
 10223  0DF5  2E03               	goto	l3962
 10224  0DF6  0A2E               	incf	___flmul@bexp,w
 10225  0DF7  1D03               	btfss	3,2
 10226  0DF8  2E01               	goto	l3960
 10227  0DF9  3000               	movlw	0
 10228  0DFA  00A3               	movwf	___flmul@b+3
 10229  0DFB  3000               	movlw	0
 10230  0DFC  00A2               	movwf	___flmul@b+2
 10231  0DFD  3000               	movlw	0
 10232  0DFE  00A1               	movwf	___flmul@b+1
 10233  0DFF  3000               	movlw	0
 10234  0E00  00A0               	movwf	___flmul@b
 10235  0E01                     l3960:
 10236  0E01  17A2               	bsf	___flmul@b+2,7
 10237  0E02  2E0B               	goto	l3964
 10238  0E03                     l3962:
 10239  0E03  3000               	movlw	0
 10240  0E04  00A3               	movwf	___flmul@b+3
 10241  0E05  3000               	movlw	0
 10242  0E06  00A2               	movwf	___flmul@b+2
 10243  0E07  3000               	movlw	0
 10244  0E08  00A1               	movwf	___flmul@b+1
 10245  0E09  3000               	movlw	0
 10246  0E0A  00A0               	movwf	___flmul@b
 10247  0E0B                     l3964:
 10248  0E0B  0827               	movf	___flmul@a+3,w
 10249  0E0C  3980               	andlw	128
 10250  0E0D  00F9               	movwf	??___flmul
 10251  0E0E  0879               	movf	??___flmul,w
 10252  0E0F  06A8               	xorwf	___flmul@sign,f
 10253  0E10  3527               	lslf	___flmul@a+3,w
 10254  0E11  00F9               	movwf	??___flmul
 10255  0E12  0879               	movf	??___flmul,w
 10256  0E13  00A9               	movwf	___flmul@aexp
 10257  0E14  1BA6               	btfsc	___flmul@a+2,7
 10258  0E15  1429               	bsf	___flmul@aexp,0
 10259  0E16  0829               	movf	___flmul@aexp,w
 10260  0E17  1903               	btfsc	3,2
 10261  0E18  2E26               	goto	l3980
 10262  0E19  0A29               	incf	___flmul@aexp,w
 10263  0E1A  1D03               	btfss	3,2
 10264  0E1B  2E24               	goto	l3978
 10265  0E1C  3000               	movlw	0
 10266  0E1D  00A7               	movwf	___flmul@a+3
 10267  0E1E  3000               	movlw	0
 10268  0E1F  00A6               	movwf	___flmul@a+2
 10269  0E20  3000               	movlw	0
 10270  0E21  00A5               	movwf	___flmul@a+1
 10271  0E22  3000               	movlw	0
 10272  0E23  00A4               	movwf	___flmul@a
 10273  0E24                     l3978:
 10274  0E24  17A6               	bsf	___flmul@a+2,7
 10275  0E25  2E2E               	goto	l3982
 10276  0E26                     l3980:
 10277  0E26  3000               	movlw	0
 10278  0E27  00A7               	movwf	___flmul@a+3
 10279  0E28  3000               	movlw	0
 10280  0E29  00A6               	movwf	___flmul@a+2
 10281  0E2A  3000               	movlw	0
 10282  0E2B  00A5               	movwf	___flmul@a+1
 10283  0E2C  3000               	movlw	0
 10284  0E2D  00A4               	movwf	___flmul@a
 10285  0E2E                     l3982:
 10286  0E2E  0829               	movf	___flmul@aexp,w
 10287  0E2F  1D03               	btfss	3,2
 10288  0E30  082E               	movf	___flmul@bexp,w
 10289  0E31  1D03               	btfss	3,2
 10290  0E32  2E3C               	goto	l3990
 10291  0E33  3000               	movlw	0
 10292  0E34  00A3               	movwf	?___flmul+3
 10293  0E35  3000               	movlw	0
 10294  0E36  00A2               	movwf	?___flmul+2
 10295  0E37  3000               	movlw	0
 10296  0E38  00A1               	movwf	?___flmul+1
 10297  0E39  3000               	movlw	0
 10298  0E3A  00A0               	movwf	?___flmul
 10299  0E3B  0008               	return
 10300  0E3C                     l3990:
 10301  0E3C  0820               	movf	___flmul@b,w
 10302  0E3D  00F9               	movwf	??___flmul
 10303  0E3E  0879               	movf	??___flmul,w
 10304  0E3F  00F0               	movwf	__Umul8_16@multiplicand
 10305  0E40  0826               	movf	___flmul@a+2,w
 10306  0E41  3195  2569  318D   	fcall	__Umul8_16
 10307  0E44  0871               	movf	?__Umul8_16+1,w
 10308  0E45  00B4               	movwf	___flmul@temp+1
 10309  0E46  0870               	movf	?__Umul8_16,w
 10310  0E47  00B3               	movwf	___flmul@temp
 10311  0E48  0833               	movf	___flmul@temp,w
 10312  0E49  00F9               	movwf	??___flmul
 10313  0E4A  01FA               	clrf	??___flmul+1
 10314  0E4B  01FB               	clrf	??___flmul+2
 10315  0E4C  01FC               	clrf	??___flmul+3
 10316  0E4D  087C               	movf	??___flmul+3,w
 10317  0E4E  00AD               	movwf	___flmul@grs+3
 10318  0E4F  087B               	movf	??___flmul+2,w
 10319  0E50  00AC               	movwf	___flmul@grs+2
 10320  0E51  087A               	movf	??___flmul+1,w
 10321  0E52  00AB               	movwf	___flmul@grs+1
 10322  0E53  0879               	movf	??___flmul,w
 10323  0E54  00AA               	movwf	___flmul@grs
 10324  0E55  0834               	movf	___flmul@temp+1,w
 10325  0E56  00F9               	movwf	??___flmul
 10326  0E57  01FA               	clrf	??___flmul+1
 10327  0E58  01FB               	clrf	??___flmul+2
 10328  0E59  01FC               	clrf	??___flmul+3
 10329  0E5A  087C               	movf	??___flmul+3,w
 10330  0E5B  00B2               	movwf	___flmul@prod+3
 10331  0E5C  087B               	movf	??___flmul+2,w
 10332  0E5D  00B1               	movwf	___flmul@prod+2
 10333  0E5E  087A               	movf	??___flmul+1,w
 10334  0E5F  00B0               	movwf	___flmul@prod+1
 10335  0E60  0879               	movf	??___flmul,w
 10336  0E61  00AF               	movwf	___flmul@prod
 10337  0E62  0821               	movf	___flmul@b+1,w
 10338  0E63  00F9               	movwf	??___flmul
 10339  0E64  0879               	movf	??___flmul,w
 10340  0E65  00F0               	movwf	__Umul8_16@multiplicand
 10341  0E66  0825               	movf	___flmul@a+1,w
 10342  0E67  3195  2569  318D   	fcall	__Umul8_16
 10343  0E6A  0871               	movf	?__Umul8_16+1,w
 10344  0E6B  00B4               	movwf	___flmul@temp+1
 10345  0E6C  0870               	movf	?__Umul8_16,w
 10346  0E6D  00B3               	movwf	___flmul@temp
 10347  0E6E  0833               	movf	___flmul@temp,w
 10348  0E6F  00F9               	movwf	??___flmul
 10349  0E70  01FA               	clrf	??___flmul+1
 10350  0E71  01FB               	clrf	??___flmul+2
 10351  0E72  01FC               	clrf	??___flmul+3
 10352  0E73  0879               	movf	??___flmul,w
 10353  0E74  07AA               	addwf	___flmul@grs,f
 10354  0E75  087A               	movf	??___flmul+1,w
 10355  0E76  3DAB               	addwfc	___flmul@grs+1,f
 10356  0E77  087B               	movf	??___flmul+2,w
 10357  0E78  3DAC               	addwfc	___flmul@grs+2,f
 10358  0E79  087C               	movf	??___flmul+3,w
 10359  0E7A  3DAD               	addwfc	___flmul@grs+3,f
 10360  0E7B  0834               	movf	___flmul@temp+1,w
 10361  0E7C  00F9               	movwf	??___flmul
 10362  0E7D  01FA               	clrf	??___flmul+1
 10363  0E7E  01FB               	clrf	??___flmul+2
 10364  0E7F  01FC               	clrf	??___flmul+3
 10365  0E80  0879               	movf	??___flmul,w
 10366  0E81  07AF               	addwf	___flmul@prod,f
 10367  0E82  087A               	movf	??___flmul+1,w
 10368  0E83  3DB0               	addwfc	___flmul@prod+1,f
 10369  0E84  087B               	movf	??___flmul+2,w
 10370  0E85  3DB1               	addwfc	___flmul@prod+2,f
 10371  0E86  087C               	movf	??___flmul+3,w
 10372  0E87  3DB2               	addwfc	___flmul@prod+3,f
 10373  0E88  0822               	movf	___flmul@b+2,w
 10374  0E89  00F9               	movwf	??___flmul
 10375  0E8A  0879               	movf	??___flmul,w
 10376  0E8B  00F0               	movwf	__Umul8_16@multiplicand
 10377  0E8C  0824               	movf	___flmul@a,w
 10378  0E8D  3195  2569  318D   	fcall	__Umul8_16
 10379  0E90  0871               	movf	?__Umul8_16+1,w
 10380  0E91  00B4               	movwf	___flmul@temp+1
 10381  0E92  0870               	movf	?__Umul8_16,w
 10382  0E93  00B3               	movwf	___flmul@temp
 10383  0E94  0833               	movf	___flmul@temp,w
 10384  0E95  00F9               	movwf	??___flmul
 10385  0E96  01FA               	clrf	??___flmul+1
 10386  0E97  01FB               	clrf	??___flmul+2
 10387  0E98  01FC               	clrf	??___flmul+3
 10388  0E99  0879               	movf	??___flmul,w
 10389  0E9A  07AA               	addwf	___flmul@grs,f
 10390  0E9B  087A               	movf	??___flmul+1,w
 10391  0E9C  3DAB               	addwfc	___flmul@grs+1,f
 10392  0E9D  087B               	movf	??___flmul+2,w
 10393  0E9E  3DAC               	addwfc	___flmul@grs+2,f
 10394  0E9F  087C               	movf	??___flmul+3,w
 10395  0EA0  3DAD               	addwfc	___flmul@grs+3,f
 10396  0EA1  0834               	movf	___flmul@temp+1,w
 10397  0EA2  00F9               	movwf	??___flmul
 10398  0EA3  01FA               	clrf	??___flmul+1
 10399  0EA4  01FB               	clrf	??___flmul+2
 10400  0EA5  01FC               	clrf	??___flmul+3
 10401  0EA6  0879               	movf	??___flmul,w
 10402  0EA7  07AF               	addwf	___flmul@prod,f
 10403  0EA8  087A               	movf	??___flmul+1,w
 10404  0EA9  3DB0               	addwfc	___flmul@prod+1,f
 10405  0EAA  087B               	movf	??___flmul+2,w
 10406  0EAB  3DB1               	addwfc	___flmul@prod+2,f
 10407  0EAC  087C               	movf	??___flmul+3,w
 10408  0EAD  3DB2               	addwfc	___flmul@prod+3,f
 10409  0EAE  3008               	movlw	8
 10410  0EAF                     u3455:
 10411  0EAF  35AA               	lslf	___flmul@grs,f
 10412  0EB0  0DAB               	rlf	___flmul@grs+1,f
 10413  0EB1  0DAC               	rlf	___flmul@grs+2,f
 10414  0EB2  0DAD               	rlf	___flmul@grs+3,f
 10415  0EB3  0B89               	decfsz	9,f
 10416  0EB4  2EAF               	goto	u3455
 10417  0EB5  0821               	movf	___flmul@b+1,w
 10418  0EB6  00F9               	movwf	??___flmul
 10419  0EB7  0879               	movf	??___flmul,w
 10420  0EB8  00F0               	movwf	__Umul8_16@multiplicand
 10421  0EB9  0824               	movf	___flmul@a,w
 10422  0EBA  3195  2569  318D   	fcall	__Umul8_16
 10423  0EBD  0871               	movf	?__Umul8_16+1,w
 10424  0EBE  00B4               	movwf	___flmul@temp+1
 10425  0EBF  0870               	movf	?__Umul8_16,w
 10426  0EC0  00B3               	movwf	___flmul@temp
 10427  0EC1  0833               	movf	___flmul@temp,w
 10428  0EC2  07AA               	addwf	___flmul@grs,f
 10429  0EC3  0834               	movf	___flmul@temp+1,w
 10430  0EC4  3DAB               	addwfc	___flmul@grs+1,f
 10431  0EC5  3000               	movlw	0
 10432  0EC6  3DAC               	addwfc	___flmul@grs+2,f
 10433  0EC7  3DAD               	addwfc	___flmul@grs+3,f
 10434  0EC8  0820               	movf	___flmul@b,w
 10435  0EC9  00F9               	movwf	??___flmul
 10436  0ECA  0879               	movf	??___flmul,w
 10437  0ECB  00F0               	movwf	__Umul8_16@multiplicand
 10438  0ECC  0825               	movf	___flmul@a+1,w
 10439  0ECD  3195  2569  318D   	fcall	__Umul8_16
 10440  0ED0  0871               	movf	?__Umul8_16+1,w
 10441  0ED1  00B4               	movwf	___flmul@temp+1
 10442  0ED2  0870               	movf	?__Umul8_16,w
 10443  0ED3  00B3               	movwf	___flmul@temp
 10444  0ED4  0833               	movf	___flmul@temp,w
 10445  0ED5  07AA               	addwf	___flmul@grs,f
 10446  0ED6  0834               	movf	___flmul@temp+1,w
 10447  0ED7  3DAB               	addwfc	___flmul@grs+1,f
 10448  0ED8  3000               	movlw	0
 10449  0ED9  3DAC               	addwfc	___flmul@grs+2,f
 10450  0EDA  3DAD               	addwfc	___flmul@grs+3,f
 10451  0EDB  3008               	movlw	8
 10452  0EDC                     u3465:
 10453  0EDC  35AA               	lslf	___flmul@grs,f
 10454  0EDD  0DAB               	rlf	___flmul@grs+1,f
 10455  0EDE  0DAC               	rlf	___flmul@grs+2,f
 10456  0EDF  0DAD               	rlf	___flmul@grs+3,f
 10457  0EE0  0B89               	decfsz	9,f
 10458  0EE1  2EDC               	goto	u3465
 10459  0EE2  0820               	movf	___flmul@b,w
 10460  0EE3  00F9               	movwf	??___flmul
 10461  0EE4  0879               	movf	??___flmul,w
 10462  0EE5  00F0               	movwf	__Umul8_16@multiplicand
 10463  0EE6  0824               	movf	___flmul@a,w
 10464  0EE7  3195  2569  318D   	fcall	__Umul8_16
 10465  0EEA  0871               	movf	?__Umul8_16+1,w
 10466  0EEB  00B4               	movwf	___flmul@temp+1
 10467  0EEC  0870               	movf	?__Umul8_16,w
 10468  0EED  00B3               	movwf	___flmul@temp
 10469  0EEE  0833               	movf	___flmul@temp,w
 10470  0EEF  07AA               	addwf	___flmul@grs,f
 10471  0EF0  0834               	movf	___flmul@temp+1,w
 10472  0EF1  3DAB               	addwfc	___flmul@grs+1,f
 10473  0EF2  3000               	movlw	0
 10474  0EF3  3DAC               	addwfc	___flmul@grs+2,f
 10475  0EF4  3DAD               	addwfc	___flmul@grs+3,f
 10476  0EF5  0821               	movf	___flmul@b+1,w
 10477  0EF6  00F9               	movwf	??___flmul
 10478  0EF7  0879               	movf	??___flmul,w
 10479  0EF8  00F0               	movwf	__Umul8_16@multiplicand
 10480  0EF9  0826               	movf	___flmul@a+2,w
 10481  0EFA  3195  2569  318D   	fcall	__Umul8_16
 10482  0EFD  0871               	movf	?__Umul8_16+1,w
 10483  0EFE  00B4               	movwf	___flmul@temp+1
 10484  0EFF  0870               	movf	?__Umul8_16,w
 10485  0F00  00B3               	movwf	___flmul@temp
 10486  0F01  0833               	movf	___flmul@temp,w
 10487  0F02  07AF               	addwf	___flmul@prod,f
 10488  0F03  0834               	movf	___flmul@temp+1,w
 10489  0F04  3DB0               	addwfc	___flmul@prod+1,f
 10490  0F05  3000               	movlw	0
 10491  0F06  3DB1               	addwfc	___flmul@prod+2,f
 10492  0F07  3DB2               	addwfc	___flmul@prod+3,f
 10493  0F08  0822               	movf	___flmul@b+2,w
 10494  0F09  00F9               	movwf	??___flmul
 10495  0F0A  0879               	movf	??___flmul,w
 10496  0F0B  00F0               	movwf	__Umul8_16@multiplicand
 10497  0F0C  0825               	movf	___flmul@a+1,w
 10498  0F0D  3195  2569  318D   	fcall	__Umul8_16
 10499  0F10  0871               	movf	?__Umul8_16+1,w
 10500  0F11  00B4               	movwf	___flmul@temp+1
 10501  0F12  0870               	movf	?__Umul8_16,w
 10502  0F13  00B3               	movwf	___flmul@temp
 10503  0F14  0833               	movf	___flmul@temp,w
 10504  0F15  07AF               	addwf	___flmul@prod,f
 10505  0F16  0834               	movf	___flmul@temp+1,w
 10506  0F17  3DB0               	addwfc	___flmul@prod+1,f
 10507  0F18  3000               	movlw	0
 10508  0F19  3DB1               	addwfc	___flmul@prod+2,f
 10509  0F1A  3DB2               	addwfc	___flmul@prod+3,f
 10510  0F1B  0822               	movf	___flmul@b+2,w
 10511  0F1C  00F9               	movwf	??___flmul
 10512  0F1D  0879               	movf	??___flmul,w
 10513  0F1E  00F0               	movwf	__Umul8_16@multiplicand
 10514  0F1F  0826               	movf	___flmul@a+2,w
 10515  0F20  3195  2569  318D   	fcall	__Umul8_16
 10516  0F23  0871               	movf	?__Umul8_16+1,w
 10517  0F24  00B4               	movwf	___flmul@temp+1
 10518  0F25  0870               	movf	?__Umul8_16,w
 10519  0F26  00B3               	movwf	___flmul@temp
 10520  0F27  0833               	movf	___flmul@temp,w
 10521  0F28  00F9               	movwf	??___flmul
 10522  0F29  0834               	movf	___flmul@temp+1,w
 10523  0F2A  00FA               	movwf	??___flmul+1
 10524  0F2B  01FB               	clrf	??___flmul+2
 10525  0F2C  01FC               	clrf	??___flmul+3
 10526  0F2D  3008               	movlw	8
 10527  0F2E                     u3475:
 10528  0F2E  35F9               	lslf	??___flmul,f
 10529  0F2F  0DFA               	rlf	??___flmul+1,f
 10530  0F30  0DFB               	rlf	??___flmul+2,f
 10531  0F31  0DFC               	rlf	??___flmul+3,f
 10532  0F32  0B89               	decfsz	9,f
 10533  0F33  2F2E               	goto	u3475
 10534  0F34  0879               	movf	??___flmul,w
 10535  0F35  07AF               	addwf	___flmul@prod,f
 10536  0F36  087A               	movf	??___flmul+1,w
 10537  0F37  3DB0               	addwfc	___flmul@prod+1,f
 10538  0F38  087B               	movf	??___flmul+2,w
 10539  0F39  3DB1               	addwfc	___flmul@prod+2,f
 10540  0F3A  087C               	movf	??___flmul+3,w
 10541  0F3B  3DB2               	addwfc	___flmul@prod+3,f
 10542  0F3C  082D               	movf	___flmul@grs+3,w
 10543  0F3D  00F9               	movwf	??___flmul
 10544  0F3E  01FA               	clrf	??___flmul+1
 10545  0F3F  01FB               	clrf	??___flmul+2
 10546  0F40  01FC               	clrf	??___flmul+3
 10547  0F41  0879               	movf	??___flmul,w
 10548  0F42  07AF               	addwf	___flmul@prod,f
 10549  0F43  087A               	movf	??___flmul+1,w
 10550  0F44  3DB0               	addwfc	___flmul@prod+1,f
 10551  0F45  087B               	movf	??___flmul+2,w
 10552  0F46  3DB1               	addwfc	___flmul@prod+2,f
 10553  0F47  087C               	movf	??___flmul+3,w
 10554  0F48  3DB2               	addwfc	___flmul@prod+3,f
 10555  0F49  3008               	movlw	8
 10556  0F4A                     u3485:
 10557  0F4A  35AA               	lslf	___flmul@grs,f
 10558  0F4B  0DAB               	rlf	___flmul@grs+1,f
 10559  0F4C  0DAC               	rlf	___flmul@grs+2,f
 10560  0F4D  0DAD               	rlf	___flmul@grs+3,f
 10561  0F4E  0B89               	decfsz	9,f
 10562  0F4F  2F4A               	goto	u3485
 10563  0F50  082E               	movf	___flmul@bexp,w
 10564  0F51  0729               	addwf	___flmul@aexp,w
 10565  0F52  00F9               	movwf	??___flmul
 10566  0F53  01FA               	clrf	??___flmul+1
 10567  0F54  0DFA               	rlf	??___flmul+1,f
 10568  0F55  0879               	movf	??___flmul,w
 10569  0F56  3E82               	addlw	130
 10570  0F57  00B3               	movwf	___flmul@temp
 10571  0F58  30FF               	movlw	255
 10572  0F59  3D7A               	addwfc	??___flmul+1,w
 10573  0F5A  00B4               	movwf	___flmul@temp+1
 10574  0F5B                     l4042:
 10575  0F5B  1BB1               	btfsc	___flmul@prod+2,7
 10576  0F5C  2F72               	goto	l4044
 10577  0F5D  3001               	movlw	1
 10578  0F5E                     u3495:
 10579  0F5E  35AF               	lslf	___flmul@prod,f
 10580  0F5F  0DB0               	rlf	___flmul@prod+1,f
 10581  0F60  0DB1               	rlf	___flmul@prod+2,f
 10582  0F61  0DB2               	rlf	___flmul@prod+3,f
 10583  0F62  0B89               	decfsz	9,f
 10584  0F63  2F5E               	goto	u3495
 10585  0F64  1BAD               	btfsc	___flmul@grs+3,7
 10586  0F65  142F               	bsf	___flmul@prod,0
 10587  0F66  3001               	movlw	1
 10588  0F67                     u3515:
 10589  0F67  35AA               	lslf	___flmul@grs,f
 10590  0F68  0DAB               	rlf	___flmul@grs+1,f
 10591  0F69  0DAC               	rlf	___flmul@grs+2,f
 10592  0F6A  0DAD               	rlf	___flmul@grs+3,f
 10593  0F6B  0B89               	decfsz	9,f
 10594  0F6C  2F67               	goto	u3515
 10595  0F6D  30FF               	movlw	255
 10596  0F6E  07B3               	addwf	___flmul@temp,f
 10597  0F6F  30FF               	movlw	255
 10598  0F70  3DB4               	addwfc	___flmul@temp+1,f
 10599  0F71  2F5B               	goto	l4042
 10600  0F72                     l4044:
 10601  0F72  01A9               	clrf	___flmul@aexp
 10602  0F73  1FAD               	btfss	___flmul@grs+3,7
 10603  0F74  2F8B               	goto	l4054
 10604  0F75  30FF               	movlw	255
 10605  0F76  052A               	andwf	___flmul@grs,w
 10606  0F77  00F9               	movwf	??___flmul
 10607  0F78  30FF               	movlw	255
 10608  0F79  052B               	andwf	___flmul@grs+1,w
 10609  0F7A  00FA               	movwf	??___flmul+1
 10610  0F7B  30FF               	movlw	255
 10611  0F7C  052C               	andwf	___flmul@grs+2,w
 10612  0F7D  00FB               	movwf	??___flmul+2
 10613  0F7E  307F               	movlw	127
 10614  0F7F  052D               	andwf	___flmul@grs+3,w
 10615  0F80  00FC               	movwf	??___flmul+3
 10616  0F81  087C               	movf	??___flmul+3,w
 10617  0F82  047B               	iorwf	??___flmul+2,w
 10618  0F83  047A               	iorwf	??___flmul+1,w
 10619  0F84  0479               	iorwf	??___flmul,w
 10620  0F85  1903               	skipnz
 10621  0F86  182F               	btfsc	___flmul@prod,0
 10622  0F87  2F89               	goto	l4050
 10623  0F88  2F8B               	goto	l4054
 10624  0F89                     l4050:
 10625  0F89  01A9               	clrf	___flmul@aexp
 10626  0F8A  0AA9               	incf	___flmul@aexp,f
 10627  0F8B                     l4054:
 10628  0F8B  0829               	movf	___flmul@aexp,w
 10629  0F8C  1903               	btfsc	3,2
 10630  0F8D  2FB4               	goto	l4064
 10631  0F8E  3001               	movlw	1
 10632  0F8F  07AF               	addwf	___flmul@prod,f
 10633  0F90  3000               	movlw	0
 10634  0F91  3DB0               	addwfc	___flmul@prod+1,f
 10635  0F92  3000               	movlw	0
 10636  0F93  3DB1               	addwfc	___flmul@prod+2,f
 10637  0F94  3000               	movlw	0
 10638  0F95  3DB2               	addwfc	___flmul@prod+3,f
 10639  0F96  1C32               	btfss	___flmul@prod+3,0
 10640  0F97  2FB4               	goto	l4064
 10641  0F98  082F               	movf	___flmul@prod,w
 10642  0F99  00F9               	movwf	??___flmul
 10643  0F9A  0830               	movf	___flmul@prod+1,w
 10644  0F9B  00FA               	movwf	??___flmul+1
 10645  0F9C  0831               	movf	___flmul@prod+2,w
 10646  0F9D  00FB               	movwf	??___flmul+2
 10647  0F9E  0832               	movf	___flmul@prod+3,w
 10648  0F9F  00FC               	movwf	??___flmul+3
 10649  0FA0  3001               	movlw	1
 10650  0FA1  00FD               	movwf	??___flmul+4
 10651  0FA2                     u3585:
 10652  0FA2  37FC               	asrf	??___flmul+3,f
 10653  0FA3  0CFB               	rrf	??___flmul+2,f
 10654  0FA4  0CFA               	rrf	??___flmul+1,f
 10655  0FA5  0CF9               	rrf	??___flmul,f
 10656  0FA6  0BFD               	decfsz	??___flmul+4,f
 10657  0FA7  2FA2               	goto	u3585
 10658  0FA8  087C               	movf	??___flmul+3,w
 10659  0FA9  00B2               	movwf	___flmul@prod+3
 10660  0FAA  087B               	movf	??___flmul+2,w
 10661  0FAB  00B1               	movwf	___flmul@prod+2
 10662  0FAC  087A               	movf	??___flmul+1,w
 10663  0FAD  00B0               	movwf	___flmul@prod+1
 10664  0FAE  0879               	movf	??___flmul,w
 10665  0FAF  00AF               	movwf	___flmul@prod
 10666  0FB0  3001               	movlw	1
 10667  0FB1  07B3               	addwf	___flmul@temp,f
 10668  0FB2  3000               	movlw	0
 10669  0FB3  3DB4               	addwfc	___flmul@temp+1,f
 10670  0FB4                     l4064:
 10671  0FB4  0834               	movf	___flmul@temp+1,w
 10672  0FB5  3A80               	xorlw	128
 10673  0FB6  00F9               	movwf	??___flmul
 10674  0FB7  3080               	movlw	128
 10675  0FB8  0279               	subwf	??___flmul,w
 10676  0FB9  1D03               	skipz
 10677  0FBA  2FBD               	goto	u3595
 10678  0FBB  30FF               	movlw	255
 10679  0FBC  0233               	subwf	___flmul@temp,w
 10680  0FBD                     u3595:
 10681  0FBD  1C03               	skipc
 10682  0FBE  2FC9               	goto	l4068
 10683  0FBF  307F               	movlw	127
 10684  0FC0  0020               	movlb	0	; select bank0
 10685  0FC1  00B2               	movwf	___flmul@prod+3
 10686  0FC2  3080               	movlw	128
 10687  0FC3  00B1               	movwf	___flmul@prod+2
 10688  0FC4  3000               	movlw	0
 10689  0FC5  00B0               	movwf	___flmul@prod+1
 10690  0FC6  3000               	movlw	0
 10691  0FC7  00AF               	movwf	___flmul@prod
 10692  0FC8  2FF3               	goto	l1496
 10693  0FC9                     l4068:
 10694  0FC9  0020               	movlb	0	; select bank0
 10695  0FCA  0834               	movf	___flmul@temp+1,w
 10696  0FCB  3A80               	xorlw	128
 10697  0FCC  00F9               	movwf	??___flmul
 10698  0FCD  3080               	movlw	128
 10699  0FCE  0279               	subwf	??___flmul,w
 10700  0FCF  1D03               	skipz
 10701  0FD0  2FD3               	goto	u3605
 10702  0FD1  3001               	movlw	1
 10703  0FD2  0233               	subwf	___flmul@temp,w
 10704  0FD3                     u3605:
 10705  0FD3  1803               	skipnc
 10706  0FD4  2FE0               	goto	l4074
 10707  0FD5  3000               	movlw	0
 10708  0FD6  0020               	movlb	0	; select bank0
 10709  0FD7  00B2               	movwf	___flmul@prod+3
 10710  0FD8  3000               	movlw	0
 10711  0FD9  00B1               	movwf	___flmul@prod+2
 10712  0FDA  3000               	movlw	0
 10713  0FDB  00B0               	movwf	___flmul@prod+1
 10714  0FDC  3000               	movlw	0
 10715  0FDD  00AF               	movwf	___flmul@prod
 10716  0FDE  01A8               	clrf	___flmul@sign
 10717  0FDF  2FF3               	goto	l1496
 10718  0FE0                     l4074:
 10719  0FE0  0020               	movlb	0	; select bank0
 10720  0FE1  0833               	movf	___flmul@temp,w
 10721  0FE2  00F9               	movwf	??___flmul
 10722  0FE3  0879               	movf	??___flmul,w
 10723  0FE4  00AE               	movwf	___flmul@bexp
 10724  0FE5  30FF               	movlw	255
 10725  0FE6  05AF               	andwf	___flmul@prod,f
 10726  0FE7  30FF               	movlw	255
 10727  0FE8  05B0               	andwf	___flmul@prod+1,f
 10728  0FE9  307F               	movlw	127
 10729  0FEA  05B1               	andwf	___flmul@prod+2,f
 10730  0FEB  3000               	movlw	0
 10731  0FEC  05B2               	andwf	___flmul@prod+3,f
 10732  0FED  182E               	btfsc	___flmul@bexp,0
 10733  0FEE  17B1               	bsf	___flmul@prod+2,7
 10734  0FEF  362E               	lsrf	___flmul@bexp,w
 10735  0FF0  00F9               	movwf	??___flmul
 10736  0FF1  0879               	movf	??___flmul,w
 10737  0FF2  00B2               	movwf	___flmul@prod+3
 10738  0FF3                     l1496:
 10739  0FF3  0828               	movf	___flmul@sign,w
 10740  0FF4  00F9               	movwf	??___flmul
 10741  0FF5  0879               	movf	??___flmul,w
 10742  0FF6  04B2               	iorwf	___flmul@prod+3,f
 10743  0FF7  0832               	movf	___flmul@prod+3,w
 10744  0FF8  00A3               	movwf	?___flmul+3
 10745  0FF9  0831               	movf	___flmul@prod+2,w
 10746  0FFA  00A2               	movwf	?___flmul+2
 10747  0FFB  0830               	movf	___flmul@prod+1,w
 10748  0FFC  00A1               	movwf	?___flmul+1
 10749  0FFD  082F               	movf	___flmul@prod,w
 10750  0FFE  00A0               	movwf	?___flmul
 10751  0FFF  0008               	return
 10752  1000                     __end_of___flmul:
 10753                           
 10754                           	psect	text51
 10755  1569                     __ptext51:	
 10756 ;; *************** function __Umul8_16 *****************
 10757 ;; Defined at:
 10758 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul8_16.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;  multiplier      1    wreg     unsigned char 
 10761 ;;  multiplicand    1    0[COMMON] unsigned char 
 10762 ;; Auto vars:     Size  Location     Type
 10763 ;;  multiplier      1    8[COMMON] unsigned char 
 10764 ;;  word_mpld       2    6[COMMON] unsigned int 
 10765 ;;  product         2    4[COMMON] unsigned int 
 10766 ;; Return value:  Size  Location     Type
 10767 ;;                  2    0[COMMON] unsigned int 
 10768 ;; Registers used:
 10769 ;;		wreg, status,2, status,0
 10770 ;; Tracked objects:
 10771 ;;		On entry : 1F/0
 10772 ;;		On exit  : 1F/0
 10773 ;;		Unchanged: 1F/0
 10774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10776 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10777 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10778 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10779 ;;Total ram usage:        9 bytes
 10780 ;; Hardware stack levels used:    1
 10781 ;; Hardware stack levels required when called:    5
 10782 ;; This function calls:
 10783 ;;		Nothing
 10784 ;; This function is called by:
 10785 ;;		___flmul
 10786 ;; This function uses a non-reentrant model
 10787 ;;
 10788                           
 10789                           
 10790                           ;psect for function __Umul8_16
 10791  1569                     __Umul8_16:
 10792                           
 10793                           ;incstack = 0
 10794                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10795                           ;__Umul8_16@multiplier stored from wreg
 10796  1569  00F8               	movwf	__Umul8_16@multiplier
 10797  156A  01F4               	clrf	__Umul8_16@product
 10798  156B  01F5               	clrf	__Umul8_16@product+1
 10799  156C  0870               	movf	__Umul8_16@multiplicand,w
 10800  156D  00F2               	movwf	??__Umul8_16
 10801  156E  01F3               	clrf	??__Umul8_16+1
 10802  156F  0872               	movf	??__Umul8_16,w
 10803  1570  00F6               	movwf	__Umul8_16@word_mpld
 10804  1571  0873               	movf	??__Umul8_16+1,w
 10805  1572  00F7               	movwf	__Umul8_16@word_mpld+1
 10806  1573                     l3614:
 10807  1573  1C78               	btfss	__Umul8_16@multiplier,0
 10808  1574  2D79               	goto	l1503
 10809  1575  0876               	movf	__Umul8_16@word_mpld,w
 10810  1576  07F4               	addwf	__Umul8_16@product,f
 10811  1577  0877               	movf	__Umul8_16@word_mpld+1,w
 10812  1578  3DF5               	addwfc	__Umul8_16@product+1,f
 10813  1579                     l1503:
 10814  1579  3001               	movlw	1
 10815  157A                     u2735:
 10816  157A  35F6               	lslf	__Umul8_16@word_mpld,f
 10817  157B  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10818  157C  0B89               	decfsz	9,f
 10819  157D  2D7A               	goto	u2735
 10820  157E  1003               	clrc
 10821  157F  0CF8               	rrf	__Umul8_16@multiplier,f
 10822  1580  0878               	movf	__Umul8_16@multiplier,w
 10823  1581  1D03               	btfss	3,2
 10824  1582  2D73               	goto	l3614
 10825  1583  0875               	movf	__Umul8_16@product+1,w
 10826  1584  00F1               	movwf	?__Umul8_16+1
 10827  1585  0874               	movf	__Umul8_16@product,w
 10828  1586  00F0               	movwf	?__Umul8_16
 10829  1587  0008               	return
 10830  1588                     __end_of__Umul8_16:
 10831                           
 10832                           	psect	text52
 10833  0C6F                     __ptext52:	
 10834 ;; *************** function ___fldiv *****************
 10835 ;; Defined at:
 10836 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcdiv.c"
 10837 ;; Parameters:    Size  Location     Type
 10838 ;;  a               4   21[BANK0 ] unsigned int 
 10839 ;;  b               4   25[BANK0 ] unsigned int 
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;  grs             4   41[BANK0 ] unsigned long 
 10842 ;;  rem             4   34[BANK0 ] unsigned long 
 10843 ;;  new_exp         2   39[BANK0 ] int 
 10844 ;;  aexp            1   46[BANK0 ] unsigned char 
 10845 ;;  bexp            1   45[BANK0 ] unsigned char 
 10846 ;;  sign            1   38[BANK0 ] unsigned char 
 10847 ;; Return value:  Size  Location     Type
 10848 ;;                  4   21[BANK0 ] unsigned char 
 10849 ;; Registers used:
 10850 ;;		wreg, status,2, status,0
 10851 ;; Tracked objects:
 10852 ;;		On entry : 1F/0
 10853 ;;		On exit  : 1F/0
 10854 ;;		Unchanged: 0/0
 10855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10856 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10857 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;Total ram usage:       26 bytes
 10861 ;; Hardware stack levels used:    1
 10862 ;; Hardware stack levels required when called:    5
 10863 ;; This function calls:
 10864 ;;		Nothing
 10865 ;; This function is called by:
 10866 ;;		_SetDimmer
 10867 ;; This function uses a non-reentrant model
 10868 ;;
 10869                           
 10870                           
 10871                           ;psect for function ___fldiv
 10872  0C6F                     ___fldiv:
 10873                           
 10874                           ;incstack = 0
 10875                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10876  0C6F  083C               	movf	___fldiv@b+3,w
 10877  0C70  3980               	andlw	128
 10878  0C71  00BD               	movwf	??___fldiv
 10879  0C72  083D               	movf	??___fldiv,w
 10880  0C73  00C6               	movwf	___fldiv@sign
 10881  0C74  353C               	lslf	___fldiv@b+3,w
 10882  0C75  00BD               	movwf	??___fldiv
 10883  0C76  083D               	movf	??___fldiv,w
 10884  0C77  00CD               	movwf	___fldiv@bexp
 10885  0C78  1BBB               	btfsc	___fldiv@b+2,7
 10886  0C79  144D               	bsf	___fldiv@bexp,0
 10887  0C7A  084D               	movf	___fldiv@bexp,w
 10888  0C7B  1903               	btfsc	3,2
 10889  0C7C  2C8B               	goto	l3824
 10890  0C7D  0A4D               	incf	___fldiv@bexp,w
 10891  0C7E  1D03               	btfss	3,2
 10892  0C7F  2C88               	goto	l3820
 10893  0C80  3000               	movlw	0
 10894  0C81  00BC               	movwf	___fldiv@b+3
 10895  0C82  3000               	movlw	0
 10896  0C83  00BB               	movwf	___fldiv@b+2
 10897  0C84  3000               	movlw	0
 10898  0C85  00BA               	movwf	___fldiv@b+1
 10899  0C86  3000               	movlw	0
 10900  0C87  00B9               	movwf	___fldiv@b
 10901  0C88                     l3820:
 10902  0C88  17BB               	bsf	___fldiv@b+2,7
 10903  0C89  01BC               	clrf	___fldiv@b+3
 10904  0C8A  2C93               	goto	l3826
 10905  0C8B                     l3824:
 10906  0C8B  3000               	movlw	0
 10907  0C8C  00BC               	movwf	___fldiv@b+3
 10908  0C8D  3000               	movlw	0
 10909  0C8E  00BB               	movwf	___fldiv@b+2
 10910  0C8F  3000               	movlw	0
 10911  0C90  00BA               	movwf	___fldiv@b+1
 10912  0C91  3000               	movlw	0
 10913  0C92  00B9               	movwf	___fldiv@b
 10914  0C93                     l3826:
 10915  0C93  0838               	movf	___fldiv@a+3,w
 10916  0C94  3980               	andlw	128
 10917  0C95  00BD               	movwf	??___fldiv
 10918  0C96  083D               	movf	??___fldiv,w
 10919  0C97  06C6               	xorwf	___fldiv@sign,f
 10920  0C98  3538               	lslf	___fldiv@a+3,w
 10921  0C99  00BD               	movwf	??___fldiv
 10922  0C9A  083D               	movf	??___fldiv,w
 10923  0C9B  00CE               	movwf	___fldiv@aexp
 10924  0C9C  1BB7               	btfsc	___fldiv@a+2,7
 10925  0C9D  144E               	bsf	___fldiv@aexp,0
 10926  0C9E  084E               	movf	___fldiv@aexp,w
 10927  0C9F  1903               	btfsc	3,2
 10928  0CA0  2CAF               	goto	l3844
 10929  0CA1  0A4E               	incf	___fldiv@aexp,w
 10930  0CA2  1D03               	btfss	3,2
 10931  0CA3  2CAC               	goto	l3840
 10932  0CA4  3000               	movlw	0
 10933  0CA5  00B8               	movwf	___fldiv@a+3
 10934  0CA6  3000               	movlw	0
 10935  0CA7  00B7               	movwf	___fldiv@a+2
 10936  0CA8  3000               	movlw	0
 10937  0CA9  00B6               	movwf	___fldiv@a+1
 10938  0CAA  3000               	movlw	0
 10939  0CAB  00B5               	movwf	___fldiv@a
 10940  0CAC                     l3840:
 10941  0CAC  17B7               	bsf	___fldiv@a+2,7
 10942  0CAD  01B8               	clrf	___fldiv@a+3
 10943  0CAE  2CB7               	goto	l1444
 10944  0CAF                     l3844:
 10945  0CAF  3000               	movlw	0
 10946  0CB0  00B8               	movwf	___fldiv@a+3
 10947  0CB1  3000               	movlw	0
 10948  0CB2  00B7               	movwf	___fldiv@a+2
 10949  0CB3  3000               	movlw	0
 10950  0CB4  00B6               	movwf	___fldiv@a+1
 10951  0CB5  3000               	movlw	0
 10952  0CB6  00B5               	movwf	___fldiv@a
 10953  0CB7                     l1444:
 10954  0CB7  0838               	movf	___fldiv@a+3,w
 10955  0CB8  0437               	iorwf	___fldiv@a+2,w
 10956  0CB9  0436               	iorwf	___fldiv@a+1,w
 10957  0CBA  0435               	iorwf	___fldiv@a,w
 10958  0CBB  1D03               	skipz
 10959  0CBC  2CD6               	goto	l3854
 10960  0CBD  3000               	movlw	0
 10961  0CBE  00BC               	movwf	___fldiv@b+3
 10962  0CBF  3000               	movlw	0
 10963  0CC0  00BB               	movwf	___fldiv@b+2
 10964  0CC1  3000               	movlw	0
 10965  0CC2  00BA               	movwf	___fldiv@b+1
 10966  0CC3  3000               	movlw	0
 10967  0CC4  00B9               	movwf	___fldiv@b
 10968  0CC5  3080               	movlw	128
 10969  0CC6  04BB               	iorwf	___fldiv@b+2,f
 10970  0CC7  307F               	movlw	127
 10971  0CC8  04BC               	iorwf	___fldiv@b+3,f
 10972  0CC9                     L4:
 10973  0CC9  0846               	movf	___fldiv@sign,w
 10974  0CCA  00BD               	movwf	??___fldiv
 10975  0CCB  083D               	movf	??___fldiv,w
 10976  0CCC  04BC               	iorwf	___fldiv@b+3,f
 10977  0CCD  083C               	movf	___fldiv@b+3,w
 10978  0CCE  00B8               	movwf	?___fldiv+3
 10979  0CCF  083B               	movf	___fldiv@b+2,w
 10980  0CD0  00B7               	movwf	?___fldiv+2
 10981  0CD1  083A               	movf	___fldiv@b+1,w
 10982  0CD2  00B6               	movwf	?___fldiv+1
 10983  0CD3  0839               	movf	___fldiv@b,w
 10984  0CD4  00B5               	movwf	?___fldiv
 10985  0CD5  0008               	return
 10986  0CD6                     l3854:
 10987  0CD6  084D               	movf	___fldiv@bexp,w
 10988  0CD7  1D03               	btfss	3,2
 10989  0CD8  2CE2               	goto	l3860
 10990  0CD9  3000               	movlw	0
 10991  0CDA  00B8               	movwf	?___fldiv+3
 10992  0CDB  3000               	movlw	0
 10993  0CDC  00B7               	movwf	?___fldiv+2
 10994  0CDD  3000               	movlw	0
 10995  0CDE  00B6               	movwf	?___fldiv+1
 10996  0CDF  3000               	movlw	0
 10997  0CE0  00B5               	movwf	?___fldiv
 10998  0CE1  0008               	return
 10999  0CE2                     l3860:
 11000  0CE2  084D               	movf	___fldiv@bexp,w
 11001  0CE3  00BD               	movwf	??___fldiv
 11002  0CE4  01BE               	clrf	??___fldiv+1
 11003  0CE5  083E               	movf	??___fldiv+1,w
 11004  0CE6  00C0               	movwf	??___fldiv+3
 11005  0CE7  084E               	movf	___fldiv@aexp,w
 11006  0CE8  023D               	subwf	??___fldiv,w
 11007  0CE9  00BF               	movwf	??___fldiv+2
 11008  0CEA  1C03               	skipc
 11009  0CEB  03C0               	decf	??___fldiv+3,f
 11010  0CEC  083F               	movf	??___fldiv+2,w
 11011  0CED  3E7F               	addlw	127
 11012  0CEE  00C7               	movwf	___fldiv@new_exp
 11013  0CEF  3000               	movlw	0
 11014  0CF0  3D40               	addwfc	??___fldiv+3,w
 11015  0CF1  00C8               	movwf	___fldiv@new_exp+1
 11016  0CF2  083C               	movf	___fldiv@b+3,w
 11017  0CF3  00C5               	movwf	___fldiv@rem+3
 11018  0CF4  083B               	movf	___fldiv@b+2,w
 11019  0CF5  00C4               	movwf	___fldiv@rem+2
 11020  0CF6  083A               	movf	___fldiv@b+1,w
 11021  0CF7  00C3               	movwf	___fldiv@rem+1
 11022  0CF8  0839               	movf	___fldiv@b,w
 11023  0CF9  00C2               	movwf	___fldiv@rem
 11024  0CFA  3000               	movlw	0
 11025  0CFB  00BC               	movwf	___fldiv@b+3
 11026  0CFC  3000               	movlw	0
 11027  0CFD  00BB               	movwf	___fldiv@b+2
 11028  0CFE  3000               	movlw	0
 11029  0CFF  00BA               	movwf	___fldiv@b+1
 11030  0D00  3000               	movlw	0
 11031  0D01  00B9               	movwf	___fldiv@b
 11032  0D02  3000               	movlw	0
 11033  0D03  00CC               	movwf	___fldiv@grs+3
 11034  0D04  3000               	movlw	0
 11035  0D05  00CB               	movwf	___fldiv@grs+2
 11036  0D06  3000               	movlw	0
 11037  0D07  00CA               	movwf	___fldiv@grs+1
 11038  0D08  3000               	movlw	0
 11039  0D09  00C9               	movwf	___fldiv@grs
 11040  0D0A  01CE               	clrf	___fldiv@aexp
 11041  0D0B                     l3888:
 11042  0D0B  301A               	movlw	26
 11043  0D0C  024E               	subwf	___fldiv@aexp,w
 11044  0D0D  1803               	btfsc	3,0
 11045  0D0E  2D47               	goto	l3890
 11046  0D0F  084E               	movf	___fldiv@aexp,w
 11047  0D10  1903               	btfsc	3,2
 11048  0D11  2D29               	goto	l3880
 11049  0D12  3001               	movlw	1
 11050  0D13                     u3175:
 11051  0D13  35C2               	lslf	___fldiv@rem,f
 11052  0D14  0DC3               	rlf	___fldiv@rem+1,f
 11053  0D15  0DC4               	rlf	___fldiv@rem+2,f
 11054  0D16  0DC5               	rlf	___fldiv@rem+3,f
 11055  0D17  0B89               	decfsz	9,f
 11056  0D18  2D13               	goto	u3175
 11057  0D19  3001               	movlw	1
 11058  0D1A                     u3185:
 11059  0D1A  35B9               	lslf	___fldiv@b,f
 11060  0D1B  0DBA               	rlf	___fldiv@b+1,f
 11061  0D1C  0DBB               	rlf	___fldiv@b+2,f
 11062  0D1D  0DBC               	rlf	___fldiv@b+3,f
 11063  0D1E  0B89               	decfsz	9,f
 11064  0D1F  2D1A               	goto	u3185
 11065  0D20  1BCC               	btfsc	___fldiv@grs+3,7
 11066  0D21  1439               	bsf	___fldiv@b,0
 11067  0D22  3001               	movlw	1
 11068  0D23                     u3205:
 11069  0D23  35C9               	lslf	___fldiv@grs,f
 11070  0D24  0DCA               	rlf	___fldiv@grs+1,f
 11071  0D25  0DCB               	rlf	___fldiv@grs+2,f
 11072  0D26  0DCC               	rlf	___fldiv@grs+3,f
 11073  0D27  0B89               	decfsz	9,f
 11074  0D28  2D23               	goto	u3205
 11075  0D29                     l3880:
 11076  0D29  0838               	movf	___fldiv@a+3,w
 11077  0D2A  0245               	subwf	___fldiv@rem+3,w
 11078  0D2B  1D03               	skipz
 11079  0D2C  2D37               	goto	u3215
 11080  0D2D  0837               	movf	___fldiv@a+2,w
 11081  0D2E  0244               	subwf	___fldiv@rem+2,w
 11082  0D2F  1D03               	skipz
 11083  0D30  2D37               	goto	u3215
 11084  0D31  0836               	movf	___fldiv@a+1,w
 11085  0D32  0243               	subwf	___fldiv@rem+1,w
 11086  0D33  1D03               	skipz
 11087  0D34  2D37               	goto	u3215
 11088  0D35  0835               	movf	___fldiv@a,w
 11089  0D36  0242               	subwf	___fldiv@rem,w
 11090  0D37                     u3215:
 11091  0D37  1C03               	skipc
 11092  0D38  2D42               	goto	l3886
 11093  0D39  174C               	bsf	___fldiv@grs+3,6
 11094  0D3A  0835               	movf	___fldiv@a,w
 11095  0D3B  02C2               	subwf	___fldiv@rem,f
 11096  0D3C  0836               	movf	___fldiv@a+1,w
 11097  0D3D  3BC3               	subwfb	___fldiv@rem+1,f
 11098  0D3E  0837               	movf	___fldiv@a+2,w
 11099  0D3F  3BC4               	subwfb	___fldiv@rem+2,f
 11100  0D40  0838               	movf	___fldiv@a+3,w
 11101  0D41  3BC5               	subwfb	___fldiv@rem+3,f
 11102  0D42                     l3886:
 11103  0D42  3001               	movlw	1
 11104  0D43  00BD               	movwf	??___fldiv
 11105  0D44  083D               	movf	??___fldiv,w
 11106  0D45  07CE               	addwf	___fldiv@aexp,f
 11107  0D46  2D0B               	goto	l3888
 11108  0D47                     l3890:
 11109  0D47  0845               	movf	___fldiv@rem+3,w
 11110  0D48  0444               	iorwf	___fldiv@rem+2,w
 11111  0D49  0443               	iorwf	___fldiv@rem+1,w
 11112  0D4A  0442               	iorwf	___fldiv@rem,w
 11113  0D4B  1D03               	btfss	3,2
 11114  0D4C  1449               	bsf	___fldiv@grs,0
 11115  0D4D                     l3904:
 11116  0D4D  1BBB               	btfsc	___fldiv@b+2,7
 11117  0D4E  2D64               	goto	l3906
 11118  0D4F  3001               	movlw	1
 11119  0D50                     u3245:
 11120  0D50  35B9               	lslf	___fldiv@b,f
 11121  0D51  0DBA               	rlf	___fldiv@b+1,f
 11122  0D52  0DBB               	rlf	___fldiv@b+2,f
 11123  0D53  0DBC               	rlf	___fldiv@b+3,f
 11124  0D54  0B89               	decfsz	9,f
 11125  0D55  2D50               	goto	u3245
 11126  0D56  1BCC               	btfsc	___fldiv@grs+3,7
 11127  0D57  1439               	bsf	___fldiv@b,0
 11128  0D58  3001               	movlw	1
 11129  0D59                     u3265:
 11130  0D59  35C9               	lslf	___fldiv@grs,f
 11131  0D5A  0DCA               	rlf	___fldiv@grs+1,f
 11132  0D5B  0DCB               	rlf	___fldiv@grs+2,f
 11133  0D5C  0DCC               	rlf	___fldiv@grs+3,f
 11134  0D5D  0B89               	decfsz	9,f
 11135  0D5E  2D59               	goto	u3265
 11136  0D5F  30FF               	movlw	255
 11137  0D60  07C7               	addwf	___fldiv@new_exp,f
 11138  0D61  30FF               	movlw	255
 11139  0D62  3DC8               	addwfc	___fldiv@new_exp+1,f
 11140  0D63  2D4D               	goto	l3904
 11141  0D64                     l3906:
 11142  0D64  01CE               	clrf	___fldiv@aexp
 11143  0D65  1FCC               	btfss	___fldiv@grs+3,7
 11144  0D66  2D7D               	goto	l3916
 11145  0D67  30FF               	movlw	255
 11146  0D68  0549               	andwf	___fldiv@grs,w
 11147  0D69  00BD               	movwf	??___fldiv
 11148  0D6A  30FF               	movlw	255
 11149  0D6B  054A               	andwf	___fldiv@grs+1,w
 11150  0D6C  00BE               	movwf	??___fldiv+1
 11151  0D6D  30FF               	movlw	255
 11152  0D6E  054B               	andwf	___fldiv@grs+2,w
 11153  0D6F  00BF               	movwf	??___fldiv+2
 11154  0D70  307F               	movlw	127
 11155  0D71  054C               	andwf	___fldiv@grs+3,w
 11156  0D72  00C0               	movwf	??___fldiv+3
 11157  0D73  0840               	movf	??___fldiv+3,w
 11158  0D74  043F               	iorwf	??___fldiv+2,w
 11159  0D75  043E               	iorwf	??___fldiv+1,w
 11160  0D76  043D               	iorwf	??___fldiv,w
 11161  0D77  1903               	skipnz
 11162  0D78  1839               	btfsc	___fldiv@b,0
 11163  0D79  2D7B               	goto	l3912
 11164  0D7A  2D7D               	goto	l3916
 11165  0D7B                     l3912:
 11166  0D7B  01CE               	clrf	___fldiv@aexp
 11167  0D7C  0ACE               	incf	___fldiv@aexp,f
 11168  0D7D                     l3916:
 11169  0D7D  084E               	movf	___fldiv@aexp,w
 11170  0D7E  1903               	btfsc	3,2
 11171  0D7F  2DA6               	goto	l3926
 11172  0D80  3001               	movlw	1
 11173  0D81  07B9               	addwf	___fldiv@b,f
 11174  0D82  3000               	movlw	0
 11175  0D83  3DBA               	addwfc	___fldiv@b+1,f
 11176  0D84  3000               	movlw	0
 11177  0D85  3DBB               	addwfc	___fldiv@b+2,f
 11178  0D86  3000               	movlw	0
 11179  0D87  3DBC               	addwfc	___fldiv@b+3,f
 11180  0D88  1C3C               	btfss	___fldiv@b+3,0
 11181  0D89  2DA6               	goto	l3926
 11182  0D8A  0839               	movf	___fldiv@b,w
 11183  0D8B  00BD               	movwf	??___fldiv
 11184  0D8C  083A               	movf	___fldiv@b+1,w
 11185  0D8D  00BE               	movwf	??___fldiv+1
 11186  0D8E  083B               	movf	___fldiv@b+2,w
 11187  0D8F  00BF               	movwf	??___fldiv+2
 11188  0D90  083C               	movf	___fldiv@b+3,w
 11189  0D91  00C0               	movwf	??___fldiv+3
 11190  0D92  3001               	movlw	1
 11191  0D93  00C1               	movwf	??___fldiv+4
 11192  0D94                     u3335:
 11193  0D94  37C0               	asrf	??___fldiv+3,f
 11194  0D95  0CBF               	rrf	??___fldiv+2,f
 11195  0D96  0CBE               	rrf	??___fldiv+1,f
 11196  0D97  0CBD               	rrf	??___fldiv,f
 11197  0D98  0BC1               	decfsz	??___fldiv+4,f
 11198  0D99  2D94               	goto	u3335
 11199  0D9A  0840               	movf	??___fldiv+3,w
 11200  0D9B  00BC               	movwf	___fldiv@b+3
 11201  0D9C  083F               	movf	??___fldiv+2,w
 11202  0D9D  00BB               	movwf	___fldiv@b+2
 11203  0D9E  083E               	movf	??___fldiv+1,w
 11204  0D9F  00BA               	movwf	___fldiv@b+1
 11205  0DA0  083D               	movf	??___fldiv,w
 11206  0DA1  00B9               	movwf	___fldiv@b
 11207  0DA2  3001               	movlw	1
 11208  0DA3  07C7               	addwf	___fldiv@new_exp,f
 11209  0DA4  3000               	movlw	0
 11210  0DA5  3DC8               	addwfc	___fldiv@new_exp+1,f
 11211  0DA6                     l3926:
 11212  0DA6  0848               	movf	___fldiv@new_exp+1,w
 11213  0DA7  3A80               	xorlw	128
 11214  0DA8  00BD               	movwf	??___fldiv
 11215  0DA9  3080               	movlw	128
 11216  0DAA  023D               	subwf	??___fldiv,w
 11217  0DAB  1D03               	skipz
 11218  0DAC  2DAF               	goto	u3345
 11219  0DAD  30FF               	movlw	255
 11220  0DAE  0247               	subwf	___fldiv@new_exp,w
 11221  0DAF                     u3345:
 11222  0DAF  1C03               	skipc
 11223  0DB0  2DBE               	goto	l1465
 11224  0DB1  30FF               	movlw	255
 11225  0DB2  0020               	movlb	0	; select bank0
 11226  0DB3  00C7               	movwf	___fldiv@new_exp
 11227  0DB4  3000               	movlw	0
 11228  0DB5  00C8               	movwf	___fldiv@new_exp+1
 11229  0DB6  3000               	movlw	0
 11230  0DB7  00BC               	movwf	___fldiv@b+3
 11231  0DB8  3000               	movlw	0
 11232  0DB9  00BB               	movwf	___fldiv@b+2
 11233  0DBA  3000               	movlw	0
 11234  0DBB  00BA               	movwf	___fldiv@b+1
 11235  0DBC  3000               	movlw	0
 11236  0DBD  00B9               	movwf	___fldiv@b
 11237  0DBE                     l1465:
 11238  0DBE  0020               	movlb	0	; select bank0
 11239  0DBF  0848               	movf	___fldiv@new_exp+1,w
 11240  0DC0  3A80               	xorlw	128
 11241  0DC1  00BD               	movwf	??___fldiv
 11242  0DC2  3080               	movlw	128
 11243  0DC3  023D               	subwf	??___fldiv,w
 11244  0DC4  1D03               	skipz
 11245  0DC5  2DC8               	goto	u3355
 11246  0DC6  3001               	movlw	1
 11247  0DC7  0247               	subwf	___fldiv@new_exp,w
 11248  0DC8                     u3355:
 11249  0DC8  1803               	skipnc
 11250  0DC9  2DD6               	goto	l1466
 11251  0DCA  0020               	movlb	0	; select bank0
 11252  0DCB  01C7               	clrf	___fldiv@new_exp
 11253  0DCC  01C8               	clrf	___fldiv@new_exp+1
 11254  0DCD  3000               	movlw	0
 11255  0DCE  00BC               	movwf	___fldiv@b+3
 11256  0DCF  3000               	movlw	0
 11257  0DD0  00BB               	movwf	___fldiv@b+2
 11258  0DD1  3000               	movlw	0
 11259  0DD2  00BA               	movwf	___fldiv@b+1
 11260  0DD3  3000               	movlw	0
 11261  0DD4  00B9               	movwf	___fldiv@b
 11262  0DD5  01C6               	clrf	___fldiv@sign
 11263  0DD6                     l1466:
 11264  0DD6  0020               	movlb	0	; select bank0
 11265  0DD7  0847               	movf	___fldiv@new_exp,w
 11266  0DD8  00BD               	movwf	??___fldiv
 11267  0DD9  083D               	movf	??___fldiv,w
 11268  0DDA  00CD               	movwf	___fldiv@bexp
 11269  0DDB  1C4D               	btfss	___fldiv@bexp,0
 11270  0DDC  2DDF               	goto	l3940
 11271  0DDD  17BB               	bsf	___fldiv@b+2,7
 11272  0DDE  2DE3               	goto	l1468
 11273  0DDF                     l3940:
 11274  0DDF  307F               	movlw	127
 11275  0DE0  00BD               	movwf	??___fldiv
 11276  0DE1  083D               	movf	??___fldiv,w
 11277  0DE2  05BB               	andwf	___fldiv@b+2,f
 11278  0DE3                     l1468:
 11279  0DE3  364D               	lsrf	___fldiv@bexp,w
 11280  0DE4  00BD               	movwf	??___fldiv
 11281  0DE5  083D               	movf	??___fldiv,w
 11282  0DE6  00BC               	movwf	___fldiv@b+3
 11283  0DE7  2CC9               	goto	L4
 11284  0DE8                     __end_of___fldiv:
 11285                           
 11286                           	psect	text53
 11287  12E2                     __ptext53:	
 11288 ;; *************** function _StartStop_Buzzer *****************
 11289 ;; Defined at:
 11290 ;;		line 194 in file "main.c"
 11291 ;; Parameters:    Size  Location     Type
 11292 ;;  OnOff           1    wreg     _Bool 
 11293 ;; Auto vars:     Size  Location     Type
 11294 ;;  OnOff           1    0[COMMON] _Bool 
 11295 ;; Return value:  Size  Location     Type
 11296 ;;                  1    wreg      void 
 11297 ;; Registers used:
 11298 ;;		wreg, status,2, status,0
 11299 ;; Tracked objects:
 11300 ;;		On entry : 0/2
 11301 ;;		On exit  : 1F/2
 11302 ;;		Unchanged: 0/0
 11303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11308 ;;Total ram usage:        1 bytes
 11309 ;; Hardware stack levels used:    1
 11310 ;; Hardware stack levels required when called:    5
 11311 ;; This function calls:
 11312 ;;		Nothing
 11313 ;; This function is called by:
 11314 ;;		_Init_Function
 11315 ;;		_StartHeater
 11316 ;; This function uses a non-reentrant model
 11317 ;;
 11318                           
 11319                           
 11320                           ;psect for function _StartStop_Buzzer
 11321  12E2                     _StartStop_Buzzer:
 11322                           
 11323                           ;incstack = 0
 11324                           ; Regs used in _StartStop_Buzzer: [wreg+status,2+status,0]
 11325                           ;StartStop_Buzzer@OnOff stored from wreg
 11326  12E2  00F0               	movwf	StartStop_Buzzer@OnOff
 11327                           
 11328                           ;main.c: 196:     if (1 == OnOff){
 11329  12E3  0370               	decf	StartStop_Buzzer@OnOff,w
 11330  12E4  1D03               	btfss	3,2
 11331  12E5  2AE9               	goto	l864
 11332                           
 11333                           ;main.c: 198:         do { LATCbits.LATC4 = 1; } while(0);
 11334  12E6  0022               	movlb	2	; select bank2
 11335  12E7  160E               	bsf	14,4	;volatile
 11336  12E8  0008               	return
 11337  12E9                     l864:	
 11338                           ;main.c: 202:         do { LATCbits.LATC4 = 0; } while(0);
 11339                           
 11340  12E9  0022               	movlb	2	; select bank2
 11341  12EA  120E               	bcf	14,4	;volatile
 11342  12EB  0008               	return
 11343  12EC                     __end_of_StartStop_Buzzer:
 11344                           
 11345                           	psect	text54
 11346  1330                     __ptext54:	
 11347 ;; *************** function _StartStop_AlarmLED_Blink *****************
 11348 ;; Defined at:
 11349 ;;		line 166 in file "main.c"
 11350 ;; Parameters:    Size  Location     Type
 11351 ;;  OnOff           1    wreg     _Bool 
 11352 ;; Auto vars:     Size  Location     Type
 11353 ;;  OnOff           1    0[COMMON] _Bool 
 11354 ;; Return value:  Size  Location     Type
 11355 ;;                  1    wreg      void 
 11356 ;; Registers used:
 11357 ;;		wreg, status,2, status,0, pclath, cstack
 11358 ;; Tracked objects:
 11359 ;;		On entry : 0/1
 11360 ;;		On exit  : 15/0
 11361 ;;		Unchanged: 0/0
 11362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;Total ram usage:        1 bytes
 11368 ;; Hardware stack levels used:    1
 11369 ;; Hardware stack levels required when called:    6
 11370 ;; This function calls:
 11371 ;;		_TMR4_StartTimer
 11372 ;;		_TMR4_StopTimer
 11373 ;; This function is called by:
 11374 ;;		_Init_Function
 11375 ;;		_StartHeater
 11376 ;; This function uses a non-reentrant model
 11377 ;;
 11378                           
 11379                           
 11380                           ;psect for function _StartStop_AlarmLED_Blink
 11381  1330                     _StartStop_AlarmLED_Blink:
 11382                           
 11383                           ;incstack = 0
 11384                           ; Regs used in _StartStop_AlarmLED_Blink: [wreg+status,2+status,0+pclath+cstack]
 11385                           ;StartStop_AlarmLED_Blink@OnOff stored from wreg
 11386  1330  00F0               	movwf	StartStop_AlarmLED_Blink@OnOff
 11387                           
 11388                           ;main.c: 168:     if (1 == OnOff){
 11389  1331  0370               	decf	StartStop_AlarmLED_Blink@OnOff,w
 11390  1332  1D03               	btfss	3,2
 11391  1333  2B37               	goto	l4238
 11392                           
 11393                           ;main.c: 170:         TMR4_StartTimer();
 11394  1334  3192  2276         	fcall	_TMR4_StartTimer
 11395                           
 11396                           ;main.c: 171:     }
 11397  1336  0008               	return
 11398  1337                     l4238:
 11399                           
 11400                           ;main.c: 174:         TMR4_StopTimer();
 11401  1337  3192  2279         	fcall	_TMR4_StopTimer
 11402  1339  0022               	movlb	2	; select bank2
 11403  133A  110E               	bcf	14,2	;volatile
 11404  133B  0008               	return
 11405  133C                     __end_of_StartStop_AlarmLED_Blink:
 11406                           
 11407                           	psect	text55
 11408  1279                     __ptext55:	
 11409 ;; *************** function _TMR4_StopTimer *****************
 11410 ;; Defined at:
 11411 ;;		line 93 in file "mcc_generated_files/tmr4.c"
 11412 ;; Parameters:    Size  Location     Type
 11413 ;;		None
 11414 ;; Auto vars:     Size  Location     Type
 11415 ;;		None
 11416 ;; Return value:  Size  Location     Type
 11417 ;;                  1    wreg      void 
 11418 ;; Registers used:
 11419 ;;		None
 11420 ;; Tracked objects:
 11421 ;;		On entry : 0/1
 11422 ;;		On exit  : 1F/8
 11423 ;;		Unchanged: 0/0
 11424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11429 ;;Total ram usage:        0 bytes
 11430 ;; Hardware stack levels used:    1
 11431 ;; Hardware stack levels required when called:    5
 11432 ;; This function calls:
 11433 ;;		Nothing
 11434 ;; This function is called by:
 11435 ;;		_StartStop_AlarmLED_Blink
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439                           
 11440                           ;psect for function _TMR4_StopTimer
 11441  1279                     _TMR4_StopTimer:
 11442                           
 11443                           ;mcc_generated_files/tmr4.c: 96:     T4CONbits.TMR4ON = 0;
 11444                           
 11445                           ;incstack = 0
 11446                           ; Regs used in _TMR4_StopTimer: []
 11447  1279  0028               	movlb	8	; select bank8
 11448  127A  1117               	bcf	23,2	;volatile
 11449  127B  0008               	return
 11450  127C                     __end_of_TMR4_StopTimer:
 11451                           
 11452                           	psect	text56
 11453  1276                     __ptext56:	
 11454 ;; *************** function _TMR4_StartTimer *****************
 11455 ;; Defined at:
 11456 ;;		line 87 in file "mcc_generated_files/tmr4.c"
 11457 ;; Parameters:    Size  Location     Type
 11458 ;;		None
 11459 ;; Auto vars:     Size  Location     Type
 11460 ;;		None
 11461 ;; Return value:  Size  Location     Type
 11462 ;;                  1    wreg      void 
 11463 ;; Registers used:
 11464 ;;		None
 11465 ;; Tracked objects:
 11466 ;;		On entry : 0/1
 11467 ;;		On exit  : 1F/8
 11468 ;;		Unchanged: 0/0
 11469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11474 ;;Total ram usage:        0 bytes
 11475 ;; Hardware stack levels used:    1
 11476 ;; Hardware stack levels required when called:    5
 11477 ;; This function calls:
 11478 ;;		Nothing
 11479 ;; This function is called by:
 11480 ;;		_StartStop_AlarmLED_Blink
 11481 ;; This function uses a non-reentrant model
 11482 ;;
 11483                           
 11484                           
 11485                           ;psect for function _TMR4_StartTimer
 11486  1276                     _TMR4_StartTimer:
 11487                           
 11488                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
 11489                           
 11490                           ;incstack = 0
 11491                           ; Regs used in _TMR4_StartTimer: []
 11492  1276  0028               	movlb	8	; select bank8
 11493  1277  1517               	bsf	23,2	;volatile
 11494  1278  0008               	return
 11495  1279                     __end_of_TMR4_StartTimer:
 11496                           
 11497                           	psect	text57
 11498  12D8                     __ptext57:	
 11499 ;; *************** function _StartStop_AlarmLED *****************
 11500 ;; Defined at:
 11501 ;;		line 152 in file "main.c"
 11502 ;; Parameters:    Size  Location     Type
 11503 ;;  OnOff           1    wreg     _Bool 
 11504 ;; Auto vars:     Size  Location     Type
 11505 ;;  OnOff           1    0[COMMON] _Bool 
 11506 ;; Return value:  Size  Location     Type
 11507 ;;                  1    wreg      void 
 11508 ;; Registers used:
 11509 ;;		wreg, status,2, status,0
 11510 ;; Tracked objects:
 11511 ;;		On entry : 0/1
 11512 ;;		On exit  : 1F/2
 11513 ;;		Unchanged: 0/0
 11514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11518 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11519 ;;Total ram usage:        1 bytes
 11520 ;; Hardware stack levels used:    1
 11521 ;; Hardware stack levels required when called:    5
 11522 ;; This function calls:
 11523 ;;		Nothing
 11524 ;; This function is called by:
 11525 ;;		_Init_Function
 11526 ;; This function uses a non-reentrant model
 11527 ;;
 11528                           
 11529                           
 11530                           ;psect for function _StartStop_AlarmLED
 11531  12D8                     _StartStop_AlarmLED:
 11532                           
 11533                           ;incstack = 0
 11534                           ; Regs used in _StartStop_AlarmLED: [wreg+status,2+status,0]
 11535                           ;StartStop_AlarmLED@OnOff stored from wreg
 11536  12D8  00F0               	movwf	StartStop_AlarmLED@OnOff
 11537                           
 11538                           ;main.c: 154:     if (1 == OnOff){
 11539  12D9  0370               	decf	StartStop_AlarmLED@OnOff,w
 11540  12DA  1D03               	btfss	3,2
 11541  12DB  2ADF               	goto	l839
 11542                           
 11543                           ;main.c: 156:         do { LATCbits.LATC2 = 1; } while(0);
 11544  12DC  0022               	movlb	2	; select bank2
 11545  12DD  150E               	bsf	14,2	;volatile
 11546  12DE  0008               	return
 11547  12DF                     l839:	
 11548                           ;main.c: 160:         do { LATCbits.LATC2 = 0; } while(0);
 11549                           
 11550  12DF  0022               	movlb	2	; select bank2
 11551  12E0  110E               	bcf	14,2	;volatile
 11552  12E1  0008               	return
 11553  12E2                     __end_of_StartStop_AlarmLED:
 11554                           
 11555                           	psect	text58
 11556  1462                     __ptext58:	
 11557 ;; *************** function _SYSTEM_Initialize *****************
 11558 ;; Defined at:
 11559 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;		None
 11562 ;; Auto vars:     Size  Location     Type
 11563 ;;		None
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  1    wreg      void 
 11566 ;; Registers used:
 11567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11568 ;; Tracked objects:
 11569 ;;		On entry : B1F/0
 11570 ;;		On exit  : 1F/1
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;Total ram usage:        0 bytes
 11578 ;; Hardware stack levels used:    1
 11579 ;; Hardware stack levels required when called:   10
 11580 ;; This function calls:
 11581 ;;		_MTOUCH_Initialize
 11582 ;;		_OSCILLATOR_Initialize
 11583 ;;		_PIN_MANAGER_Initialize
 11584 ;;		_TMR2_Initialize
 11585 ;;		_TMR4_Initialize
 11586 ;;		_TMR6_Initialize
 11587 ;;		_WDT_Initialize
 11588 ;; This function is called by:
 11589 ;;		_main
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           
 11593                           
 11594                           ;psect for function _SYSTEM_Initialize
 11595  1462                     _SYSTEM_Initialize:
 11596                           
 11597                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11598                           
 11599                           ;incstack = 0
 11600                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11601  1462  3196  2675  3194   	fcall	_PIN_MANAGER_Initialize
 11602                           
 11603                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11604  1465  3192  229D  3194   	fcall	_OSCILLATOR_Initialize
 11605                           
 11606                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
 11607  1468  3192  227F  3194   	fcall	_WDT_Initialize
 11608                           
 11609                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
 11610  146B  3194  2415  3194   	fcall	_TMR6_Initialize
 11611                           
 11612                           ;mcc_generated_files/mcc.c: 57:     TMR4_Initialize();
 11613  146E  3193  23F3  3194   	fcall	_TMR4_Initialize
 11614                           
 11615                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 11616  1471  3193  2380  3194   	fcall	_TMR2_Initialize
 11617                           
 11618                           ;mcc_generated_files/mcc.c: 59:     MTOUCH_Initialize();
 11619  1474  3193  2324         	fcall	_MTOUCH_Initialize
 11620  1476  0008               	return
 11621  1477                     __end_of_SYSTEM_Initialize:
 11622                           
 11623                           	psect	text59
 11624  127F                     __ptext59:	
 11625 ;; *************** function _WDT_Initialize *****************
 11626 ;; Defined at:
 11627 ;;		line 72 in file "mcc_generated_files/mcc.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;		None
 11630 ;; Auto vars:     Size  Location     Type
 11631 ;;		None
 11632 ;; Return value:  Size  Location     Type
 11633 ;;                  1    wreg      void 
 11634 ;; Registers used:
 11635 ;;		wreg
 11636 ;; Tracked objects:
 11637 ;;		On entry : 1F/2
 11638 ;;		On exit  : 1F/1
 11639 ;;		Unchanged: 0/0
 11640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11645 ;;Total ram usage:        0 bytes
 11646 ;; Hardware stack levels used:    1
 11647 ;; Hardware stack levels required when called:    5
 11648 ;; This function calls:
 11649 ;;		Nothing
 11650 ;; This function is called by:
 11651 ;;		_SYSTEM_Initialize
 11652 ;; This function uses a non-reentrant model
 11653 ;;
 11654                           
 11655                           
 11656                           ;psect for function _WDT_Initialize
 11657  127F                     _WDT_Initialize:
 11658                           
 11659                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
 11660                           
 11661                           ;incstack = 0
 11662                           ; Regs used in _WDT_Initialize: [wreg]
 11663  127F  3016               	movlw	22
 11664  1280  0021               	movlb	1	; select bank1
 11665  1281  0097               	movwf	23	;volatile
 11666  1282  0008               	return
 11667  1283                     __end_of_WDT_Initialize:
 11668                           
 11669                           	psect	text60
 11670  1415                     __ptext60:	
 11671 ;; *************** function _TMR6_Initialize *****************
 11672 ;; Defined at:
 11673 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 11674 ;; Parameters:    Size  Location     Type
 11675 ;;		None
 11676 ;; Auto vars:     Size  Location     Type
 11677 ;;		None
 11678 ;; Return value:  Size  Location     Type
 11679 ;;                  1    wreg      void 
 11680 ;; Registers used:
 11681 ;;		wreg, status,2, status,0, pclath, cstack
 11682 ;; Tracked objects:
 11683 ;;		On entry : 1F/1
 11684 ;;		On exit  : 1F/8
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;Total ram usage:        0 bytes
 11692 ;; Hardware stack levels used:    1
 11693 ;; Hardware stack levels required when called:    6
 11694 ;; This function calls:
 11695 ;;		_TMR6_SetInterruptHandler
 11696 ;; This function is called by:
 11697 ;;		_SYSTEM_Initialize
 11698 ;; This function uses a non-reentrant model
 11699 ;;
 11700                           
 11701                           
 11702                           ;psect for function _TMR6_Initialize
 11703  1415                     _TMR6_Initialize:
 11704                           
 11705                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0xC7;
 11706                           
 11707                           ;incstack = 0
 11708                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11709  1415  30C7               	movlw	199
 11710  1416  0028               	movlb	8	; select bank8
 11711  1417  009D               	movwf	29	;volatile
 11712                           
 11713                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
 11714  1418  019C               	clrf	28	;volatile
 11715                           
 11716                           ;mcc_generated_files/tmr6.c: 75:     PIR3bits.TMR6IF = 0;
 11717  1419  0020               	movlb	0	; select bank0
 11718  141A  1193               	bcf	19,3	;volatile
 11719                           
 11720                           ;mcc_generated_files/tmr6.c: 78:     PIE3bits.TMR6IE = 1;
 11721  141B  0021               	movlb	1	; select bank1
 11722  141C  1593               	bsf	19,3	;volatile
 11723                           
 11724                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 11725  141D  306C               	movlw	low _TMR6_DefaultInterruptHandler
 11726  141E  00F0               	movwf	TMR6_SetInterruptHandler@InterruptHandler
 11727  141F  3012               	movlw	high _TMR6_DefaultInterruptHandler
 11728  1420  00F1               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
 11729  1421  3192  2292         	fcall	_TMR6_SetInterruptHandler
 11730                           
 11731                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x04;
 11732  1423  3004               	movlw	4
 11733  1424  0028               	movlb	8	; select bank8
 11734  1425  009E               	movwf	30	;volatile
 11735  1426  0008               	return
 11736  1427                     __end_of_TMR6_Initialize:
 11737                           
 11738                           	psect	text61
 11739  1292                     __ptext61:	
 11740 ;; *************** function _TMR6_SetInterruptHandler *****************
 11741 ;; Defined at:
 11742 ;;		line 132 in file "mcc_generated_files/tmr6.c"
 11743 ;; Parameters:    Size  Location     Type
 11744 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 11745 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 11746 ;; Auto vars:     Size  Location     Type
 11747 ;;		None
 11748 ;; Return value:  Size  Location     Type
 11749 ;;                  1    wreg      void 
 11750 ;; Registers used:
 11751 ;;		wreg
 11752 ;; Tracked objects:
 11753 ;;		On entry : 1F/1
 11754 ;;		On exit  : 1F/1
 11755 ;;		Unchanged: 0/0
 11756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11761 ;;Total ram usage:        2 bytes
 11762 ;; Hardware stack levels used:    1
 11763 ;; Hardware stack levels required when called:    5
 11764 ;; This function calls:
 11765 ;;		Nothing
 11766 ;; This function is called by:
 11767 ;;		_TMR6_Initialize
 11768 ;; This function uses a non-reentrant model
 11769 ;;
 11770                           
 11771                           
 11772                           ;psect for function _TMR6_SetInterruptHandler
 11773  1292                     _TMR6_SetInterruptHandler:
 11774                           
 11775                           ;mcc_generated_files/tmr6.c: 133:     TMR6_InterruptHandler = InterruptHandler;
 11776                           
 11777                           ;incstack = 0
 11778                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
 11779  1292  0871               	movf	TMR6_SetInterruptHandler@InterruptHandler+1,w
 11780  1293  00C3               	movwf	(_TMR6_InterruptHandler+1)^(0+128)
 11781  1294  0870               	movf	TMR6_SetInterruptHandler@InterruptHandler,w
 11782  1295  00C2               	movwf	_TMR6_InterruptHandler^(0+128)
 11783  1296  0008               	return
 11784  1297                     __end_of_TMR6_SetInterruptHandler:
 11785                           
 11786                           	psect	text62
 11787  13F3                     __ptext62:	
 11788 ;; *************** function _TMR4_Initialize *****************
 11789 ;; Defined at:
 11790 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 11791 ;; Parameters:    Size  Location     Type
 11792 ;;		None
 11793 ;; Auto vars:     Size  Location     Type
 11794 ;;		None
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  1    wreg      void 
 11797 ;; Registers used:
 11798 ;;		wreg, status,2, status,0, pclath, cstack
 11799 ;; Tracked objects:
 11800 ;;		On entry : 1F/8
 11801 ;;		On exit  : 1F/8
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11808 ;;Total ram usage:        0 bytes
 11809 ;; Hardware stack levels used:    1
 11810 ;; Hardware stack levels required when called:    6
 11811 ;; This function calls:
 11812 ;;		_TMR4_SetInterruptHandler
 11813 ;; This function is called by:
 11814 ;;		_SYSTEM_Initialize
 11815 ;; This function uses a non-reentrant model
 11816 ;;
 11817                           
 11818                           
 11819                           ;psect for function _TMR4_Initialize
 11820  13F3                     _TMR4_Initialize:
 11821                           
 11822                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0x7C;
 11823                           
 11824                           ;incstack = 0
 11825                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11826  13F3  307C               	movlw	124
 11827  13F4  0096               	movwf	22	;volatile
 11828                           
 11829                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
 11830  13F5  0195               	clrf	21	;volatile
 11831                           
 11832                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
 11833  13F6  0020               	movlb	0	; select bank0
 11834  13F7  1093               	bcf	19,1	;volatile
 11835                           
 11836                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
 11837  13F8  0021               	movlb	1	; select bank1
 11838  13F9  1493               	bsf	19,1	;volatile
 11839                           
 11840                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 11841  13FA  306B               	movlw	low _TMR4_DefaultInterruptHandler
 11842  13FB  00F0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
 11843  13FC  3012               	movlw	high _TMR4_DefaultInterruptHandler
 11844  13FD  00F1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
 11845  13FE  3192  228D         	fcall	_TMR4_SetInterruptHandler
 11846                           
 11847                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x02;
 11848  1400  3002               	movlw	2
 11849  1401  0028               	movlb	8	; select bank8
 11850  1402  0097               	movwf	23	;volatile
 11851  1403  0008               	return
 11852  1404                     __end_of_TMR4_Initialize:
 11853                           
 11854                           	psect	text63
 11855  128D                     __ptext63:	
 11856 ;; *************** function _TMR4_SetInterruptHandler *****************
 11857 ;; Defined at:
 11858 ;;		line 132 in file "mcc_generated_files/tmr4.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 11861 ;;		 -> TMR4_Wroking_Blink_AlarmLED_isr(1), TMR4_DefaultInterruptHandler(1), 
 11862 ;; Auto vars:     Size  Location     Type
 11863 ;;		None
 11864 ;; Return value:  Size  Location     Type
 11865 ;;                  1    wreg      void 
 11866 ;; Registers used:
 11867 ;;		wreg
 11868 ;; Tracked objects:
 11869 ;;		On entry : 1F/1
 11870 ;;		On exit  : 1F/1
 11871 ;;		Unchanged: 0/0
 11872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11877 ;;Total ram usage:        2 bytes
 11878 ;; Hardware stack levels used:    1
 11879 ;; Hardware stack levels required when called:    5
 11880 ;; This function calls:
 11881 ;;		Nothing
 11882 ;; This function is called by:
 11883 ;;		_TMR4_Initialize
 11884 ;;		_main
 11885 ;; This function uses a non-reentrant model
 11886 ;;
 11887                           
 11888                           
 11889                           ;psect for function _TMR4_SetInterruptHandler
 11890  128D                     _TMR4_SetInterruptHandler:
 11891                           
 11892                           ;mcc_generated_files/tmr4.c: 133:     TMR4_InterruptHandler = InterruptHandler;
 11893                           
 11894                           ;incstack = 0
 11895                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
 11896  128D  0871               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
 11897  128E  00C5               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
 11898  128F  0870               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
 11899  1290  00C4               	movwf	_TMR4_InterruptHandler^(0+128)
 11900  1291  0008               	return
 11901  1292                     __end_of_TMR4_SetInterruptHandler:
 11902                           
 11903                           	psect	text64
 11904  1380                     __ptext64:	
 11905 ;; *************** function _TMR2_Initialize *****************
 11906 ;; Defined at:
 11907 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 11908 ;; Parameters:    Size  Location     Type
 11909 ;;		None
 11910 ;; Auto vars:     Size  Location     Type
 11911 ;;		None
 11912 ;; Return value:  Size  Location     Type
 11913 ;;                  1    wreg      void 
 11914 ;; Registers used:
 11915 ;;		wreg, status,2, status,0, pclath, cstack
 11916 ;; Tracked objects:
 11917 ;;		On entry : 1F/8
 11918 ;;		On exit  : 1F/0
 11919 ;;		Unchanged: 0/0
 11920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11925 ;;Total ram usage:        0 bytes
 11926 ;; Hardware stack levels used:    1
 11927 ;; Hardware stack levels required when called:    6
 11928 ;; This function calls:
 11929 ;;		_TMR2_SetInterruptHandler
 11930 ;; This function is called by:
 11931 ;;		_SYSTEM_Initialize
 11932 ;; This function uses a non-reentrant model
 11933 ;;
 11934                           
 11935                           
 11936                           ;psect for function _TMR2_Initialize
 11937  1380                     _TMR2_Initialize:
 11938                           
 11939                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xC7;
 11940                           
 11941                           ;incstack = 0
 11942                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11943  1380  30C7               	movlw	199
 11944  1381  0020               	movlb	0	; select bank0
 11945  1382  009B               	movwf	27	;volatile
 11946                           
 11947                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
 11948  1383  019A               	clrf	26	;volatile
 11949                           
 11950                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
 11951  1384  1091               	bcf	17,1	;volatile
 11952                           
 11953                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
 11954  1385  0021               	movlb	1	; select bank1
 11955  1386  1491               	bsf	17,1	;volatile
 11956                           
 11957                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 11958  1387  306A               	movlw	low _TMR2_DefaultInterruptHandler
 11959  1388  00F0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 11960  1389  3012               	movlw	high _TMR2_DefaultInterruptHandler
 11961  138A  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 11962  138B  3192  2288         	fcall	_TMR2_SetInterruptHandler
 11963                           
 11964                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x00;
 11965  138D  0020               	movlb	0	; select bank0
 11966  138E  019C               	clrf	28	;volatile
 11967  138F  0008               	return
 11968  1390                     __end_of_TMR2_Initialize:
 11969                           
 11970                           	psect	text65
 11971  1288                     __ptext65:	
 11972 ;; *************** function _TMR2_SetInterruptHandler *****************
 11973 ;; Defined at:
 11974 ;;		line 132 in file "mcc_generated_files/tmr2.c"
 11975 ;; Parameters:    Size  Location     Type
 11976 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 11977 ;;		 -> TMR2_Drive_TRIAC_isr(1), TMR2_DefaultInterruptHandler(1), 
 11978 ;; Auto vars:     Size  Location     Type
 11979 ;;		None
 11980 ;; Return value:  Size  Location     Type
 11981 ;;                  1    wreg      void 
 11982 ;; Registers used:
 11983 ;;		wreg
 11984 ;; Tracked objects:
 11985 ;;		On entry : 1F/1
 11986 ;;		On exit  : 1F/1
 11987 ;;		Unchanged: 0/0
 11988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;Total ram usage:        2 bytes
 11994 ;; Hardware stack levels used:    1
 11995 ;; Hardware stack levels required when called:    5
 11996 ;; This function calls:
 11997 ;;		Nothing
 11998 ;; This function is called by:
 11999 ;;		_TMR2_Initialize
 12000 ;;		_main
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004                           
 12005                           ;psect for function _TMR2_SetInterruptHandler
 12006  1288                     _TMR2_SetInterruptHandler:
 12007                           
 12008                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
 12009                           
 12010                           ;incstack = 0
 12011                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 12012  1288  0871               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 12013  1289  00C7               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 12014  128A  0870               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 12015  128B  00C6               	movwf	_TMR2_InterruptHandler^(0+128)
 12016  128C  0008               	return
 12017  128D                     __end_of_TMR2_SetInterruptHandler:
 12018                           
 12019                           	psect	text66
 12020  1675                     __ptext66:	
 12021 ;; *************** function _PIN_MANAGER_Initialize *****************
 12022 ;; Defined at:
 12023 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;		None
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;		None
 12028 ;; Return value:  Size  Location     Type
 12029 ;;                  1    wreg      void 
 12030 ;; Registers used:
 12031 ;;		wreg, status,2, status,0, pclath, cstack
 12032 ;; Tracked objects:
 12033 ;;		On entry : B1F/0
 12034 ;;		On exit  : 1F/1
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;Total ram usage:        0 bytes
 12042 ;; Hardware stack levels used:    1
 12043 ;; Hardware stack levels required when called:    6
 12044 ;; This function calls:
 12045 ;;		_IOCAF2_SetInterruptHandler
 12046 ;; This function is called by:
 12047 ;;		_SYSTEM_Initialize
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           
 12052                           ;psect for function _PIN_MANAGER_Initialize
 12053  1675                     _PIN_MANAGER_Initialize:
 12054                           
 12055                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 12056                           
 12057                           ;incstack = 0
 12058                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12059  1675  0022               	movlb	2	; select bank2
 12060  1676  018C               	clrf	12	;volatile
 12061                           
 12062                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 12063  1677  018D               	clrf	13	;volatile
 12064                           
 12065                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 12066  1678  018E               	clrf	14	;volatile
 12067                           
 12068                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x2F;
 12069  1679  302F               	movlw	47
 12070  167A  0021               	movlb	1	; select bank1
 12071  167B  008C               	movwf	12	;volatile
 12072                           
 12073                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
 12074  167C  3070               	movlw	112
 12075  167D  008D               	movwf	13	;volatile
 12076                           
 12077                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x03;
 12078  167E  3003               	movlw	3
 12079  167F  008E               	movwf	14	;volatile
 12080                           
 12081                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x03;
 12082  1680  3003               	movlw	3
 12083  1681  0023               	movlb	3	; select bank3
 12084  1682  008E               	movwf	14	;volatile
 12085                           
 12086                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x30;
 12087  1683  3030               	movlw	48
 12088  1684  008D               	movwf	13	;volatile
 12089                           
 12090                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x03;
 12091  1685  3003               	movlw	3
 12092  1686  008C               	movwf	12	;volatile
 12093                           
 12094                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 12095  1687  0024               	movlb	4	; select bank4
 12096  1688  018D               	clrf	13	;volatile
 12097                           
 12098                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x04;
 12099  1689  3004               	movlw	4
 12100  168A  008C               	movwf	12	;volatile
 12101                           
 12102                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
 12103  168B  018E               	clrf	14	;volatile
 12104                           
 12105                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 0;
 12106  168C  0021               	movlb	1	; select bank1
 12107  168D  1395               	bcf	21,7	;volatile
 12108                           
 12109                           ;mcc_generated_files/pin_manager.c: 92:     APFCON0 = 0x00;
 12110  168E  0022               	movlb	2	; select bank2
 12111  168F  019D               	clrf	29	;volatile
 12112                           
 12113                           ;mcc_generated_files/pin_manager.c: 93:     APFCON1 = 0x00;
 12114  1690  019E               	clrf	30	;volatile
 12115                           
 12116                           ;mcc_generated_files/pin_manager.c: 99:     IOCAFbits.IOCAF2 = 0;
 12117  1691  0027               	movlb	7	; select bank7
 12118  1692  1113               	bcf	19,2	;volatile
 12119                           
 12120                           ;mcc_generated_files/pin_manager.c: 101:     IOCANbits.IOCAN2 = 0;
 12121  1693  1112               	bcf	18,2	;volatile
 12122                           
 12123                           ;mcc_generated_files/pin_manager.c: 103:     IOCAPbits.IOCAP2 = 1;
 12124  1694  1511               	bsf	17,2	;volatile
 12125                           
 12126                           ;mcc_generated_files/pin_manager.c: 108:     IOCAF2_SetInterruptHandler(IOCAF2_DefaultIn
      +                          terruptHandler);
 12127  1695  3069               	movlw	low _IOCAF2_DefaultInterruptHandler
 12128  1696  00F0               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
 12129  1697  3012               	movlw	high _IOCAF2_DefaultInterruptHandler
 12130  1698  00F1               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
 12131  1699  3192  22A3         	fcall	_IOCAF2_SetInterruptHandler
 12132                           
 12133                           ;mcc_generated_files/pin_manager.c: 111:     INTCONbits.IOCIE = 1;
 12134  169B  158B               	bsf	11,3	;volatile
 12135  169C  0008               	return
 12136  169D                     __end_of_PIN_MANAGER_Initialize:
 12137                           
 12138                           	psect	text67
 12139  12A3                     __ptext67:	
 12140 ;; *************** function _IOCAF2_SetInterruptHandler *****************
 12141 ;; Defined at:
 12142 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 12143 ;; Parameters:    Size  Location     Type
 12144 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 12145 ;;		 -> Zero_Detection_isr(1), IOCAF2_DefaultInterruptHandler(1), 
 12146 ;; Auto vars:     Size  Location     Type
 12147 ;;		None
 12148 ;; Return value:  Size  Location     Type
 12149 ;;                  1    wreg      void 
 12150 ;; Registers used:
 12151 ;;		wreg
 12152 ;; Tracked objects:
 12153 ;;		On entry : 1A/2
 12154 ;;		On exit  : 1F/1
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12161 ;;Total ram usage:        2 bytes
 12162 ;; Hardware stack levels used:    1
 12163 ;; Hardware stack levels required when called:    5
 12164 ;; This function calls:
 12165 ;;		Nothing
 12166 ;; This function is called by:
 12167 ;;		_PIN_MANAGER_Initialize
 12168 ;;		_main
 12169 ;; This function uses a non-reentrant model
 12170 ;;
 12171                           
 12172                           
 12173                           ;psect for function _IOCAF2_SetInterruptHandler
 12174  12A3                     _IOCAF2_SetInterruptHandler:
 12175                           
 12176                           ;mcc_generated_files/pin_manager.c: 143:     IOCAF2_InterruptHandler = InterruptHandler;
 12177                           
 12178                           ;incstack = 0
 12179                           ; Regs used in _IOCAF2_SetInterruptHandler: [wreg]
 12180  12A3  0871               	movf	IOCAF2_SetInterruptHandler@InterruptHandler+1,w
 12181  12A4  0021               	movlb	1	; select bank1
 12182  12A5  00C9               	movwf	(_IOCAF2_InterruptHandler+1)^(0+128)
 12183  12A6  0870               	movf	IOCAF2_SetInterruptHandler@InterruptHandler,w
 12184  12A7  00C8               	movwf	_IOCAF2_InterruptHandler^(0+128)
 12185  12A8  0008               	return
 12186  12A9                     __end_of_IOCAF2_SetInterruptHandler:
 12187                           
 12188                           	psect	text68
 12189  129D                     __ptext68:	
 12190 ;; *************** function _OSCILLATOR_Initialize *****************
 12191 ;; Defined at:
 12192 ;;		line 62 in file "mcc_generated_files/mcc.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;		None
 12195 ;; Auto vars:     Size  Location     Type
 12196 ;;		None
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      void 
 12199 ;; Registers used:
 12200 ;;		wreg, status,2
 12201 ;; Tracked objects:
 12202 ;;		On entry : 1F/1
 12203 ;;		On exit  : 1F/2
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12210 ;;Total ram usage:        0 bytes
 12211 ;; Hardware stack levels used:    1
 12212 ;; Hardware stack levels required when called:    5
 12213 ;; This function calls:
 12214 ;;		Nothing
 12215 ;; This function is called by:
 12216 ;;		_SYSTEM_Initialize
 12217 ;; This function uses a non-reentrant model
 12218 ;;
 12219                           
 12220                           
 12221                           ;psect for function _OSCILLATOR_Initialize
 12222  129D                     _OSCILLATOR_Initialize:
 12223                           
 12224                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
 12225                           
 12226                           ;incstack = 0
 12227                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12228  129D  3070               	movlw	112
 12229  129E  0099               	movwf	25	;volatile
 12230                           
 12231                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
 12232  129F  0198               	clrf	24	;volatile
 12233                           
 12234                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
 12235  12A0  0022               	movlb	2	; select bank2
 12236  12A1  0196               	clrf	22	;volatile
 12237  12A2  0008               	return
 12238  12A3                     __end_of_OSCILLATOR_Initialize:
 12239                           
 12240                           	psect	text69
 12241  1324                     __ptext69:	
 12242 ;; *************** function _MTOUCH_Initialize *****************
 12243 ;; Defined at:
 12244 ;;		line 81 in file "mcc_generated_files/mtouch/mtouch.c"
 12245 ;; Parameters:    Size  Location     Type
 12246 ;;		None
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;		None
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  1    wreg      void 
 12251 ;; Registers used:
 12252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12253 ;; Tracked objects:
 12254 ;;		On entry : 1F/0
 12255 ;;		On exit  : 1F/1
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;Total ram usage:        0 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; Hardware stack levels required when called:    9
 12265 ;; This function calls:
 12266 ;;		_MTOUCH_Button_InitializeAll
 12267 ;;		_MTOUCH_Sensor_InitializeAll
 12268 ;;		_MTOUCH_Sensor_Sampled_ResetAll
 12269 ;;		_MTOUCH_Sensor_Scan_Initialize
 12270 ;; This function is called by:
 12271 ;;		_MTOUCH_Service_Mainloop
 12272 ;;		_SYSTEM_Initialize
 12273 ;; This function uses a non-reentrant model
 12274 ;;
 12275                           
 12276                           
 12277                           ;psect for function _MTOUCH_Initialize
 12278  1324                     _MTOUCH_Initialize:
 12279                           
 12280                           ;mcc_generated_files/mtouch/mtouch.c: 83:     MTOUCH_Sensor_InitializeAll();
 12281                           
 12282                           ;incstack = 0
 12283                           ; Regs used in _MTOUCH_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12284  1324  3193  2363  3193   	fcall	_MTOUCH_Sensor_InitializeAll
 12285                           
 12286                           ;mcc_generated_files/mtouch/mtouch.c: 84:     MTOUCH_Button_InitializeAll();
 12287  1327  3195  2516  3193   	fcall	_MTOUCH_Button_InitializeAll
 12288                           
 12289                           ;mcc_generated_files/mtouch/mtouch.c: 85:     MTOUCH_Sensor_Sampled_ResetAll();
 12290  132A  3194  2427  3193   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
 12291                           
 12292                           ;mcc_generated_files/mtouch/mtouch.c: 86:     MTOUCH_Sensor_Scan_Initialize();
 12293  132D  3192  2283         	fcall	_MTOUCH_Sensor_Scan_Initialize
 12294  132F  0008               	return
 12295  1330                     __end_of_MTOUCH_Initialize:
 12296                           
 12297                           	psect	text70
 12298  1283                     __ptext70:	
 12299 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
 12300 ;; Defined at:
 12301 ;;		line 172 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;		None
 12304 ;; Auto vars:     Size  Location     Type
 12305 ;;		None
 12306 ;; Return value:  Size  Location     Type
 12307 ;;                  1    wreg      void 
 12308 ;; Registers used:
 12309 ;;		wreg, status,2
 12310 ;; Tracked objects:
 12311 ;;		On entry : 0/1
 12312 ;;		On exit  : 1F/1
 12313 ;;		Unchanged: 0/0
 12314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12319 ;;Total ram usage:        0 bytes
 12320 ;; Hardware stack levels used:    1
 12321 ;; Hardware stack levels required when called:    5
 12322 ;; This function calls:
 12323 ;;		Nothing
 12324 ;; This function is called by:
 12325 ;;		_Sensor_Acq_ExecutePacket
 12326 ;;		_MTOUCH_Initialize
 12327 ;; This function uses a non-reentrant model
 12328 ;;
 12329                           
 12330                           
 12331                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
 12332  1283                     _MTOUCH_Sensor_Scan_Initialize:
 12333                           
 12334                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 175:     ADCON0 = (uint8_t)0;
 12335                           
 12336                           ;incstack = 0
 12337                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2]
 12338  1283  0021               	movlb	1	; select bank1
 12339  1284  019D               	clrf	29	;volatile
 12340                           
 12341                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 176:     ADCON1 = (uint8_t)( 0x1<<7 | 0x1<<
      +                          4 | 0x0 );
 12342  1285  3090               	movlw	144
 12343  1286  009E               	movwf	30	;volatile
 12344  1287  0008               	return
 12345  1288                     __end_of_MTOUCH_Sensor_Scan_Initialize:
 12346                           
 12347                           	psect	text71
 12348  1427                     __ptext71:	
 12349 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
 12350 ;; Defined at:
 12351 ;;		line 547 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12352 ;; Parameters:    Size  Location     Type
 12353 ;;		None
 12354 ;; Auto vars:     Size  Location     Type
 12355 ;;  sensor          1    2[COMMON] PTR struct .
 12356 ;;		 -> mtouch_sensor(18), 
 12357 ;; Return value:  Size  Location     Type
 12358 ;;                  1    wreg      void 
 12359 ;; Registers used:
 12360 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12361 ;; Tracked objects:
 12362 ;;		On entry : 0/0
 12363 ;;		On exit  : 0/0
 12364 ;;		Unchanged: 0/0
 12365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12369 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12370 ;;Total ram usage:        2 bytes
 12371 ;; Hardware stack levels used:    1
 12372 ;; Hardware stack levels required when called:    6
 12373 ;; This function calls:
 12374 ;;		_Sensor_Sampled_Reset
 12375 ;; This function is called by:
 12376 ;;		_MTOUCH_Initialize
 12377 ;;		_MTOUCH_Service_Mainloop
 12378 ;; This function uses a non-reentrant model
 12379 ;;
 12380                           
 12381                           
 12382                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
 12383  1427                     _MTOUCH_Sensor_Sampled_ResetAll:
 12384                           
 12385                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 549:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 550:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[(2u)-1];sensor++)
 12386                           
 12387                           ;incstack = 0
 12388                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 12389  1427  30B0               	movlw	(low (_mtouch_sensor| 0))& (0+255)
 12390  1428  00F1               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
 12391  1429  0871               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
 12392  142A  00F2               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
 12393  142B                     L5:
 12394  142B  30B9               	movlw	(low ((_mtouch_sensor| 0+9)))& (0+255)
 12395  142C  00F1               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
 12396  142D  0872               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 12397  142E  0271               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
 12398  142F  1C03               	btfss	3,0
 12399  1430  0008               	return
 12400                           
 12401                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 551:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 552:         Sensor_Sampled_Reset(sensor);
 12402  1431  0872               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 12403  1432  3192  22BC  3194   	fcall	_Sensor_Sampled_Reset
 12404                           
 12405                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 553:     }
 12406  1435  3009               	movlw	9
 12407  1436  00F1               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
 12408  1437  0871               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
 12409  1438  07F2               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
 12410  1439  2C2B               	goto	L5
 12411  143A                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:
 12412                           
 12413                           	psect	text72
 12414  1363                     __ptext72:	
 12415 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
 12416 ;; Defined at:
 12417 ;;		line 157 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12418 ;; Parameters:    Size  Location     Type
 12419 ;;		None
 12420 ;; Auto vars:     Size  Location     Type
 12421 ;;  sensor          1    9[COMMON] enum E2661
 12422 ;; Return value:  Size  Location     Type
 12423 ;;                  1    wreg      void 
 12424 ;; Registers used:
 12425 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12426 ;; Tracked objects:
 12427 ;;		On entry : 1F/0
 12428 ;;		On exit  : 0/0
 12429 ;;		Unchanged: 0/0
 12430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12433 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12435 ;;Total ram usage:        2 bytes
 12436 ;; Hardware stack levels used:    1
 12437 ;; Hardware stack levels required when called:    8
 12438 ;; This function calls:
 12439 ;;		_MTOUCH_Sensor_Initialize
 12440 ;; This function is called by:
 12441 ;;		_MTOUCH_Initialize
 12442 ;; This function uses a non-reentrant model
 12443 ;;
 12444                           
 12445                           
 12446                           ;psect for function _MTOUCH_Sensor_InitializeAll
 12447  1363                     _MTOUCH_Sensor_InitializeAll:
 12448                           
 12449                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 159:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 160:     for (sensor = 0; sensor < (2u); sens
      +                          or++)
 12450                           
 12451                           ;incstack = 0
 12452                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12453  1363  01F9               	clrf	MTOUCH_Sensor_InitializeAll@sensor
 12454  1364                     l4092:
 12455                           
 12456                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 161:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 162:         MTOUCH_Sensor_Initialize(sensor);
 12457  1364  0879               	movf	MTOUCH_Sensor_InitializeAll@sensor,w
 12458  1365  3193  23E2  3193   	fcall	_MTOUCH_Sensor_Initialize
 12459                           
 12460                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 163:     }
 12461  1368  3001               	movlw	1
 12462  1369  00F8               	movwf	??_MTOUCH_Sensor_InitializeAll
 12463  136A  0878               	movf	??_MTOUCH_Sensor_InitializeAll,w
 12464  136B  07F9               	addwf	MTOUCH_Sensor_InitializeAll@sensor,f
 12465  136C  3002               	movlw	2
 12466  136D  0279               	subwf	MTOUCH_Sensor_InitializeAll@sensor,w
 12467  136E  1803               	btfsc	3,0
 12468  136F  0008               	return
 12469  1370  2B64               	goto	l4092
 12470  1371                     __end_of_MTOUCH_Sensor_InitializeAll:
 12471                           
 12472                           	psect	text73
 12473  13E2                     __ptext73:	
 12474 ;; *************** function _MTOUCH_Sensor_Initialize *****************
 12475 ;; Defined at:
 12476 ;;		line 143 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12477 ;; Parameters:    Size  Location     Type
 12478 ;;  sensor          1    wreg     enum E2661
 12479 ;; Auto vars:     Size  Location     Type
 12480 ;;  sensor          1    7[COMMON] enum E2661
 12481 ;; Return value:  Size  Location     Type
 12482 ;;                  1    wreg      enum E2664
 12483 ;; Registers used:
 12484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12485 ;; Tracked objects:
 12486 ;;		On entry : 0/0
 12487 ;;		On exit  : 0/0
 12488 ;;		Unchanged: 0/0
 12489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12492 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12494 ;;Total ram usage:        2 bytes
 12495 ;; Hardware stack levels used:    1
 12496 ;; Hardware stack levels required when called:    7
 12497 ;; This function calls:
 12498 ;;		_MTOUCH_Sensor_Enable
 12499 ;;		_Sensor_Sampled_Reset
 12500 ;;		___bmul
 12501 ;; This function is called by:
 12502 ;;		_MTOUCH_Sensor_InitializeAll
 12503 ;; This function uses a non-reentrant model
 12504 ;;
 12505                           
 12506                           
 12507                           ;psect for function _MTOUCH_Sensor_Initialize
 12508  13E2                     _MTOUCH_Sensor_Initialize:
 12509                           
 12510                           ;incstack = 0
 12511                           ; Regs used in _MTOUCH_Sensor_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 12512                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
 12513  13E2  00F7               	movwf	MTOUCH_Sensor_Initialize@sensor
 12514                           
 12515                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 143: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           144: {;mcc_generated_files/mtouch/mtouch_sensor.c: 145:     MTOUCH_Sensor_Enable(sensor
      +                          );
 12516  13E3  0877               	movf	MTOUCH_Sensor_Initialize@sensor,w
 12517  13E4  3193  23D1  3193   	fcall	_MTOUCH_Sensor_Enable
 12518                           
 12519                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 146:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
 12520  13E7  3009               	movlw	9
 12521  13E8  00F6               	movwf	??_MTOUCH_Sensor_Initialize
 12522  13E9  0876               	movf	??_MTOUCH_Sensor_Initialize,w
 12523  13EA  00F0               	movwf	___bmul@multiplicand
 12524  13EB  0877               	movf	MTOUCH_Sensor_Initialize@sensor,w
 12525  13EC  3193  23C0  3193   	fcall	___bmul
 12526  13EF  3EB0               	addlw	(low (_mtouch_sensor| 0))& (0+255)
 12527  13F0  3192  22BC         	fcall	_Sensor_Sampled_Reset
 12528  13F2  0008               	return
 12529  13F3                     __end_of_MTOUCH_Sensor_Initialize:
 12530                           
 12531                           	psect	text74
 12532  12BC                     __ptext74:	
 12533 ;; *************** function _Sensor_Sampled_Reset *****************
 12534 ;; Defined at:
 12535 ;;		line 564 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12536 ;; Parameters:    Size  Location     Type
 12537 ;;  sensor          1    wreg     PTR struct .
 12538 ;;		 -> mtouch_sensor(18), 
 12539 ;; Auto vars:     Size  Location     Type
 12540 ;;  sensor          1    0[COMMON] PTR struct .
 12541 ;;		 -> mtouch_sensor(18), 
 12542 ;; Return value:  Size  Location     Type
 12543 ;;                  1    wreg      void 
 12544 ;; Registers used:
 12545 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12546 ;; Tracked objects:
 12547 ;;		On entry : 0/0
 12548 ;;		On exit  : 0/0
 12549 ;;		Unchanged: 0/0
 12550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12554 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12555 ;;Total ram usage:        1 bytes
 12556 ;; Hardware stack levels used:    1
 12557 ;; Hardware stack levels required when called:    5
 12558 ;; This function calls:
 12559 ;;		Nothing
 12560 ;; This function is called by:
 12561 ;;		_MTOUCH_Sensor_Initialize
 12562 ;;		_MTOUCH_Sensor_Sampled_ResetAll
 12563 ;; This function uses a non-reentrant model
 12564 ;;
 12565                           
 12566                           
 12567                           ;psect for function _Sensor_Sampled_Reset
 12568  12BC                     _Sensor_Sampled_Reset:
 12569                           
 12570                           ;incstack = 0
 12571                           ; Regs used in _Sensor_Sampled_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
 12572                           ;Sensor_Sampled_Reset@sensor stored from wreg
 12573  12BC  00F0               	movwf	Sensor_Sampled_Reset@sensor
 12574                           
 12575                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 564: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          565: {;mcc_generated_files/mtouch/mtouch_sensor.c: 566:     sensor->sampled = 0;
 12576  12BD  0870               	movf	Sensor_Sampled_Reset@sensor,w
 12577  12BE  3E08               	addlw	8
 12578  12BF  0086               	movwf	6
 12579  12C0  0187               	clrf	7
 12580  12C1  1081               	bcf	1,1
 12581  12C2  0008               	return
 12582  12C3                     __end_of_Sensor_Sampled_Reset:
 12583                           
 12584                           	psect	text75
 12585  13D1                     __ptext75:	
 12586 ;; *************** function _MTOUCH_Sensor_Enable *****************
 12587 ;; Defined at:
 12588 ;;		line 481 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;  sensor          1    wreg     enum E2661
 12591 ;; Auto vars:     Size  Location     Type
 12592 ;;  sensor          1    5[COMMON] enum E2661
 12593 ;; Return value:  Size  Location     Type
 12594 ;;                  1    wreg      void 
 12595 ;; Registers used:
 12596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12597 ;; Tracked objects:
 12598 ;;		On entry : 0/0
 12599 ;;		On exit  : 0/0
 12600 ;;		Unchanged: 0/0
 12601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12606 ;;Total ram usage:        2 bytes
 12607 ;; Hardware stack levels used:    1
 12608 ;; Hardware stack levels required when called:    6
 12609 ;; This function calls:
 12610 ;;		___bmul
 12611 ;; This function is called by:
 12612 ;;		_MTOUCH_Sensor_Initialize
 12613 ;; This function uses a non-reentrant model
 12614 ;;
 12615                           
 12616                           
 12617                           ;psect for function _MTOUCH_Sensor_Enable
 12618  13D1                     _MTOUCH_Sensor_Enable:
 12619                           
 12620                           ;incstack = 0
 12621                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12622                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
 12623  13D1  00F5               	movwf	MTOUCH_Sensor_Enable@sensor
 12624                           
 12625                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 481: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 482: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 483:     if(sensor < (2u))
 12626  13D2  3002               	movlw	2
 12627  13D3  0275               	subwf	MTOUCH_Sensor_Enable@sensor,w
 12628  13D4  1803               	skipnc
 12629  13D5  0008               	return
 12630                           
 12631                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 484:         mtouch_sensor[sensor].enabled 
      +                          = 1;
 12632  13D6  3009               	movlw	9
 12633  13D7  00F4               	movwf	??_MTOUCH_Sensor_Enable
 12634  13D8  0874               	movf	??_MTOUCH_Sensor_Enable,w
 12635  13D9  00F0               	movwf	___bmul@multiplicand
 12636  13DA  0875               	movf	MTOUCH_Sensor_Enable@sensor,w
 12637  13DB  3193  23C0         	fcall	___bmul
 12638  13DD  3EB8               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
 12639  13DE  0086               	movwf	6
 12640  13DF  0187               	clrf	7
 12641  13E0  1401               	bsf	1,0
 12642  13E1  0008               	return
 12643  13E2                     __end_of_MTOUCH_Sensor_Enable:
 12644                           
 12645                           	psect	text76
 12646  13C0                     __ptext76:	
 12647 ;; *************** function ___bmul *****************
 12648 ;; Defined at:
 12649 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul8.c"
 12650 ;; Parameters:    Size  Location     Type
 12651 ;;  multiplier      1    wreg     unsigned char 
 12652 ;;  multiplicand    1    0[COMMON] unsigned char 
 12653 ;; Auto vars:     Size  Location     Type
 12654 ;;  multiplier      1    3[COMMON] unsigned char 
 12655 ;;  product         1    2[COMMON] unsigned char 
 12656 ;; Return value:  Size  Location     Type
 12657 ;;                  1    wreg      unsigned char 
 12658 ;; Registers used:
 12659 ;;		wreg, status,2, status,0
 12660 ;; Tracked objects:
 12661 ;;		On entry : 0/0
 12662 ;;		On exit  : 0/0
 12663 ;;		Unchanged: 0/0
 12664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12665 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12668 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12669 ;;Total ram usage:        4 bytes
 12670 ;; Hardware stack levels used:    1
 12671 ;; Hardware stack levels required when called:    5
 12672 ;; This function calls:
 12673 ;;		Nothing
 12674 ;; This function is called by:
 12675 ;;		_MTOUCH_Sensor_Initialize
 12676 ;;		_Sensor_Service
 12677 ;;		_Sensor_Acq_ExecuteScan
 12678 ;;		_MTOUCH_Sensor_RawSample_Get
 12679 ;;		_MTOUCH_Sensor_Enable
 12680 ;;		_MTOUCH_Sensor_wasSampled
 12681 ;; This function uses a non-reentrant model
 12682 ;;
 12683                           
 12684                           
 12685                           ;psect for function ___bmul
 12686  13C0                     ___bmul:
 12687                           
 12688                           ;incstack = 0
 12689                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12690                           ;___bmul@multiplier stored from wreg
 12691  13C0  00F3               	movwf	___bmul@multiplier
 12692  13C1  01F2               	clrf	___bmul@product
 12693  13C2                     l3230:
 12694  13C2  1C73               	btfss	___bmul@multiplier,0
 12695  13C3  2BC8               	goto	l3234
 12696  13C4  0870               	movf	___bmul@multiplicand,w
 12697  13C5  00F1               	movwf	??___bmul
 12698  13C6  0871               	movf	??___bmul,w
 12699  13C7  07F2               	addwf	___bmul@product,f
 12700  13C8                     l3234:
 12701  13C8  1003               	clrc
 12702  13C9  0DF0               	rlf	___bmul@multiplicand,f
 12703  13CA  1003               	clrc
 12704  13CB  0CF3               	rrf	___bmul@multiplier,f
 12705  13CC  0873               	movf	___bmul@multiplier,w
 12706  13CD  1D03               	btfss	3,2
 12707  13CE  2BC2               	goto	l3230
 12708  13CF  0872               	movf	___bmul@product,w
 12709  13D0  0008               	return
 12710  13D1                     __end_of___bmul:
 12711                           
 12712                           	psect	text77
 12713  1516                     __ptext77:	
 12714 ;; *************** function _MTOUCH_Button_InitializeAll *****************
 12715 ;; Defined at:
 12716 ;;		line 163 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12717 ;; Parameters:    Size  Location     Type
 12718 ;;		None
 12719 ;; Auto vars:     Size  Location     Type
 12720 ;;  button          1   11[COMMON] enum E2819
 12721 ;; Return value:  Size  Location     Type
 12722 ;;                  1    wreg      void 
 12723 ;; Registers used:
 12724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12725 ;; Tracked objects:
 12726 ;;		On entry : 0/0
 12727 ;;		On exit  : 0/0
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12734 ;;Total ram usage:        2 bytes
 12735 ;; Hardware stack levels used:    1
 12736 ;; Hardware stack levels required when called:    7
 12737 ;; This function calls:
 12738 ;;		_MTOUCH_Button_Initialize
 12739 ;;		_memcpy
 12740 ;; This function is called by:
 12741 ;;		_MTOUCH_Initialize
 12742 ;; This function uses a non-reentrant model
 12743 ;;
 12744                           
 12745                           
 12746                           ;psect for function _MTOUCH_Button_InitializeAll
 12747  1516                     _MTOUCH_Button_InitializeAll:
 12748                           
 12749                           ;mcc_generated_files/mtouch/mtouch_button.c: 165:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 167:     memcpy(mtouch_button,mtouch_button_i
      +                          nit,sizeof(mtouch_button_init));
 12750                           
 12751                           ;incstack = 0
 12752                           ; Regs used in _MTOUCH_Button_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12753  1516  3000               	movlw	low (_mtouch_button_init| (0+32768))
 12754  1517  00F0               	movwf	memcpy@s1
 12755  1518  3098               	movlw	high (_mtouch_button_init| (0+32768))
 12756  1519  00F1               	movwf	memcpy@s1+1
 12757  151A  3020               	movlw	32
 12758  151B  00F2               	movwf	memcpy@n
 12759  151C  3000               	movlw	0
 12760  151D  00F3               	movwf	memcpy@n+1
 12761  151E  3020               	movlw	(low (_mtouch_button| (0+256)))& (0+255)
 12762  151F  3196  269D  3195   	fcall	_memcpy
 12763                           
 12764                           ;mcc_generated_files/mtouch/mtouch_button.c: 169:     for (button = 0; button < 2u; butt
      +                          on++)
 12765  1522  01FB               	clrf	MTOUCH_Button_InitializeAll@button
 12766  1523                     l4142:
 12767                           
 12768                           ;mcc_generated_files/mtouch/mtouch_button.c: 170:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 171:         MTOUCH_Button_Initialize(button);
 12769  1523  087B               	movf	MTOUCH_Button_InitializeAll@button,w
 12770  1524  3196  26F5  3195   	fcall	_MTOUCH_Button_Initialize
 12771                           
 12772                           ;mcc_generated_files/mtouch/mtouch_button.c: 172:     }
 12773  1527  3001               	movlw	1
 12774  1528  00FA               	movwf	??_MTOUCH_Button_InitializeAll
 12775  1529  087A               	movf	??_MTOUCH_Button_InitializeAll,w
 12776  152A  07FB               	addwf	MTOUCH_Button_InitializeAll@button,f
 12777  152B  3002               	movlw	2
 12778  152C  027B               	subwf	MTOUCH_Button_InitializeAll@button,w
 12779  152D  1803               	btfsc	3,0
 12780  152E  0008               	return
 12781  152F  2D23               	goto	l4142
 12782  1530                     __end_of_MTOUCH_Button_InitializeAll:
 12783                           
 12784                           	psect	text78
 12785  169D                     __ptext78:	
 12786 ;; *************** function _memcpy *****************
 12787 ;; Defined at:
 12788 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/memcpy.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;  d1              1    wreg     PTR void 
 12791 ;;		 -> mtouch_button(32), 
 12792 ;;  s1              2    0[COMMON] PTR const void 
 12793 ;;		 -> mtouch_button_init(32), 
 12794 ;;  n               2    2[COMMON] unsigned int 
 12795 ;; Auto vars:     Size  Location     Type
 12796 ;;  d1              1    8[COMMON] PTR void 
 12797 ;;		 -> mtouch_button(32), 
 12798 ;;  s               2    5[COMMON] PTR const unsigned char 
 12799 ;;		 -> mtouch_button_init(32), 
 12800 ;;  d               1    9[COMMON] PTR unsigned char 
 12801 ;;		 -> mtouch_button(32), 
 12802 ;;  tmp             1    7[COMMON] unsigned char 
 12803 ;; Return value:  Size  Location     Type
 12804 ;;                  1    wreg      PTR void 
 12805 ;; Registers used:
 12806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 12807 ;; Tracked objects:
 12808 ;;		On entry : 0/0
 12809 ;;		On exit  : 0/0
 12810 ;;		Unchanged: 0/0
 12811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12813 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12814 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12815 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12816 ;;Total ram usage:       10 bytes
 12817 ;; Hardware stack levels used:    1
 12818 ;; Hardware stack levels required when called:    5
 12819 ;; This function calls:
 12820 ;;		Nothing
 12821 ;; This function is called by:
 12822 ;;		_MTOUCH_Button_InitializeAll
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           
 12827                           ;psect for function _memcpy
 12828  169D                     _memcpy:
 12829                           
 12830                           ;incstack = 0
 12831                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
 12832                           ;memcpy@d1 stored from wreg
 12833  169D  00F8               	movwf	memcpy@d1
 12834  169E  0871               	movf	memcpy@s1+1,w
 12835  169F  00F6               	movwf	memcpy@s+1
 12836  16A0  0870               	movf	memcpy@s1,w
 12837  16A1  00F5               	movwf	memcpy@s
 12838  16A2  0878               	movf	memcpy@d1,w
 12839  16A3  00F4               	movwf	??_memcpy
 12840  16A4  0874               	movf	??_memcpy,w
 12841  16A5  00F9               	movwf	memcpy@d
 12842  16A6                     l3692:
 12843  16A6  3001               	movlw	1
 12844  16A7  02F2               	subwf	memcpy@n,f
 12845  16A8  3000               	movlw	0
 12846  16A9  3BF3               	subwfb	memcpy@n+1,f
 12847  16AA  0A72               	incf	memcpy@n,w
 12848  16AB  1903               	btfsc	3,2
 12849  16AC  0A73               	incf	memcpy@n+1,w
 12850  16AD  1903               	btfsc	3,2
 12851  16AE  0008               	return
 12852  16AF  0875               	movf	memcpy@s,w
 12853  16B0  0084               	movwf	4
 12854  16B1  0876               	movf	memcpy@s+1,w
 12855  16B2  0085               	movwf	5
 12856  16B3  0800               	movf	0,w	;code access
 12857  16B4  00F4               	movwf	??_memcpy
 12858  16B5  0874               	movf	??_memcpy,w
 12859  16B6  00F7               	movwf	memcpy@tmp
 12860  16B7  3001               	movlw	1
 12861  16B8  07F5               	addwf	memcpy@s,f
 12862  16B9  3000               	movlw	0
 12863  16BA  3DF6               	addwfc	memcpy@s+1,f
 12864  16BB  0877               	movf	memcpy@tmp,w
 12865  16BC  00F4               	movwf	??_memcpy
 12866  16BD  0879               	movf	memcpy@d,w
 12867  16BE  0086               	movwf	6
 12868  16BF  3001               	movlw	1	; select bank2/3
 12869  16C0  0087               	movwf	7
 12870  16C1  0874               	movf	??_memcpy,w
 12871  16C2  0081               	movwf	1
 12872  16C3  3001               	movlw	1
 12873  16C4  00F4               	movwf	??_memcpy
 12874  16C5  0874               	movf	??_memcpy,w
 12875  16C6  07F9               	addwf	memcpy@d,f
 12876  16C7  2EA6               	goto	l3692
 12877  16C8                     __end_of_memcpy:
 12878                           
 12879                           	psect	text79
 12880  16F5                     __ptext79:	
 12881 ;; *************** function _MTOUCH_Button_Initialize *****************
 12882 ;; Defined at:
 12883 ;;		line 151 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12884 ;; Parameters:    Size  Location     Type
 12885 ;;  name            1    wreg     enum E2819
 12886 ;; Auto vars:     Size  Location     Type
 12887 ;;  name            1    2[COMMON] enum E2819
 12888 ;;  button          1    3[COMMON] PTR struct .
 12889 ;;		 -> mtouch_button(32), 
 12890 ;; Return value:  Size  Location     Type
 12891 ;;                  1    wreg      void 
 12892 ;; Registers used:
 12893 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12894 ;; Tracked objects:
 12895 ;;		On entry : 0/0
 12896 ;;		On exit  : 0/0
 12897 ;;		Unchanged: 0/0
 12898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12903 ;;Total ram usage:        4 bytes
 12904 ;; Hardware stack levels used:    1
 12905 ;; Hardware stack levels required when called:    6
 12906 ;; This function calls:
 12907 ;;		_MTOUCH_Sensor_Calibrate
 12908 ;; This function is called by:
 12909 ;;		_MTOUCH_Button_InitializeAll
 12910 ;;		_Button_Service
 12911 ;;		_Button_State_NotPressed
 12912 ;;		_Button_State_Pressed
 12913 ;; This function uses a non-reentrant model
 12914 ;;
 12915                           
 12916                           
 12917                           ;psect for function _MTOUCH_Button_Initialize
 12918  16F5                     _MTOUCH_Button_Initialize:
 12919                           
 12920                           ;incstack = 0
 12921                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 12922                           ;MTOUCH_Button_Initialize@name stored from wreg
 12923  16F5  00F2               	movwf	MTOUCH_Button_Initialize@name
 12924                           
 12925                           ;mcc_generated_files/mtouch/mtouch_button.c: 151: void MTOUCH_Button_Initialize(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 152: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 153:     mtouch_button_t* button = &mtouch_button[name];
 12926  16F6  0872               	movf	MTOUCH_Button_Initialize@name,w
 12927  16F7  00F0               	movwf	??_MTOUCH_Button_Initialize
 12928  16F8  3003               	movlw	3
 12929  16F9                     u2235:
 12930  16F9  35F0               	lslf	??_MTOUCH_Button_Initialize,f
 12931  16FA  3EFF               	addlw	-1
 12932  16FB  1D03               	skipz
 12933  16FC  2EF9               	goto	u2235
 12934  16FD  3570               	lslf	??_MTOUCH_Button_Initialize,w
 12935  16FE  3E20               	addlw	(low (_mtouch_button| (0+256)))& (0+255)
 12936  16FF  00F1               	movwf	??_MTOUCH_Button_Initialize+1
 12937  1700  0871               	movf	??_MTOUCH_Button_Initialize+1,w
 12938  1701  00F3               	movwf	MTOUCH_Button_Initialize@button
 12939                           
 12940                           ;mcc_generated_files/mtouch/mtouch_button.c: 155:     button->state = MTOUCH_BUTTON_STAT
      +                          E_initializing;
 12941  1702  0873               	movf	MTOUCH_Button_Initialize@button,w
 12942  1703  3E02               	addlw	2
 12943  1704  0086               	movwf	6
 12944  1705  3001               	movlw	1	; select bank2/3
 12945  1706  0087               	movwf	7
 12946  1707  0181               	clrf	1
 12947                           
 12948                           ;mcc_generated_files/mtouch/mtouch_button.c: 156:     button->baseline = (mtouch_button_
      +                          baseline_t)0;
 12949  1708  0873               	movf	MTOUCH_Button_Initialize@button,w
 12950  1709  3E05               	addlw	5
 12951  170A  0086               	movwf	6
 12952  170B  3001               	movlw	1	; select bank2/3
 12953  170C  0087               	movwf	7
 12954  170D  3000               	movlw	0
 12955  170E  3FC0               	movwi [0]fsr1
 12956  170F  3000               	movlw	0
 12957  1710  3FC1               	movwi [1]fsr1
 12958  1711  3FC2               	movwi [2]fsr1
 12959  1712  3FC3               	movwi [3]fsr1
 12960                           
 12961                           ;mcc_generated_files/mtouch/mtouch_button.c: 157:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
 12962  1713  0873               	movf	MTOUCH_Button_Initialize@button,w
 12963  1714  3E0A               	addlw	10
 12964  1715  0086               	movwf	6
 12965  1716  3001               	movlw	1	; select bank2/3
 12966  1717  0087               	movwf	7
 12967  1718  3000               	movlw	0
 12968  1719  3FC0               	movwi [0]fsr1
 12969  171A  3FC1               	movwi [1]fsr1
 12970                           
 12971                           ;mcc_generated_files/mtouch/mtouch_button.c: 158:     button->baseline_count = (mtouch_b
      +                          utton_baselinecounter_t)0;
 12972  171B  0873               	movf	MTOUCH_Button_Initialize@button,w
 12973  171C  3E0C               	addlw	12
 12974  171D  0086               	movwf	6
 12975  171E  3001               	movlw	1	; select bank2/3
 12976  171F  0087               	movwf	7
 12977  1720  3000               	movlw	0
 12978  1721  3FC0               	movwi [0]fsr1
 12979  1722  3FC1               	movwi [1]fsr1
 12980                           
 12981                           ;mcc_generated_files/mtouch/mtouch_button.c: 160:     MTOUCH_Sensor_Calibrate(button->se
      +                          nsor);
 12982  1723  0A73               	incf	MTOUCH_Button_Initialize@button,w
 12983  1724  0086               	movwf	6
 12984  1725  3001               	movlw	1	; select bank2/3
 12985  1726  0087               	movwf	7
 12986  1727  0801               	movf	1,w
 12987  1728  3192  226D         	fcall	_MTOUCH_Sensor_Calibrate
 12988  172A  0008               	return
 12989  172B                     __end_of_MTOUCH_Button_Initialize:
 12990                           
 12991                           	psect	text80
 12992  126D                     __ptext80:	
 12993 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
 12994 ;; Defined at:
 12995 ;;		line 535 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12996 ;; Parameters:    Size  Location     Type
 12997 ;;  sensor          1    wreg     enum E2661
 12998 ;; Auto vars:     Size  Location     Type
 12999 ;;  sensor          1    0[COMMON] enum E2661
 13000 ;; Return value:  Size  Location     Type
 13001 ;;                  1    wreg      void 
 13002 ;; Registers used:
 13003 ;;		wreg
 13004 ;; Tracked objects:
 13005 ;;		On entry : 0/0
 13006 ;;		On exit  : 0/0
 13007 ;;		Unchanged: 0/0
 13008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13013 ;;Total ram usage:        0 bytes
 13014 ;; Hardware stack levels used:    1
 13015 ;; Hardware stack levels required when called:    5
 13016 ;; This function calls:
 13017 ;;		Nothing
 13018 ;; This function is called by:
 13019 ;;		_MTOUCH_Button_Initialize
 13020 ;; This function uses a non-reentrant model
 13021 ;;
 13022                           
 13023                           
 13024                           ;psect for function _MTOUCH_Sensor_Calibrate
 13025  126D                     _MTOUCH_Sensor_Calibrate:
 13026                           
 13027                           ;incstack = 0
 13028                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg]
 13029  126D  0008               	return
 13030  126E                     __end_of_MTOUCH_Sensor_Calibrate:
 13031                           
 13032                           	psect	intentry
 13033  0004                     __pintentry:	
 13034 ;; *************** function _INTERRUPT_InterruptManager *****************
 13035 ;; Defined at:
 13036 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13037 ;; Parameters:    Size  Location     Type
 13038 ;;		None
 13039 ;; Auto vars:     Size  Location     Type
 13040 ;;		None
 13041 ;; Return value:  Size  Location     Type
 13042 ;;                  1    wreg      void 
 13043 ;; Registers used:
 13044 ;;		wreg, status,2, status,0, pclath, cstack
 13045 ;; Tracked objects:
 13046 ;;		On entry : 0/0
 13047 ;;		On exit  : 0/0
 13048 ;;		Unchanged: 0/0
 13049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13054 ;;Total ram usage:        0 bytes
 13055 ;; Hardware stack levels used:    1
 13056 ;; Hardware stack levels required when called:    4
 13057 ;; This function calls:
 13058 ;;		_PIN_MANAGER_IOC
 13059 ;;		_TMR2_ISR
 13060 ;;		_TMR4_ISR
 13061 ;;		_TMR6_ISR
 13062 ;; This function is called by:
 13063 ;;		Interrupt level 1
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067  0004                     _INTERRUPT_InterruptManager:
 13068                           
 13069                           ;incstack = 0
 13070  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 13071                           
 13072                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 13073  0005  3180               	pagesel	$
 13074                           
 13075                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
 13076  0006  198B               	btfsc	11,3	;volatile
 13077  0007  1C0B               	btfss	11,0	;volatile
 13078  0008  280D               	goto	i1l624
 13079                           
 13080                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 13081  0009  3192  2297  3180   	fcall	_PIN_MANAGER_IOC
 13082                           
 13083                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 13084  000C  282B               	goto	i1l634
 13085  000D                     i1l624:	
 13086                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 13087                           
 13088  000D  1F0B               	btfss	11,6	;volatile
 13089  000E  282B               	goto	i1l634
 13090                           
 13091                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TMR6IE == 1 && PIR3bits.TMR6IF == 1)
 13092  000F  0021               	movlb	1	; select bank1
 13093  0010  1D93               	btfss	19,3	;volatile
 13094  0011  2819               	goto	i1l627
 13095  0012  0020               	movlb	0	; select bank0
 13096  0013  1D93               	btfss	19,3	;volatile
 13097  0014  2819               	goto	i1l627
 13098                           
 13099                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR6_ISR();
 13100  0015  3193  2318  3180   	fcall	_TMR6_ISR
 13101                           
 13102                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 13103  0018  282B               	goto	i1l634
 13104  0019                     i1l627:	
 13105                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TMR4IE == 1 && PI
      +                          R3bits.TMR4IF == 1)
 13106                           
 13107  0019  0021               	movlb	1	; select bank1
 13108  001A  1C93               	btfss	19,1	;volatile
 13109  001B  2823               	goto	i1l629
 13110  001C  0020               	movlb	0	; select bank0
 13111  001D  1C93               	btfss	19,1	;volatile
 13112  001E  2823               	goto	i1l629
 13113                           
 13114                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
 13115  001F  3193  230C  3180   	fcall	_TMR4_ISR
 13116                           
 13117                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 13118  0022  282B               	goto	i1l634
 13119  0023                     i1l629:	
 13120                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.TMR2IE == 1 && PI
      +                          R1bits.TMR2IF == 1)
 13121                           
 13122  0023  0021               	movlb	1	; select bank1
 13123  0024  1C91               	btfss	17,1	;volatile
 13124  0025  282B               	goto	i1l634
 13125  0026  0020               	movlb	0	; select bank0
 13126  0027  1C91               	btfss	17,1	;volatile
 13127  0028  282B               	goto	i1l634
 13128                           
 13129                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR2_ISR();
 13130  0029  3193  2300         	fcall	_TMR2_ISR
 13131  002B                     i1l634:	
 13132                           ;mcc_generated_files/interrupt_manager.c: 77:     }
 13133                           
 13134                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 13135                           
 13136  002B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13137  002C  0009               	retfie
 13138  002D                     __end_of_INTERRUPT_InterruptManager:
 13139                           
 13140                           	psect	text82
 13141  1318                     __ptext82:	
 13142 ;; *************** function _TMR6_ISR *****************
 13143 ;; Defined at:
 13144 ;;		line 119 in file "mcc_generated_files/tmr6.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;		None
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;		None
 13149 ;; Return value:  Size  Location     Type
 13150 ;;                  1    wreg      void 
 13151 ;; Registers used:
 13152 ;;		wreg, status,2, status,0, pclath, cstack
 13153 ;; Tracked objects:
 13154 ;;		On entry : 1F/0
 13155 ;;		On exit  : 0/0
 13156 ;;		Unchanged: 0/0
 13157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13162 ;;Total ram usage:        0 bytes
 13163 ;; Hardware stack levels used:    1
 13164 ;; Hardware stack levels required when called:    1
 13165 ;; This function calls:
 13166 ;;		Absolute function
 13167 ;;		_TMR6_DefaultInterruptHandler
 13168 ;; This function is called by:
 13169 ;;		_INTERRUPT_InterruptManager
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           
 13174                           ;psect for function _TMR6_ISR
 13175  1318                     _TMR6_ISR:
 13176                           
 13177                           ;mcc_generated_files/tmr6.c: 123:     PIR3bits.TMR6IF = 0;
 13178                           
 13179                           ;incstack = 0
 13180                           ; Regs used in _TMR6_ISR: [wreg+status,2+status,0+pclath+cstack]
 13181  1318  1193               	bcf	19,3	;volatile
 13182                           
 13183                           ;mcc_generated_files/tmr6.c: 125:     if(TMR6_InterruptHandler)
 13184  1319  0021               	movlb	1	; select bank1
 13185  131A  0842               	movf	_TMR6_InterruptHandler^(0+128),w
 13186  131B  0443               	iorwf	(_TMR6_InterruptHandler+1)^(0+128),w
 13187  131C  1903               	btfsc	3,2
 13188  131D  0008               	return
 13189                           
 13190                           ;mcc_generated_files/tmr6.c: 126:     {;mcc_generated_files/tmr6.c: 127:         TMR6_In
      +                          terruptHandler();
 13191  131E  0843               	movf	(_TMR6_InterruptHandler+1)^(0+128),w
 13192  131F  008A               	movwf	10
 13193  1320  0842               	movf	_TMR6_InterruptHandler^(0+128),w
 13194  1321  000A               	callw
 13195  1322  3193               	pagesel	$
 13196  1323  0008               	return
 13197  1324                     __end_of_TMR6_ISR:
 13198                           
 13199                           	psect	text83
 13200  126C                     __ptext83:	
 13201 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 13202 ;; Defined at:
 13203 ;;		line 136 in file "mcc_generated_files/tmr6.c"
 13204 ;; Parameters:    Size  Location     Type
 13205 ;;		None
 13206 ;; Auto vars:     Size  Location     Type
 13207 ;;		None
 13208 ;; Return value:  Size  Location     Type
 13209 ;;                  1    wreg      void 
 13210 ;; Registers used:
 13211 ;;		None
 13212 ;; Tracked objects:
 13213 ;;		On entry : 1F/1
 13214 ;;		On exit  : 1F/1
 13215 ;;		Unchanged: 1F/0
 13216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13221 ;;Total ram usage:        0 bytes
 13222 ;; Hardware stack levels used:    1
 13223 ;; This function calls:
 13224 ;;		Nothing
 13225 ;; This function is called by:
 13226 ;;		_TMR6_Initialize
 13227 ;;		_TMR6_ISR
 13228 ;; This function uses a non-reentrant model
 13229 ;;
 13230                           
 13231                           
 13232                           ;psect for function _TMR6_DefaultInterruptHandler
 13233  126C                     _TMR6_DefaultInterruptHandler:
 13234                           
 13235                           ;incstack = 0
 13236                           ; Regs used in _TMR6_DefaultInterruptHandler: []
 13237  126C  0008               	return
 13238  126D                     __end_of_TMR6_DefaultInterruptHandler:
 13239                           
 13240                           	psect	text84
 13241  130C                     __ptext84:	
 13242 ;; *************** function _TMR4_ISR *****************
 13243 ;; Defined at:
 13244 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 13245 ;; Parameters:    Size  Location     Type
 13246 ;;		None
 13247 ;; Auto vars:     Size  Location     Type
 13248 ;;		None
 13249 ;; Return value:  Size  Location     Type
 13250 ;;                  1    wreg      void 
 13251 ;; Registers used:
 13252 ;;		wreg, status,2, status,0, pclath, cstack
 13253 ;; Tracked objects:
 13254 ;;		On entry : 1F/0
 13255 ;;		On exit  : 0/0
 13256 ;;		Unchanged: 0/0
 13257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13262 ;;Total ram usage:        0 bytes
 13263 ;; Hardware stack levels used:    1
 13264 ;; Hardware stack levels required when called:    1
 13265 ;; This function calls:
 13266 ;;		Absolute function
 13267 ;;		_TMR4_DefaultInterruptHandler
 13268 ;;		_TMR4_Wroking_Blink_AlarmLED_isr
 13269 ;; This function is called by:
 13270 ;;		_INTERRUPT_InterruptManager
 13271 ;; This function uses a non-reentrant model
 13272 ;;
 13273                           
 13274                           
 13275                           ;psect for function _TMR4_ISR
 13276  130C                     _TMR4_ISR:
 13277                           
 13278                           ;mcc_generated_files/tmr4.c: 123:     PIR3bits.TMR4IF = 0;
 13279                           
 13280                           ;incstack = 0
 13281                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 13282  130C  1093               	bcf	19,1	;volatile
 13283                           
 13284                           ;mcc_generated_files/tmr4.c: 125:     if(TMR4_InterruptHandler)
 13285  130D  0021               	movlb	1	; select bank1
 13286  130E  0844               	movf	_TMR4_InterruptHandler^(0+128),w
 13287  130F  0445               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
 13288  1310  1903               	btfsc	3,2
 13289  1311  0008               	return
 13290                           
 13291                           ;mcc_generated_files/tmr4.c: 126:     {;mcc_generated_files/tmr4.c: 127:         TMR4_In
      +                          terruptHandler();
 13292  1312  0845               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
 13293  1313  008A               	movwf	10
 13294  1314  0844               	movf	_TMR4_InterruptHandler^(0+128),w
 13295  1315  000A               	callw
 13296  1316  3193               	pagesel	$
 13297  1317  0008               	return
 13298  1318                     __end_of_TMR4_ISR:
 13299                           
 13300                           	psect	text85
 13301  126B                     __ptext85:	
 13302 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 13303 ;; Defined at:
 13304 ;;		line 136 in file "mcc_generated_files/tmr4.c"
 13305 ;; Parameters:    Size  Location     Type
 13306 ;;		None
 13307 ;; Auto vars:     Size  Location     Type
 13308 ;;		None
 13309 ;; Return value:  Size  Location     Type
 13310 ;;                  1    wreg      void 
 13311 ;; Registers used:
 13312 ;;		None
 13313 ;; Tracked objects:
 13314 ;;		On entry : 1F/1
 13315 ;;		On exit  : 1F/1
 13316 ;;		Unchanged: 1F/0
 13317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13322 ;;Total ram usage:        0 bytes
 13323 ;; Hardware stack levels used:    1
 13324 ;; This function calls:
 13325 ;;		Nothing
 13326 ;; This function is called by:
 13327 ;;		_TMR4_Initialize
 13328 ;;		_TMR4_ISR
 13329 ;; This function uses a non-reentrant model
 13330 ;;
 13331                           
 13332                           
 13333                           ;psect for function _TMR4_DefaultInterruptHandler
 13334  126B                     _TMR4_DefaultInterruptHandler:
 13335                           
 13336                           ;incstack = 0
 13337                           ; Regs used in _TMR4_DefaultInterruptHandler: []
 13338  126B  0008               	return
 13339  126C                     __end_of_TMR4_DefaultInterruptHandler:
 13340                           
 13341                           	psect	text86
 13342  14FD                     __ptext86:	
 13343 ;; *************** function _TMR4_Wroking_Blink_AlarmLED_isr *****************
 13344 ;; Defined at:
 13345 ;;		line 131 in file "main.c"
 13346 ;; Parameters:    Size  Location     Type
 13347 ;;		None
 13348 ;; Auto vars:     Size  Location     Type
 13349 ;;		None
 13350 ;; Return value:  Size  Location     Type
 13351 ;;                  1    wreg      void 
 13352 ;; Registers used:
 13353 ;;		wreg, status,2, status,0
 13354 ;; Tracked objects:
 13355 ;;		On entry : 1F/1
 13356 ;;		On exit  : 1C/0
 13357 ;;		Unchanged: 0/0
 13358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13363 ;;Total ram usage:        0 bytes
 13364 ;; Hardware stack levels used:    1
 13365 ;; This function calls:
 13366 ;;		Nothing
 13367 ;; This function is called by:
 13368 ;;		_main
 13369 ;;		_TMR4_ISR
 13370 ;; This function uses a non-reentrant model
 13371 ;;
 13372                           
 13373                           
 13374                           ;psect for function _TMR4_Wroking_Blink_AlarmLED_isr
 13375  14FD                     _TMR4_Wroking_Blink_AlarmLED_isr:
 13376                           
 13377                           ;main.c: 133:     static uint16_t counter_tmr4 = 0;;main.c: 134:     counter_tmr4 ++;
 13378                           
 13379                           ;incstack = 0
 13380                           ; Regs used in _TMR4_Wroking_Blink_AlarmLED_isr: [wreg+status,2+status,0]
 13381  14FD  3001               	movlw	1
 13382  14FE  07CA               	addwf	TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4^(0+128),f
 13383  14FF  3000               	movlw	0
 13384  1500  3DCB               	addwfc	(TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4+1)^(0+128),f
 13385                           
 13386                           ;main.c: 136:     if(counter_tmr4 >= 1000){
 13387  1501  3003               	movlw	3
 13388  1502  024B               	subwf	(TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4+1)^(0+128),w
 13389  1503  30E8               	movlw	232
 13390  1504  1903               	skipnz
 13391  1505  024A               	subwf	TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4^(0+128),w
 13392  1506  1C03               	skipc
 13393  1507  0008               	return
 13394                           
 13395                           ;main.c: 138:         counter_tmr4 = 0;
 13396  1508  01CA               	clrf	TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4^(0+128)
 13397  1509  01CB               	clrf	(TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4+1)^(0+128)
 13398  150A  1003               	clrc
 13399  150B  0022               	movlb	2	; select bank2
 13400  150C  1D0E               	btfss	14,2	;volatile
 13401  150D  1403               	setc
 13402  150E  1C03               	btfss	3,0
 13403  150F  2D13               	goto	u395_20
 13404  1510  0022               	movlb	2	; select bank2
 13405  1511  150E               	bsf	14,2	;volatile
 13406  1512  0008               	return
 13407  1513                     u395_20:
 13408  1513  0022               	movlb	2	; select bank2
 13409  1514  110E               	bcf	14,2	;volatile
 13410  1515  0008               	return
 13411  1516                     __end_of_TMR4_Wroking_Blink_AlarmLED_isr:
 13412                           
 13413                           	psect	text87
 13414  1300                     __ptext87:	
 13415 ;; *************** function _TMR2_ISR *****************
 13416 ;; Defined at:
 13417 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 13418 ;; Parameters:    Size  Location     Type
 13419 ;;		None
 13420 ;; Auto vars:     Size  Location     Type
 13421 ;;		None
 13422 ;; Return value:  Size  Location     Type
 13423 ;;                  1    wreg      void 
 13424 ;; Registers used:
 13425 ;;		wreg, status,2, status,0, pclath, cstack
 13426 ;; Tracked objects:
 13427 ;;		On entry : 1F/0
 13428 ;;		On exit  : 0/0
 13429 ;;		Unchanged: 0/0
 13430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13435 ;;Total ram usage:        0 bytes
 13436 ;; Hardware stack levels used:    1
 13437 ;; Hardware stack levels required when called:    2
 13438 ;; This function calls:
 13439 ;;		Absolute function
 13440 ;;		_TMR2_DefaultInterruptHandler
 13441 ;;		_TMR2_Drive_TRIAC_isr
 13442 ;; This function is called by:
 13443 ;;		_INTERRUPT_InterruptManager
 13444 ;; This function uses a non-reentrant model
 13445 ;;
 13446                           
 13447                           
 13448                           ;psect for function _TMR2_ISR
 13449  1300                     _TMR2_ISR:
 13450                           
 13451                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
 13452                           
 13453                           ;incstack = 0
 13454                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 13455  1300  1091               	bcf	17,1	;volatile
 13456                           
 13457                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
 13458  1301  0021               	movlb	1	; select bank1
 13459  1302  0846               	movf	_TMR2_InterruptHandler^(0+128),w
 13460  1303  0447               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 13461  1304  1903               	btfsc	3,2
 13462  1305  0008               	return
 13463                           
 13464                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
 13465  1306  0847               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 13466  1307  008A               	movwf	10
 13467  1308  0846               	movf	_TMR2_InterruptHandler^(0+128),w
 13468  1309  000A               	callw
 13469  130A  3193               	pagesel	$
 13470  130B  0008               	return
 13471  130C                     __end_of_TMR2_ISR:
 13472                           
 13473                           	psect	text88
 13474  126A                     __ptext88:	
 13475 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 13476 ;; Defined at:
 13477 ;;		line 136 in file "mcc_generated_files/tmr2.c"
 13478 ;; Parameters:    Size  Location     Type
 13479 ;;		None
 13480 ;; Auto vars:     Size  Location     Type
 13481 ;;		None
 13482 ;; Return value:  Size  Location     Type
 13483 ;;                  1    wreg      void 
 13484 ;; Registers used:
 13485 ;;		None
 13486 ;; Tracked objects:
 13487 ;;		On entry : 1F/1
 13488 ;;		On exit  : 1F/1
 13489 ;;		Unchanged: 1F/0
 13490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13495 ;;Total ram usage:        0 bytes
 13496 ;; Hardware stack levels used:    1
 13497 ;; This function calls:
 13498 ;;		Nothing
 13499 ;; This function is called by:
 13500 ;;		_TMR2_Initialize
 13501 ;;		_TMR2_ISR
 13502 ;; This function uses a non-reentrant model
 13503 ;;
 13504                           
 13505                           
 13506                           ;psect for function _TMR2_DefaultInterruptHandler
 13507  126A                     _TMR2_DefaultInterruptHandler:
 13508                           
 13509                           ;incstack = 0
 13510                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 13511  126A  0008               	return
 13512  126B                     __end_of_TMR2_DefaultInterruptHandler:
 13513                           
 13514                           	psect	text89
 13515  1629                     __ptext89:	
 13516 ;; *************** function _TMR2_Drive_TRIAC_isr *****************
 13517 ;; Defined at:
 13518 ;;		line 103 in file "main.c"
 13519 ;; Parameters:    Size  Location     Type
 13520 ;;		None
 13521 ;; Auto vars:     Size  Location     Type
 13522 ;;		None
 13523 ;; Return value:  Size  Location     Type
 13524 ;;                  1    wreg      void 
 13525 ;; Registers used:
 13526 ;;		wreg, status,2, status,0, pclath, cstack
 13527 ;; Tracked objects:
 13528 ;;		On entry : 1F/1
 13529 ;;		On exit  : 1C/0
 13530 ;;		Unchanged: 0/0
 13531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13536 ;;Total ram usage:        0 bytes
 13537 ;; Hardware stack levels used:    1
 13538 ;; Hardware stack levels required when called:    1
 13539 ;; This function calls:
 13540 ;;		_TMR2_StopTimer
 13541 ;; This function is called by:
 13542 ;;		_main
 13543 ;;		_TMR2_ISR
 13544 ;; This function uses a non-reentrant model
 13545 ;;
 13546                           
 13547                           
 13548                           ;psect for function _TMR2_Drive_TRIAC_isr
 13549  1629                     _TMR2_Drive_TRIAC_isr:
 13550                           
 13551                           ;main.c: 105:     static uint16_t counter_tmr2 = 0;;main.c: 107:     if (1 == DimmerStat
      +                          usFlag_g){
 13552                           
 13553                           ;incstack = 0
 13554                           ; Regs used in _TMR2_Drive_TRIAC_isr: [wreg+status,2+status,0+pclath+cstack]
 13555  1629  0020               	movlb	0	; select bank0
 13556  162A  0368               	decf	_DimmerStatusFlag_g,w
 13557  162B  1D03               	btfss	3,2
 13558  162C  2E4A               	goto	i1l4416
 13559                           
 13560                           ;main.c: 109:         counter_tmr2 ++;
 13561  162D  3001               	movlw	1
 13562  162E  0021               	movlb	1	; select bank1
 13563  162F  07CC               	addwf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+128),f
 13564  1630  3000               	movlw	0
 13565  1631  3DCD               	addwfc	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+128),f
 13566                           
 13567                           ;main.c: 111:         if(counter_tmr2 >= tmr2_required_counter_steps_g){
 13568  1632  084F               	movf	(_tmr2_required_counter_steps_g+1)^(0+128),w
 13569  1633  024D               	subwf	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+128),w
 13570  1634  1D03               	skipz
 13571  1635  2E38               	goto	u392_25
 13572  1636  084E               	movf	_tmr2_required_counter_steps_g^(0+128),w
 13573  1637  024C               	subwf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+128),w
 13574  1638                     u392_25:
 13575  1638  1C03               	skipc
 13576  1639  2E3F               	goto	i1l813
 13577                           
 13578                           ;main.c: 113:             counter_tmr2 = 0;
 13579  163A  01CC               	clrf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+128)
 13580  163B  01CD               	clrf	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+128)
 13581  163C  0022               	movlb	2	; select bank2
 13582  163D  168E               	bsf	14,5	;volatile
 13583  163E  0008               	return
 13584  163F                     i1l813:	
 13585                           ;main.c: 117:         else if (1 == PORTCbits.RC5){
 13586                           
 13587  163F  0020               	movlb	0	; select bank0
 13588  1640  1E8E               	btfss	14,5	;volatile
 13589  1641  0008               	return
 13590                           
 13591                           ;main.c: 119:             counter_tmr2 = 0;
 13592  1642  0021               	movlb	1	; select bank1
 13593  1643  01CC               	clrf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+128)
 13594  1644  01CD               	clrf	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+128)
 13595                           
 13596                           ;main.c: 120:             TMR2_StopTimer();
 13597  1645  3192  2273         	fcall	_TMR2_StopTimer
 13598  1647  0022               	movlb	2	; select bank2
 13599  1648  128E               	bcf	14,5	;volatile
 13600  1649  0008               	return
 13601  164A                     i1l4416:
 13602                           
 13603                           ;main.c: 126:         counter_tmr2 = 0;
 13604  164A  0021               	movlb	1	; select bank1
 13605  164B  01CC               	clrf	TMR2_Drive_TRIAC_isr@counter_tmr2^(0+128)
 13606  164C  01CD               	clrf	(TMR2_Drive_TRIAC_isr@counter_tmr2+1)^(0+128)
 13607  164D  0008               	return
 13608  164E                     __end_of_TMR2_Drive_TRIAC_isr:
 13609                           
 13610                           	psect	text90
 13611  1273                     __ptext90:	
 13612 ;; *************** function _TMR2_StopTimer *****************
 13613 ;; Defined at:
 13614 ;;		line 93 in file "mcc_generated_files/tmr2.c"
 13615 ;; Parameters:    Size  Location     Type
 13616 ;;		None
 13617 ;; Auto vars:     Size  Location     Type
 13618 ;;		None
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  1    wreg      void 
 13621 ;; Registers used:
 13622 ;;		None
 13623 ;; Tracked objects:
 13624 ;;		On entry : 1F/1
 13625 ;;		On exit  : 1F/0
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13632 ;;Total ram usage:        0 bytes
 13633 ;; Hardware stack levels used:    1
 13634 ;; This function calls:
 13635 ;;		Nothing
 13636 ;; This function is called by:
 13637 ;;		_TMR2_Drive_TRIAC_isr
 13638 ;; This function uses a non-reentrant model
 13639 ;;
 13640                           
 13641                           
 13642                           ;psect for function _TMR2_StopTimer
 13643  1273                     _TMR2_StopTimer:
 13644                           
 13645                           ;mcc_generated_files/tmr2.c: 96:     T2CONbits.TMR2ON = 0;
 13646                           
 13647                           ;incstack = 0
 13648                           ; Regs used in _TMR2_StopTimer: []
 13649  1273  0020               	movlb	0	; select bank0
 13650  1274  111C               	bcf	28,2	;volatile
 13651  1275  0008               	return
 13652  1276                     __end_of_TMR2_StopTimer:
 13653                           
 13654                           	psect	text91
 13655  1297                     __ptext91:	
 13656 ;; *************** function _PIN_MANAGER_IOC *****************
 13657 ;; Defined at:
 13658 ;;		line 115 in file "mcc_generated_files/pin_manager.c"
 13659 ;; Parameters:    Size  Location     Type
 13660 ;;		None
 13661 ;; Auto vars:     Size  Location     Type
 13662 ;;		None
 13663 ;; Return value:  Size  Location     Type
 13664 ;;                  1    wreg      void 
 13665 ;; Registers used:
 13666 ;;		wreg, status,2, status,0, pclath, cstack
 13667 ;; Tracked objects:
 13668 ;;		On entry : 0/0
 13669 ;;		On exit  : 1F/7
 13670 ;;		Unchanged: 0/0
 13671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13676 ;;Total ram usage:        0 bytes
 13677 ;; Hardware stack levels used:    1
 13678 ;; Hardware stack levels required when called:    3
 13679 ;; This function calls:
 13680 ;;		_IOCAF2_ISR
 13681 ;; This function is called by:
 13682 ;;		_INTERRUPT_InterruptManager
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           
 13687                           ;psect for function _PIN_MANAGER_IOC
 13688  1297                     _PIN_MANAGER_IOC:
 13689                           
 13690                           ;mcc_generated_files/pin_manager.c: 118:     if(IOCAFbits.IOCAF2 == 1)
 13691                           
 13692                           ;incstack = 0
 13693                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 13694  1297  0027               	movlb	7	; select bank7
 13695  1298  1D13               	btfss	19,2	;volatile
 13696  1299  0008               	return
 13697                           
 13698                           ;mcc_generated_files/pin_manager.c: 119:     {;mcc_generated_files/pin_manager.c: 120:  
      +                                 IOCAF2_ISR();
 13699  129A  3193  233C         	fcall	_IOCAF2_ISR
 13700  129C  0008               	return
 13701  129D                     __end_of_PIN_MANAGER_IOC:
 13702                           
 13703                           	psect	text92
 13704  133C                     __ptext92:	
 13705 ;; *************** function _IOCAF2_ISR *****************
 13706 ;; Defined at:
 13707 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
 13708 ;; Parameters:    Size  Location     Type
 13709 ;;		None
 13710 ;; Auto vars:     Size  Location     Type
 13711 ;;		None
 13712 ;; Return value:  Size  Location     Type
 13713 ;;                  1    wreg      void 
 13714 ;; Registers used:
 13715 ;;		wreg, status,2, status,0, pclath, cstack
 13716 ;; Tracked objects:
 13717 ;;		On entry : 1F/7
 13718 ;;		On exit  : 1F/7
 13719 ;;		Unchanged: 0/0
 13720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13725 ;;Total ram usage:        0 bytes
 13726 ;; Hardware stack levels used:    1
 13727 ;; Hardware stack levels required when called:    2
 13728 ;; This function calls:
 13729 ;;		Absolute function
 13730 ;;		_IOCAF2_DefaultInterruptHandler
 13731 ;;		_Zero_Detection_isr
 13732 ;; This function is called by:
 13733 ;;		_PIN_MANAGER_IOC
 13734 ;; This function uses a non-reentrant model
 13735 ;;
 13736                           
 13737                           
 13738                           ;psect for function _IOCAF2_ISR
 13739  133C                     _IOCAF2_ISR:
 13740                           
 13741                           ;mcc_generated_files/pin_manager.c: 132:     if(IOCAF2_InterruptHandler)
 13742                           
 13743                           ;incstack = 0
 13744                           ; Regs used in _IOCAF2_ISR: [wreg+status,2+status,0+pclath+cstack]
 13745  133C  0021               	movlb	1	; select bank1
 13746  133D  0848               	movf	_IOCAF2_InterruptHandler^(0+128),w
 13747  133E  0449               	iorwf	(_IOCAF2_InterruptHandler+1)^(0+128),w
 13748  133F  1903               	btfsc	3,2
 13749  1340  2B46               	goto	i1l4400
 13750                           
 13751                           ;mcc_generated_files/pin_manager.c: 133:     {;mcc_generated_files/pin_manager.c: 134:  
      +                                 IOCAF2_InterruptHandler();
 13752  1341  0849               	movf	(_IOCAF2_InterruptHandler+1)^(0+128),w
 13753  1342  008A               	movwf	10
 13754  1343  0848               	movf	_IOCAF2_InterruptHandler^(0+128),w
 13755  1344  000A               	callw
 13756  1345  3193               	pagesel	$
 13757  1346                     i1l4400:
 13758                           
 13759                           ;mcc_generated_files/pin_manager.c: 136:     IOCAFbits.IOCAF2 = 0;
 13760  1346  0027               	movlb	7	; select bank7
 13761  1347  1113               	bcf	19,2	;volatile
 13762  1348  0008               	return
 13763  1349                     __end_of_IOCAF2_ISR:
 13764                           
 13765                           	psect	text93
 13766  1269                     __ptext93:	
 13767 ;; *************** function _IOCAF2_DefaultInterruptHandler *****************
 13768 ;; Defined at:
 13769 ;;		line 149 in file "mcc_generated_files/pin_manager.c"
 13770 ;; Parameters:    Size  Location     Type
 13771 ;;		None
 13772 ;; Auto vars:     Size  Location     Type
 13773 ;;		None
 13774 ;; Return value:  Size  Location     Type
 13775 ;;                  1    wreg      void 
 13776 ;; Registers used:
 13777 ;;		None
 13778 ;; Tracked objects:
 13779 ;;		On entry : 1F/1
 13780 ;;		On exit  : 1F/1
 13781 ;;		Unchanged: 1F/0
 13782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13787 ;;Total ram usage:        0 bytes
 13788 ;; Hardware stack levels used:    1
 13789 ;; This function calls:
 13790 ;;		Nothing
 13791 ;; This function is called by:
 13792 ;;		_PIN_MANAGER_Initialize
 13793 ;;		_IOCAF2_ISR
 13794 ;; This function uses a non-reentrant model
 13795 ;;
 13796                           
 13797                           
 13798                           ;psect for function _IOCAF2_DefaultInterruptHandler
 13799  1269                     _IOCAF2_DefaultInterruptHandler:
 13800                           
 13801                           ;incstack = 0
 13802                           ; Regs used in _IOCAF2_DefaultInterruptHandler: []
 13803  1269  0008               	return
 13804  126A                     __end_of_IOCAF2_DefaultInterruptHandler:
 13805                           
 13806                           	psect	text94
 13807  12B5                     __ptext94:	
 13808 ;; *************** function _Zero_Detection_isr *****************
 13809 ;; Defined at:
 13810 ;;		line 90 in file "main.c"
 13811 ;; Parameters:    Size  Location     Type
 13812 ;;		None
 13813 ;; Auto vars:     Size  Location     Type
 13814 ;;		None
 13815 ;; Return value:  Size  Location     Type
 13816 ;;                  1    wreg      void 
 13817 ;; Registers used:
 13818 ;;		wreg, status,2, status,0, pclath, cstack
 13819 ;; Tracked objects:
 13820 ;;		On entry : 1F/1
 13821 ;;		On exit  : 1F/0
 13822 ;;		Unchanged: 0/0
 13823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13828 ;;Total ram usage:        0 bytes
 13829 ;; Hardware stack levels used:    1
 13830 ;; Hardware stack levels required when called:    1
 13831 ;; This function calls:
 13832 ;;		_TMR2_StartTimer
 13833 ;; This function is called by:
 13834 ;;		_main
 13835 ;;		_IOCAF2_ISR
 13836 ;; This function uses a non-reentrant model
 13837 ;;
 13838                           
 13839                           
 13840                           ;psect for function _Zero_Detection_isr
 13841  12B5                     _Zero_Detection_isr:
 13842                           
 13843                           ;main.c: 95:     if (1 == DimmerStatusFlag_g){
 13844                           
 13845                           ;incstack = 0
 13846                           ; Regs used in _Zero_Detection_isr: [wreg+status,2+status,0+pclath+cstack]
 13847  12B5  0020               	movlb	0	; select bank0
 13848  12B6  0368               	decf	_DimmerStatusFlag_g,w
 13849  12B7  1D03               	btfss	3,2
 13850  12B8  0008               	return
 13851                           
 13852                           ;main.c: 97:         TMR2_StartTimer();
 13853  12B9  3192  226F         	fcall	_TMR2_StartTimer
 13854  12BB  0008               	return
 13855  12BC                     __end_of_Zero_Detection_isr:
 13856                           
 13857                           	psect	text95
 13858  126F                     __ptext95:	
 13859 ;; *************** function _TMR2_StartTimer *****************
 13860 ;; Defined at:
 13861 ;;		line 87 in file "mcc_generated_files/tmr2.c"
 13862 ;; Parameters:    Size  Location     Type
 13863 ;;		None
 13864 ;; Auto vars:     Size  Location     Type
 13865 ;;		None
 13866 ;; Return value:  Size  Location     Type
 13867 ;;                  1    wreg      void 
 13868 ;; Registers used:
 13869 ;;		None
 13870 ;; Tracked objects:
 13871 ;;		On entry : 1F/0
 13872 ;;		On exit  : 1F/0
 13873 ;;		Unchanged: 0/0
 13874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13879 ;;Total ram usage:        0 bytes
 13880 ;; Hardware stack levels used:    1
 13881 ;; This function calls:
 13882 ;;		Nothing
 13883 ;; This function is called by:
 13884 ;;		_Zero_Detection_isr
 13885 ;; This function uses a non-reentrant model
 13886 ;;
 13887                           
 13888                           
 13889                           ;psect for function _TMR2_StartTimer
 13890  126F                     _TMR2_StartTimer:
 13891                           
 13892                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
 13893                           
 13894                           ;incstack = 0
 13895                           ; Regs used in _TMR2_StartTimer: []
 13896  126F  151C               	bsf	28,2	;volatile
 13897  1270  0008               	return
 13898  1271                     __end_of_TMR2_StartTimer:
 13899  007E                     btemp	set	126	;btemp
 13900  007E                     int$flags	set	126
 13901  007E                     wtemp0	set	126
 13902                           
 13903                           	psect	idloc
 13904                           
 13905                           ;Config register IDLOC0 @ 0x8000
 13906                           ;	unspecified, using default values
 13907  8000                     	org	32768
 13908  8000  3FFF               	dw	16383
 13909                           
 13910                           ;Config register IDLOC1 @ 0x8001
 13911                           ;	unspecified, using default values
 13912  8001                     	org	32769
 13913  8001  3FFF               	dw	16383
 13914                           
 13915                           ;Config register IDLOC2 @ 0x8002
 13916                           ;	unspecified, using default values
 13917  8002                     	org	32770
 13918  8002  3FFF               	dw	16383
 13919                           
 13920                           ;Config register IDLOC3 @ 0x8003
 13921                           ;	unspecified, using default values
 13922  8003                     	org	32771
 13923  8003  3FFF               	dw	16383
 13924                           
 13925                           	psect	config
 13926                           
 13927                           ;Config register CONFIG1 @ 0x8007
 13928                           ;	Oscillator Selection
 13929                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13930                           ;	Watchdog Timer Enable
 13931                           ;	WDTE = OFF, WDT disabled
 13932                           ;	Power-up Timer Enable
 13933                           ;	PWRTE = OFF, PWRT disabled
 13934                           ;	MCLR Pin Function Select
 13935                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13936                           ;	Flash Program Memory Code Protection
 13937                           ;	CP = OFF, Program memory code protection is disabled
 13938                           ;	Data Memory Code Protection
 13939                           ;	CPD = OFF, Data memory code protection is disabled
 13940                           ;	Brown-out Reset Enable
 13941                           ;	BOREN = NSLEEP, Brown-out Reset enabled while running and disabled in Sleep
 13942                           ;	Clock Out Enable
 13943                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13944                           ;	Internal/External Switchover
 13945                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13946                           ;	Fail-Safe Clock Monitor Enable
 13947                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13948  8007                     	org	32775
 13949  8007  3DE4               	dw	15844
 13950                           
 13951                           ;Config register CONFIG2 @ 0x8008
 13952                           ;	Flash Memory Self-Write Protection
 13953                           ;	WRT = OFF, Write protection off
 13954                           ;	PLL Enable
 13955                           ;	PLLEN = OFF, 4x PLL disabled
 13956                           ;	Stack Overflow/Underflow Reset Enable
 13957                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13958                           ;	Brown-out Reset Voltage Selection
 13959                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13960                           ;	Low-Voltage Programming Enable
 13961                           ;	LVP = ON, Low-voltage programming enabled
 13962  8008                     	org	32776
 13963  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    40
    Data        34
    BSS         50
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      80
    BANK1            80      0      50
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Button_Service$2409$0	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Service$2409	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    Button_StateMachine$0	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    memcpy@d1	PTR void  size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    memcpy@s1	PTR const void  size(2) Largest target is 32
		 -> mtouch_button_init(CODE[32]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 32
		 -> mtouch_button_init(CODE[32]), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Wroking_Blink_AlarmLED_isr(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Wroking_Blink_AlarmLED_isr(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Drive_TRIAC_isr(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Drive_TRIAC_isr(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    IOCAF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Zero_Detection_isr(), IOCAF2_DefaultInterruptHandler(), 

    IOCAF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Zero_Detection_isr(), Absolute function(), IOCAF2_DefaultInterruptHandler(), 

    Button_Baseline_Update@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Baseline_Initialize@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Reading_Update_Helper@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Reading_Update@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Deviation_Update@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Tick_helper@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_State_Pressed@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_State_NotPressed@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_State_Initializing@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_Service@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    sp__memcpy	PTR void  size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(1) Largest target is 32
		 -> mtouch_button(BANK2[32]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E2819,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E2819,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setInactive@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setActive@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_isEnabled@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_setScanFunction@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setScanFunction@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setScanFunction@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acquisition@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    Sensor_Service@sensor	PTR struct . size(1) Largest target is 18
		 -> mtouch_sensor(BANK1[18]), 

    S50$scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    S50$scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_scanB	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_scanA	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    callback_sampled	PTR FTN(enum E2661,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 


Critical Paths under _main in COMMON

    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _Sensor_Acquisition->_Sensor_Acq_ExecutePacket
    _Sensor_Acq_ExecutePacket->_Sensor_Acq_ExecuteScan
    _Sensor_Acq_ExecuteScan->___bmul
    _Button_Service->_Button_State_Initializing
    _Button_Service->_Button_State_NotPressed
    _Button_Service->_Button_State_Pressed
    _MTOUCH_Sensor_wasSampled->___bmul
    _Button_State_Initializing->_Button_Baseline_Initialize
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_Button_Reading_Update_Helper
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___bmul
    _SetDimmer->___flmul
    ___fltol->___flmul
    ___flsub->___flmul
    ___flmul->__Umul8_16
    ___fldiv->___flmul
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF2_SetInterruptHandler
    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Enable
    _MTOUCH_Sensor_Enable->___bmul
    _MTOUCH_Button_InitializeAll->_memcpy

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _StartTouchDetection->_StartHeater
    _StartHeater->_StartStop_Dimmer
    _MTOUCH_Service_Mainloop->_MTOUCH_Button_ServiceAll
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_Deviation_Update
    _Init_Function->_StartStop_Dimmer
    _StartStop_Dimmer->_SetDimmer
    _SetDimmer->___fltol
    ___fltol->___fldiv
    ___flsub->___fldiv
    ___fldiv->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   61299
         _IOCAF2_SetInterruptHandler
                      _Init_Function
                  _SYSTEM_Initialize
                _StartTouchDetection
           _TMR2_SetInterruptHandler
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _StartTouchDetection                                  0     0      0   47987
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
                        _StartHeater
 ---------------------------------------------------------------------------------
 (2) _StartHeater                                          3     3      0   39834
                                             67 BANK0      3     3      0
                          _SetDimmer
           _StartStop_AlarmLED_Blink
                   _StartStop_Buzzer
                   _StartStop_Dimmer
                      _StartStop_Fan
                 _StopTouchDetection
 ---------------------------------------------------------------------------------
 (3) _StopTouchDetection                                   0     0      0   18742
                      _Init_Function
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Service_Mainloop                              1     1      0    8109
                                             11 BANK0      1     1      0
           _MTOUCH_Button_ServiceAll
                  _MTOUCH_Initialize
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
                        _MTOUCH_Tick
                 _MTOUCH_needReburst
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_needReburst                                   1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Tick                                          0     0      0     189
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Button_Tick                                   2     2      0     189
                                              3 COMMON     2     2      0
                 _Button_Tick_helper
 ---------------------------------------------------------------------------------
 (7) _Button_Tick_helper                                   3     3      0     121
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_SampleAll                              2     2      0    2105
                                              8 BANK0      2     2      0
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (6) _Sensor_Service                                       5     5      0    2037
                                              3 BANK0      5     5      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback
            _Sensor_RawSample_Update
                   _Sensor_isEnabled
                  _Sensor_setSampled
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) _Sensor_setSampled                                    1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Sensor_RawSample_Update                              1     1      0      77
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Sensor_DefaultCallback                               1     0      1      53
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _Sensor_Acquisition                                   3     3      0    1238
                                              0 BANK0      3     3      0
           _Sensor_Acq_ExecutePacket
                   _Sensor_isEnabled
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _Sensor_setInactive                                   1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Sensor_setActive                                     1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Sensor_isEnabled                                     1     1      0     110
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Sensor_Acq_ExecutePacket                             6     6      0     709
                                              8 COMMON     6     6      0
                       _MTOUCH_Delay
                      _MTOUCH_Random
      _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
             _Sensor_setScanFunction
 ---------------------------------------------------------------------------------
 (9) _Sensor_setScanFunction                               1     1      0      77
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _Sensor_Acq_ExecuteScan                               4     4      0     394
                                              4 COMMON     4     4      0
                 _MTOUCH_CVD_ScanA_0 *
                 _MTOUCH_CVD_ScanA_1 *
                 _MTOUCH_CVD_ScanB_0 *
                 _MTOUCH_CVD_ScanB_1 *
                             ___bmul
 ---------------------------------------------------------------------------------
 (10) _MTOUCH_CVD_ScanB_1                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _MTOUCH_CVD_ScanB_0                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _MTOUCH_CVD_ScanA_1                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _MTOUCH_CVD_ScanA_0                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _MTOUCH_Random                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _MTOUCH_Delay                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Button_ServiceAll                             2     2      0    4055
                                              9 BANK0      2     2      0
                     _Button_Service
 ---------------------------------------------------------------------------------
 (6) _Button_Service                                       4     4      0    3987
                                              5 BANK0      4     4      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Sensor_wasSampled                             2     2      0     370
                                              4 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _Button_State_Pressed                                 3     2      1     565
                                             13 COMMON     1     0      1
                                              0 BANK0      2     2      0
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (7) _Button_State_NotPressed                              3     2      1     904
                                             13 COMMON     1     0      1
                                              0 BANK0      2     2      0
             _Button_Baseline_Update
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (8) _Button_DefaultCallback                               1     0      1     159
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _Button_State_Initializing                            5     4      1     936
                                             13 COMMON     1     0      1
                                              0 BANK0      4     4      0
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (8) _Button_Baseline_Update                               7     7      0     260
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) _Button_Baseline_Initialize                           5     5      0     478
                                              8 COMMON     5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (7) _Button_Reading_Update                                1     1      0     667
                                             11 COMMON     1     1      0
       _Button_Reading_Update_Helper
 ---------------------------------------------------------------------------------
 (8) _Button_Reading_Update_Helper                         3     3      0     590
                                              8 COMMON     3     3      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (9) _MTOUCH_Sensor_RawSample_Get                          4     2      2     370
                                              4 COMMON     4     2      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) _Button_Deviation_Update                             15    15      0     213
                                              0 COMMON    10    10      0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_isPressed                              2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Init_Function                                        0     0      0   10589
                 _StartStop_AlarmLED
           _StartStop_AlarmLED_Blink
                   _StartStop_Buzzer
                   _StartStop_Dimmer
                      _StartStop_Fan
 ---------------------------------------------------------------------------------
 (5) _StartStop_Fan                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _StartStop_Dimmer                                     1     1      0   10501
                                             66 BANK0      1     1      0
                          _SetDimmer
 ---------------------------------------------------------------------------------
 (6) _SetDimmer                                            8     4      4   10479
                                             58 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             11     7      4     305
                                             47 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2333
                                             47 BANK0      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             20    12      8    2136
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    2570
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    1425
                                             21 BANK0     26    18      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _StartStop_Buzzer                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _StartStop_AlarmLED_Blink                             1     1      0      22
                                              0 COMMON     1     1      0
                    _TMR4_StartTimer
                     _TMR4_StopTimer
 ---------------------------------------------------------------------------------
 (6) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _StartStop_AlarmLED                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2201
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      98
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCAF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF2_SetInterruptHandler                           2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Initialize                                    0     0      0    1581
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
 ---------------------------------------------------------------------------------
 (9) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     156
                                              1 COMMON     2     2      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_InitializeAll                          2     2      0     896
                                              8 COMMON     2     2      0
           _MTOUCH_Sensor_Initialize
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Sensor_Initialize                             2     2      0     828
                                              6 COMMON     2     2      0
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
                             ___bmul
 ---------------------------------------------------------------------------------
 (6) _Sensor_Sampled_Reset                                 1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_Sensor_Enable                                 2     2      0     370
                                              4 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               4     3      1     326
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Button_InitializeAll                          2     2      0     529
                                             10 COMMON     2     2      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     6      4     328
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Button_Initialize                             4     4      0     133
                                              0 COMMON     4     4      0
            _MTOUCH_Sensor_Calibrate
 ---------------------------------------------------------------------------------
 (8) _MTOUCH_Sensor_Calibrate                              1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0       0
                    _PIN_MANAGER_IOC
                           _TMR2_ISR
                           _TMR4_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
    _TMR4_Wroking_Blink_AlarmLED_isr *
 ---------------------------------------------------------------------------------
 (13) _TMR4_Wroking_Blink_AlarmLED_isr                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
               _TMR2_Drive_TRIAC_isr *
 ---------------------------------------------------------------------------------
 (13) _TMR2_Drive_TRIAC_isr                                0     0      0       0
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (14) _TMR2_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF2_ISR
 ---------------------------------------------------------------------------------
 (13) _IOCAF2_ISR                                          0     0      0       0
                   Absolute function *
     _IOCAF2_DefaultInterruptHandler *
                 _Zero_Detection_isr *
 ---------------------------------------------------------------------------------
 (14) _Zero_Detection_isr                                  0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (15) _TMR2_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _IOCAF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCAF2_SetInterruptHandler
   _Init_Function
     _StartStop_AlarmLED
     _StartStop_AlarmLED_Blink
       _TMR4_StartTimer
       _TMR4_StopTimer
     _StartStop_Buzzer
     _StartStop_Dimmer
       _SetDimmer
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
         ___flmul
           __Umul8_16
         ___flsub
           ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
           ___flmul (ARG)
             __Umul8_16
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
           ___flmul (ARG)
             __Umul8_16
     _StartStop_Fan
   _SYSTEM_Initialize
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
           _MTOUCH_Sensor_Calibrate
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Enable
             ___bmul
           _Sensor_Sampled_Reset
           ___bmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF2_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _WDT_Initialize
   _StartTouchDetection
     _MTOUCH_Button_isPressed
     _MTOUCH_Service_Mainloop
       _MTOUCH_Button_ServiceAll
         _Button_Service
           _Button_Deviation_Update
           _Button_Reading_Update
             _Button_Reading_Update_Helper
               _MTOUCH_Sensor_RawSample_Get
                 ___bmul
           _Button_State_Initializing *
             _Button_Baseline_Initialize
               _MTOUCH_Sensor_RawSample_Get
                 ___bmul
             _Button_Baseline_Update
           _Button_State_NotPressed *
             _Button_Baseline_Update
             _Button_DefaultCallback
             _MTOUCH_Button_Initialize
               _MTOUCH_Sensor_Calibrate
           _Button_State_Pressed *
             _Button_DefaultCallback
             _MTOUCH_Button_Initialize
               _MTOUCH_Sensor_Calibrate
           _MTOUCH_Button_Initialize *
             _MTOUCH_Sensor_Calibrate
           _MTOUCH_Sensor_isCalibrated *
           _MTOUCH_Sensor_wasSampled *
             ___bmul
       _MTOUCH_Initialize
         _MTOUCH_Button_InitializeAll
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
           _memcpy
         _MTOUCH_Sensor_InitializeAll
           _MTOUCH_Sensor_Initialize
             _MTOUCH_Sensor_Enable
               ___bmul
             _Sensor_Sampled_Reset
             ___bmul
         _MTOUCH_Sensor_Sampled_ResetAll
           _Sensor_Sampled_Reset
         _MTOUCH_Sensor_Scan_Initialize
       _MTOUCH_Sensor_SampleAll
         _Sensor_Service
           _Sensor_Acquisition
             _Sensor_Acq_ExecutePacket
               _MTOUCH_Delay
               _MTOUCH_Random
               _MTOUCH_Sensor_Scan_Initialize
               _Sensor_Acq_ExecuteScan
                 _MTOUCH_CVD_ScanA_0 *
                 _MTOUCH_CVD_ScanA_1 *
                 _MTOUCH_CVD_ScanB_0 *
                 _MTOUCH_CVD_ScanB_1 *
                 ___bmul *
               _Sensor_setScanFunction
             _Sensor_isEnabled
             _Sensor_setActive
             _Sensor_setInactive
             _abs
           _Sensor_DefaultCallback
           _Sensor_RawSample_Update
           _Sensor_isEnabled
           _Sensor_setSampled
           ___bmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Tick
         _MTOUCH_Button_Tick
           _Button_Tick_helper
       _MTOUCH_needReburst
     _StartHeater
       _SetDimmer
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
         ___flmul
           __Umul8_16
         ___flsub
           ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
           ___flmul (ARG)
             __Umul8_16
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
           ___flmul (ARG)
             __Umul8_16
       _StartStop_AlarmLED_Blink
         _TMR4_StartTimer
         _TMR4_StopTimer
       _StartStop_Buzzer
       _StartStop_Dimmer
         _SetDimmer
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
           ___flmul
             __Umul8_16
           ___flsub
             ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
             ___flmul (ARG)
               __Umul8_16
           ___fltol
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
             ___flmul (ARG)
               __Umul8_16
       _StartStop_Fan
       _StopTouchDetection
         _Init_Function
           _StartStop_AlarmLED
           _StartStop_AlarmLED_Blink
             _TMR4_StartTimer
             _TMR4_StopTimer
           _StartStop_Buzzer
           _StartStop_Dimmer
             _SetDimmer
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
               ___flmul
                 __Umul8_16
               ___flsub
                 ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                 ___flmul (ARG)
                   __Umul8_16
               ___fltol
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                 ___flmul (ARG)
                   __Umul8_16
           _StartStop_Fan
         _MTOUCH_Button_isPressed
         _MTOUCH_Service_Mainloop
           _MTOUCH_Button_ServiceAll
             _Button_Service
               _Button_Deviation_Update
               _Button_Reading_Update
                 _Button_Reading_Update_Helper
                   _MTOUCH_Sensor_RawSample_Get
                     ___bmul
               _Button_State_Initializing *
                 _Button_Baseline_Initialize
                   _MTOUCH_Sensor_RawSample_Get
                     ___bmul
                 _Button_Baseline_Update
               _Button_State_NotPressed *
                 _Button_Baseline_Update
                 _Button_DefaultCallback
                 _MTOUCH_Button_Initialize
                   _MTOUCH_Sensor_Calibrate
               _Button_State_Pressed *
                 _Button_DefaultCallback
                 _MTOUCH_Button_Initialize
                   _MTOUCH_Sensor_Calibrate
               _MTOUCH_Button_Initialize *
                 _MTOUCH_Sensor_Calibrate
               _MTOUCH_Sensor_isCalibrated *
               _MTOUCH_Sensor_wasSampled *
                 ___bmul
           _MTOUCH_Initialize
             _MTOUCH_Button_InitializeAll
               _MTOUCH_Button_Initialize
                 _MTOUCH_Sensor_Calibrate
               _memcpy
             _MTOUCH_Sensor_InitializeAll
               _MTOUCH_Sensor_Initialize
                 _MTOUCH_Sensor_Enable
                   ___bmul
                 _Sensor_Sampled_Reset
                 ___bmul
             _MTOUCH_Sensor_Sampled_ResetAll
               _Sensor_Sampled_Reset
             _MTOUCH_Sensor_Scan_Initialize
           _MTOUCH_Sensor_SampleAll
             _Sensor_Service
               _Sensor_Acquisition
                 _Sensor_Acq_ExecutePacket
                   _MTOUCH_Delay
                   _MTOUCH_Random
                   _MTOUCH_Sensor_Scan_Initialize
                   _Sensor_Acq_ExecuteScan
                     _MTOUCH_CVD_ScanA_0 *
                     _MTOUCH_CVD_ScanA_1 *
                     _MTOUCH_CVD_ScanB_0 *
                     _MTOUCH_CVD_ScanB_1 *
                     ___bmul *
                   _Sensor_setScanFunction
                 _Sensor_isEnabled
                 _Sensor_setActive
                 _Sensor_setInactive
                 _abs
               _Sensor_DefaultCallback
               _Sensor_RawSample_Update
               _Sensor_isEnabled
               _Sensor_setSampled
               ___bmul
           _MTOUCH_Sensor_Sampled_ResetAll
             _Sensor_Sampled_Reset
           _MTOUCH_Tick
             _MTOUCH_Button_Tick
               _Button_Tick_helper
           _MTOUCH_needReburst
   _TMR2_SetInterruptHandler
   _TMR4_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF2_ISR
       Absolute function(Fake) *
       _IOCAF2_DefaultInterruptHandler *
       _Zero_Detection_isr *
         _TMR2_StartTimer
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _TMR2_Drive_TRIAC_isr *
       _TMR2_StopTimer
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *
     _TMR4_Wroking_Blink_AlarmLED_isr *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      32       7       62.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jul 23 22:04:09 2023

           __end_of_TMR2_SetInterruptHandler 128D                 ?_MTOUCH_Sensor_RawSample_Get 0074  
                               ___fldiv@aexp 004E                                 ___fldiv@bexp 004D  
                               ___fldiv@sign 0046                               ___bmul@product 0072  
                     _Sensor_setScanFunction 1404              __size_of_Sensor_Acq_ExecuteScan 0055  
                               StartHeater@i 0065                   __end_of_Sensor_setInactive 12D1  
                        __Umul8_16@word_mpld 0076                                          LATC 010E  
                                        l140 0870                                          l136 085E  
                                        l340 0C4C                                          l839 12DF  
                                        l855 12F3                                          l864 12E9  
                                        l795 1625                                          _GIE 005F  
                                        _PR2 001B                                          _PR4 0416  
                                        _PR6 041D                                          _abs 14CF  
                            _TMR2_Initialize 1380                                          wreg 0009  
         __end_of_IOCAF2_SetInterruptHandler 12A9                   _IOCAF2_SetInterruptHandler 12A3  
           ??_MTOUCH_Sensor_Sampled_ResetAll 0071              ?_MTOUCH_Sensor_Sampled_ResetAll 0070  
                               ___flmul@aexp 0029                                 ___flmul@bexp 002E  
           __size_of_MTOUCH_Sensor_SampleAll 0014                                 ___flmul@sign 0028  
                               ___flmul@temp 0033                                 ___flmul@prod 002F  
          __size_of_MTOUCH_Sensor_Initialize 0011                    ?_MTOUCH_Sensor_Initialize 0070  
                                       INDF0 0000                                         FSR0H 0005  
                                       FSR1H 0007                                         FSR0L 0004  
                                       FSR1L 0006                           _MTOUCH_CVD_ScanA_0 15A8  
                         _MTOUCH_CVD_ScanA_1 1588                           _MTOUCH_CVD_ScanB_0 15E8  
                         _MTOUCH_CVD_ScanB_1 15C8                                 ___fltol@exp1 0059  
                                       ?_abs 0070                                         l1430 07D4  
                                       l1422 07BB                                         l1503 1579  
                                       l1409 075B                                         l1444 0CB7  
                                       l3230 13C2                                         l4102 177D  
                                       l4110 1794                                         l1392 06D5  
                                       l1288 0A22                                         l4112 17B1  
                                       l1465 0DBE                                         l3234 13C8  
                                       l1466 0DD6                                         l4050 0F89  
                                       l4042 0F5B                                         l1394 06B7  
                                       l3314 14CC                                         l4210 1372  
                                       l1468 0DE3                                         l4044 0F72  
                                       l1388 0641                                         l3332 1361  
                                       l4142 1523                                         l4054 0F8B  
                                       l3502 06C0                                         l3430 060E  
                                       l3414 17EF                                         l3406 0B8B  
                                       l3246 1394                                         l3270 08D0  
                                       l1496 0FF3                                         l4064 0FB4  
                                       l3600 07CB                                         l3520 06E3  
                                       l3504 06C2                                         l3512 06D1  
                                       l4160 08B0                                         l3272 08D7  
                                       l4074 0FE0                                         l3530 06F8  
                                       l3434 0611                                         l4250 147F  
                                       l4092 1364                                         l4068 0FC9  
                                       l3604 07CF                                         l3436 0619  
                                       l3284 090C                                         l3276 08DE  
                                       l4260 07E6                                         l4238 1337  
                                       l3614 1573                                         l3454 0636  
                                       l3710 0B20                                         l3702 1352  
                                       l3286 0910                                         l3278 08EF  
                                       l3358 0852                                         l4190 144F  
                                       l4270 07F0                                         l3528 06F6  
                                       l3464 064B                                         l3720 098D  
                                       l3288 0913                                         l3632 1737  
                                       l4168 14A3                                         l3570 0781  
                                       l3538 0708                                         l3458 0639  
                                       l3714 0B36                                         l3722 0991  
                                       l3642 1740                                         l3820 0C88  
                                       l3564 077A                                         l3556 076D  
                                       l3548 0753                                         l3572 0783  
                                       l3708 0B17                                         l3636 1739  
                                       l4196 1458                                         l3582 078E  
                                       l3494 0687                                         l3742 0C44  
                                       l3662 14F4                                         l3912 0D7B  
                                       l3904 0D4D                                         l3840 0CAC  
                                       l3824 0C8B                                         l4296 1549  
                                       l3752 093D                                         l3736 0C0E  
                                       l3648 1761                                         l3906 0D64  
                                       l3826 0C93                                         l3578 078C  
                                       l3770 09EB                                         l4810 17A1  
                                       l3692 16A6                                         l3940 0DDF  
                                       l3916 0D7D                                         l3860 0CE2  
                                       l3844 0CAF                                         l4812 17A6  
                                       l3926 0DA6                                         l3854 0CD6  
                                       l3766 09E2                                         l3678 144C  
                                       l4814 08E7                                         l3880 0D29  
                                       l3960 0E01                                         l4672 05C7  
                                       l3890 0D47                                         l3962 0E03  
                                       l3786 0A10                                         l3980 0E26  
                                       l3964 0E0B                                         l3796 0A2F  
                                       l3788 0A1E                                         TRISC 008E  
                                       l3886 0D42                                         l3990 0E3C  
                                       l3982 0E2E                                         l3888 0D0B  
                                       l3978 0E24                ?_Button_Reading_Update_Helper 0070  
                                       _LATA 010C                                         _LATB 010D  
                                       _LATC 010E                                         u2400 06A6  
                                       u3025 0A11                                         u2225 14D8  
                                       u2235 16F9                                         u3205 0D23  
                                       u2245 16EA                                         u3215 0D37  
                                       u3055 0A26                                         u2513 071B  
                                       u2505 06FD                                         u2265 0B53  
                                       u2435 06C7                                         u2275 0B99  
                                       u3245 0D50                                         u2390 06A5  
                                       u3335 0D94                                         u3175 0D13  
                                       u4207 0133                                         u3345 0DAF  
                                       u3265 0D59                                         u3185 0D1A  
                                       u2385 069B                                         u4217 014F  
                                       u4137 006F                                         u3355 0DC8  
                                       u3515 0F67                                         u2555 076E  
                                       u4307 024B                                         u4227 016B  
                                       u4147 008B                                         u3605 0FD3  
                                       u4317 0267                                         u4237 0187  
                                       u4157 00A7                                         u2735 157A  
                                       u3455 0EAF                                         u2655 07A6  
                                       u4407 0363                                         u4327 0283  
                                       u4247 01A3                                         u4167 00C3  
                                       u2840 0AFE                                         u3465 0EDC  
                                       u4417 037F                                         u4337 029F  
                                       u4257 01BF                                         u4177 00DF  
                                       u3475 0F2E                                         u2835 0AC6  
                                       u3715 14A6                                         u4507 047B  
                                       u4427 039B                                         u4347 02BB  
                                       u4267 01DB                                         u4187 00FB  
                                       u3485 0F4A                                         u2845 0AFA  
                                       u2925 0C24                                         u4517 0497  
                                       u4437 03B7                                         u4357 02D7  
                                       u4277 01F7                                         u4197 0117  
                                       u3495 0F5E                                         u4607 0593  
                                       u4527 04B3                                         u4447 03D3  
                                       u4367 02F3                                         u4287 0213  
                                       u3585 0FA2                                         u4617 05AF  
                                       u4537 04CF                                         u4457 03EF  
                                       u4377 030F                                         u4297 022F  
                                       u3850 1547                                         u3595 0FBD  
                                       u3675 0876                                         u4627 05CD  
                                       u4547 04EB                                         u4467 040B  
                                       u4387 032B                                         u3845 1538  
                                       u4637 05EA                                         u4557 0507  
                                       u4477 0427                                         u4397 0347  
                                       u2895 09BA                                         u4647 15EE  
                                       u4567 0523                                         u4487 0443  
                                       u4657 15CE                                         u4577 053F  
                                       u4497 045F                                         u2995 09F4  
                                       u4667 15AE                                         u4587 055B  
                                       u4677 158E                                         u4597 0577  
                 Button_State_Pressed@button 007D                                         _TMR2 001A  
                                       _TMR4 0415                                         _TMR6 041C  
                                       _WPUA 020C                                         _WPUB 020D  
                                       _WPUC 020E            __size_of_Sensor_Acq_ExecutePacket 004F  
                  ?_Sensor_Acq_ExecutePacket 0070                           _MTOUCH_needReburst 0002  
                                       abs@a 0070                                         _main 1608  
       __size_of_MTOUCH_Button_InitializeAll 001A  TMR4_Wroking_Blink_AlarmLED_isr@counter_tmr4 00CA  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
       __size_of_MTOUCH_Sensor_InitializeAll 000E                                         btemp 007E  
                        ?_MTOUCH_CVD_ScanA_0 0070                          ?_MTOUCH_CVD_ScanA_1 0070  
                        ?_MTOUCH_CVD_ScanB_0 0070                          ?_MTOUCH_CVD_ScanB_1 0070  
                                       start 002D                              ___fldiv@new_exp 0047  
                     ??_TMR2_Drive_TRIAC_isr 0070                            ___bmul@multiplier 0073  
                        ?_MTOUCH_needReburst 0070                   ??_TMR4_SetInterruptHandler 0072  
                                      ADCON0 009D                     ?_MTOUCH_Service_Mainloop 0070  
           __size_of_MTOUCH_Button_isPressed 001B                __size_of_Button_State_Pressed 005F  
                                      ??_abs 0072                  ?_Button_Baseline_Initialize 0070  
                              _Init_Function 148C                ??_MTOUCH_Sensor_RawSample_Get 0076  
              Sensor_RawSample_Update@sensor 0070                    __size_of_Sensor_isEnabled 000D  
             __size_of_OSCILLATOR_Initialize 0006                          __size_of_IOCAF2_ISR 000D  
              __end_of_OSCILLATOR_Initialize 12A3                                ___fltol@sign1 0058  
                            __end_of___fladd 07DD                                        ?_main 0070  
                            __end_of___fldiv 0DE8                                        _ADRES 009B  
                       ??_MTOUCH_CVD_ScanA_0 0070                         ??_MTOUCH_CVD_ScanA_1 0070  
                       ??_MTOUCH_CVD_ScanB_0 0070                         ??_MTOUCH_CVD_ScanB_1 0070  
                            __end_of___flmul 1000                              __end_of___flsub 1569  
                            __end_of___fltol 0A3E                                        _T2CON 001C  
                                      _T4CON 0417                                        _T6CON 041E  
                    __size_of_Button_Service 0052                                        i1l624 000D  
                                      i1l634 002B                                        i1l627 0019  
                                      i1l813 163F                                        i1l629 0023  
                                      _TRISA 008C                                        _TRISB 008D  
                                      _TRISC 008E              __size_of_Button_DefaultCallback 0001  
                            _TMR4_Initialize 13F3            __size_of_TMR6_SetInterruptHandler 0005  
                       ??_MTOUCH_needReburst 0070                    ?_TMR6_SetInterruptHandler 0070  
                           __end_of_TMR2_ISR 130C                             __end_of_TMR4_ISR 1318  
                           __end_of_TMR6_ISR 1324              __size_of_Sensor_DefaultCallback 0001  
                    __end_of_PIN_MANAGER_IOC 129D                      __size_of_Sensor_Service 004C  
      __end_of_MTOUCH_Sensor_Scan_Initialize 1288       __size_of_MTOUCH_Sensor_Scan_Initialize 0005  
              _MTOUCH_Sensor_Scan_Initialize 1283                               _WDT_Initialize 127F  
                    Sensor_setSampled@sensor 0070                              ??_StartStop_Fan 0070  
                     _Sensor_Acq_ExecuteScan 08C4             __size_of_Button_State_NotPressed 009F  
                                      pclath 000A                         _Sensor_Sampled_Reset 12BC  
                                      status 0003                                        wtemp0 007E  
                            _TMR2_StartTimer 126F                    __size_of_Sensor_setActive 0007  
                     Sensor_isEnabled@sensor 0070               ??_TMR6_DefaultInterruptHandler 0070  
                            __initialization 002F                                 __end_of_main 1629  
                             ?_Init_Function 0070                        __end_of_MTOUCH_Random 13A0  
                    __end_of_TMR2_Initialize 1390                  ?_INTERRUPT_InterruptManager 0070  
           __end_of_MTOUCH_Button_Initialize 172B                     _TMR2_SetInterruptHandler 1288  
                                     ??_main 007E                   __end_of_StartStop_AlarmLED 12E2  
                    _MTOUCH_Sensor_Calibrate 126D                      ??_Button_Reading_Update 007B  
       MTOUCH_Sensor_Sampled_ResetAll@sensor 0072                     ?_Button_Deviation_Update 0070  
                     __end_of_WDT_Initialize 1283                              _TMR6_Initialize 1415  
                  __size_of_StartStop_Dimmer 0015                                 ?_MTOUCH_Tick 0070  
               Button_Baseline_Update@button 0076                    __size_of_StartStop_Buzzer 000A  
                                     _ADCON0 009D                                       _ADCON1 009E  
       __size_of_MTOUCH_Sensor_RawSample_Get 0017                  __size_of_StopTouchDetection 0010  
                                     _ANSELA 018C                                       _ANSELB 018D  
                                     _ANSELC 018E                                       _BORCON 0116  
                                     i1l4400 1346                                       i1l4416 164A  
                      ?_Sensor_Sampled_Reset 0070                                       u392_25 1638  
                                     _OSCCON 0099                                       u395_20 1513  
                                     _WDTCON 0097                  __end_of_StartTouchDetection 13C0  
          MTOUCH_Button_InitializeAll@button 007B                              _TMR4_StartTimer 1276  
             ??_Button_Reading_Update_Helper 0078                       _Button_DefaultCallback 126E  
            __end_of_MTOUCH_Service_Mainloop 0800      __end_of_TMR4_Wroking_Blink_AlarmLED_isr 1516  
   __size_of_TMR4_Wroking_Blink_AlarmLED_isr 0019            ??_TMR4_Wroking_Blink_AlarmLED_isr 0070  
           ?_TMR4_Wroking_Blink_AlarmLED_isr 0070              _TMR4_Wroking_Blink_AlarmLED_isr 14FD  
                     _Sensor_DefaultCallback 0800                                _packet_sample 0066  
                         __size_of_SetDimmer 0079                                       ___bmul 13C0  
                                  ??___fladd 0020                 Sensor_DefaultCallback@sensor 0070  
                                  ??___fldiv 003D                                    ??___flmul 0079  
                                  ??___flsub 007E                                    ??___fltol 0053  
                                     _memcpy 169D                      __end_of_TMR4_Initialize 1404  
           __end_of_MTOUCH_Button_ServiceAll 1380                   __end_of_Zero_Detection_isr 12BC  
       __end_of_TMR4_DefaultInterruptHandler 126C        __size_of_TMR4_DefaultInterruptHandler 0001  
               _TMR4_DefaultInterruptHandler 126B                      _MTOUCH_Sensor_SampleAll 144E  
                         __size_of__Umul8_16 001F                 Button_DefaultCallback@button 0070  
                            ?_WDT_Initialize 0070                     ?_Sensor_RawSample_Update 0070  
              StartStop_AlarmLED_Blink@OnOff 0070                   __end_of_Sensor_Acquisition 1767  
              _tmr2_required_counter_steps_g 00CE                      ?_Button_Baseline_Update 0070  
                    __end_of_TMR2_StartTimer 1271     TMR6_SetInterruptHandler@InterruptHandler 0070  
   TMR4_SetInterruptHandler@InterruptHandler 0070     TMR2_SetInterruptHandler@InterruptHandler 0070  
 IOCAF2_SetInterruptHandler@InterruptHandler 0070             TMR2_Drive_TRIAC_isr@counter_tmr2 00CC  
                           ?_PIN_MANAGER_IOC 0070                                 ??_IOCAF2_ISR 0070  
             SetDimmer@TRIAC_off_duration_ms 005E              MTOUCH_Sensor_RawSample_Get@name 0077  
                          _SYSTEM_Initialize 1462                      __end_of__initialization 0052  
        __size_of_Button_Baseline_Initialize 002D               ?_MTOUCH_Sensor_Scan_Initialize 0070  
                         ?_SYSTEM_Initialize 0070                          _Button_StateMachine 00A0  
                                 ___fltol@f1 004F                   __end_of_Button_Tick_helper 1675  
              MTOUCH_Sensor_Calibrate@sensor 0070                          ___bmul@multiplicand 0070  
                    ?_Sensor_setScanFunction 0070                                ??_StartHeater 0063  
                            ??_Init_Function 007E                               __pcstackCOMMON 0070  
                    _MTOUCH_Button_isPressed 1530                                 __pidataBANK1 0801  
                        ??_SYSTEM_Initialize 007C                                    ?_TMR2_ISR 0070  
                                  ?_TMR4_ISR 0070                   __end_of_MTOUCH_Button_Tick 14B8  
                                  ?_TMR6_ISR 0070             __end_of_MTOUCH_Sensor_Initialize 13F3  
                         _DimmerStatusFlag_g 0068                    ??_MTOUCH_Sensor_Calibrate 0070  
                           _Sensor_isEnabled 1356                             ?_TMR2_Initialize 0070  
                    __end_of_TMR6_Initialize 1427              __end_of_Button_Deviation_Update 0B41  
                         __end_of_IOCAF2_ISR 1349                     Sensor_setInactive@sensor 0070  
                             _Button_Service 0872             __end_of_Sensor_Acq_ExecutePacket 0872  
                 ?_Button_State_Initializing 007D                         Button_Service@button 0028  
                             _OPTION_REGbits 0095               __end_of_Button_Baseline_Update 0BD0  
              ?_TMR4_DefaultInterruptHandler 0070                         Sensor_Service@sensor 0027  
                    StartStop_AlarmLED@OnOff 0070                  ?_IOCAF2_SetInterruptHandler 0070  
                   _MTOUCH_Button_Initialize 16F5             ??_IOCAF2_DefaultInterruptHandler 0070  
            ?_IOCAF2_DefaultInterruptHandler 0070                               _Sensor_Service 1767  
                          __end_of_SetDimmer 0AB7                      _Button_State_NotPressed 0BD0  
              __size_of_MTOUCH_Sensor_Enable 0011                           _Sensor_setInactive 12CA  
                    __end_of_TMR4_StartTimer 1279                    __end_of_SYSTEM_Initialize 1477  
                          _lowpowerActivated 00D1             MTOUCH_Sensor_isCalibrated@sensor 0070  
                     ??_Sensor_Sampled_Reset 0070                                   __pbssBANK0 0066  
                                 __pbssBANK1 00CA                                   __pbssBANK2 0120  
                        ?_Sensor_setInactive 0070                             _Sensor_setActive 12C3  
                         Sensor_Service@name 0025                        _TMR4_InterruptHandler 00C4  
                 __end_of_mtouch_button_init 1820               __end_of_Sensor_setScanFunction 1415  
                          __end_of__Umul8_16 1588                                   __pmaintext 1608  
                              ?_MTOUCH_Delay 0070                                      ?___bmul 0070  
           __end_of_TMR6_SetInterruptHandler 1297                                   ??_TMR2_ISR 0070  
                                 ??_TMR4_ISR 0070                                   ??_TMR6_ISR 0070  
             MTOUCH_Sensor_wasSampled@sensor 0075                                   __pintentry 0004  
                     __end_of_Button_Service 08C4                                      ?_memcpy 0070  
        __end_of_MTOUCH_Button_InitializeAll 1530                  _MTOUCH_Button_InitializeAll 1516  
                           ?_TMR4_Initialize 0070                                      _APFCON0 011D  
                                    _APFCON1 011E          __end_of_MTOUCH_Sensor_InitializeAll 1371  
                _MTOUCH_Sensor_InitializeAll 1363                    ??_MTOUCH_Sensor_SampleAll 0028  
                        __end_of_StartHeater 05F5              __end_of_Sensor_RawSample_Update 14FD  
                       ??_Sensor_setInactive 0070            __size_of_MTOUCH_Sensor_wasSampled 0014  
                  ?_MTOUCH_Sensor_wasSampled 0070            __end_of_Button_State_Initializing 09D9  
                     __end_of_Sensor_Service 17B3            __size_of_StartStop_AlarmLED_Blink 000C  
                  ?_StartStop_AlarmLED_Blink 0070                     _MTOUCH_Button_ServiceAll 1371  
                           _StartStop_Dimmer 1477                      ?_Sensor_Acq_ExecuteScan 0070  
              MTOUCH_Sensor_SampleAll@sensor 0029                                      _OSCTUNE 0098  
           __size_of_MTOUCH_Service_Mainloop 0023                             _StartStop_Buzzer 12E2  
               __end_of_Button_State_Pressed 0978                      __size_of_TMR2_StopTimer 0003  
                           ?_TMR2_StartTimer 0070             Button_Baseline_Initialize@button 007C  
                       __size_of_MTOUCH_Tick 0003                    ??_MTOUCH_Button_isPressed 0070  
                             ??_MTOUCH_Delay 0070                               _packet_counter 006C  
                 ??_TMR2_SetInterruptHandler 0072                __size_of_TMR2_Drive_TRIAC_isr 0025  
                    Sensor_Acquisition@retry 0021                      __size_of_TMR4_StopTimer 0003  
                            __size_of___bmul 0011                                      ___fladd 05F5  
                                    ___fldiv 0C6F                                      ___flmul 0DE8  
                                    ___flsub 154B                                      ___fltol 09D9  
             MTOUCH_Button_Initialize@button 0073                              ?_Button_Service 0070  
                            __size_of_memcpy 002B                             ?_TMR6_Initialize 0070  
                                    __ptext1 13B0                                      __ptext2 0056  
                                    __ptext3 13A0                                      __ptext4 07DD  
                                    __ptext5 0002                                      __ptext6 127C  
                                    __ptext7 14A2                                      __ptext8 164E  
                                    __ptext9 144E                  Button_Reading_Update@button 007B  
                                    _kirFlag 00D0                  __size_of_MTOUCH_CVD_ScanA_0 0020  
                __size_of_MTOUCH_CVD_ScanA_1 0020                  __size_of_MTOUCH_CVD_ScanB_0 0020  
                __size_of_MTOUCH_CVD_ScanB_1 0020                     _MTOUCH_Sensor_Initialize 13E2  
             __end_of_Sensor_Acq_ExecuteScan 0919                        _OSCILLATOR_Initialize 129D  
                                  _T2CONbits 001C                                 __size_of_abs 0017  
                  ??_Button_State_NotPressed 0020                              ?_Sensor_Service 0070  
                                  _T4CONbits 0417                     ??_PIN_MANAGER_Initialize 0072  
          __size_of_TMR4_SetInterruptHandler 0005                                    _IOCAFbits 0393  
                  ?_TMR4_SetInterruptHandler 0070                                    _IOCANbits 0392  
             __size_of_Button_Reading_Update 000D                                    _IOCAPbits 0391  
                __size_of_MTOUCH_needReburst 0002                __end_of_Button_Reading_Update 1356  
          MTOUCH_Sensor_InitializeAll@sensor 0079                     _Sensor_Acq_ExecutePacket 0823  
                           _callback_sampled 00AE                   __size_of_SYSTEM_Initialize 0015  
                                    clrloop0 12AA                             ?_TMR4_StartTimer 0070  
                           _callback_pressed 00A8               MTOUCH_Sensor_Initialize@sensor 0077  
                       end_of_initialization 0052               ??_TMR4_DefaultInterruptHandler 0070  
                    ?_Button_DefaultCallback 0070                           _StartStop_AlarmLED 12D8  
                                    memcpy@d 0079                        __end_of_StartStop_Fan 12F6  
                                    memcpy@n 0072                                      memcpy@s 0075  
                                    init_ram 12AF                                      initloop 12B0  
                    ?_Sensor_DefaultCallback 0070             __size_of_Button_Deviation_Update 008A  
               ??_MTOUCH_Sensor_isCalibrated 0070                          ?_StartStop_AlarmLED 0070  
        __end_of_MTOUCH_Sensor_RawSample_Get 14CF                  _MTOUCH_Sensor_RawSample_Get 14B8  
                                _StartHeater 0056                          _mtouch_request_init 0069  
                              MTOUCH_Delay@i 0071                             ??_WDT_Initialize 0070  
                      StartStop_Dimmer@OnOff 0062                                    _PORTCbits 000E  
                   _TMR6_SetInterruptHandler 1292                       Sensor_setActive@sensor 0070  
                                ___fladd@grs 007B                         ??_StartStop_AlarmLED 0070  
                 __end_of_StopTouchDetection 13B0                Button_Deviation_Update@button 0020  
                 MTOUCH_Sensor_Enable@sensor 0075                                  ___fldiv@grs 0049  
                                ___fldiv@rem 0042                          _callback_notPressed 00A6  
        __size_of_MTOUCH_Sensor_isCalibrated 0002               __end_of_Button_DefaultCallback 126F  
          __end_of_HalfCycleACDuration_const 1828                           _sensor_globalFlags 006E  
                     __size_of_MTOUCH_Random 0010                     __end_of_Sensor_isEnabled 1363  
             __end_of_Sensor_DefaultCallback 0801                           _Zero_Detection_isr 12B5  
                                ___flmul@grs 002A                 Sensor_Acq_ExecuteScan@result 0076  
                         StartStop_Fan@OnOff 0070             __size_of_Sensor_RawSample_Update 0017  
                    SetDimmer@dim_percentage 005A                           _Sensor_Acquisition 172B  
                        ?_Zero_Detection_isr 0070                 __size_of_StartTouchDetection 0010  
       __end_of_TMR2_DefaultInterruptHandler 126B        __size_of_TMR2_DefaultInterruptHandler 0001  
               _TMR2_DefaultInterruptHandler 126A                         _Button_State_Pressed 0919  
                             __end_of___bmul 13D1                          ?_Sensor_Acquisition 0070  
                 ??_MTOUCH_Button_Initialize 0070              ??_MTOUCH_Sensor_Scan_Initialize 0070  
                          __size_of_TMR2_ISR 000C                            __size_of_TMR4_ISR 000C  
                          __size_of_TMR6_ISR 000C                Sensor_Acq_ExecutePacket@error 007C  
                         _Button_Tick_helper 164E                               __end_of_memcpy 16C8  
                     ?_OSCILLATOR_Initialize 0070                          MTOUCH_Button_Tick@i 0074  
                   __end_of_Sensor_setActive 12CA                  ??_Button_State_Initializing 0020  
                        start_initialization 002F                      _MTOUCH_Service_Mainloop 07DD  
                       ??_Zero_Detection_isr 0070              __size_of_PIN_MANAGER_Initialize 0028  
                       __end_of_MTOUCH_Delay 1300                           _MTOUCH_Button_Tick 14A2  
                        ?_Button_Tick_helper 0070                                  __end_of_abs 14E6  
                             _TMR2_StopTimer 1273                         ??_Sensor_Acquisition 0020  
                        ?_MTOUCH_Button_Tick 0070                                    _SetDimmer 0A3E  
            Button_State_Initializing@button 007D                     __size_of_PIN_MANAGER_IOC 0006  
     __end_of_IOCAF2_DefaultInterruptHandler 126A      __size_of_IOCAF2_DefaultInterruptHandler 0001  
             _IOCAF2_DefaultInterruptHandler 1269             __end_of_MTOUCH_Sensor_wasSampled 144E  
                   __end_of_StartStop_Dimmer 148C                         ??_Button_Tick_helper 0070  
               __end_of_MTOUCH_Sensor_Enable 13E2                               _TMR4_StopTimer 1279  
                                   ??___bmul 0071             __end_of_StartStop_AlarmLED_Blink 133C  
                   __end_of_StartStop_Buzzer 12EC                        ?_Button_State_Pressed 007D  
                      __end_of_Init_Function 14A2                                    __Umul8_16 1569  
                 ??_MTOUCH_Button_ServiceAll 0029                                  __pdataBANK1 00A0  
                              _MTOUCH_Random 1390                                     ??_memcpy 0074  
               ??_Button_Baseline_Initialize 0078                ?_TMR2_DefaultInterruptHandler 0070  
                       ??_MTOUCH_Button_Tick 0073                           _mtouch_button_init 1800  
                 Sensor_Sampled_Reset@sensor 0070                                    ___fladd@a 0074  
                                  ___fladd@b 0070                                    ___fldiv@a 0035  
                                  ___fldiv@b 0039                       __end_of_TMR2_StopTimer 1276  
                                  ___flmul@a 0024                                    ___flmul@b 0020  
                                  ___flsub@a 004F                                    ___flsub@b 0053  
                                  ___latbits 0002                                __pcstackBANK0 0020  
            __end_of_TMR2_Timer_Period_const 1824                     __size_of_TMR2_Initialize 0010  
             MTOUCH_Button_ServiceAll@button 002A                          Sensor_Service@error 0026  
              __size_of_Sensor_Sampled_Reset 0007                                   ?_SetDimmer 005A  
                    _Button_Deviation_Update 0AB7                    _Button_State_Initializing 0978  
         __end_of_MTOUCH_Sensor_isCalibrated 1273                   _MTOUCH_Sensor_isCalibrated 1271  
                      _TMR6_InterruptHandler 00C2                                    __pnvBANK1 00C2  
                          _Sensor_setSampled 12D1                       __end_of_TMR4_StopTimer 127C  
                     _PIN_MANAGER_Initialize 1675                             ??_Button_Service 0025  
                   ?_MTOUCH_Sensor_Calibrate 0070                           ?_Sensor_setSampled 0070  
         Button_Reading_Update_Helper@button 007A                   ??_MTOUCH_Sensor_Initialize 0076  
                                   ?___fladd 0070             __end_of_TMR4_SetInterruptHandler 1292  
                                   ?___fldiv 0035                                     ?___flmul 0020  
                                   ?___flsub 004F                                     ?___fltol 004F  
                             ?_MTOUCH_Random 0070                                   ?__Umul8_16 0070  
                           ??_Sensor_Service 0023                   ??_Sensor_Acq_ExecutePacket 0078  
               ??_INTERRUPT_InterruptManager 0070                          ??_Sensor_setSampled 0070  
                  ??_MTOUCH_Service_Mainloop 002B                  __size_of_Sensor_setInactive 0007  
                            ?_TMR2_StopTimer 0070               Sensor_Acq_ExecutePacket@sensor 007D  
               __end_of_TMR2_Drive_TRIAC_isr 164E                                ??_MTOUCH_Tick 0075  
                   __size_of_TMR4_Initialize 0011                    __end_of_Sensor_setSampled 12D8  
                                   _LATCbits 010E                           _currentScannSensor 006D  
                    _Sensor_RawSample_Update 14E6                                    clear_ram0 12A9  
                                   _PIE1bits 0091                                     _PIE3bits 0093  
                   __size_of_TMR2_StartTimer 0002                              ?_TMR4_StopTimer 0070  
        __size_of_INTERRUPT_InterruptManager 0029                                     _PIR1bits 0011  
                                   _PIR3bits 0013                       ??_Button_State_Pressed 0020  
                 ??_TMR6_SetInterruptHandler 0072                                 ?_StartHeater 0070  
     __end_of_MTOUCH_Sensor_Sampled_ResetAll 143A      __size_of_MTOUCH_Sensor_Sampled_ResetAll 0013  
             _MTOUCH_Sensor_Sampled_ResetAll 1427                     ?_MTOUCH_Sensor_SampleAll 0070  
                                   _TMR2_ISR 1300                                     _TMR4_ISR 130C  
                                   _TMR6_ISR 1318                            ??_PIN_MANAGER_IOC 0070  
                   _MTOUCH_Sensor_wasSampled 143A                           _mtouch_time_toScan 006A  
                 __end_of_MTOUCH_CVD_ScanA_0 15C8                   __end_of_MTOUCH_CVD_ScanA_1 15A8  
                 __end_of_MTOUCH_CVD_ScanB_0 1608                   __end_of_MTOUCH_CVD_ScanB_1 15E8  
                   ??_Button_Baseline_Update 0070                     _StartStop_AlarmLED_Blink 1330  
                                 _ADCON0bits 009D                        __size_of_MTOUCH_Delay 000A  
                 __end_of_MTOUCH_needReburst 0004               ??_TMR2_DefaultInterruptHandler 0070  
          __size_of_TMR2_SetInterruptHandler 0005                    ?_TMR2_SetInterruptHandler 0070  
                   __size_of_TMR6_Initialize 0012                         _MTOUCH_Sensor_Enable 13D1  
                        _StartTouchDetection 13B0                     Button_Tick_helper@button 0072  
                  ??_Button_Deviation_Update 0070                        _Button_Reading_Update 1349  
                   ??_Sensor_setScanFunction 0070                     ?_MTOUCH_Button_isPressed 0070  
                                ??_SetDimmer 007E                            ?_Sensor_isEnabled 0070  
                          ??_TMR2_Initialize 0072                          __end_of_MTOUCH_Tick 127F  
                      StartStop_Buzzer@OnOff 0070                            _MTOUCH_Initialize 1324  
            __end_of_MTOUCH_Sensor_Calibrate 126E                           _StopTouchDetection 13A0  
                         ??_Sensor_isEnabled 0070                     __size_of_TMR4_StartTimer 0003  
                         ?_MTOUCH_Initialize 0070                                    memcpy@tmp 0077  
                            ??_MTOUCH_Random 0070                                 _MTOUCH_Delay 12F6  
                               _sample_delay 006B                         ?_StartTouchDetection 0070  
                  _HalfCycleACDuration_const 1824                          ?_StopTouchDetection 0070  
                    ??_OSCILLATOR_Initialize 0070           __end_of_Button_Baseline_Initialize 16F5  
                 _Button_Baseline_Initialize 16C8                     Sensor_Acquisition@sensor 0022  
                                ??__Umul8_16 0072                             __size_of___fladd 01E8  
                        ??_MTOUCH_Initialize 007C                             __size_of___fldiv 0179  
                           __size_of___flmul 0218                             __size_of___flsub 001E  
                           __size_of___fltol 0065                     ?_Button_State_NotPressed 007D  
                   _TMR4_SetInterruptHandler 128D                       __size_of_StartStop_Fan 000A  
                         Button_Service@name 0027                            ?_Sensor_setActive 0070  
                    _IOCAF2_InterruptHandler 00C8                                 _Sensor_scanA 00AC  
                               _Sensor_scanB 00AA                  __size_of_StartStop_AlarmLED 000A  
                         ??_Sensor_setActive 0070                        ?_MTOUCH_Sensor_Enable 0070  
               ??_IOCAF2_SetInterruptHandler 0072                                     __ptext10 1767  
                                   __ptext11 12D1                                     __ptext20 1404  
                                   __ptext12 14E6                                     __ptext21 08C4  
                                   __ptext13 0800                                     __ptext30 143A  
                                   __ptext22 15E8                                     __ptext14 172B  
                                   __ptext31 1271                                     __ptext23 15C8  
                                   __ptext15 14CF                                     __ptext40 14B8  
                                   __ptext32 0BD0                                     __ptext24 15A8  
                                   __ptext16 12CA                                     __ptext41 0AB7  
                                   __ptext33 0978                                     __ptext25 1588  
                                   __ptext17 12C3                                     __ptext50 0DE8  
                                   __ptext42 1530                                     __ptext34 0919  
                                   __ptext26 1390                                     __ptext18 1356  
                                   __ptext51 1569                                     __ptext43 148C  
                                   __ptext35 126E                                     __ptext27 12F6  
                                   __ptext19 0823                                     __ptext60 1415  
                                   __ptext52 0C6F                                     __ptext44 12EC  
                                   __ptext36 0B41                                     __ptext28 1371  
                                   __ptext61 1292                                     __ptext53 12E2  
                                   __ptext45 1477                                     __ptext37 16C8  
                                   __ptext29 0872                                     __ptext70 1283  
                                   __ptext62 13F3                                     __ptext54 1330  
                                   __ptext46 0A3E                                     __ptext38 1349  
                                   __ptext71 1427                                     __ptext63 128D  
                                   __ptext55 1279                                     __ptext47 09D9  
                                   __ptext39 17B3                                     __ptext80 126D  
                                   __ptext72 1363                                     __ptext64 1380  
                                   __ptext56 1276                                     __ptext48 154B  
                                   __ptext73 13E2                                     __ptext65 1288  
                                   __ptext57 12D8                                     __ptext49 05F5  
                                   __ptext90 1273                                     __ptext82 1318  
                                   __ptext74 12BC                                     __ptext66 1675  
                                   __ptext58 1462                                     __ptext91 1297  
                                   __ptext83 126C                                     __ptext75 13D1  
                                   __ptext67 12A3                                     __ptext59 127F  
                                   __ptext92 133C                                     __ptext84 130C  
                                   __ptext76 13C0                                     __ptext68 129D  
                                   __ptext93 1269                                     __ptext85 126B  
                                   __ptext77 1516                                     __ptext69 1324  
                                   __ptext94 12B5                                     __ptext86 14FD  
                                   __ptext78 169D                                     __ptext95 126F  
                                   __ptext87 1300                                     __ptext79 16F5  
                                   __ptext88 126A                                     __ptext89 1629  
                       ??_StopTouchDetection 007E                                   _IOCAF2_ISR 133C  
                  __end_of_MTOUCH_Initialize 1330                    ??_Sensor_RawSample_Update 0070  
        Sensor_Acq_ExecutePacket@ADCON0_temp 0079          Sensor_Acq_ExecutePacket@ADCON1_temp 007A  
                 __size_of_Sensor_setSampled 0007                            ??_TMR4_Initialize 0072  
                              __size_of_main 0021              __end_of_MTOUCH_Sensor_SampleAll 1462  
                      ??_StartTouchDetection 007E                 Sensor_setScanFunction@sensor 0070  
                          ?_StartStop_Dimmer 0070                         _TMR2_Drive_TRIAC_isr 1629  
                                   int$flags 007E                            ?_StartStop_Buzzer 0070  
                   ??_Sensor_Acq_ExecuteScan 0074                           ??_StartStop_Dimmer 007E  
         __size_of_Button_State_Initializing 0061                            ??_TMR2_StartTimer 0070  
         __end_of_INTERRUPT_InterruptManager 002D                   _INTERRUPT_InterruptManager 0004  
          Sensor_Acq_ExecutePacket@GIE_state 007B                           ??_StartStop_Buzzer 0070  
        __size_of_IOCAF2_SetInterruptHandler 0006              __size_of_Button_Baseline_Update 008F  
               ?_MTOUCH_Button_InitializeAll 0070                 ?_MTOUCH_Sensor_InitializeAll 0070  
                              _mtouch_button 0120                                   _INTCONbits 000B  
                              _mtouch_sensor 00B0                                     memcpy@d1 0078  
                                   memcpy@s1 0070                  __size_of_Zero_Detection_isr 0007  
            __end_of_MTOUCH_Button_isPressed 154B                                  _MTOUCH_Tick 127C  
                     ?_Button_Reading_Update 0070         __end_of_TMR6_DefaultInterruptHandler 126D  
      __size_of_TMR6_DefaultInterruptHandler 0001                 _TMR6_DefaultInterruptHandler 126C  
           Button_Deviation_Update@deviation 0021                      __size_of_WDT_Initialize 0004  
               MTOUCH_Button_Initialize@name 0072            __size_of_MTOUCH_Button_Initialize 0036  
                                   intlevel1 0000                    ?_MTOUCH_Button_Initialize 0070  
                __size_of_Sensor_Acquisition 003C              __size_of_Sensor_setScanFunction 0011  
                    ?_PIN_MANAGER_Initialize 0070                                _StartStop_Fan 12EC  
                          ??_TMR6_Initialize 0072                  ?_MTOUCH_Sensor_isCalibrated 0070  
                          MTOUCH_Random@seed 006F                        ?_TMR2_Drive_TRIAC_isr 0070  
                __size_of_Button_Tick_helper 0027              __end_of_Button_State_NotPressed 0C6F  
                       __size_of_StartHeater 059F                            ??_TMR4_StartTimer 0070  
               __end_of_Sensor_Sampled_Reset 12C3                             ??_TMR2_StopTimer 0070  
                __size_of_MTOUCH_Button_Tick 0016                                __pstringtext1 1820  
                              __pstringtext2 1800                                __pstringtext3 1824  
                     __Umul8_16@multiplicand 0070                ??_MTOUCH_Button_InitializeAll 007A  
                   ??_Button_DefaultCallback 0071                ??_MTOUCH_Sensor_InitializeAll 0078  
           __size_of_MTOUCH_Sensor_Calibrate 0001                       ??_MTOUCH_Sensor_Enable 0074  
                   ??_Sensor_DefaultCallback 0071         __end_of_Button_Reading_Update_Helper 1800  
      __size_of_Button_Reading_Update_Helper 004D                 _Button_Reading_Update_Helper 17B3  
                              ___fladd@signs 0078            __size_of_MTOUCH_Button_ServiceAll 000F  
                  ?_MTOUCH_Button_ServiceAll 0070                Button_State_NotPressed@button 007D  
                                ?_IOCAF2_ISR 0070                   __size_of_MTOUCH_Initialize 000C  
                     __size_of_Init_Function 0016               __end_of_PIN_MANAGER_Initialize 169D  
                           ??_TMR4_StopTimer 0070                ?_TMR6_DefaultInterruptHandler 0070  
                     _Button_Baseline_Update 0B41                               ?_StartStop_Fan 0070  
                               ___fladd@aexp 0079                                 ___fladd@bexp 007A  
                            _PIN_MANAGER_IOC 1297                  MTOUCH_Button_isPressed@name 0071  
                       __Umul8_16@multiplier 0078                        _TMR2_InterruptHandler 00C6  
                 ??_MTOUCH_Sensor_wasSampled 0074                   ??_StartStop_AlarmLED_Blink 0070  
                          __Umul8_16@product 0074                      _TMR2_Timer_Period_const 1820  
